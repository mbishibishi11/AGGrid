{
  "version": 3,
  "sources": ["../../ag-grid-react/dist/package/index.esm.mjs", "../../ag-grid-community/dist/package/main.esm.mjs"],
  "sourcesContent": ["// packages/ag-grid-react/src/agGridReact.tsx\nimport React18, { Component } from \"react\";\n\n// packages/ag-grid-react/src/reactUi/agGridReactUi.tsx\nimport {\n  BaseComponentWrapper,\n  GridCoreCreator,\n  ModuleRegistry,\n  VanillaFrameworkOverrides,\n  _combineAttributesAndGridOptions,\n  _processOnChange,\n  _warnOnce as _warnOnce3\n} from \"ag-grid-community\";\nimport React17, {\n  forwardRef as forwardRef3,\n  useCallback as useCallback15,\n  useContext as useContext14,\n  useEffect as useEffect9,\n  useImperativeHandle as useImperativeHandle3,\n  useMemo as useMemo12,\n  useRef as useRef15,\n  useState as useState16\n} from \"react\";\n\n// packages/ag-grid-react/src/reactUi/cellRenderer/groupCellRenderer.tsx\nimport { _escapeString } from \"ag-grid-community\";\nimport React2, {\n  forwardRef,\n  useCallback,\n  useContext,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState\n} from \"react\";\n\n// packages/ag-grid-react/src/reactUi/beansContext.tsx\nimport React from \"react\";\nvar BeansContext = React.createContext({});\n\n// packages/ag-grid-react/src/reactUi/jsComp.tsx\nvar showJsComp = (compDetails, context, eParent, ref) => {\n  const doNothing = !compDetails || compDetails.componentFromFramework || context.isDestroyed();\n  if (doNothing) {\n    return;\n  }\n  const promise = compDetails.newAgStackInstance();\n  if (promise == null) {\n    return;\n  }\n  let comp;\n  let compGui;\n  let destroyed = false;\n  promise.then((c) => {\n    if (destroyed) {\n      context.destroyBean(c);\n      return;\n    }\n    comp = c;\n    compGui = comp.getGui();\n    eParent.appendChild(compGui);\n    setRef(ref, comp);\n  });\n  return () => {\n    destroyed = true;\n    if (!comp) {\n      return;\n    }\n    if (compGui && compGui.parentElement) {\n      compGui.parentElement.removeChild(compGui);\n    }\n    context.destroyBean(comp);\n    if (ref) {\n      setRef(ref, void 0);\n    }\n  };\n};\nvar setRef = (ref, value) => {\n  if (!ref) {\n    return;\n  }\n  if (ref instanceof Function) {\n    const refCallback = ref;\n    refCallback(value);\n  } else {\n    const refObj = ref;\n    refObj.current = value;\n  }\n};\n\n// packages/ag-grid-react/src/reactUi/utils.tsx\nimport ReactDOM from \"react-dom\";\nvar classesList = (...list) => {\n  const filtered = list.filter((s) => s != null && s !== \"\");\n  return filtered.join(\" \");\n};\nvar CssClasses = class _CssClasses {\n  constructor(...initialClasses) {\n    this.classesMap = {};\n    initialClasses.forEach((className) => {\n      this.classesMap[className] = true;\n    });\n  }\n  setClass(className, on) {\n    const nothingHasChanged = !!this.classesMap[className] == on;\n    if (nothingHasChanged) {\n      return this;\n    }\n    const res = new _CssClasses();\n    res.classesMap = { ...this.classesMap };\n    res.classesMap[className] = on;\n    return res;\n  }\n  toString() {\n    const res = Object.keys(this.classesMap).filter((key) => this.classesMap[key]).join(\" \");\n    return res;\n  }\n};\nvar isComponentStateless = (Component2) => {\n  const hasSymbol = () => typeof Symbol === \"function\" && Symbol.for;\n  const getMemoType = () => hasSymbol() ? Symbol.for(\"react.memo\") : 60115;\n  return typeof Component2 === \"function\" && !(Component2.prototype && Component2.prototype.isReactComponent) || typeof Component2 === \"object\" && Component2.$$typeof === getMemoType();\n};\nvar createRootAndFlushSyncAvailable = ReactDOM.createRoot != null && ReactDOM.flushSync != null;\nfunction isReact17Minus() {\n  return !createRootAndFlushSyncAvailable;\n}\nvar disableFlushSync = false;\nfunction runWithoutFlushSync(func) {\n  if (!disableFlushSync) {\n    setTimeout(() => disableFlushSync = false, 0);\n  }\n  disableFlushSync = true;\n  return func();\n}\nvar agFlushSync = (useFlushSync, fn) => {\n  if (createRootAndFlushSyncAvailable && useFlushSync && !disableFlushSync) {\n    ReactDOM.flushSync(fn);\n  } else {\n    fn();\n  }\n};\nfunction getNextValueIfDifferent(prev, next, maintainOrder) {\n  if (next == null || prev == null) {\n    return next;\n  }\n  if (prev === next || next.length === 0 && prev.length === 0) {\n    return prev;\n  }\n  if (maintainOrder || prev.length === 0 && next.length > 0 || prev.length > 0 && next.length === 0) {\n    return next;\n  }\n  const oldValues = [];\n  const newValues = [];\n  const prevMap = /* @__PURE__ */ new Map();\n  const nextMap = /* @__PURE__ */ new Map();\n  for (let i = 0; i < next.length; i++) {\n    const c = next[i];\n    nextMap.set(c.getInstanceId(), c);\n  }\n  for (let i = 0; i < prev.length; i++) {\n    const c = prev[i];\n    prevMap.set(c.getInstanceId(), c);\n    if (nextMap.has(c.getInstanceId())) {\n      oldValues.push(c);\n    }\n  }\n  for (let i = 0; i < next.length; i++) {\n    const c = next[i];\n    const instanceId = c.getInstanceId();\n    if (!prevMap.has(instanceId)) {\n      newValues.push(c);\n    }\n  }\n  if (oldValues.length === prev.length && newValues.length === 0) {\n    return prev;\n  }\n  if (oldValues.length === 0 && newValues.length === next.length) {\n    return next;\n  }\n  if (oldValues.length === 0) {\n    return newValues;\n  }\n  if (newValues.length === 0) {\n    return oldValues;\n  }\n  return [...oldValues, ...newValues];\n}\n\n// packages/ag-grid-react/src/reactUi/cellRenderer/groupCellRenderer.tsx\nvar GroupCellRenderer = forwardRef((props, ref) => {\n  const { ctrlsFactory, context } = useContext(BeansContext);\n  const eGui = useRef(null);\n  const eValueRef = useRef(null);\n  const eCheckboxRef = useRef(null);\n  const eExpandedRef = useRef(null);\n  const eContractedRef = useRef(null);\n  const ctrlRef = useRef();\n  const [innerCompDetails, setInnerCompDetails] = useState();\n  const [childCount, setChildCount] = useState();\n  const [value, setValue] = useState();\n  const [cssClasses, setCssClasses] = useState(() => new CssClasses());\n  const [expandedCssClasses, setExpandedCssClasses] = useState(() => new CssClasses(\"ag-hidden\"));\n  const [contractedCssClasses, setContractedCssClasses] = useState(() => new CssClasses(\"ag-hidden\"));\n  const [checkboxCssClasses, setCheckboxCssClasses] = useState(() => new CssClasses(\"ag-invisible\"));\n  useImperativeHandle(ref, () => {\n    return {\n      // force new instance when grid tries to refresh\n      refresh() {\n        return false;\n      }\n    };\n  });\n  useLayoutEffect(() => {\n    return showJsComp(innerCompDetails, context, eValueRef.current);\n  }, [innerCompDetails]);\n  const setRef2 = useCallback((ref2) => {\n    eGui.current = ref2;\n    if (!eGui.current) {\n      context.destroyBean(ctrlRef.current);\n      ctrlRef.current = null;\n      return;\n    }\n    const compProxy = {\n      setInnerRenderer: (details, valueToDisplay) => {\n        setInnerCompDetails(details);\n        setValue(valueToDisplay);\n      },\n      setChildCount: (count) => setChildCount(count),\n      addOrRemoveCssClass: (name, on) => setCssClasses((prev) => prev.setClass(name, on)),\n      setContractedDisplayed: (displayed) => setContractedCssClasses((prev) => prev.setClass(\"ag-hidden\", !displayed)),\n      setExpandedDisplayed: (displayed) => setExpandedCssClasses((prev) => prev.setClass(\"ag-hidden\", !displayed)),\n      setCheckboxVisible: (visible) => setCheckboxCssClasses((prev) => prev.setClass(\"ag-invisible\", !visible))\n    };\n    const groupCellRendererCtrl = ctrlsFactory.getInstance(\"groupCellRendererCtrl\");\n    if (groupCellRendererCtrl) {\n      ctrlRef.current = context.createBean(groupCellRendererCtrl);\n      ctrlRef.current.init(\n        compProxy,\n        eGui.current,\n        eCheckboxRef.current,\n        eExpandedRef.current,\n        eContractedRef.current,\n        GroupCellRenderer,\n        props\n      );\n    }\n  }, []);\n  const className = useMemo(() => `ag-cell-wrapper ${cssClasses.toString()}`, [cssClasses]);\n  const expandedClassName = useMemo(() => `ag-group-expanded ${expandedCssClasses.toString()}`, [expandedCssClasses]);\n  const contractedClassName = useMemo(\n    () => `ag-group-contracted ${contractedCssClasses.toString()}`,\n    [contractedCssClasses]\n  );\n  const checkboxClassName = useMemo(() => `ag-group-checkbox ${checkboxCssClasses.toString()}`, [checkboxCssClasses]);\n  const useFwRenderer = innerCompDetails && innerCompDetails.componentFromFramework;\n  const FwRenderer = useFwRenderer ? innerCompDetails.componentClass : void 0;\n  const useValue = innerCompDetails == null && value != null;\n  const escapedValue = _escapeString(value, true);\n  return /* @__PURE__ */ React2.createElement(\n    \"span\",\n    {\n      className,\n      ref: setRef2,\n      ...!props.colDef ? { role: ctrlRef.current?.getCellAriaRole() } : {}\n    },\n    /* @__PURE__ */ React2.createElement(\"span\", { className: expandedClassName, ref: eExpandedRef }),\n    /* @__PURE__ */ React2.createElement(\"span\", { className: contractedClassName, ref: eContractedRef }),\n    /* @__PURE__ */ React2.createElement(\"span\", { className: checkboxClassName, ref: eCheckboxRef }),\n    /* @__PURE__ */ React2.createElement(\"span\", { className: \"ag-group-value\", ref: eValueRef }, useValue && /* @__PURE__ */ React2.createElement(React2.Fragment, null, escapedValue), useFwRenderer && /* @__PURE__ */ React2.createElement(FwRenderer, { ...innerCompDetails.params })),\n    /* @__PURE__ */ React2.createElement(\"span\", { className: \"ag-group-child-count\" }, childCount)\n  );\n});\nvar groupCellRenderer_default = GroupCellRenderer;\n\n// packages/ag-grid-react/src/shared/customComp/customComponentWrapper.ts\nimport { AgPromise as AgPromise2 } from \"ag-grid-community\";\n\n// packages/ag-grid-react/src/reactUi/customComp/customWrapperComp.tsx\nimport React3, { memo, useEffect, useState as useState2 } from \"react\";\n\n// packages/ag-grid-react/src/shared/customComp/customContext.ts\nimport { createContext } from \"react\";\nvar CustomContext = createContext({\n  setMethods: () => {\n  }\n});\n\n// packages/ag-grid-react/src/reactUi/customComp/customWrapperComp.tsx\nvar CustomWrapperComp = (params) => {\n  const { initialProps, addUpdateCallback, CustomComponentClass, setMethods } = params;\n  const [props, setProps] = useState2(initialProps);\n  useEffect(() => {\n    addUpdateCallback((newProps) => setProps(newProps));\n  }, []);\n  return /* @__PURE__ */ React3.createElement(CustomContext.Provider, { value: { setMethods } }, /* @__PURE__ */ React3.createElement(CustomComponentClass, { ...props }));\n};\nvar customWrapperComp_default = memo(CustomWrapperComp);\n\n// packages/ag-grid-react/src/shared/reactComponent.ts\nimport { AgPromise, _warnOnce } from \"ag-grid-community\";\nimport { createElement } from \"react\";\nimport { createPortal } from \"react-dom\";\n\n// packages/ag-grid-react/src/shared/keyGenerator.ts\nvar counter = 0;\nfunction generateNewKey() {\n  return `agPortalKey_${++counter}`;\n}\n\n// packages/ag-grid-react/src/shared/reactComponent.ts\nvar ReactComponent = class {\n  constructor(reactComponent, portalManager, componentType, suppressFallbackMethods) {\n    this.portal = null;\n    this.oldPortal = null;\n    this.reactComponent = reactComponent;\n    this.portalManager = portalManager;\n    this.componentType = componentType;\n    this.suppressFallbackMethods = !!suppressFallbackMethods;\n    this.statelessComponent = this.isStateless(this.reactComponent);\n    this.key = generateNewKey();\n    this.portalKey = generateNewKey();\n    this.instanceCreated = this.isStatelessComponent() ? AgPromise.resolve(false) : new AgPromise((resolve) => {\n      this.resolveInstanceCreated = resolve;\n    });\n  }\n  getGui() {\n    return this.eParentElement;\n  }\n  /** `getGui()` returns the parent element. This returns the actual root element. */\n  getRootElement() {\n    const firstChild = this.eParentElement.firstChild;\n    return firstChild;\n  }\n  destroy() {\n    if (this.componentInstance && typeof this.componentInstance.destroy == \"function\") {\n      this.componentInstance.destroy();\n    }\n    const portal = this.portal;\n    if (portal) {\n      this.portalManager.destroyPortal(portal);\n    }\n  }\n  createParentElement(params) {\n    const componentWrappingElement = this.portalManager.getComponentWrappingElement();\n    const eParentElement = document.createElement(componentWrappingElement || \"div\");\n    eParentElement.classList.add(\"ag-react-container\");\n    params.reactContainer = eParentElement;\n    return eParentElement;\n  }\n  addParentContainerStyleAndClasses() {\n    if (!this.componentInstance) {\n      return;\n    }\n    if (this.componentInstance.getReactContainerStyle && this.componentInstance.getReactContainerStyle()) {\n      _warnOnce(\n        'Since v31.1 \"getReactContainerStyle\" is deprecated. Apply styling directly to \".ag-react-container\" if needed.'\n      );\n      Object.assign(this.eParentElement.style, this.componentInstance.getReactContainerStyle());\n    }\n    if (this.componentInstance.getReactContainerClasses && this.componentInstance.getReactContainerClasses()) {\n      _warnOnce(\n        'Since v31.1 \"getReactContainerClasses\" is deprecated. Apply styling directly to \".ag-react-container\" if needed.'\n      );\n      const parentContainerClasses = this.componentInstance.getReactContainerClasses();\n      parentContainerClasses.forEach((className) => this.eParentElement.classList.add(className));\n    }\n  }\n  statelessComponentRendered() {\n    return this.eParentElement.childElementCount > 0 || this.eParentElement.childNodes.length > 0;\n  }\n  getFrameworkComponentInstance() {\n    return this.componentInstance;\n  }\n  isStatelessComponent() {\n    return this.statelessComponent;\n  }\n  getReactComponentName() {\n    return this.reactComponent.name;\n  }\n  getMemoType() {\n    return this.hasSymbol() ? Symbol.for(\"react.memo\") : 60115;\n  }\n  hasSymbol() {\n    return typeof Symbol === \"function\" && Symbol.for;\n  }\n  isStateless(Component2) {\n    return typeof Component2 === \"function\" && !(Component2.prototype && Component2.prototype.isReactComponent) || typeof Component2 === \"object\" && Component2.$$typeof === this.getMemoType();\n  }\n  hasMethod(name) {\n    const frameworkComponentInstance = this.getFrameworkComponentInstance();\n    return !!frameworkComponentInstance && frameworkComponentInstance[name] != null || this.fallbackMethodAvailable(name);\n  }\n  callMethod(name, args) {\n    const frameworkComponentInstance = this.getFrameworkComponentInstance();\n    if (this.isStatelessComponent()) {\n      return this.fallbackMethod(name, !!args && args[0] ? args[0] : {});\n    } else if (!frameworkComponentInstance) {\n      setTimeout(() => this.callMethod(name, args));\n      return;\n    }\n    const method = frameworkComponentInstance[name];\n    if (method) {\n      return method.apply(frameworkComponentInstance, args);\n    }\n    if (this.fallbackMethodAvailable(name)) {\n      return this.fallbackMethod(name, !!args && args[0] ? args[0] : {});\n    }\n  }\n  addMethod(name, callback) {\n    this[name] = callback;\n  }\n  init(params) {\n    this.eParentElement = this.createParentElement(params);\n    this.params = params;\n    this.createOrUpdatePortal(params);\n    return new AgPromise((resolve) => this.createReactComponent(resolve));\n  }\n  createOrUpdatePortal(params) {\n    if (!this.isStatelessComponent()) {\n      this.ref = (element) => {\n        this.componentInstance = element;\n        this.addParentContainerStyleAndClasses();\n        this.resolveInstanceCreated?.(true);\n        this.resolveInstanceCreated = void 0;\n      };\n      params.ref = this.ref;\n    }\n    this.reactElement = this.createElement(this.reactComponent, { ...params, key: this.key });\n    this.portal = createPortal(\n      this.reactElement,\n      this.eParentElement,\n      this.portalKey\n      // fixed deltaRowModeRefreshCompRenderer\n    );\n  }\n  createElement(reactComponent, props) {\n    return createElement(reactComponent, props);\n  }\n  createReactComponent(resolve) {\n    this.portalManager.mountReactPortal(this.portal, this, resolve);\n  }\n  rendered() {\n    return this.isStatelessComponent() && this.statelessComponentRendered() || !!(!this.isStatelessComponent() && this.getFrameworkComponentInstance());\n  }\n  /*\n   * fallback methods - these will be invoked if a corresponding instance method is not present\n   * for example if refresh is called and is not available on the component instance, then refreshComponent on this\n   * class will be invoked instead\n   *\n   * Currently only refresh is supported\n   */\n  refreshComponent(args) {\n    this.oldPortal = this.portal;\n    this.createOrUpdatePortal(args);\n    this.portalManager.updateReactPortal(this.oldPortal, this.portal);\n  }\n  fallbackMethod(name, params) {\n    const method = this[`${name}Component`];\n    if (!this.suppressFallbackMethods && !!method) {\n      return method.bind(this)(params);\n    }\n  }\n  fallbackMethodAvailable(name) {\n    if (this.suppressFallbackMethods) {\n      return false;\n    }\n    const method = this[`${name}Component`];\n    return !!method;\n  }\n};\n\n// packages/ag-grid-react/src/shared/customComp/customComponentWrapper.ts\nfunction addOptionalMethods(optionalMethodNames, providedMethods, component) {\n  optionalMethodNames.forEach((methodName) => {\n    const providedMethod = providedMethods[methodName];\n    if (providedMethod) {\n      component[methodName] = providedMethod;\n    }\n  });\n}\nvar CustomComponentWrapper = class extends ReactComponent {\n  constructor() {\n    super(...arguments);\n    this.awaitUpdateCallback = new AgPromise2((resolve) => {\n      this.resolveUpdateCallback = resolve;\n    });\n    this.wrapperComponent = customWrapperComp_default;\n  }\n  init(params) {\n    this.sourceParams = params;\n    return super.init(this.getProps());\n  }\n  addMethod() {\n  }\n  getInstance() {\n    return this.instanceCreated.then(() => this.componentInstance);\n  }\n  getFrameworkComponentInstance() {\n    return this;\n  }\n  createElement(reactComponent, props) {\n    return super.createElement(this.wrapperComponent, {\n      initialProps: props,\n      CustomComponentClass: reactComponent,\n      setMethods: (methods) => this.setMethods(methods),\n      addUpdateCallback: (callback) => {\n        this.updateCallback = () => {\n          callback(this.getProps());\n          return new AgPromise2((resolve) => {\n            setTimeout(() => {\n              resolve();\n            });\n          });\n        };\n        this.resolveUpdateCallback();\n      }\n    });\n  }\n  setMethods(methods) {\n    this.providedMethods = methods;\n    addOptionalMethods(this.getOptionalMethods(), this.providedMethods, this);\n  }\n  getOptionalMethods() {\n    return [];\n  }\n  getProps() {\n    return {\n      ...this.sourceParams,\n      key: this.key,\n      ref: this.ref\n    };\n  }\n  refreshProps() {\n    if (this.updateCallback) {\n      return this.updateCallback();\n    }\n    return new AgPromise2(\n      (resolve) => this.awaitUpdateCallback.then(() => {\n        this.updateCallback().then(() => resolve());\n      })\n    );\n  }\n};\n\n// packages/ag-grid-react/src/shared/customComp/cellRendererComponentWrapper.ts\nvar CellRendererComponentWrapper = class extends CustomComponentWrapper {\n  refresh(params) {\n    this.sourceParams = params;\n    this.refreshProps();\n    return true;\n  }\n};\n\n// packages/ag-grid-react/src/shared/customComp/dateComponentWrapper.ts\nvar DateComponentWrapper = class extends CustomComponentWrapper {\n  constructor() {\n    super(...arguments);\n    this.date = null;\n    this.onDateChange = (date) => this.updateDate(date);\n  }\n  getDate() {\n    return this.date;\n  }\n  setDate(date) {\n    this.date = date;\n    this.refreshProps();\n  }\n  refresh(params) {\n    this.sourceParams = params;\n    this.refreshProps();\n  }\n  getOptionalMethods() {\n    return [\"afterGuiAttached\", \"setInputPlaceholder\", \"setInputAriaLabel\", \"setDisabled\"];\n  }\n  updateDate(date) {\n    this.setDate(date);\n    this.sourceParams.onDateChanged();\n  }\n  getProps() {\n    const props = super.getProps();\n    props.date = this.date;\n    props.onDateChange = this.onDateChange;\n    delete props.onDateChanged;\n    return props;\n  }\n};\n\n// packages/ag-grid-react/src/shared/customComp/filterComponentWrapper.ts\nvar FilterComponentWrapper = class extends CustomComponentWrapper {\n  constructor() {\n    super(...arguments);\n    this.model = null;\n    this.onModelChange = (model) => this.updateModel(model);\n    this.onUiChange = () => this.sourceParams.filterChangedCallback();\n    this.expectingNewMethods = true;\n  }\n  isFilterActive() {\n    return this.model != null;\n  }\n  doesFilterPass(params) {\n    return this.providedMethods.doesFilterPass(params);\n  }\n  getModel() {\n    return this.model;\n  }\n  setModel(model) {\n    this.expectingNewMethods = true;\n    this.model = model;\n    return this.refreshProps();\n  }\n  refresh(newParams) {\n    this.sourceParams = newParams;\n    this.refreshProps();\n    return true;\n  }\n  getOptionalMethods() {\n    return [\"afterGuiAttached\", \"afterGuiDetached\", \"onNewRowsLoaded\", \"getModelAsString\", \"onAnyFilterChanged\"];\n  }\n  setMethods(methods) {\n    if (this.expectingNewMethods === false && this.providedMethods?.doesFilterPass !== methods?.doesFilterPass) {\n      setTimeout(() => {\n        this.sourceParams.filterChangedCallback();\n      });\n    }\n    this.expectingNewMethods = false;\n    super.setMethods(methods);\n  }\n  updateModel(model) {\n    this.setModel(model).then(() => this.sourceParams.filterChangedCallback());\n  }\n  getProps() {\n    const props = super.getProps();\n    props.model = this.model;\n    props.onModelChange = this.onModelChange;\n    props.onUiChange = this.onUiChange;\n    delete props.filterChangedCallback;\n    delete props.filterModifiedCallback;\n    delete props.valueGetter;\n    return props;\n  }\n};\n\n// packages/ag-grid-react/src/shared/customComp/floatingFilterComponentProxy.ts\nimport { AgPromise as AgPromise3 } from \"ag-grid-community\";\nfunction updateFloatingFilterParent(params, model) {\n  params.parentFilterInstance((instance) => {\n    (instance.setModel(model) || AgPromise3.resolve()).then(() => {\n      params.filterParams.filterChangedCallback();\n    });\n  });\n}\nvar FloatingFilterComponentProxy = class {\n  constructor(floatingFilterParams, refreshProps) {\n    this.floatingFilterParams = floatingFilterParams;\n    this.refreshProps = refreshProps;\n    this.model = null;\n    this.onModelChange = (model) => this.updateModel(model);\n  }\n  getProps() {\n    return {\n      ...this.floatingFilterParams,\n      model: this.model,\n      onModelChange: this.onModelChange\n    };\n  }\n  onParentModelChanged(parentModel) {\n    this.model = parentModel;\n    this.refreshProps();\n  }\n  refresh(params) {\n    this.floatingFilterParams = params;\n    this.refreshProps();\n  }\n  setMethods(methods) {\n    addOptionalMethods(this.getOptionalMethods(), methods, this);\n  }\n  getOptionalMethods() {\n    return [\"afterGuiAttached\"];\n  }\n  updateModel(model) {\n    this.model = model;\n    this.refreshProps();\n    updateFloatingFilterParent(this.floatingFilterParams, model);\n  }\n};\n\n// packages/ag-grid-react/src/shared/customComp/floatingFilterComponentWrapper.ts\nvar FloatingFilterComponentWrapper = class extends CustomComponentWrapper {\n  constructor() {\n    super(...arguments);\n    this.model = null;\n    this.onModelChange = (model) => this.updateModel(model);\n  }\n  onParentModelChanged(parentModel) {\n    this.model = parentModel;\n    this.refreshProps();\n  }\n  refresh(newParams) {\n    this.sourceParams = newParams;\n    this.refreshProps();\n  }\n  getOptionalMethods() {\n    return [\"afterGuiAttached\"];\n  }\n  updateModel(model) {\n    this.model = model;\n    this.refreshProps();\n    updateFloatingFilterParent(this.sourceParams, model);\n  }\n  getProps() {\n    const props = super.getProps();\n    props.model = this.model;\n    props.onModelChange = this.onModelChange;\n    return props;\n  }\n};\n\n// packages/ag-grid-react/src/shared/customComp/loadingOverlayComponentWrapper.ts\nvar LoadingOverlayComponentWrapper = class extends CustomComponentWrapper {\n  refresh(params) {\n    this.sourceParams = params;\n    this.refreshProps();\n  }\n};\n\n// packages/ag-grid-react/src/shared/customComp/menuItemComponentWrapper.ts\nvar MenuItemComponentWrapper = class extends CustomComponentWrapper {\n  constructor() {\n    super(...arguments);\n    this.active = false;\n    this.expanded = false;\n    this.onActiveChange = (active) => this.updateActive(active);\n  }\n  setActive(active) {\n    this.awaitSetActive(active);\n  }\n  setExpanded(expanded) {\n    this.expanded = expanded;\n    this.refreshProps();\n  }\n  getOptionalMethods() {\n    return [\"select\", \"configureDefaults\"];\n  }\n  awaitSetActive(active) {\n    this.active = active;\n    return this.refreshProps();\n  }\n  updateActive(active) {\n    const result = this.awaitSetActive(active);\n    if (active) {\n      result.then(() => this.sourceParams.onItemActivated());\n    }\n  }\n  getProps() {\n    const props = super.getProps();\n    props.active = this.active;\n    props.expanded = this.expanded;\n    props.onActiveChange = this.onActiveChange;\n    delete props.onItemActivated;\n    return props;\n  }\n};\n\n// packages/ag-grid-react/src/shared/customComp/noRowsOverlayComponentWrapper.ts\nvar NoRowsOverlayComponentWrapper = class extends CustomComponentWrapper {\n  refresh(params) {\n    this.sourceParams = params;\n    this.refreshProps();\n  }\n};\n\n// packages/ag-grid-react/src/shared/customComp/statusPanelComponentWrapper.ts\nvar StatusPanelComponentWrapper = class extends CustomComponentWrapper {\n  refresh(params) {\n    this.sourceParams = params;\n    this.refreshProps();\n    return true;\n  }\n};\n\n// packages/ag-grid-react/src/shared/customComp/toolPanelComponentWrapper.ts\nvar ToolPanelComponentWrapper = class extends CustomComponentWrapper {\n  constructor() {\n    super(...arguments);\n    this.onStateChange = (state) => this.updateState(state);\n  }\n  refresh(params) {\n    this.sourceParams = params;\n    this.refreshProps();\n    return true;\n  }\n  getState() {\n    return this.state;\n  }\n  updateState(state) {\n    this.state = state;\n    this.refreshProps();\n    this.sourceParams.onStateUpdated();\n  }\n  getProps() {\n    const props = super.getProps();\n    props.state = this.state;\n    props.onStateChange = this.onStateChange;\n    return props;\n  }\n};\n\n// packages/ag-grid-react/src/shared/customComp/util.ts\nimport { AgPromise as AgPromise4, _warnOnce as _warnOnce2 } from \"ag-grid-community\";\nfunction getInstance(wrapperComponent, callback) {\n  const promise = wrapperComponent?.getInstance?.() ?? AgPromise4.resolve(void 0);\n  promise.then((comp) => callback(comp));\n}\nfunction warnReactiveCustomComponents() {\n  _warnOnce2(\"As of v32, using custom components with `reactiveCustomComponents = false` is deprecated.\");\n}\n\n// packages/ag-grid-react/src/shared/portalManager.ts\nvar MAX_COMPONENT_CREATION_TIME_IN_MS = 1e3;\nvar PortalManager = class {\n  constructor(refresher, wrappingElement, maxComponentCreationTimeMs) {\n    this.destroyed = false;\n    this.portals = [];\n    this.hasPendingPortalUpdate = false;\n    this.wrappingElement = wrappingElement ? wrappingElement : \"div\";\n    this.refresher = refresher;\n    this.maxComponentCreationTimeMs = maxComponentCreationTimeMs ? maxComponentCreationTimeMs : MAX_COMPONENT_CREATION_TIME_IN_MS;\n  }\n  getPortals() {\n    return this.portals;\n  }\n  destroy() {\n    this.destroyed = true;\n  }\n  destroyPortal(portal) {\n    this.portals = this.portals.filter((curPortal) => curPortal !== portal);\n    this.batchUpdate();\n  }\n  getComponentWrappingElement() {\n    return this.wrappingElement;\n  }\n  mountReactPortal(portal, reactComponent, resolve) {\n    this.portals = [...this.portals, portal];\n    this.waitForInstance(reactComponent, resolve);\n    this.batchUpdate();\n  }\n  updateReactPortal(oldPortal, newPortal) {\n    this.portals[this.portals.indexOf(oldPortal)] = newPortal;\n    this.batchUpdate();\n  }\n  batchUpdate() {\n    if (this.hasPendingPortalUpdate) {\n      return;\n    }\n    setTimeout(() => {\n      if (!this.destroyed) {\n        this.refresher();\n        this.hasPendingPortalUpdate = false;\n      }\n    });\n    this.hasPendingPortalUpdate = true;\n  }\n  waitForInstance(reactComponent, resolve, startTime = Date.now()) {\n    if (this.destroyed) {\n      resolve(null);\n      return;\n    }\n    if (reactComponent.rendered()) {\n      resolve(reactComponent);\n    } else {\n      if (Date.now() - startTime >= this.maxComponentCreationTimeMs && !this.hasPendingPortalUpdate) {\n        return;\n      }\n      window.setTimeout(() => {\n        this.waitForInstance(reactComponent, resolve, startTime);\n      });\n    }\n  }\n};\n\n// packages/ag-grid-react/src/reactUi/gridComp.tsx\nimport { GridCtrl } from \"ag-grid-community\";\nimport React16, { memo as memo14, useCallback as useCallback14, useEffect as useEffect8, useMemo as useMemo11, useRef as useRef14, useState as useState15 } from \"react\";\n\n// packages/ag-grid-react/src/reactUi/gridBodyComp.tsx\nimport {\n  CssClassManager as CssClassManager4,\n  FakeHScrollComp,\n  FakeVScrollComp,\n  GridBodyCtrl,\n  OverlayWrapperComponent,\n  _setAriaColCount,\n  _setAriaRowCount\n} from \"ag-grid-community\";\nimport React14, { memo as memo12, useCallback as useCallback12, useContext as useContext12, useMemo as useMemo10, useRef as useRef12, useState as useState14 } from \"react\";\n\n// packages/ag-grid-react/src/reactUi/header/gridHeaderComp.tsx\nimport { GridHeaderCtrl } from \"ag-grid-community\";\nimport React9, { memo as memo7, useCallback as useCallback7, useContext as useContext6, useMemo as useMemo6, useRef as useRef7, useState as useState8 } from \"react\";\n\n// packages/ag-grid-react/src/reactUi/header/headerRowContainerComp.tsx\nimport { HeaderRowContainerCtrl } from \"ag-grid-community\";\nimport React8, { memo as memo6, useCallback as useCallback6, useContext as useContext5, useRef as useRef6, useState as useState7 } from \"react\";\n\n// packages/ag-grid-react/src/reactUi/header/headerRowComp.tsx\nimport { HeaderRowType } from \"ag-grid-community\";\nimport React7, { memo as memo5, useCallback as useCallback5, useMemo as useMemo5, useRef as useRef5, useState as useState6 } from \"react\";\n\n// packages/ag-grid-react/src/reactUi/header/headerCellComp.tsx\nimport { CssClassManager, _removeAriaSort, _setAriaSort } from \"ag-grid-community\";\nimport React4, { memo as memo2, useCallback as useCallback2, useContext as useContext2, useEffect as useEffect2, useLayoutEffect as useLayoutEffect2, useMemo as useMemo2, useRef as useRef2, useState as useState3 } from \"react\";\nvar HeaderCellComp = (props) => {\n  const { ctrl } = props;\n  const isAlive = ctrl.isAlive();\n  const { context } = useContext2(BeansContext);\n  const colId = isAlive ? ctrl.getColId() : void 0;\n  const [userCompDetails, setUserCompDetails] = useState3();\n  const eGui = useRef2(null);\n  const eResize = useRef2(null);\n  const eHeaderCompWrapper = useRef2(null);\n  const userCompRef = useRef2();\n  const cssClassManager = useRef2();\n  if (isAlive && !cssClassManager.current) {\n    cssClassManager.current = new CssClassManager(() => eGui.current);\n  }\n  const setRef2 = useCallback2((e) => {\n    eGui.current = e;\n    if (!eGui.current || !isAlive) {\n      return;\n    }\n    const compProxy = {\n      setWidth: (width) => {\n        if (eGui.current) {\n          eGui.current.style.width = width;\n        }\n      },\n      addOrRemoveCssClass: (name, on) => cssClassManager.current.addOrRemoveCssClass(name, on),\n      setAriaSort: (sort) => {\n        if (eGui.current) {\n          sort ? _setAriaSort(eGui.current, sort) : _removeAriaSort(eGui.current);\n        }\n      },\n      setUserCompDetails: (compDetails) => setUserCompDetails(compDetails),\n      getUserCompInstance: () => userCompRef.current || void 0\n    };\n    ctrl.setComp(compProxy, eGui.current, eResize.current, eHeaderCompWrapper.current);\n    const selectAllGui = ctrl.getSelectAllGui();\n    eResize.current?.insertAdjacentElement(\"afterend\", selectAllGui);\n  }, []);\n  useLayoutEffect2(\n    () => showJsComp(userCompDetails, context, eHeaderCompWrapper.current, userCompRef),\n    [userCompDetails]\n  );\n  useEffect2(() => {\n    ctrl.setDragSource(eGui.current);\n  }, [userCompDetails]);\n  const userCompStateless = useMemo2(() => {\n    const res = userCompDetails?.componentFromFramework && isComponentStateless(userCompDetails.componentClass);\n    return !!res;\n  }, [userCompDetails]);\n  const reactUserComp = userCompDetails && userCompDetails.componentFromFramework;\n  const UserCompClass = userCompDetails && userCompDetails.componentClass;\n  return /* @__PURE__ */ React4.createElement(\"div\", { ref: setRef2, className: \"ag-header-cell\", \"col-id\": colId, role: \"columnheader\" }, /* @__PURE__ */ React4.createElement(\"div\", { ref: eResize, className: \"ag-header-cell-resize\", role: \"presentation\" }), /* @__PURE__ */ React4.createElement(\"div\", { ref: eHeaderCompWrapper, className: \"ag-header-cell-comp-wrapper\", role: \"presentation\" }, reactUserComp && userCompStateless && /* @__PURE__ */ React4.createElement(UserCompClass, { ...userCompDetails.params }), reactUserComp && !userCompStateless && /* @__PURE__ */ React4.createElement(UserCompClass, { ...userCompDetails.params, ref: userCompRef })));\n};\nvar headerCellComp_default = memo2(HeaderCellComp);\n\n// packages/ag-grid-react/src/reactUi/header/headerFilterCellComp.tsx\nimport { AgPromise as AgPromise5 } from \"ag-grid-community\";\nimport React5, { memo as memo3, useCallback as useCallback3, useContext as useContext3, useLayoutEffect as useLayoutEffect3, useMemo as useMemo3, useRef as useRef3, useState as useState4 } from \"react\";\nvar HeaderFilterCellComp = (props) => {\n  const { context, gos } = useContext3(BeansContext);\n  const [cssClasses, setCssClasses] = useState4(\n    () => new CssClasses(\"ag-header-cell\", \"ag-floating-filter\")\n  );\n  const [cssBodyClasses, setBodyCssClasses] = useState4(() => new CssClasses());\n  const [cssButtonWrapperClasses, setButtonWrapperCssClasses] = useState4(\n    () => new CssClasses(\"ag-floating-filter-button\", \"ag-hidden\")\n  );\n  const [buttonWrapperAriaHidden, setButtonWrapperAriaHidden] = useState4(\"false\");\n  const [userCompDetails, setUserCompDetails] = useState4();\n  const [, setRenderKey] = useState4(1);\n  const eGui = useRef3(null);\n  const eFloatingFilterBody = useRef3(null);\n  const eButtonWrapper = useRef3(null);\n  const eButtonShowMainFilter = useRef3(null);\n  const userCompResolve = useRef3();\n  const userCompPromise = useRef3();\n  const userCompRef = (value) => {\n    if (value == null) {\n      return;\n    }\n    userCompResolve.current && userCompResolve.current(value);\n  };\n  const { ctrl } = props;\n  const setRef2 = useCallback3((e) => {\n    eGui.current = e;\n    if (!eGui.current) {\n      return;\n    }\n    userCompPromise.current = new AgPromise5((resolve) => {\n      userCompResolve.current = resolve;\n    });\n    const compProxy = {\n      addOrRemoveCssClass: (name, on) => setCssClasses((prev) => prev.setClass(name, on)),\n      addOrRemoveBodyCssClass: (name, on) => setBodyCssClasses((prev) => prev.setClass(name, on)),\n      setButtonWrapperDisplayed: (displayed) => {\n        setButtonWrapperCssClasses((prev) => prev.setClass(\"ag-hidden\", !displayed));\n        setButtonWrapperAriaHidden(!displayed ? \"true\" : \"false\");\n      },\n      setWidth: (width) => {\n        if (eGui.current) {\n          eGui.current.style.width = width;\n        }\n      },\n      setCompDetails: (compDetails) => setUserCompDetails(compDetails),\n      getFloatingFilterComp: () => userCompPromise.current ? userCompPromise.current : null,\n      setMenuIcon: (eIcon) => eButtonShowMainFilter.current?.appendChild(eIcon)\n    };\n    ctrl.setComp(compProxy, eGui.current, eButtonShowMainFilter.current, eFloatingFilterBody.current);\n  }, []);\n  useLayoutEffect3(\n    () => showJsComp(userCompDetails, context, eFloatingFilterBody.current, userCompRef),\n    [userCompDetails]\n  );\n  const className = useMemo3(() => cssClasses.toString(), [cssClasses]);\n  const bodyClassName = useMemo3(() => cssBodyClasses.toString(), [cssBodyClasses]);\n  const buttonWrapperClassName = useMemo3(() => cssButtonWrapperClasses.toString(), [cssButtonWrapperClasses]);\n  const userCompStateless = useMemo3(() => {\n    const res = userCompDetails && userCompDetails.componentFromFramework && isComponentStateless(userCompDetails.componentClass);\n    return !!res;\n  }, [userCompDetails]);\n  const reactiveCustomComponents = useMemo3(() => gos.get(\"reactiveCustomComponents\"), []);\n  const floatingFilterCompProxy = useMemo3(() => {\n    if (userCompDetails) {\n      if (reactiveCustomComponents) {\n        const compProxy = new FloatingFilterComponentProxy(\n          userCompDetails.params,\n          () => setRenderKey((prev) => prev + 1)\n        );\n        userCompRef(compProxy);\n        return compProxy;\n      } else if (userCompDetails.componentFromFramework) {\n        warnReactiveCustomComponents();\n      }\n    }\n    return void 0;\n  }, [userCompDetails]);\n  const floatingFilterProps = floatingFilterCompProxy?.getProps();\n  const reactUserComp = userCompDetails && userCompDetails.componentFromFramework;\n  const UserCompClass = userCompDetails && userCompDetails.componentClass;\n  return /* @__PURE__ */ React5.createElement(\"div\", { ref: setRef2, className, role: \"gridcell\" }, /* @__PURE__ */ React5.createElement(\"div\", { ref: eFloatingFilterBody, className: bodyClassName, role: \"presentation\" }, reactUserComp && !reactiveCustomComponents && /* @__PURE__ */ React5.createElement(UserCompClass, { ...userCompDetails.params, ref: userCompStateless ? () => {\n  } : userCompRef }), reactUserComp && reactiveCustomComponents && /* @__PURE__ */ React5.createElement(\n    CustomContext.Provider,\n    {\n      value: {\n        setMethods: (methods) => floatingFilterCompProxy.setMethods(methods)\n      }\n    },\n    /* @__PURE__ */ React5.createElement(UserCompClass, { ...floatingFilterProps })\n  )), /* @__PURE__ */ React5.createElement(\n    \"div\",\n    {\n      ref: eButtonWrapper,\n      \"aria-hidden\": buttonWrapperAriaHidden,\n      className: buttonWrapperClassName,\n      role: \"presentation\"\n    },\n    /* @__PURE__ */ React5.createElement(\n      \"button\",\n      {\n        ref: eButtonShowMainFilter,\n        type: \"button\",\n        className: \"ag-button ag-floating-filter-button-button\",\n        tabIndex: -1\n      }\n    )\n  ));\n};\nvar headerFilterCellComp_default = memo3(HeaderFilterCellComp);\n\n// packages/ag-grid-react/src/reactUi/header/headerGroupCellComp.tsx\nimport React6, { memo as memo4, useCallback as useCallback4, useContext as useContext4, useEffect as useEffect3, useLayoutEffect as useLayoutEffect4, useMemo as useMemo4, useRef as useRef4, useState as useState5 } from \"react\";\nvar HeaderGroupCellComp = (props) => {\n  const { context } = useContext4(BeansContext);\n  const { ctrl } = props;\n  const [cssClasses, setCssClasses] = useState5(() => new CssClasses());\n  const [cssResizableClasses, setResizableCssClasses] = useState5(() => new CssClasses());\n  const [resizableAriaHidden, setResizableAriaHidden] = useState5(\"false\");\n  const [ariaExpanded, setAriaExpanded] = useState5();\n  const [userCompDetails, setUserCompDetails] = useState5();\n  const colId = useMemo4(() => ctrl.getColId(), []);\n  const eGui = useRef4(null);\n  const eResize = useRef4(null);\n  const eHeaderCompWrapper = useRef4(null);\n  const userCompRef = useRef4();\n  const setRef2 = useCallback4((e) => {\n    eGui.current = e;\n    if (!eGui.current) {\n      return;\n    }\n    const compProxy = {\n      setWidth: (width) => {\n        if (eGui.current) {\n          eGui.current.style.width = width;\n        }\n      },\n      addOrRemoveCssClass: (name, on) => setCssClasses((prev) => prev.setClass(name, on)),\n      setUserCompDetails: (compDetails) => setUserCompDetails(compDetails),\n      setResizableDisplayed: (displayed) => {\n        setResizableCssClasses((prev) => prev.setClass(\"ag-hidden\", !displayed));\n        setResizableAriaHidden(!displayed ? \"true\" : \"false\");\n      },\n      setAriaExpanded: (expanded) => setAriaExpanded(expanded),\n      getUserCompInstance: () => userCompRef.current || void 0\n    };\n    ctrl.setComp(compProxy, eGui.current, eResize.current, eHeaderCompWrapper.current);\n  }, []);\n  useLayoutEffect4(() => showJsComp(userCompDetails, context, eHeaderCompWrapper.current), [userCompDetails]);\n  useEffect3(() => {\n    if (eGui.current) {\n      ctrl.setDragSource(eGui.current);\n    }\n  }, [userCompDetails]);\n  const userCompStateless = useMemo4(() => {\n    const res = userCompDetails?.componentFromFramework && isComponentStateless(userCompDetails.componentClass);\n    return !!res;\n  }, [userCompDetails]);\n  const className = useMemo4(() => \"ag-header-group-cell \" + cssClasses.toString(), [cssClasses]);\n  const resizableClassName = useMemo4(\n    () => \"ag-header-cell-resize \" + cssResizableClasses.toString(),\n    [cssResizableClasses]\n  );\n  const reactUserComp = userCompDetails && userCompDetails.componentFromFramework;\n  const UserCompClass = userCompDetails && userCompDetails.componentClass;\n  return /* @__PURE__ */ React6.createElement(\"div\", { ref: setRef2, className, \"col-id\": colId, role: \"columnheader\", \"aria-expanded\": ariaExpanded }, /* @__PURE__ */ React6.createElement(\"div\", { ref: eHeaderCompWrapper, className: \"ag-header-cell-comp-wrapper\", role: \"presentation\" }, reactUserComp && userCompStateless && /* @__PURE__ */ React6.createElement(UserCompClass, { ...userCompDetails.params }), reactUserComp && !userCompStateless && /* @__PURE__ */ React6.createElement(UserCompClass, { ...userCompDetails.params, ref: userCompRef })), /* @__PURE__ */ React6.createElement(\"div\", { ref: eResize, \"aria-hidden\": resizableAriaHidden, className: resizableClassName }));\n};\nvar headerGroupCellComp_default = memo4(HeaderGroupCellComp);\n\n// packages/ag-grid-react/src/reactUi/header/headerRowComp.tsx\nvar HeaderRowComp = (props) => {\n  const { ctrl } = props;\n  const { topOffset, rowHeight } = useMemo5(() => ctrl.getTopAndHeight(), []);\n  const ariaRowIndex = ctrl.getAriaRowIndex();\n  const className = ctrl.getHeaderRowClass();\n  const [height, setHeight] = useState6(() => rowHeight + \"px\");\n  const [top, setTop] = useState6(() => topOffset + \"px\");\n  const cellCtrlsRef = useRef5(null);\n  const prevCellCtrlsRef = useRef5(null);\n  const [cellCtrls, setCellCtrls] = useState6(() => ctrl.getHeaderCtrls());\n  const eGui = useRef5(null);\n  const setRef2 = useCallback5((e) => {\n    eGui.current = e;\n    if (!e) {\n      return;\n    }\n    const compProxy = {\n      setHeight: (height2) => setHeight(height2),\n      setTop: (top2) => setTop(top2),\n      setHeaderCtrls: (ctrls, forceOrder, afterScroll) => {\n        prevCellCtrlsRef.current = cellCtrlsRef.current;\n        cellCtrlsRef.current = ctrls;\n        const next = getNextValueIfDifferent(prevCellCtrlsRef.current, ctrls, forceOrder);\n        if (next !== prevCellCtrlsRef.current) {\n          agFlushSync(afterScroll, () => setCellCtrls(next));\n        }\n      },\n      setWidth: (width) => {\n        if (eGui.current) {\n          eGui.current.style.width = width;\n        }\n      }\n    };\n    ctrl.setComp(compProxy, false);\n  }, []);\n  const style = useMemo5(\n    () => ({\n      height,\n      top\n    }),\n    [height, top]\n  );\n  const createCellJsx = useCallback5((cellCtrl) => {\n    switch (ctrl.getType()) {\n      case HeaderRowType.COLUMN_GROUP:\n        return /* @__PURE__ */ React7.createElement(headerGroupCellComp_default, { ctrl: cellCtrl, key: cellCtrl.getInstanceId() });\n      case HeaderRowType.FLOATING_FILTER:\n        return /* @__PURE__ */ React7.createElement(headerFilterCellComp_default, { ctrl: cellCtrl, key: cellCtrl.getInstanceId() });\n      default:\n        return /* @__PURE__ */ React7.createElement(headerCellComp_default, { ctrl: cellCtrl, key: cellCtrl.getInstanceId() });\n    }\n  }, []);\n  return /* @__PURE__ */ React7.createElement(\"div\", { ref: setRef2, className, role: \"row\", style, \"aria-rowindex\": ariaRowIndex }, cellCtrls.map(createCellJsx));\n};\nvar headerRowComp_default = memo5(HeaderRowComp);\n\n// packages/ag-grid-react/src/reactUi/header/headerRowContainerComp.tsx\nvar HeaderRowContainerComp = (props) => {\n  const [displayed, setDisplayed] = useState7(true);\n  const [headerRowCtrls, setHeaderRowCtrls] = useState7([]);\n  const { context } = useContext5(BeansContext);\n  const eGui = useRef6(null);\n  const eCenterContainer = useRef6(null);\n  const headerRowCtrlRef = useRef6(null);\n  const pinnedLeft = props.pinned === \"left\";\n  const pinnedRight = props.pinned === \"right\";\n  const centre = !pinnedLeft && !pinnedRight;\n  const setRef2 = useCallback6((e) => {\n    eGui.current = e;\n    if (!eGui.current) {\n      context.destroyBean(headerRowCtrlRef.current);\n      headerRowCtrlRef.current = null;\n      return;\n    }\n    const compProxy = {\n      setDisplayed,\n      setCtrls: (ctrls) => setHeaderRowCtrls(ctrls),\n      // centre only\n      setCenterWidth: (width) => {\n        if (eCenterContainer.current) {\n          eCenterContainer.current.style.width = width;\n        }\n      },\n      setViewportScrollLeft: (left) => {\n        if (eGui.current) {\n          eGui.current.scrollLeft = left;\n        }\n      },\n      // pinned only\n      setPinnedContainerWidth: (width) => {\n        if (eGui.current) {\n          eGui.current.style.width = width;\n          eGui.current.style.minWidth = width;\n          eGui.current.style.maxWidth = width;\n        }\n      }\n    };\n    headerRowCtrlRef.current = context.createBean(new HeaderRowContainerCtrl(props.pinned));\n    headerRowCtrlRef.current.setComp(compProxy, eGui.current);\n  }, []);\n  const className = !displayed ? \"ag-hidden\" : \"\";\n  const insertRowsJsx = () => headerRowCtrls.map((ctrl) => /* @__PURE__ */ React8.createElement(headerRowComp_default, { ctrl, key: ctrl.getInstanceId() }));\n  return /* @__PURE__ */ React8.createElement(React8.Fragment, null, pinnedLeft && /* @__PURE__ */ React8.createElement(\n    \"div\",\n    {\n      ref: setRef2,\n      className: \"ag-pinned-left-header \" + className,\n      \"aria-hidden\": !displayed,\n      role: \"rowgroup\"\n    },\n    insertRowsJsx()\n  ), pinnedRight && /* @__PURE__ */ React8.createElement(\n    \"div\",\n    {\n      ref: setRef2,\n      className: \"ag-pinned-right-header \" + className,\n      \"aria-hidden\": !displayed,\n      role: \"rowgroup\"\n    },\n    insertRowsJsx()\n  ), centre && /* @__PURE__ */ React8.createElement(\"div\", { ref: setRef2, className: \"ag-header-viewport \" + className, role: \"presentation\" }, /* @__PURE__ */ React8.createElement(\"div\", { ref: eCenterContainer, className: \"ag-header-container\", role: \"rowgroup\" }, insertRowsJsx())));\n};\nvar headerRowContainerComp_default = memo6(HeaderRowContainerComp);\n\n// packages/ag-grid-react/src/reactUi/header/gridHeaderComp.tsx\nvar GridHeaderComp = () => {\n  const [cssClasses, setCssClasses] = useState8(() => new CssClasses());\n  const [height, setHeight] = useState8();\n  const { context } = useContext6(BeansContext);\n  const eGui = useRef7(null);\n  const gridCtrlRef = useRef7(null);\n  const setRef2 = useCallback7((e) => {\n    eGui.current = e;\n    if (!e) {\n      context.destroyBean(gridCtrlRef.current);\n      gridCtrlRef.current = null;\n      return;\n    }\n    const compProxy = {\n      addOrRemoveCssClass: (name, on) => setCssClasses((prev) => prev.setClass(name, on)),\n      setHeightAndMinHeight: (height2) => setHeight(height2)\n    };\n    gridCtrlRef.current = context.createBean(new GridHeaderCtrl());\n    gridCtrlRef.current.setComp(compProxy, eGui.current, eGui.current);\n  }, []);\n  const className = useMemo6(() => {\n    const res = cssClasses.toString();\n    return \"ag-header \" + res;\n  }, [cssClasses]);\n  const style = useMemo6(\n    () => ({\n      height,\n      minHeight: height\n    }),\n    [height]\n  );\n  return /* @__PURE__ */ React9.createElement(\"div\", { ref: setRef2, className, style, role: \"presentation\" }, /* @__PURE__ */ React9.createElement(headerRowContainerComp_default, { pinned: \"left\" }), /* @__PURE__ */ React9.createElement(headerRowContainerComp_default, { pinned: null }), /* @__PURE__ */ React9.createElement(headerRowContainerComp_default, { pinned: \"right\" }));\n};\nvar gridHeaderComp_default = memo7(GridHeaderComp);\n\n// packages/ag-grid-react/src/reactUi/reactComment.tsx\nimport { useEffect as useEffect4 } from \"react\";\nvar useReactCommentEffect = (comment, eForCommentRef) => {\n  useEffect4(() => {\n    const eForComment = eForCommentRef.current;\n    if (eForComment) {\n      const eParent = eForComment.parentElement;\n      if (eParent) {\n        const eComment = document.createComment(comment);\n        eParent.insertBefore(eComment, eForComment);\n        return () => {\n          eParent.removeChild(eComment);\n        };\n      }\n    }\n  }, [comment]);\n};\nvar reactComment_default = useReactCommentEffect;\n\n// packages/ag-grid-react/src/reactUi/rows/rowContainerComp.tsx\nimport { RowContainerCtrl, _getRowContainerOptions } from \"ag-grid-community\";\nimport React13, { memo as memo11, useCallback as useCallback11, useContext as useContext11, useMemo as useMemo9, useRef as useRef11, useState as useState13 } from \"react\";\n\n// packages/ag-grid-react/src/reactUi/rows/rowComp.tsx\nimport { CssClassManager as CssClassManager3 } from \"ag-grid-community\";\nimport React12, { memo as memo10, useCallback as useCallback10, useContext as useContext10, useEffect as useEffect7, useLayoutEffect as useLayoutEffect6, useMemo as useMemo8, useRef as useRef10, useState as useState12 } from \"react\";\n\n// packages/ag-grid-react/src/reactUi/cells/cellComp.tsx\nimport { CssClassManager as CssClassManager2, _removeFromParent } from \"ag-grid-community\";\nimport React11, { memo as memo9, useCallback as useCallback9, useContext as useContext9, useLayoutEffect as useLayoutEffect5, useMemo as useMemo7, useRef as useRef9, useState as useState11 } from \"react\";\n\n// packages/ag-grid-react/src/shared/customComp/cellEditorComponentProxy.ts\nimport { AgPromise as AgPromise6 } from \"ag-grid-community\";\nvar CellEditorComponentProxy = class {\n  constructor(cellEditorParams, refreshProps) {\n    this.cellEditorParams = cellEditorParams;\n    this.refreshProps = refreshProps;\n    this.instanceCreated = new AgPromise6((resolve) => {\n      this.resolveInstanceCreated = resolve;\n    });\n    this.onValueChange = (value) => this.updateValue(value);\n    this.value = cellEditorParams.value;\n  }\n  getProps() {\n    return {\n      ...this.cellEditorParams,\n      initialValue: this.cellEditorParams.value,\n      value: this.value,\n      onValueChange: this.onValueChange\n    };\n  }\n  getValue() {\n    return this.value;\n  }\n  refresh(params) {\n    this.cellEditorParams = params;\n    this.refreshProps();\n  }\n  setMethods(methods) {\n    addOptionalMethods(this.getOptionalMethods(), methods, this);\n  }\n  getInstance() {\n    return this.instanceCreated.then(() => this.componentInstance);\n  }\n  setRef(componentInstance) {\n    this.componentInstance = componentInstance;\n    this.resolveInstanceCreated?.();\n    this.resolveInstanceCreated = void 0;\n  }\n  getOptionalMethods() {\n    return [\"isCancelBeforeStart\", \"isCancelAfterEnd\", \"focusIn\", \"focusOut\", \"afterGuiAttached\"];\n  }\n  updateValue(value) {\n    this.value = value;\n    this.refreshProps();\n  }\n};\n\n// packages/ag-grid-react/src/reactUi/cells/popupEditorComp.tsx\nimport React10, { memo as memo8, useContext as useContext7, useState as useState10 } from \"react\";\nimport { createPortal as createPortal2 } from \"react-dom\";\n\n// packages/ag-grid-react/src/reactUi/useEffectOnce.tsx\nimport { useEffect as useEffect5, useRef as useRef8, useState as useState9 } from \"react\";\nvar useEffectOnce = (effect) => {\n  const effectFn = useRef8(effect);\n  const destroyFn = useRef8();\n  const effectCalled = useRef8(false);\n  const rendered = useRef8(false);\n  const [, setVal] = useState9(0);\n  if (effectCalled.current) {\n    rendered.current = true;\n  }\n  useEffect5(() => {\n    if (!effectCalled.current) {\n      destroyFn.current = effectFn.current();\n      effectCalled.current = true;\n    }\n    setVal((val) => val + 1);\n    return () => {\n      if (!rendered.current) {\n        return;\n      }\n      if (destroyFn.current) {\n        destroyFn.current();\n      }\n    };\n  }, []);\n};\n\n// packages/ag-grid-react/src/reactUi/cells/popupEditorComp.tsx\nvar PopupEditorComp = (props) => {\n  const [popupEditorWrapper, setPopupEditorWrapper] = useState10();\n  const { context, popupService, localeService, gos, editService } = useContext7(BeansContext);\n  useEffectOnce(() => {\n    const { editDetails, cellCtrl, eParentCell } = props;\n    const { compDetails } = editDetails;\n    const useModelPopup = gos.get(\"stopEditingWhenCellsLoseFocus\");\n    const wrapper = context.createBean(editService.createPopupEditorWrapper(compDetails.params));\n    const ePopupGui = wrapper.getGui();\n    if (props.jsChildComp) {\n      const eChildGui = props.jsChildComp.getGui();\n      if (eChildGui) {\n        ePopupGui.appendChild(eChildGui);\n      }\n    }\n    const positionParams = {\n      column: cellCtrl.getColumn(),\n      rowNode: cellCtrl.getRowNode(),\n      type: \"popupCellEditor\",\n      eventSource: eParentCell,\n      ePopup: ePopupGui,\n      position: editDetails.popupPosition,\n      keepWithinBounds: true\n    };\n    const positionCallback = popupService.positionPopupByComponent.bind(popupService, positionParams);\n    const translate = localeService.getLocaleTextFunc();\n    const addPopupRes = popupService.addPopup({\n      modal: useModelPopup,\n      eChild: ePopupGui,\n      closeOnEsc: true,\n      closedCallback: () => {\n        cellCtrl.onPopupEditorClosed();\n      },\n      anchorToElement: eParentCell,\n      positionCallback,\n      ariaLabel: translate(\"ariaLabelCellEditor\", \"Cell Editor\")\n    });\n    const hideEditorPopup = addPopupRes ? addPopupRes.hideFunc : void 0;\n    setPopupEditorWrapper(wrapper);\n    props.jsChildComp && props.jsChildComp.afterGuiAttached && props.jsChildComp.afterGuiAttached();\n    return () => {\n      if (hideEditorPopup != null) {\n        hideEditorPopup();\n      }\n      context.destroyBean(wrapper);\n    };\n  });\n  return /* @__PURE__ */ React10.createElement(React10.Fragment, null, popupEditorWrapper && props.wrappedContent && createPortal2(props.wrappedContent, popupEditorWrapper.getGui()));\n};\nvar popupEditorComp_default = memo8(PopupEditorComp);\n\n// packages/ag-grid-react/src/reactUi/cells/showJsRenderer.tsx\nimport { useCallback as useCallback8, useContext as useContext8, useEffect as useEffect6 } from \"react\";\nvar useJsCellRenderer = (showDetails, showTools, eCellValue, cellValueVersion, jsCellRendererRef, eGui) => {\n  const { context } = useContext8(BeansContext);\n  const destroyCellRenderer = useCallback8(() => {\n    const comp = jsCellRendererRef.current;\n    if (!comp) {\n      return;\n    }\n    const compGui = comp.getGui();\n    if (compGui && compGui.parentElement) {\n      compGui.parentElement.removeChild(compGui);\n    }\n    context.destroyBean(comp);\n    jsCellRendererRef.current = void 0;\n  }, []);\n  useEffect6(() => {\n    const showValue = showDetails != null;\n    const jsCompDetails = showDetails && showDetails.compDetails && !showDetails.compDetails.componentFromFramework;\n    const waitingForToolsSetup = showTools && eCellValue == null;\n    const showComp = showValue && jsCompDetails && !waitingForToolsSetup;\n    if (!showComp) {\n      destroyCellRenderer();\n      return;\n    }\n    const compDetails = showDetails.compDetails;\n    if (jsCellRendererRef.current) {\n      const comp = jsCellRendererRef.current;\n      const attemptRefresh = comp.refresh != null && showDetails.force == false;\n      const refreshResult = attemptRefresh ? comp.refresh(compDetails.params) : false;\n      const refreshWorked = refreshResult === true || refreshResult === void 0;\n      if (refreshWorked) {\n        return;\n      }\n      destroyCellRenderer();\n    }\n    const promise = compDetails.newAgStackInstance();\n    if (promise == null) {\n      return;\n    }\n    promise.then((comp) => {\n      if (!comp) {\n        return;\n      }\n      const compGui = comp.getGui();\n      if (!compGui) {\n        return;\n      }\n      const parent = showTools ? eCellValue : eGui.current;\n      parent.appendChild(compGui);\n      jsCellRendererRef.current = comp;\n    });\n  }, [showDetails, showTools, cellValueVersion]);\n  useEffect6(() => {\n    return destroyCellRenderer;\n  }, []);\n};\nvar showJsRenderer_default = useJsCellRenderer;\n\n// packages/ag-grid-react/src/reactUi/cells/cellComp.tsx\nvar jsxEditorProxy = (editDetails, CellEditorClass, setRef2) => {\n  const { compProxy } = editDetails;\n  setRef2(compProxy);\n  const props = compProxy.getProps();\n  const isStateless = isComponentStateless(CellEditorClass);\n  return /* @__PURE__ */ React11.createElement(\n    CustomContext.Provider,\n    {\n      value: {\n        setMethods: (methods) => compProxy.setMethods(methods)\n      }\n    },\n    isStateless && /* @__PURE__ */ React11.createElement(CellEditorClass, { ...props }),\n    !isStateless && /* @__PURE__ */ React11.createElement(CellEditorClass, { ...props, ref: (ref) => compProxy.setRef(ref) })\n  );\n};\nvar jsxEditor = (editDetails, CellEditorClass, setRef2) => {\n  const newFormat = editDetails.compProxy;\n  return /* @__PURE__ */ React11.createElement(React11.Fragment, null, !newFormat && /* @__PURE__ */ React11.createElement(CellEditorClass, { ...editDetails.compDetails.params, ref: setRef2 }), newFormat && jsxEditorProxy(editDetails, CellEditorClass, setRef2));\n};\nvar jsxEditValue = (editDetails, setInlineCellEditorRef, setPopupCellEditorRef, eGui, cellCtrl, jsEditorComp) => {\n  const compDetails = editDetails.compDetails;\n  const CellEditorClass = compDetails.componentClass;\n  const reactInlineEditor = compDetails.componentFromFramework && !editDetails.popup;\n  const reactPopupEditor = compDetails.componentFromFramework && editDetails.popup;\n  const jsPopupEditor = !compDetails.componentFromFramework && editDetails.popup;\n  return /* @__PURE__ */ React11.createElement(React11.Fragment, null, reactInlineEditor && jsxEditor(editDetails, CellEditorClass, setInlineCellEditorRef), reactPopupEditor && /* @__PURE__ */ React11.createElement(\n    popupEditorComp_default,\n    {\n      editDetails,\n      cellCtrl,\n      eParentCell: eGui,\n      wrappedContent: jsxEditor(editDetails, CellEditorClass, setPopupCellEditorRef)\n    }\n  ), jsPopupEditor && jsEditorComp && /* @__PURE__ */ React11.createElement(\n    popupEditorComp_default,\n    {\n      editDetails,\n      cellCtrl,\n      eParentCell: eGui,\n      jsChildComp: jsEditorComp\n    }\n  ));\n};\nvar jsxShowValue = (showDetails, key, parentId, cellRendererRef, showCellWrapper, reactCellRendererStateless, setECellValue) => {\n  const { compDetails, value } = showDetails;\n  const noCellRenderer = !compDetails;\n  const reactCellRenderer = compDetails && compDetails.componentFromFramework;\n  const CellRendererClass = compDetails && compDetails.componentClass;\n  const valueForNoCellRenderer = value?.toString ? value.toString() : value;\n  const bodyJsxFunc = () => /* @__PURE__ */ React11.createElement(React11.Fragment, null, noCellRenderer && /* @__PURE__ */ React11.createElement(React11.Fragment, null, valueForNoCellRenderer), reactCellRenderer && !reactCellRendererStateless && /* @__PURE__ */ React11.createElement(CellRendererClass, { ...compDetails.params, key, ref: cellRendererRef }), reactCellRenderer && reactCellRendererStateless && /* @__PURE__ */ React11.createElement(CellRendererClass, { ...compDetails.params, key }));\n  return /* @__PURE__ */ React11.createElement(React11.Fragment, null, showCellWrapper ? /* @__PURE__ */ React11.createElement(\"span\", { role: \"presentation\", id: `cell-${parentId}`, className: \"ag-cell-value\", ref: setECellValue }, bodyJsxFunc()) : bodyJsxFunc());\n};\nvar CellComp = (props) => {\n  const { context } = useContext9(BeansContext);\n  const { cellCtrl, printLayout, editingRow } = props;\n  const colId = cellCtrl.getColumnIdSanitised();\n  const cellInstanceId = cellCtrl.getInstanceId();\n  const [renderDetails, setRenderDetails] = useState11(\n    () => cellCtrl.isCellRenderer() ? void 0 : { compDetails: void 0, value: cellCtrl.getValueToDisplay(), force: false }\n  );\n  const [editDetails, setEditDetails] = useState11();\n  const [renderKey, setRenderKey] = useState11(1);\n  const [userStyles, setUserStyles] = useState11();\n  const [includeSelection, setIncludeSelection] = useState11(false);\n  const [includeRowDrag, setIncludeRowDrag] = useState11(false);\n  const [includeDndSource, setIncludeDndSource] = useState11(false);\n  const [jsEditorComp, setJsEditorComp] = useState11();\n  const forceWrapper = useMemo7(() => cellCtrl.isForceWrapper(), [cellCtrl]);\n  const cellAriaRole = useMemo7(() => cellCtrl.getCellAriaRole(), [cellCtrl]);\n  const eGui = useRef9(null);\n  const cellRendererRef = useRef9(null);\n  const jsCellRendererRef = useRef9();\n  const cellEditorRef = useRef9();\n  const eCellWrapper = useRef9();\n  const cellWrapperDestroyFuncs = useRef9([]);\n  const eCellValue = useRef9();\n  const [cellValueVersion, setCellValueVersion] = useState11(0);\n  const setCellValueRef = useCallback9((ref) => {\n    eCellValue.current = ref;\n    setCellValueVersion((v) => v + 1);\n  }, []);\n  const showTools = renderDetails != null && (includeSelection || includeDndSource || includeRowDrag);\n  const showCellWrapper = forceWrapper || showTools;\n  const setCellEditorRef = useCallback9(\n    (popup, cellEditor) => {\n      cellEditorRef.current = cellEditor;\n      if (cellEditor) {\n        const editingCancelledByUserComp = cellEditor.isCancelBeforeStart && cellEditor.isCancelBeforeStart();\n        if (editingCancelledByUserComp) {\n          setTimeout(() => {\n            cellCtrl.stopEditing(true);\n            cellCtrl.focusCell(true);\n          });\n        }\n      }\n    },\n    [cellCtrl]\n  );\n  const setPopupCellEditorRef = useCallback9(\n    (cellRenderer) => setCellEditorRef(true, cellRenderer),\n    [setCellEditorRef]\n  );\n  const setInlineCellEditorRef = useCallback9(\n    (cellRenderer) => setCellEditorRef(false, cellRenderer),\n    [setCellEditorRef]\n  );\n  const cssClassManager = useRef9();\n  if (!cssClassManager.current) {\n    cssClassManager.current = new CssClassManager2(() => eGui.current);\n  }\n  showJsRenderer_default(renderDetails, showCellWrapper, eCellValue.current, cellValueVersion, jsCellRendererRef, eGui);\n  const lastRenderDetails = useRef9();\n  useLayoutEffect5(() => {\n    const oldDetails = lastRenderDetails.current;\n    const newDetails = renderDetails;\n    lastRenderDetails.current = renderDetails;\n    if (oldDetails == null || oldDetails.compDetails == null || newDetails == null || newDetails.compDetails == null) {\n      return;\n    }\n    const oldCompDetails = oldDetails.compDetails;\n    const newCompDetails = newDetails.compDetails;\n    if (oldCompDetails.componentClass != newCompDetails.componentClass) {\n      return;\n    }\n    if (cellRendererRef.current == null || cellRendererRef.current.refresh == null) {\n      return;\n    }\n    const result = cellRendererRef.current.refresh(newCompDetails.params);\n    if (result != true) {\n      setRenderKey((prev) => prev + 1);\n    }\n  }, [renderDetails]);\n  useLayoutEffect5(() => {\n    const doingJsEditor = editDetails && !editDetails.compDetails.componentFromFramework;\n    if (!doingJsEditor) {\n      return;\n    }\n    const compDetails = editDetails.compDetails;\n    const isPopup = editDetails.popup === true;\n    const cellEditorPromise = compDetails.newAgStackInstance();\n    cellEditorPromise.then((cellEditor) => {\n      if (!cellEditor) {\n        return;\n      }\n      const compGui = cellEditor.getGui();\n      setCellEditorRef(isPopup, cellEditor);\n      if (!isPopup) {\n        const parentEl = (forceWrapper ? eCellWrapper : eGui).current;\n        parentEl?.appendChild(compGui);\n        cellEditor.afterGuiAttached && cellEditor.afterGuiAttached();\n      }\n      setJsEditorComp(cellEditor);\n    });\n    return () => {\n      cellEditorPromise.then((cellEditor) => {\n        const compGui = cellEditor.getGui();\n        context.destroyBean(cellEditor);\n        setCellEditorRef(isPopup, void 0);\n        setJsEditorComp(void 0);\n        if (compGui && compGui.parentElement) {\n          compGui.parentElement.removeChild(compGui);\n        }\n      });\n    };\n  }, [editDetails]);\n  const setCellWrapperRef = useCallback9(\n    (ref) => {\n      eCellWrapper.current = ref;\n      if (!eCellWrapper.current) {\n        cellWrapperDestroyFuncs.current.forEach((f) => f());\n        cellWrapperDestroyFuncs.current = [];\n        return;\n      }\n      const addComp = (comp) => {\n        if (comp) {\n          const eGui2 = comp.getGui();\n          eCellWrapper.current?.insertAdjacentElement(\"afterbegin\", eGui2);\n          cellWrapperDestroyFuncs.current.push(() => {\n            context.destroyBean(comp);\n            _removeFromParent(eGui2);\n          });\n        }\n        return comp;\n      };\n      if (includeSelection) {\n        const checkboxSelectionComp = cellCtrl.createSelectionCheckbox();\n        addComp(checkboxSelectionComp);\n      }\n      if (includeDndSource) {\n        addComp(cellCtrl.createDndSource());\n      }\n      if (includeRowDrag) {\n        addComp(cellCtrl.createRowDragComp());\n      }\n    },\n    [cellCtrl, context, includeDndSource, includeRowDrag, includeSelection]\n  );\n  const setRef2 = useCallback9((ref) => {\n    eGui.current = ref;\n    if (!eGui.current) {\n      return;\n    }\n    if (!cellCtrl) {\n      return;\n    }\n    const compProxy = {\n      addOrRemoveCssClass: (name, on) => cssClassManager.current.addOrRemoveCssClass(name, on),\n      setUserStyles: (styles) => setUserStyles(styles),\n      getFocusableElement: () => eGui.current,\n      setIncludeSelection: (include) => setIncludeSelection(include),\n      setIncludeRowDrag: (include) => setIncludeRowDrag(include),\n      setIncludeDndSource: (include) => setIncludeDndSource(include),\n      getCellEditor: () => cellEditorRef.current || null,\n      getCellRenderer: () => cellRendererRef.current ? cellRendererRef.current : jsCellRendererRef.current,\n      getParentOfValue: () => eCellValue.current ? eCellValue.current : eCellWrapper.current ? eCellWrapper.current : eGui.current,\n      setRenderDetails: (compDetails, value, force) => {\n        setRenderDetails((prev) => {\n          if (prev?.compDetails !== compDetails || prev?.value !== value || prev?.force !== force) {\n            return {\n              value,\n              compDetails,\n              force\n            };\n          } else {\n            return prev;\n          }\n        });\n      },\n      setEditDetails: (compDetails, popup, popupPosition, reactiveCustomComponents) => {\n        if (compDetails) {\n          let compProxy2 = void 0;\n          if (reactiveCustomComponents) {\n            compProxy2 = new CellEditorComponentProxy(\n              compDetails.params,\n              () => setRenderKey((prev) => prev + 1)\n            );\n          } else if (compDetails.componentFromFramework) {\n            warnReactiveCustomComponents();\n          }\n          setEditDetails({\n            compDetails,\n            popup,\n            popupPosition,\n            compProxy: compProxy2\n          });\n          if (!popup) {\n            setRenderDetails(void 0);\n          }\n        } else {\n          setEditDetails((editDetails2) => {\n            if (editDetails2?.compProxy) {\n              cellEditorRef.current = void 0;\n            }\n            return void 0;\n          });\n        }\n      }\n    };\n    const cellWrapperOrUndefined = eCellWrapper.current || void 0;\n    cellCtrl.setComp(compProxy, eGui.current, cellWrapperOrUndefined, printLayout, editingRow);\n  }, []);\n  const reactCellRendererStateless = useMemo7(() => {\n    const res = renderDetails && renderDetails.compDetails && renderDetails.compDetails.componentFromFramework && isComponentStateless(renderDetails.compDetails.componentClass);\n    return !!res;\n  }, [renderDetails]);\n  useLayoutEffect5(() => {\n    if (!eGui.current) {\n      return;\n    }\n    cssClassManager.current.addOrRemoveCssClass(\"ag-cell-value\", !showCellWrapper);\n    cssClassManager.current.addOrRemoveCssClass(\"ag-cell-inline-editing\", !!editDetails && !editDetails.popup);\n    cssClassManager.current.addOrRemoveCssClass(\"ag-cell-popup-editing\", !!editDetails && !!editDetails.popup);\n    cssClassManager.current.addOrRemoveCssClass(\"ag-cell-not-inline-editing\", !editDetails || !!editDetails.popup);\n    cellCtrl.getRowCtrl()?.setInlineEditingCss();\n    if (cellCtrl.shouldRestoreFocus() && !cellCtrl.isEditing()) {\n      eGui.current.focus({ preventScroll: true });\n    }\n  });\n  const showContents = () => /* @__PURE__ */ React11.createElement(React11.Fragment, null, renderDetails != null && jsxShowValue(\n    renderDetails,\n    renderKey,\n    cellInstanceId,\n    cellRendererRef,\n    showCellWrapper,\n    reactCellRendererStateless,\n    setCellValueRef\n  ), editDetails != null && jsxEditValue(\n    editDetails,\n    setInlineCellEditorRef,\n    setPopupCellEditorRef,\n    eGui.current,\n    cellCtrl,\n    jsEditorComp\n  ));\n  const onBlur = useCallback9(() => cellCtrl.onFocusOut(), []);\n  return /* @__PURE__ */ React11.createElement(\"div\", { ref: setRef2, style: userStyles, role: cellAriaRole, \"col-id\": colId, onBlur }, showCellWrapper ? /* @__PURE__ */ React11.createElement(\"div\", { className: \"ag-cell-wrapper\", role: \"presentation\", ref: setCellWrapperRef }, showContents()) : showContents());\n};\nvar cellComp_default = memo9(CellComp);\n\n// packages/ag-grid-react/src/reactUi/rows/rowComp.tsx\nvar RowComp = (params) => {\n  const { context, gos } = useContext10(BeansContext);\n  const { rowCtrl, containerType } = params;\n  const domOrderRef = useRef10(rowCtrl.getDomOrder());\n  const isFullWidth = rowCtrl.isFullWidth();\n  const isDisplayed = rowCtrl.getRowNode().displayed;\n  const [rowIndex, setRowIndex] = useState12(() => isDisplayed ? rowCtrl.getRowIndex() : null);\n  const [rowId, setRowId] = useState12(() => rowCtrl.getRowId());\n  const [rowBusinessKey, setRowBusinessKey] = useState12(() => rowCtrl.getBusinessKey());\n  const [userStyles, setUserStyles] = useState12(() => rowCtrl.getRowStyles());\n  const cellCtrlsRef = useRef10(null);\n  const prevCellCtrlsRef = useRef10(null);\n  const [cellCtrls, setCellCtrls] = useState12(() => null);\n  const [fullWidthCompDetails, setFullWidthCompDetails] = useState12();\n  const [top, setTop] = useState12(\n    () => isDisplayed ? rowCtrl.getInitialRowTop(containerType) : void 0\n  );\n  const [transform, setTransform] = useState12(\n    () => isDisplayed ? rowCtrl.getInitialTransform(containerType) : void 0\n  );\n  const eGui = useRef10(null);\n  const fullWidthCompRef = useRef10();\n  const autoHeightSetup = useRef10(false);\n  const [autoHeightSetupAttempt, setAutoHeightSetupAttempt] = useState12(0);\n  useEffect7(() => {\n    if (autoHeightSetup.current) {\n      return;\n    }\n    if (!fullWidthCompDetails) {\n      return;\n    }\n    if (autoHeightSetupAttempt > 10) {\n      return;\n    }\n    const eChild = eGui.current?.firstChild;\n    if (eChild) {\n      rowCtrl.setupDetailRowAutoHeight(eChild);\n      autoHeightSetup.current = true;\n    } else {\n      setAutoHeightSetupAttempt((prev) => prev + 1);\n    }\n  }, [fullWidthCompDetails, autoHeightSetupAttempt]);\n  const cssClassManager = useRef10();\n  if (!cssClassManager.current) {\n    cssClassManager.current = new CssClassManager3(() => eGui.current);\n  }\n  const setRef2 = useCallback10((e) => {\n    eGui.current = e;\n    if (!eGui.current) {\n      rowCtrl.unsetComp(containerType);\n      return;\n    }\n    if (!rowCtrl.isAlive()) {\n      return;\n    }\n    const compProxy = {\n      // the rowTop is managed by state, instead of direct style manipulation by rowCtrl (like all the other styles)\n      // as we need to have an initial value when it's placed into he DOM for the first time, for animation to work.\n      setTop,\n      setTransform,\n      // i found using React for managing classes at the row level was to slow, as modifying classes caused a lot of\n      // React code to execute, so avoiding React for managing CSS Classes made the grid go much faster.\n      addOrRemoveCssClass: (name, on) => cssClassManager.current.addOrRemoveCssClass(name, on),\n      setDomOrder: (domOrder) => domOrderRef.current = domOrder,\n      setRowIndex,\n      setRowId,\n      setRowBusinessKey,\n      setUserStyles,\n      // if we don't maintain the order, then cols will be ripped out and into the dom\n      // when cols reordered, which would stop the CSS transitions from working\n      setCellCtrls: (next, useFlushSync) => {\n        prevCellCtrlsRef.current = cellCtrlsRef.current;\n        cellCtrlsRef.current = next;\n        const nextCells = getNextValueIfDifferent(prevCellCtrlsRef.current, next, domOrderRef.current);\n        if (nextCells !== prevCellCtrlsRef.current) {\n          agFlushSync(useFlushSync, () => setCellCtrls(nextCells));\n        }\n      },\n      showFullWidth: (compDetails) => setFullWidthCompDetails(compDetails),\n      getFullWidthCellRenderer: () => fullWidthCompRef.current,\n      refreshFullWidth: (getUpdatedParams) => {\n        if (canRefreshFullWidthRef.current) {\n          setFullWidthCompDetails((prevFullWidthCompDetails) => ({\n            ...prevFullWidthCompDetails,\n            params: getUpdatedParams()\n          }));\n          return true;\n        } else {\n          if (!fullWidthCompRef.current || !fullWidthCompRef.current.refresh) {\n            return false;\n          }\n          return fullWidthCompRef.current.refresh(getUpdatedParams());\n        }\n      }\n    };\n    rowCtrl.setComp(compProxy, eGui.current, containerType);\n  }, []);\n  useLayoutEffect6(\n    () => showJsComp(fullWidthCompDetails, context, eGui.current, fullWidthCompRef),\n    [fullWidthCompDetails]\n  );\n  const rowStyles = useMemo8(() => {\n    const res = { top, transform };\n    Object.assign(res, userStyles);\n    return res;\n  }, [top, transform, userStyles]);\n  const showFullWidthFramework = isFullWidth && fullWidthCompDetails && fullWidthCompDetails.componentFromFramework;\n  const showCells = !isFullWidth && cellCtrls != null;\n  const reactFullWidthCellRendererStateless = useMemo8(() => {\n    const res = fullWidthCompDetails?.componentFromFramework && isComponentStateless(fullWidthCompDetails.componentClass);\n    return !!res;\n  }, [fullWidthCompDetails]);\n  const canRefreshFullWidthRef = useRef10(false);\n  useEffect7(() => {\n    canRefreshFullWidthRef.current = reactFullWidthCellRendererStateless && !!fullWidthCompDetails && !!gos.get(\"reactiveCustomComponents\");\n  }, [reactFullWidthCellRendererStateless, fullWidthCompDetails]);\n  const showCellsJsx = () => cellCtrls?.map((cellCtrl) => /* @__PURE__ */ React12.createElement(\n    cellComp_default,\n    {\n      cellCtrl,\n      editingRow: rowCtrl.isEditing(),\n      printLayout: rowCtrl.isPrintLayout(),\n      key: cellCtrl.getInstanceId()\n    }\n  ));\n  const showFullWidthFrameworkJsx = () => {\n    const FullWidthComp = fullWidthCompDetails.componentClass;\n    return /* @__PURE__ */ React12.createElement(React12.Fragment, null, reactFullWidthCellRendererStateless && /* @__PURE__ */ React12.createElement(FullWidthComp, { ...fullWidthCompDetails.params }), !reactFullWidthCellRendererStateless && /* @__PURE__ */ React12.createElement(FullWidthComp, { ...fullWidthCompDetails.params, ref: fullWidthCompRef }));\n  };\n  return /* @__PURE__ */ React12.createElement(\n    \"div\",\n    {\n      ref: setRef2,\n      role: \"row\",\n      style: rowStyles,\n      \"row-index\": rowIndex,\n      \"row-id\": rowId,\n      \"row-business-key\": rowBusinessKey\n    },\n    showCells && showCellsJsx(),\n    showFullWidthFramework && showFullWidthFrameworkJsx()\n  );\n};\nvar rowComp_default = memo10(RowComp);\n\n// packages/ag-grid-react/src/reactUi/rows/rowContainerComp.tsx\nvar RowContainerComp = (params) => {\n  const { context } = useContext11(BeansContext);\n  const { name } = params;\n  const containerOptions = useMemo9(() => _getRowContainerOptions(name), [name]);\n  const eViewport = useRef11(null);\n  const eContainer = useRef11(null);\n  const rowCtrlsRef = useRef11([]);\n  const prevRowCtrlsRef = useRef11([]);\n  const [rowCtrlsOrdered, setRowCtrlsOrdered] = useState13(() => []);\n  const domOrderRef = useRef11(false);\n  const rowContainerCtrlRef = useRef11();\n  const viewportClasses = useMemo9(() => classesList(containerOptions.viewport), [containerOptions]);\n  const containerClasses = useMemo9(() => classesList(containerOptions.container), [containerOptions]);\n  const isCenter = containerOptions.type === \"center\";\n  const topLevelRef = isCenter ? eViewport : eContainer;\n  reactComment_default(\" AG Row Container \" + name + \" \", topLevelRef);\n  const areElementsReady = useCallback11(() => {\n    if (isCenter) {\n      return eViewport.current != null && eContainer.current != null;\n    }\n    return eContainer.current != null;\n  }, []);\n  const areElementsRemoved = useCallback11(() => {\n    if (isCenter) {\n      return eViewport.current == null && eContainer.current == null;\n    }\n    return eContainer.current == null;\n  }, []);\n  const setRef2 = useCallback11(() => {\n    if (areElementsRemoved()) {\n      context.destroyBean(rowContainerCtrlRef.current);\n      rowContainerCtrlRef.current = null;\n    }\n    if (areElementsReady()) {\n      const updateRowCtrlsOrdered = (useFlushSync) => {\n        const next = getNextValueIfDifferent(\n          prevRowCtrlsRef.current,\n          rowCtrlsRef.current,\n          domOrderRef.current\n        );\n        if (next !== prevRowCtrlsRef.current) {\n          prevRowCtrlsRef.current = next;\n          agFlushSync(useFlushSync, () => setRowCtrlsOrdered(next));\n        }\n      };\n      const compProxy = {\n        setHorizontalScroll: (offset) => {\n          if (eViewport.current) {\n            eViewport.current.scrollLeft = offset;\n          }\n        },\n        setViewportHeight: (height) => {\n          if (eViewport.current) {\n            eViewport.current.style.height = height;\n          }\n        },\n        setRowCtrls: ({ rowCtrls, useFlushSync }) => {\n          const useFlush = !!useFlushSync && rowCtrlsRef.current.length > 0 && rowCtrls.length > 0;\n          rowCtrlsRef.current = rowCtrls;\n          updateRowCtrlsOrdered(useFlush);\n        },\n        setDomOrder: (domOrder) => {\n          if (domOrderRef.current != domOrder) {\n            domOrderRef.current = domOrder;\n            updateRowCtrlsOrdered(false);\n          }\n        },\n        setContainerWidth: (width) => {\n          if (eContainer.current) {\n            eContainer.current.style.width = width;\n          }\n        },\n        setOffsetTop: (offset) => {\n          if (eContainer.current) {\n            eContainer.current.style.transform = `translateY(${offset})`;\n          }\n        }\n      };\n      rowContainerCtrlRef.current = context.createBean(new RowContainerCtrl(name));\n      rowContainerCtrlRef.current.setComp(compProxy, eContainer.current, eViewport.current);\n    }\n  }, [areElementsReady, areElementsRemoved]);\n  const setContainerRef = useCallback11(\n    (e) => {\n      eContainer.current = e;\n      setRef2();\n    },\n    [setRef2]\n  );\n  const setViewportRef = useCallback11(\n    (e) => {\n      eViewport.current = e;\n      setRef2();\n    },\n    [setRef2]\n  );\n  const buildContainer = () => /* @__PURE__ */ React13.createElement(\"div\", { className: containerClasses, ref: setContainerRef, role: \"rowgroup\" }, rowCtrlsOrdered.map((rowCtrl) => /* @__PURE__ */ React13.createElement(\n    rowComp_default,\n    {\n      rowCtrl,\n      containerType: containerOptions.type,\n      key: rowCtrl.getInstanceId()\n    }\n  )));\n  return /* @__PURE__ */ React13.createElement(React13.Fragment, null, isCenter ? /* @__PURE__ */ React13.createElement(\"div\", { className: viewportClasses, ref: setViewportRef, role: \"presentation\" }, buildContainer()) : buildContainer());\n};\nvar rowContainerComp_default = memo11(RowContainerComp);\n\n// packages/ag-grid-react/src/reactUi/gridBodyComp.tsx\nvar GridBodyComp = () => {\n  const { context, resizeObserverService } = useContext12(BeansContext);\n  const [rowAnimationClass, setRowAnimationClass] = useState14(\"\");\n  const [topHeight, setTopHeight] = useState14(0);\n  const [bottomHeight, setBottomHeight] = useState14(0);\n  const [stickyTopHeight, setStickyTopHeight] = useState14(\"0px\");\n  const [stickyTopTop, setStickyTopTop] = useState14(\"0px\");\n  const [stickyTopWidth, setStickyTopWidth] = useState14(\"100%\");\n  const [stickyBottomHeight, setStickyBottomHeight] = useState14(\"0px\");\n  const [stickyBottomBottom, setStickyBottomBottom] = useState14(\"0px\");\n  const [stickyBottomWidth, setStickyBottomWidth] = useState14(\"100%\");\n  const [topDisplay, setTopDisplay] = useState14(\"\");\n  const [bottomDisplay, setBottomDisplay] = useState14(\"\");\n  const [forceVerticalScrollClass, setForceVerticalScrollClass] = useState14(null);\n  const [topAndBottomOverflowY, setTopAndBottomOverflowY] = useState14(\"\");\n  const [cellSelectableCss, setCellSelectableCss] = useState14(null);\n  const [layoutClass, setLayoutClass] = useState14(\"ag-layout-normal\");\n  const cssClassManager = useRef12();\n  if (!cssClassManager.current) {\n    cssClassManager.current = new CssClassManager4(() => eRoot.current);\n  }\n  const eRoot = useRef12(null);\n  const eTop = useRef12(null);\n  const eStickyTop = useRef12(null);\n  const eStickyBottom = useRef12(null);\n  const eBody = useRef12(null);\n  const eBodyViewport = useRef12(null);\n  const eBottom = useRef12(null);\n  const beansToDestroy = useRef12([]);\n  const destroyFuncs = useRef12([]);\n  reactComment_default(\" AG Grid Body \", eRoot);\n  reactComment_default(\" AG Pinned Top \", eTop);\n  reactComment_default(\" AG Sticky Top \", eStickyTop);\n  reactComment_default(\" AG Middle \", eBodyViewport);\n  reactComment_default(\" AG Pinned Bottom \", eBottom);\n  const setRef2 = useCallback12((e) => {\n    eRoot.current = e;\n    if (!eRoot.current) {\n      context.destroyBeans(beansToDestroy.current);\n      destroyFuncs.current.forEach((f) => f());\n      beansToDestroy.current = [];\n      destroyFuncs.current = [];\n      return;\n    }\n    if (!context) {\n      return;\n    }\n    const attachToDom = (eParent, eChild) => {\n      eParent.appendChild(eChild);\n      destroyFuncs.current.push(() => eParent.removeChild(eChild));\n    };\n    const newComp = (compClass) => {\n      const comp = context.createBean(new compClass());\n      beansToDestroy.current.push(comp);\n      return comp;\n    };\n    const addComp = (eParent, compClass, comment) => {\n      attachToDom(eParent, document.createComment(comment));\n      attachToDom(eParent, newComp(compClass).getGui());\n    };\n    addComp(eRoot.current, FakeHScrollComp, \" AG Fake Horizontal Scroll \");\n    addComp(eRoot.current, OverlayWrapperComponent, \" AG Overlay Wrapper \");\n    if (eBody.current) {\n      addComp(eBody.current, FakeVScrollComp, \" AG Fake Vertical Scroll \");\n    }\n    const compProxy = {\n      setRowAnimationCssOnBodyViewport: setRowAnimationClass,\n      setColumnCount: (count) => {\n        if (eRoot.current) {\n          _setAriaColCount(eRoot.current, count);\n        }\n      },\n      setRowCount: (count) => {\n        if (eRoot.current) {\n          _setAriaRowCount(eRoot.current, count);\n        }\n      },\n      setTopHeight,\n      setBottomHeight,\n      setStickyTopHeight,\n      setStickyTopTop,\n      setStickyTopWidth,\n      setTopDisplay,\n      setBottomDisplay,\n      setColumnMovingCss: (cssClass, flag) => cssClassManager.current.addOrRemoveCssClass(cssClass, flag),\n      updateLayoutClasses: setLayoutClass,\n      setAlwaysVerticalScrollClass: setForceVerticalScrollClass,\n      setPinnedTopBottomOverflowY: setTopAndBottomOverflowY,\n      setCellSelectableCss: (cssClass, flag) => setCellSelectableCss(flag ? cssClass : null),\n      setBodyViewportWidth: (width) => {\n        if (eBodyViewport.current) {\n          eBodyViewport.current.style.width = width;\n        }\n      },\n      registerBodyViewportResizeListener: (listener) => {\n        if (eBodyViewport.current) {\n          const unsubscribeFromResize = resizeObserverService.observeResize(eBodyViewport.current, listener);\n          destroyFuncs.current.push(() => unsubscribeFromResize());\n        }\n      },\n      setStickyBottomHeight,\n      setStickyBottomBottom,\n      setStickyBottomWidth\n    };\n    const ctrl = context.createBean(new GridBodyCtrl());\n    beansToDestroy.current.push(ctrl);\n    ctrl.setComp(\n      compProxy,\n      eRoot.current,\n      eBodyViewport.current,\n      eTop.current,\n      eBottom.current,\n      eStickyTop.current,\n      eStickyBottom.current\n    );\n  }, []);\n  const rootClasses = useMemo10(() => classesList(\"ag-root\", \"ag-unselectable\", layoutClass), [layoutClass]);\n  const bodyViewportClasses = useMemo10(\n    () => classesList(\n      \"ag-body-viewport\",\n      rowAnimationClass,\n      layoutClass,\n      forceVerticalScrollClass,\n      cellSelectableCss\n    ),\n    [rowAnimationClass, layoutClass, forceVerticalScrollClass, cellSelectableCss]\n  );\n  const bodyClasses = useMemo10(() => classesList(\"ag-body\", layoutClass), [layoutClass]);\n  const topClasses = useMemo10(() => classesList(\"ag-floating-top\", cellSelectableCss), [cellSelectableCss]);\n  const stickyTopClasses = useMemo10(() => classesList(\"ag-sticky-top\", cellSelectableCss), [cellSelectableCss]);\n  const stickyBottomClasses = useMemo10(\n    () => classesList(\"ag-sticky-bottom\", stickyBottomHeight === \"0px\" ? \"ag-hidden\" : null, cellSelectableCss),\n    [cellSelectableCss, stickyBottomHeight]\n  );\n  const bottomClasses = useMemo10(() => classesList(\"ag-floating-bottom\", cellSelectableCss), [cellSelectableCss]);\n  const topStyle = useMemo10(\n    () => ({\n      height: topHeight,\n      minHeight: topHeight,\n      display: topDisplay,\n      overflowY: topAndBottomOverflowY\n    }),\n    [topHeight, topDisplay, topAndBottomOverflowY]\n  );\n  const stickyTopStyle = useMemo10(\n    () => ({\n      height: stickyTopHeight,\n      top: stickyTopTop,\n      width: stickyTopWidth\n    }),\n    [stickyTopHeight, stickyTopTop, stickyTopWidth]\n  );\n  const stickyBottomStyle = useMemo10(\n    () => ({\n      height: stickyBottomHeight,\n      bottom: stickyBottomBottom,\n      width: stickyBottomWidth\n    }),\n    [stickyBottomHeight, stickyBottomBottom, stickyBottomWidth]\n  );\n  const bottomStyle = useMemo10(\n    () => ({\n      height: bottomHeight,\n      minHeight: bottomHeight,\n      display: bottomDisplay,\n      overflowY: topAndBottomOverflowY\n    }),\n    [bottomHeight, bottomDisplay, topAndBottomOverflowY]\n  );\n  const createRowContainer = (container) => /* @__PURE__ */ React14.createElement(rowContainerComp_default, { name: container, key: `${container}-container` });\n  const createSection = ({\n    section,\n    children,\n    className,\n    style\n  }) => /* @__PURE__ */ React14.createElement(\"div\", { ref: section, className, role: \"presentation\", style }, children.map(createRowContainer));\n  return /* @__PURE__ */ React14.createElement(\"div\", { ref: setRef2, className: rootClasses, role: \"treegrid\" }, /* @__PURE__ */ React14.createElement(gridHeaderComp_default, null), createSection({\n    section: eTop,\n    className: topClasses,\n    style: topStyle,\n    children: [\"topLeft\", \"topCenter\", \"topRight\", \"topFullWidth\"]\n  }), /* @__PURE__ */ React14.createElement(\"div\", { className: bodyClasses, ref: eBody, role: \"presentation\" }, createSection({\n    section: eBodyViewport,\n    className: bodyViewportClasses,\n    children: [\"left\", \"center\", \"right\", \"fullWidth\"]\n  })), createSection({\n    section: eStickyTop,\n    className: stickyTopClasses,\n    style: stickyTopStyle,\n    children: [\"stickyTopLeft\", \"stickyTopCenter\", \"stickyTopRight\", \"stickyTopFullWidth\"]\n  }), createSection({\n    section: eStickyBottom,\n    className: stickyBottomClasses,\n    style: stickyBottomStyle,\n    children: [\"stickyBottomLeft\", \"stickyBottomCenter\", \"stickyBottomRight\", \"stickyBottomFullWidth\"]\n  }), createSection({\n    section: eBottom,\n    className: bottomClasses,\n    style: bottomStyle,\n    children: [\"bottomLeft\", \"bottomCenter\", \"bottomRight\", \"bottomFullWidth\"]\n  }));\n};\nvar gridBodyComp_default = memo12(GridBodyComp);\n\n// packages/ag-grid-react/src/reactUi/tabGuardComp.tsx\nimport { TabGuardClassNames, TabGuardCtrl } from \"ag-grid-community\";\nimport React15, { forwardRef as forwardRef2, memo as memo13, useCallback as useCallback13, useContext as useContext13, useImperativeHandle as useImperativeHandle2, useRef as useRef13 } from \"react\";\nvar TabGuardCompRef = (props, forwardRef4) => {\n  const { children, eFocusableElement, onTabKeyDown, gridCtrl, forceFocusOutWhenTabGuardsAreEmpty } = props;\n  const { context } = useContext13(BeansContext);\n  const topTabGuardRef = useRef13(null);\n  const bottomTabGuardRef = useRef13(null);\n  const tabGuardCtrlRef = useRef13();\n  const setTabIndex = (value) => {\n    const processedValue = value == null ? void 0 : parseInt(value, 10).toString();\n    [topTabGuardRef, bottomTabGuardRef].forEach((tabGuard) => {\n      if (processedValue === void 0) {\n        tabGuard.current?.removeAttribute(\"tabindex\");\n      } else {\n        tabGuard.current?.setAttribute(\"tabindex\", processedValue);\n      }\n    });\n  };\n  useImperativeHandle2(forwardRef4, () => ({\n    forceFocusOutOfContainer(up) {\n      tabGuardCtrlRef.current?.forceFocusOutOfContainer(up);\n    }\n  }));\n  const setupCtrl = useCallback13(() => {\n    if (!topTabGuardRef.current && !bottomTabGuardRef.current) {\n      context.destroyBean(tabGuardCtrlRef.current);\n      tabGuardCtrlRef.current = null;\n      return;\n    }\n    if (topTabGuardRef.current && bottomTabGuardRef.current) {\n      const compProxy = {\n        setTabIndex\n      };\n      tabGuardCtrlRef.current = context.createBean(\n        new TabGuardCtrl({\n          comp: compProxy,\n          eTopGuard: topTabGuardRef.current,\n          eBottomGuard: bottomTabGuardRef.current,\n          eFocusableElement,\n          onTabKeyDown,\n          forceFocusOutWhenTabGuardsAreEmpty,\n          focusInnerElement: (fromBottom) => gridCtrl.focusInnerElement(fromBottom)\n        })\n      );\n    }\n  }, []);\n  const setTopRef = useCallback13(\n    (e) => {\n      topTabGuardRef.current = e;\n      setupCtrl();\n    },\n    [setupCtrl]\n  );\n  const setBottomRef = useCallback13(\n    (e) => {\n      bottomTabGuardRef.current = e;\n      setupCtrl();\n    },\n    [setupCtrl]\n  );\n  const createTabGuard = (side) => {\n    const className = side === \"top\" ? TabGuardClassNames.TAB_GUARD_TOP : TabGuardClassNames.TAB_GUARD_BOTTOM;\n    return /* @__PURE__ */ React15.createElement(\n      \"div\",\n      {\n        className: `${TabGuardClassNames.TAB_GUARD} ${className}`,\n        role: \"presentation\",\n        ref: side === \"top\" ? setTopRef : setBottomRef\n      }\n    );\n  };\n  return /* @__PURE__ */ React15.createElement(React15.Fragment, null, createTabGuard(\"top\"), children, createTabGuard(\"bottom\"));\n};\nvar TabGuardComp = forwardRef2(TabGuardCompRef);\nvar tabGuardComp_default = memo13(TabGuardComp);\n\n// packages/ag-grid-react/src/reactUi/gridComp.tsx\nvar GridComp = ({ context }) => {\n  const [rtlClass, setRtlClass] = useState15(\"\");\n  const [layoutClass, setLayoutClass] = useState15(\"\");\n  const [cursor, setCursor] = useState15(null);\n  const [userSelect, setUserSelect] = useState15(null);\n  const [initialised, setInitialised] = useState15(false);\n  const [tabGuardReady, setTabGuardReady] = useState15();\n  const gridCtrlRef = useRef14(null);\n  const eRootWrapperRef = useRef14(null);\n  const tabGuardRef = useRef14();\n  const [eGridBodyParent, setGridBodyParent] = useState15(null);\n  const focusInnerElementRef = useRef14(() => void 0);\n  const paginationCompRef = useRef14();\n  const focusableContainersRef = useRef14([]);\n  const onTabKeyDown = useCallback14(() => void 0, []);\n  const beans = useMemo11(() => {\n    if (context.isDestroyed()) {\n      return null;\n    }\n    return context.getBeans();\n  }, [context]);\n  reactComment_default(\" AG Grid \", eRootWrapperRef);\n  const setRef2 = useCallback14((e) => {\n    eRootWrapperRef.current = e;\n    if (!eRootWrapperRef.current) {\n      context.destroyBean(gridCtrlRef.current);\n      gridCtrlRef.current = null;\n      return;\n    }\n    if (context.isDestroyed()) {\n      return;\n    }\n    gridCtrlRef.current = context.createBean(new GridCtrl());\n    const gridCtrl = gridCtrlRef.current;\n    focusInnerElementRef.current = gridCtrl.focusInnerElement.bind(gridCtrl);\n    const compProxy = {\n      destroyGridUi: () => {\n      },\n      // do nothing, as framework users destroy grid by removing the comp\n      setRtlClass,\n      forceFocusOutOfContainer: (up) => {\n        if (!up && paginationCompRef.current?.isDisplayed()) {\n          paginationCompRef.current.forceFocusOutOfContainer(up);\n          return;\n        }\n        tabGuardRef.current?.forceFocusOutOfContainer(up);\n      },\n      updateLayoutClasses: setLayoutClass,\n      getFocusableContainers: () => {\n        const comps = [];\n        const gridBodyCompEl = eRootWrapperRef.current?.querySelector(\".ag-root\");\n        if (gridBodyCompEl) {\n          comps.push({ getGui: () => gridBodyCompEl });\n        }\n        focusableContainersRef.current.forEach((comp) => {\n          if (comp.isDisplayed()) {\n            comps.push(comp);\n          }\n        });\n        return comps;\n      },\n      setCursor,\n      setUserSelect\n    };\n    gridCtrl.setComp(compProxy, eRootWrapperRef.current, eRootWrapperRef.current);\n    setInitialised(true);\n  }, []);\n  useEffect8(() => {\n    if (!tabGuardReady || !beans || !gridCtrlRef.current || !eGridBodyParent || !eRootWrapperRef.current) {\n      return;\n    }\n    const gridCtrl = gridCtrlRef.current;\n    const beansToDestroy = [];\n    const {\n      watermarkSelector,\n      paginationSelector,\n      sideBarSelector,\n      statusBarSelector,\n      gridHeaderDropZonesSelector\n    } = gridCtrl.getOptionalSelectors();\n    const additionalEls = [];\n    const eRootWrapper = eRootWrapperRef.current;\n    if (gridHeaderDropZonesSelector) {\n      const headerDropZonesComp = context.createBean(new gridHeaderDropZonesSelector.component());\n      const eGui = headerDropZonesComp.getGui();\n      eRootWrapper.insertAdjacentElement(\"afterbegin\", eGui);\n      additionalEls.push(eGui);\n      beansToDestroy.push(headerDropZonesComp);\n    }\n    if (sideBarSelector) {\n      const sideBarComp = context.createBean(new sideBarSelector.component());\n      const eGui = sideBarComp.getGui();\n      const bottomTabGuard = eGridBodyParent.querySelector(\".ag-tab-guard-bottom\");\n      if (bottomTabGuard) {\n        bottomTabGuard.insertAdjacentElement(\"beforebegin\", eGui);\n        additionalEls.push(eGui);\n      }\n      beansToDestroy.push(sideBarComp);\n      focusableContainersRef.current.push(sideBarComp);\n    }\n    const addComponentToDom = (component) => {\n      const comp = context.createBean(new component());\n      const eGui = comp.getGui();\n      eRootWrapper.insertAdjacentElement(\"beforeend\", eGui);\n      additionalEls.push(eGui);\n      beansToDestroy.push(comp);\n      return comp;\n    };\n    if (statusBarSelector) {\n      addComponentToDom(statusBarSelector.component);\n    }\n    if (paginationSelector) {\n      const paginationComp = addComponentToDom(paginationSelector.component);\n      paginationCompRef.current = paginationComp;\n      focusableContainersRef.current.push(paginationComp);\n    }\n    if (watermarkSelector) {\n      addComponentToDom(watermarkSelector.component);\n    }\n    return () => {\n      context.destroyBeans(beansToDestroy);\n      additionalEls.forEach((el) => {\n        if (el.parentElement) {\n          el.parentElement.removeChild(el);\n        }\n      });\n    };\n  }, [tabGuardReady, eGridBodyParent, beans]);\n  const rootWrapperClasses = useMemo11(\n    () => classesList(\"ag-root-wrapper\", rtlClass, layoutClass),\n    [rtlClass, layoutClass]\n  );\n  const rootWrapperBodyClasses = useMemo11(\n    () => classesList(\"ag-root-wrapper-body\", \"ag-focus-managed\", layoutClass),\n    [layoutClass]\n  );\n  const topStyle = useMemo11(\n    () => ({\n      userSelect: userSelect != null ? userSelect : \"\",\n      WebkitUserSelect: userSelect != null ? userSelect : \"\",\n      cursor: cursor != null ? cursor : \"\"\n    }),\n    [userSelect, cursor]\n  );\n  const setTabGuardCompRef = useCallback14((ref) => {\n    tabGuardRef.current = ref;\n    setTabGuardReady(ref !== null);\n  }, []);\n  return /* @__PURE__ */ React16.createElement(\"div\", { ref: setRef2, className: rootWrapperClasses, style: topStyle, role: \"presentation\" }, /* @__PURE__ */ React16.createElement(\"div\", { className: rootWrapperBodyClasses, ref: setGridBodyParent, role: \"presentation\" }, initialised && eGridBodyParent && beans && /* @__PURE__ */ React16.createElement(BeansContext.Provider, { value: beans }, /* @__PURE__ */ React16.createElement(\n    tabGuardComp_default,\n    {\n      ref: setTabGuardCompRef,\n      eFocusableElement: eGridBodyParent,\n      onTabKeyDown,\n      gridCtrl: gridCtrlRef.current,\n      forceFocusOutWhenTabGuardsAreEmpty: true\n    },\n    // we wait for initialised before rending the children, so GridComp has created and registered with it's\n    // GridCtrl before we create the child GridBodyComp. Otherwise the GridBodyComp would initialise first,\n    // before we have set the the Layout CSS classes, causing the GridBodyComp to render rows to a grid that\n    // doesn't have it's height specified, which would result if all the rows getting rendered (and if many rows,\n    // hangs the UI)\n    /* @__PURE__ */ React16.createElement(gridBodyComp_default, null)\n  ))));\n};\nvar gridComp_default = memo14(GridComp);\n\n// packages/ag-grid-react/src/reactUi/renderStatusService.tsx\nimport { BeanStub } from \"ag-grid-community\";\nvar RenderStatusService = class extends BeanStub {\n  wireBeans(beans) {\n    this.ctrlsService = beans.ctrlsService;\n  }\n  areHeaderCellsRendered() {\n    return this.ctrlsService.getHeaderRowContainerCtrls().every((container) => container.getAllCtrls().every((ctrl) => ctrl.areCellsRendered()));\n  }\n};\n\n// packages/ag-grid-react/src/reactUi/agGridReactUi.tsx\nvar AgGridReactUi = (props) => {\n  const apiRef = useRef15();\n  const eGui = useRef15(null);\n  const portalManager = useRef15(null);\n  const destroyFuncs = useRef15([]);\n  const whenReadyFuncs = useRef15([]);\n  const prevProps = useRef15(props);\n  const frameworkOverridesRef = useRef15();\n  const ready = useRef15(false);\n  const [context, setContext] = useState16(void 0);\n  const [, setPortalRefresher] = useState16(0);\n  const setRef2 = useCallback15((e) => {\n    eGui.current = e;\n    if (!eGui.current) {\n      destroyFuncs.current.forEach((f) => f());\n      destroyFuncs.current.length = 0;\n      return;\n    }\n    const modules = props.modules || [];\n    if (!portalManager.current) {\n      portalManager.current = new PortalManager(\n        () => setPortalRefresher((prev) => prev + 1),\n        props.componentWrappingElement,\n        props.maxComponentCreationTimeMs\n      );\n      destroyFuncs.current.push(() => {\n        portalManager.current?.destroy();\n        portalManager.current = null;\n      });\n    }\n    const mergedGridOps = _combineAttributesAndGridOptions(props.gridOptions, props);\n    const processQueuedUpdates = () => {\n      if (ready.current) {\n        const getFn = () => frameworkOverridesRef.current?.shouldQueueUpdates() ? void 0 : whenReadyFuncs.current.shift();\n        let fn = getFn();\n        while (fn) {\n          fn();\n          fn = getFn();\n        }\n      }\n    };\n    const frameworkOverrides = isReact17Minus() ? new React17MinusFrameworkOverrides(processQueuedUpdates) : new ReactFrameworkOverrides();\n    frameworkOverridesRef.current = frameworkOverrides;\n    const renderStatusService = new RenderStatusService();\n    const gridParams = {\n      providedBeanInstances: {\n        frameworkComponentWrapper: new ReactFrameworkComponentWrapper(\n          portalManager.current,\n          mergedGridOps.reactiveCustomComponents ?? true\n        ),\n        renderStatusService\n      },\n      modules,\n      frameworkOverrides\n    };\n    const createUiCallback = (context2) => {\n      setContext(context2);\n      context2.createBean(renderStatusService);\n      destroyFuncs.current.push(() => {\n        context2.destroy();\n      });\n      const ctrlsService = context2.getBean(\"ctrlsService\");\n      ctrlsService.whenReady(() => {\n        if (context2.isDestroyed()) {\n          return;\n        }\n        const api = apiRef.current;\n        if (api) {\n          if (props.setGridApi) {\n            props.setGridApi(api);\n          }\n        }\n      });\n    };\n    const acceptChangesCallback = (context2) => {\n      const ctrlsService = context2.getBean(\"ctrlsService\");\n      ctrlsService.whenReady(() => {\n        whenReadyFuncs.current.forEach((f) => f());\n        whenReadyFuncs.current.length = 0;\n        ready.current = true;\n      });\n    };\n    const gridCoreCreator = new GridCoreCreator();\n    apiRef.current = gridCoreCreator.create(\n      eGui.current,\n      mergedGridOps,\n      createUiCallback,\n      acceptChangesCallback,\n      gridParams\n    );\n  }, []);\n  const style = useMemo12(() => {\n    return {\n      height: \"100%\",\n      ...props.containerStyle || {}\n    };\n  }, [props.containerStyle]);\n  const processWhenReady = useCallback15((func) => {\n    if (ready.current && !frameworkOverridesRef.current?.shouldQueueUpdates()) {\n      func();\n    } else {\n      whenReadyFuncs.current.push(func);\n    }\n  }, []);\n  useEffect9(() => {\n    const changes = extractGridPropertyChanges(prevProps.current, props);\n    prevProps.current = props;\n    processWhenReady(() => {\n      if (apiRef.current) {\n        _processOnChange(changes, apiRef.current);\n      }\n    });\n  }, [props]);\n  return /* @__PURE__ */ React17.createElement(\"div\", { style, className: props.className, ref: setRef2 }, context && !context.isDestroyed() ? /* @__PURE__ */ React17.createElement(gridComp_default, { context }) : null, portalManager.current?.getPortals() ?? null);\n};\nfunction extractGridPropertyChanges(prevProps, nextProps) {\n  const changes = {};\n  Object.keys(nextProps).forEach((propKey) => {\n    const propValue = nextProps[propKey];\n    if (prevProps[propKey] !== propValue) {\n      changes[propKey] = propValue;\n    }\n  });\n  return changes;\n}\nvar ReactFrameworkComponentWrapper = class extends BaseComponentWrapper {\n  constructor(parent, reactiveCustomComponents) {\n    super();\n    this.parent = parent;\n    this.reactiveCustomComponents = reactiveCustomComponents;\n  }\n  createWrapper(UserReactComponent, componentType) {\n    if (this.reactiveCustomComponents) {\n      const getComponentClass = (propertyName) => {\n        switch (propertyName) {\n          case \"filter\":\n            return FilterComponentWrapper;\n          case \"floatingFilterComponent\":\n            return FloatingFilterComponentWrapper;\n          case \"dateComponent\":\n            return DateComponentWrapper;\n          case \"loadingOverlayComponent\":\n            return LoadingOverlayComponentWrapper;\n          case \"noRowsOverlayComponent\":\n            return NoRowsOverlayComponentWrapper;\n          case \"statusPanel\":\n            return StatusPanelComponentWrapper;\n          case \"toolPanel\":\n            return ToolPanelComponentWrapper;\n          case \"menuItem\":\n            return MenuItemComponentWrapper;\n          case \"cellRenderer\":\n            return CellRendererComponentWrapper;\n        }\n      };\n      const ComponentClass = getComponentClass(componentType.propertyName);\n      if (ComponentClass) {\n        return new ComponentClass(UserReactComponent, this.parent, componentType);\n      }\n    } else {\n      switch (componentType.propertyName) {\n        case \"filter\":\n        case \"floatingFilterComponent\":\n        case \"dateComponent\":\n        case \"loadingOverlayComponent\":\n        case \"noRowsOverlayComponent\":\n        case \"statusPanel\":\n        case \"toolPanel\":\n        case \"menuItem\":\n        case \"cellRenderer\":\n          warnReactiveCustomComponents();\n          break;\n      }\n    }\n    const suppressFallbackMethods = !componentType.cellRenderer && componentType.propertyName !== \"toolPanel\";\n    return new ReactComponent(UserReactComponent, this.parent, componentType, suppressFallbackMethods);\n  }\n};\nvar DetailCellRenderer = forwardRef3((props, ref) => {\n  const { ctrlsFactory, context, gos, resizeObserverService, rowModel } = useContext14(BeansContext);\n  const [cssClasses, setCssClasses] = useState16(() => new CssClasses());\n  const [gridCssClasses, setGridCssClasses] = useState16(() => new CssClasses());\n  const [detailGridOptions, setDetailGridOptions] = useState16();\n  const [detailRowData, setDetailRowData] = useState16();\n  const ctrlRef = useRef15();\n  const eGuiRef = useRef15(null);\n  const resizeObserverDestroyFunc = useRef15();\n  const parentModules = useMemo12(() => ModuleRegistry.__getGridRegisteredModules(props.api.getGridId()), [props]);\n  const topClassName = useMemo12(() => cssClasses.toString() + \" ag-details-row\", [cssClasses]);\n  const gridClassName = useMemo12(() => gridCssClasses.toString() + \" ag-details-grid\", [gridCssClasses]);\n  if (ref) {\n    useImperativeHandle3(ref, () => ({\n      refresh() {\n        return ctrlRef.current?.refresh() ?? false;\n      }\n    }));\n  }\n  if (props.template) {\n    _warnOnce3(\n      \"detailCellRendererParams.template is not supported by AG Grid React. To change the template, provide a Custom Detail Cell Renderer. See https://ag-grid.com/react-data-grid/master-detail-custom-detail/\"\n    );\n  }\n  const setRef2 = useCallback15((e) => {\n    eGuiRef.current = e;\n    if (!eGuiRef.current) {\n      context.destroyBean(ctrlRef.current);\n      if (resizeObserverDestroyFunc.current) {\n        resizeObserverDestroyFunc.current();\n      }\n      return;\n    }\n    const compProxy = {\n      addOrRemoveCssClass: (name, on) => setCssClasses((prev) => prev.setClass(name, on)),\n      addOrRemoveDetailGridCssClass: (name, on) => setGridCssClasses((prev) => prev.setClass(name, on)),\n      setDetailGrid: (gridOptions) => setDetailGridOptions(gridOptions),\n      setRowData: (rowData) => setDetailRowData(rowData),\n      getGui: () => eGuiRef.current\n    };\n    const ctrl = ctrlsFactory.getInstance(\"detailCellRenderer\");\n    if (!ctrl) {\n      return;\n    }\n    context.createBean(ctrl);\n    ctrl.init(compProxy, props);\n    ctrlRef.current = ctrl;\n    if (gos.get(\"detailRowAutoHeight\")) {\n      const checkRowSizeFunc = () => {\n        if (eGuiRef.current == null) {\n          return;\n        }\n        const clientHeight = eGuiRef.current.clientHeight;\n        if (clientHeight != null && clientHeight > 0) {\n          const updateRowHeightFunc = () => {\n            props.node.setRowHeight(clientHeight);\n            if (rowModel.getType() === \"clientSide\") {\n              rowModel.onRowHeightChanged();\n            } else if (rowModel.getType() === \"serverSide\") {\n              rowModel.onRowHeightChanged();\n            }\n          };\n          setTimeout(updateRowHeightFunc, 0);\n        }\n      };\n      resizeObserverDestroyFunc.current = resizeObserverService.observeResize(eGuiRef.current, checkRowSizeFunc);\n      checkRowSizeFunc();\n    }\n  }, []);\n  const setGridApi = useCallback15((api) => {\n    ctrlRef.current?.registerDetailWithMaster(api);\n  }, []);\n  return /* @__PURE__ */ React17.createElement(\"div\", { className: topClassName, ref: setRef2 }, detailGridOptions && /* @__PURE__ */ React17.createElement(\n    AgGridReactUi,\n    {\n      className: gridClassName,\n      ...detailGridOptions,\n      modules: parentModules,\n      rowData: detailRowData,\n      setGridApi\n    }\n  ));\n});\nvar ReactFrameworkOverrides = class extends VanillaFrameworkOverrides {\n  constructor() {\n    super(\"react\");\n    this.frameworkComponents = {\n      agGroupCellRenderer: groupCellRenderer_default,\n      agGroupRowRenderer: groupCellRenderer_default,\n      agDetailCellRenderer: DetailCellRenderer\n    };\n    this.wrapIncoming = (callback, source) => {\n      if (source === \"ensureVisible\") {\n        return runWithoutFlushSync(callback);\n      }\n      return callback();\n    };\n    this.renderingEngine = \"react\";\n  }\n  frameworkComponent(name) {\n    return this.frameworkComponents[name];\n  }\n  isFrameworkComponent(comp) {\n    if (!comp) {\n      return false;\n    }\n    const prototype = comp.prototype;\n    const isJsComp = prototype && \"getGui\" in prototype;\n    return !isJsComp;\n  }\n  shouldQueueUpdates() {\n    return false;\n  }\n  getLockOnRefreshError() {\n    return ` This error can also occur if using 'ReactDOM.render' instead of 'createRoot'. If so, please upgrade to 'createRoot'.`;\n  }\n};\nvar React17MinusFrameworkOverrides = class extends ReactFrameworkOverrides {\n  constructor(processQueuedUpdates) {\n    super();\n    this.processQueuedUpdates = processQueuedUpdates;\n    this.queueUpdates = false;\n  }\n  getLockOnRefresh() {\n    this.queueUpdates = true;\n  }\n  releaseLockOnRefresh() {\n    this.queueUpdates = false;\n    this.processQueuedUpdates();\n  }\n  shouldQueueUpdates() {\n    return this.queueUpdates;\n  }\n  getLockOnRefreshError() {\n    return \"\";\n  }\n};\n\n// packages/ag-grid-react/src/agGridReact.tsx\nvar AgGridReact = class extends Component {\n  constructor() {\n    super(...arguments);\n    this.apiListeners = [];\n    this.setGridApi = (api) => {\n      this.api = api;\n      this.apiListeners.forEach((listener) => listener(api));\n    };\n  }\n  registerApiListener(listener) {\n    this.apiListeners.push(listener);\n  }\n  componentWillUnmount() {\n    this.apiListeners.length = 0;\n  }\n  render() {\n    return /* @__PURE__ */ React18.createElement(AgGridReactUi, { ...this.props, setGridApi: this.setGridApi });\n  }\n};\n\n// packages/ag-grid-react/src/shared/customComp/interfaces.ts\nimport { useContext as useContext15 } from \"react\";\nfunction useGridCustomComponent(methods) {\n  const { setMethods } = useContext15(CustomContext);\n  setMethods(methods);\n}\nfunction useGridCellEditor(callbacks) {\n  useGridCustomComponent(callbacks);\n}\nfunction useGridDate(callbacks) {\n  return useGridCustomComponent(callbacks);\n}\nfunction useGridFilter(callbacks) {\n  return useGridCustomComponent(callbacks);\n}\nfunction useGridFloatingFilter(callbacks) {\n  useGridCustomComponent(callbacks);\n}\nfunction useGridMenuItem(callbacks) {\n  useGridCustomComponent(callbacks);\n}\nexport {\n  AgGridReact,\n  CustomContext as CustomComponentContext,\n  getInstance,\n  useGridCellEditor,\n  useGridDate,\n  useGridFilter,\n  useGridFloatingFilter,\n  useGridMenuItem,\n  warnReactiveCustomComponents\n};\n", "// community-modules/core/src/localEventService.ts\nvar LocalEventService = class {\n  constructor() {\n    this.allSyncListeners = /* @__PURE__ */ new Map();\n    this.allAsyncListeners = /* @__PURE__ */ new Map();\n    this.globalSyncListeners = /* @__PURE__ */ new Set();\n    this.globalAsyncListeners = /* @__PURE__ */ new Set();\n    this.asyncFunctionsQueue = [];\n    this.scheduled = false;\n    // using an object performs better than a Set for the number of different events we have\n    this.firedEvents = {};\n  }\n  setFrameworkOverrides(frameworkOverrides) {\n    this.frameworkOverrides = frameworkOverrides;\n  }\n  getListeners(eventType, async, autoCreateListenerCollection) {\n    const listenerMap = async ? this.allAsyncListeners : this.allSyncListeners;\n    let listeners = listenerMap.get(eventType);\n    if (!listeners && autoCreateListenerCollection) {\n      listeners = /* @__PURE__ */ new Set();\n      listenerMap.set(eventType, listeners);\n    }\n    return listeners;\n  }\n  noRegisteredListenersExist() {\n    return this.allSyncListeners.size === 0 && this.allAsyncListeners.size === 0 && this.globalSyncListeners.size === 0 && this.globalAsyncListeners.size === 0;\n  }\n  addEventListener(eventType, listener, async = false) {\n    this.getListeners(eventType, async, true).add(listener);\n  }\n  removeEventListener(eventType, listener, async = false) {\n    const listeners = this.getListeners(eventType, async, false);\n    if (!listeners) {\n      return;\n    }\n    listeners.delete(listener);\n    if (listeners.size === 0) {\n      const listenerMap = async ? this.allAsyncListeners : this.allSyncListeners;\n      listenerMap.delete(eventType);\n    }\n  }\n  addGlobalListener(listener, async = false) {\n    (async ? this.globalAsyncListeners : this.globalSyncListeners).add(listener);\n  }\n  removeGlobalListener(listener, async = false) {\n    (async ? this.globalAsyncListeners : this.globalSyncListeners).delete(listener);\n  }\n  dispatchEvent(event) {\n    const agEvent = event;\n    this.dispatchToListeners(agEvent, true);\n    this.dispatchToListeners(agEvent, false);\n    this.firedEvents[agEvent.type] = true;\n  }\n  dispatchEventOnce(event) {\n    if (!this.firedEvents[event.type]) {\n      this.dispatchEvent(event);\n    }\n  }\n  dispatchToListeners(event, async) {\n    const eventType = event.type;\n    if (async && \"event\" in event) {\n      const browserEvent = event.event;\n      if (browserEvent instanceof Event) {\n        event.eventPath = browserEvent.composedPath();\n      }\n    }\n    const processEventListeners = (listeners2, originalListeners2) => listeners2.forEach((listener) => {\n      if (!originalListeners2.has(listener)) {\n        return;\n      }\n      const callback = this.frameworkOverrides ? () => this.frameworkOverrides.wrapIncoming(() => listener(event)) : () => listener(event);\n      if (async) {\n        this.dispatchAsync(callback);\n      } else {\n        callback();\n      }\n    });\n    const originalListeners = this.getListeners(eventType, async, false) ?? /* @__PURE__ */ new Set();\n    const listeners = new Set(originalListeners);\n    if (listeners.size > 0) {\n      processEventListeners(listeners, originalListeners);\n    }\n    const globalListeners = new Set(\n      async ? this.globalAsyncListeners : this.globalSyncListeners\n    );\n    globalListeners.forEach((listener) => {\n      const callback = this.frameworkOverrides ? () => this.frameworkOverrides.wrapIncoming(() => listener(eventType, event)) : () => listener(eventType, event);\n      if (async) {\n        this.dispatchAsync(callback);\n      } else {\n        callback();\n      }\n    });\n  }\n  // this gets called inside the grid's thread, for each event that it\n  // wants to set async. the grid then batches the events into one setTimeout()\n  // because setTimeout() is an expensive operation. ideally we would have\n  // each event in it's own setTimeout(), but we batch for performance.\n  dispatchAsync(func) {\n    this.asyncFunctionsQueue.push(func);\n    if (!this.scheduled) {\n      const flush = () => {\n        window.setTimeout(this.flushAsyncQueue.bind(this), 0);\n      };\n      this.frameworkOverrides ? this.frameworkOverrides.wrapIncoming(flush) : flush();\n      this.scheduled = true;\n    }\n  }\n  // this happens in the next VM turn only, and empties the queue of events\n  flushAsyncQueue() {\n    this.scheduled = false;\n    const queueCopy = this.asyncFunctionsQueue.slice();\n    this.asyncFunctionsQueue = [];\n    queueCopy.forEach((func) => func());\n  }\n};\n\n// community-modules/core/src/utils/array.ts\nfunction _existsAndNotEmpty(value) {\n  return value != null && value.length > 0;\n}\nfunction _last(arr) {\n  if (!arr || !arr.length) {\n    return;\n  }\n  return arr[arr.length - 1];\n}\nfunction _areEqual(a, b, comparator) {\n  if (a == null && b == null) {\n    return true;\n  }\n  return a != null && b != null && a.length === b.length && a.every((value, index) => comparator ? comparator(value, b[index]) : b[index] === value);\n}\nfunction _shallowCompare(arr1, arr2) {\n  return _areEqual(arr1, arr2);\n}\nfunction _sortNumerically(array) {\n  return array.sort((a, b) => a - b);\n}\nfunction _removeRepeatsFromArray(array, object) {\n  if (!array) {\n    return;\n  }\n  for (let index = array.length - 2; index >= 0; index--) {\n    const thisOneMatches = array[index] === object;\n    const nextOneMatches = array[index + 1] === object;\n    if (thisOneMatches && nextOneMatches) {\n      array.splice(index + 1, 1);\n    }\n  }\n}\nfunction _removeFromUnorderedArray(array, object) {\n  const index = array.indexOf(object);\n  if (index >= 0) {\n    array[index] = array[array.length - 1];\n    array.pop();\n  }\n}\nfunction _removeFromArray(array, object) {\n  const index = array.indexOf(object);\n  if (index >= 0) {\n    array.splice(index, 1);\n  }\n}\nfunction _removeAllFromUnorderedArray(array, toRemove) {\n  for (let i = 0; i < toRemove.length; i++) {\n    _removeFromUnorderedArray(array, toRemove[i]);\n  }\n}\nfunction _removeAllFromArray(array, toRemove) {\n  for (let i = 0; i < toRemove.length; i++) {\n    _removeFromArray(array, toRemove[i]);\n  }\n}\nfunction _insertIntoArray(array, object, toIndex) {\n  array.splice(toIndex, 0, object);\n}\nfunction _insertArrayIntoArray(dest, src, toIndex) {\n  if (dest == null || src == null) {\n    return;\n  }\n  for (let i = src.length - 1; i >= 0; i--) {\n    const item = src[i];\n    _insertIntoArray(dest, item, toIndex);\n  }\n}\nfunction _moveInArray(array, objectsToMove, toIndex) {\n  _removeAllFromArray(array, objectsToMove);\n  objectsToMove.slice().reverse().forEach((obj) => _insertIntoArray(array, obj, toIndex));\n}\nfunction _includes(array, value) {\n  return array.indexOf(value) > -1;\n}\nfunction _flatten(arrayOfArrays) {\n  return [].concat.apply([], arrayOfArrays);\n}\nfunction _pushAll(target, source) {\n  if (source == null || target == null) {\n    return;\n  }\n  source.forEach((value) => target.push(value));\n}\nfunction _forEachReverse(list, action) {\n  if (list == null) {\n    return;\n  }\n  for (let i = list.length - 1; i >= 0; i--) {\n    action(list[i], i);\n  }\n}\n\n// community-modules/core/src/utils/event.ts\nvar AG_GRID_STOP_PROPAGATION = \"__ag_Grid_Stop_Propagation\";\nvar PASSIVE_EVENTS = [\"touchstart\", \"touchend\", \"touchmove\", \"touchcancel\", \"scroll\"];\nvar supports = {};\nfunction _stopPropagationForAgGrid(event) {\n  event[AG_GRID_STOP_PROPAGATION] = true;\n}\nfunction _isStopPropagationForAgGrid(event) {\n  return event[AG_GRID_STOP_PROPAGATION] === true;\n}\nvar _isEventSupported = /* @__PURE__ */ (() => {\n  const tags = {\n    select: \"input\",\n    change: \"input\",\n    submit: \"form\",\n    reset: \"form\",\n    error: \"img\",\n    load: \"img\",\n    abort: \"img\"\n  };\n  const eventChecker = (eventName) => {\n    if (typeof supports[eventName] === \"boolean\") {\n      return supports[eventName];\n    }\n    const el = document.createElement(tags[eventName] || \"div\");\n    eventName = \"on\" + eventName;\n    return supports[eventName] = eventName in el;\n  };\n  return eventChecker;\n})();\nfunction _getCtrlForEventTarget(gos, eventTarget, type) {\n  let sourceElement = eventTarget;\n  while (sourceElement) {\n    const renderedComp = gos.getDomData(sourceElement, type);\n    if (renderedComp) {\n      return renderedComp;\n    }\n    sourceElement = sourceElement.parentElement;\n  }\n  return null;\n}\nfunction _isElementInEventPath(element, event) {\n  if (!event || !element) {\n    return false;\n  }\n  return _getEventPath(event).indexOf(element) >= 0;\n}\nfunction _createEventPath(event) {\n  const res = [];\n  let pointer = event.target;\n  while (pointer) {\n    res.push(pointer);\n    pointer = pointer.parentElement;\n  }\n  return res;\n}\nfunction _getEventPath(event) {\n  const eventNoType = event;\n  if (eventNoType.path) {\n    return eventNoType.path;\n  }\n  if (eventNoType.composedPath) {\n    return eventNoType.composedPath();\n  }\n  return _createEventPath(eventNoType);\n}\nfunction _addSafePassiveEventListener(frameworkOverrides, eElement, event, listener) {\n  const isPassive = _includes(PASSIVE_EVENTS, event);\n  const options = isPassive ? { passive: true } : void 0;\n  if (frameworkOverrides && frameworkOverrides.addEventListener) {\n    frameworkOverrides.addEventListener(eElement, event, listener, options);\n  }\n}\n\n// community-modules/core/src/context/beanStub.ts\nvar BeanStub = class {\n  constructor() {\n    // not named context to allow children to use 'context' as a variable name\n    this.destroyFunctions = [];\n    this.destroyed = false;\n    // for vue 3 - prevents Vue from trying to make this (and obviously any sub classes) from being reactive\n    // prevents vue from creating proxies for created objects and prevents identity related issues\n    this.__v_skip = true;\n    this.propertyListenerId = 0;\n    // Enable multiple grid properties to be updated together by the user but only trigger shared logic once.\n    // Closely related to logic in ComponentUtil.ts\n    this.lastChangeSetIdLookup = {};\n    this.isAlive = () => !this.destroyed;\n  }\n  preWireBeans(beans) {\n    this.gridId = beans.context.getGridId();\n    this.frameworkOverrides = beans.frameworkOverrides;\n    this.stubContext = beans.context;\n    this.eventService = beans.eventService;\n    this.gos = beans.gos;\n    this.localeService = beans.localeService;\n  }\n  // this was a test constructor niall built, when active, it prints after 5 seconds all beans/components that are\n  // not destroyed. to use, create a new grid, then api.destroy() before 5 seconds. then anything that gets printed\n  // points to a bean or component that was not properly disposed of.\n  // constructor() {\n  //     setTimeout(()=> {\n  //         if (this.isAlive()) {\n  //             let prototype: any = Object.getPrototypeOf(this);\n  //             const constructor: any = prototype.constructor;\n  //             const constructorString = constructor.toString();\n  //             const beanName = constructorString.substring(9, constructorString.indexOf(\"(\"));\n  //             console.log('is alive ' + beanName);\n  //         }\n  //     }, 5000);\n  // }\n  // CellComp and GridComp and override this because they get the FrameworkOverrides from the Beans bean\n  getFrameworkOverrides() {\n    return this.frameworkOverrides;\n  }\n  destroy() {\n    for (let i = 0; i < this.destroyFunctions.length; i++) {\n      this.destroyFunctions[i]();\n    }\n    this.destroyFunctions.length = 0;\n    this.destroyed = true;\n    this.dispatchLocalEvent({ type: \"destroyed\" });\n  }\n  // The typing of AgEventListener<any, any, any> is not ideal, but it's the best we can do at the moment to enable\n  // eventService to have the best typing at the expense of BeanStub local events\n  /** Add a local event listener against this BeanStub */\n  addEventListener(eventType, listener) {\n    if (!this.localEventService) {\n      this.localEventService = new LocalEventService();\n    }\n    this.localEventService.addEventListener(eventType, listener);\n  }\n  /** Remove a local event listener from this BeanStub */\n  removeEventListener(eventType, listener) {\n    if (this.localEventService) {\n      this.localEventService.removeEventListener(eventType, listener);\n    }\n  }\n  dispatchLocalEvent(event) {\n    if (this.localEventService) {\n      this.localEventService.dispatchEvent(event);\n    }\n  }\n  addManagedElementListeners(object, handlers) {\n    return this._setupListeners(object, handlers);\n  }\n  addManagedEventListeners(handlers) {\n    return this._setupListeners(this.eventService, handlers);\n  }\n  addManagedListeners(object, handlers) {\n    return this._setupListeners(object, handlers);\n  }\n  _setupListeners(object, handlers) {\n    const destroyFuncs = [];\n    for (const k in handlers) {\n      const handler = handlers[k];\n      if (handler) {\n        destroyFuncs.push(this._setupListener(object, k, handler));\n      }\n    }\n    return destroyFuncs;\n  }\n  _setupListener(object, event, listener) {\n    if (this.destroyed) {\n      return () => null;\n    }\n    if (object instanceof HTMLElement) {\n      _addSafePassiveEventListener(this.getFrameworkOverrides(), object, event, listener);\n    } else {\n      object.addEventListener(event, listener);\n    }\n    const destroyFunc = () => {\n      object.removeEventListener(event, listener);\n      return null;\n    };\n    this.destroyFunctions.push(destroyFunc);\n    return () => {\n      destroyFunc();\n      this.destroyFunctions = this.destroyFunctions.filter((fn) => fn !== destroyFunc);\n      return null;\n    };\n  }\n  /**\n   * Setup a managed property listener for the given GridOption property.\n   * However, stores the destroy function in the beanStub so that if this bean\n   * is a component the destroy function will be called when the component is destroyed\n   * as opposed to being cleaned up only when the GridOptionsService is destroyed.\n   */\n  setupGridOptionListener(event, listener) {\n    this.gos.addPropertyEventListener(event, listener);\n    const destroyFunc = () => {\n      this.gos.removePropertyEventListener(event, listener);\n      return null;\n    };\n    this.destroyFunctions.push(destroyFunc);\n    return () => {\n      destroyFunc();\n      this.destroyFunctions = this.destroyFunctions.filter((fn) => fn !== destroyFunc);\n      return null;\n    };\n  }\n  /**\n   * Setup a managed property listener for the given GridOption property.\n   * @param event GridOption property to listen to changes for.\n   * @param listener Listener to run when property value changes\n   */\n  addManagedPropertyListener(event, listener) {\n    if (this.destroyed) {\n      return () => null;\n    }\n    return this.setupGridOptionListener(event, listener);\n  }\n  /**\n   * Setup managed property listeners for the given set of GridOption properties.\n   * The listener will be run if any of the property changes but will only run once if\n   * multiple of the properties change within the same framework lifecycle event.\n   * Works on the basis that GridOptionsService updates all properties *before* any property change events are fired.\n   * @param events Array of GridOption properties to listen for changes too.\n   * @param listener Shared listener to run if any of the properties change\n   */\n  addManagedPropertyListeners(events, listener) {\n    if (this.destroyed) {\n      return;\n    }\n    const eventsKey = events.join(\"-\") + this.propertyListenerId++;\n    const wrappedListener = (event) => {\n      if (event.changeSet) {\n        if (event.changeSet && event.changeSet.id === this.lastChangeSetIdLookup[eventsKey]) {\n          return;\n        }\n        this.lastChangeSetIdLookup[eventsKey] = event.changeSet.id;\n      }\n      const propertiesChangeEvent = {\n        type: \"gridPropertyChanged\",\n        changeSet: event.changeSet,\n        source: event.source\n      };\n      listener(propertiesChangeEvent);\n    };\n    events.forEach((event) => this.setupGridOptionListener(event, wrappedListener));\n  }\n  addDestroyFunc(func) {\n    if (this.isAlive()) {\n      this.destroyFunctions.push(func);\n    } else {\n      func();\n    }\n  }\n  createManagedBean(bean, context) {\n    const res = this.createBean(bean, context);\n    this.addDestroyFunc(this.destroyBean.bind(this, bean, context));\n    return res;\n  }\n  createBean(bean, context, afterPreCreateCallback) {\n    return (context || this.stubContext).createBean(bean, afterPreCreateCallback);\n  }\n  /**\n   * Destroys a bean and returns undefined to support destruction and clean up in a single line.\n   * this.dateComp = this.context.destroyBean(this.dateComp);\n   */\n  destroyBean(bean, context) {\n    return (context || this.stubContext).destroyBean(bean);\n  }\n  /**\n   * Destroys an array of beans and returns an empty array to support destruction and clean up in a single line.\n   * this.dateComps = this.context.destroyBeans(this.dateComps);\n   */\n  destroyBeans(beans, context) {\n    return (context || this.stubContext).destroyBeans(beans);\n  }\n};\n\n// community-modules/core/src/misc/frameworkEventListenerService.ts\nvar FrameworkEventListenerService = class {\n  constructor(frameworkOverrides) {\n    this.frameworkOverrides = frameworkOverrides;\n    // Map from user listener to wrapped listener so we can remove listener provided by user\n    this.wrappedListeners = /* @__PURE__ */ new Map();\n    this.wrappedGlobalListeners = /* @__PURE__ */ new Map();\n  }\n  wrap(userListener) {\n    let listener = userListener;\n    if (this.frameworkOverrides.shouldWrapOutgoing) {\n      listener = (event) => {\n        this.frameworkOverrides.wrapOutgoing(() => userListener(event));\n      };\n      this.wrappedListeners.set(userListener, listener);\n    }\n    return listener;\n  }\n  wrapGlobal(userListener) {\n    let listener = userListener;\n    if (this.frameworkOverrides.shouldWrapOutgoing) {\n      listener = (eventType, event) => {\n        this.frameworkOverrides.wrapOutgoing(() => userListener(eventType, event));\n      };\n      this.wrappedGlobalListeners.set(userListener, listener);\n    }\n    return listener;\n  }\n  unwrap(userListener) {\n    return this.wrappedListeners.get(userListener) ?? userListener;\n  }\n  unwrapGlobal(userListener) {\n    return this.wrappedGlobalListeners.get(userListener) ?? userListener;\n  }\n};\n\n// community-modules/core/src/utils/generic.ts\nfunction _makeNull(value) {\n  if (value == null || value === \"\") {\n    return null;\n  }\n  return value;\n}\nfunction _exists(value, allowEmptyString = false) {\n  return value != null && (value !== \"\" || allowEmptyString);\n}\nfunction _missing(value) {\n  return !_exists(value);\n}\nfunction _missingOrEmpty(value) {\n  return value == null || value.length === 0;\n}\nfunction _toStringOrNull(value) {\n  return value != null && typeof value.toString === \"function\" ? value.toString() : null;\n}\nfunction _attrToNumber(value) {\n  if (value === void 0) {\n    return;\n  }\n  if (value === null || value === \"\") {\n    return null;\n  }\n  if (typeof value === \"number\") {\n    return isNaN(value) ? void 0 : value;\n  }\n  const valueParsed = parseInt(value, 10);\n  return isNaN(valueParsed) ? void 0 : valueParsed;\n}\nfunction _attrToBoolean(value) {\n  if (value === void 0) {\n    return;\n  }\n  if (value === null || value === \"\") {\n    return false;\n  }\n  return toBoolean(value);\n}\nfunction toBoolean(value) {\n  if (typeof value === \"boolean\") {\n    return value;\n  }\n  if (typeof value === \"string\") {\n    return value.toUpperCase() === \"TRUE\" || value == \"\";\n  }\n  return false;\n}\nfunction _jsonEquals(val1, val2) {\n  const val1Json = val1 ? JSON.stringify(val1) : null;\n  const val2Json = val2 ? JSON.stringify(val2) : null;\n  return val1Json === val2Json;\n}\nfunction _defaultComparator(valueA, valueB, accentedCompare = false) {\n  const valueAMissing = valueA == null;\n  const valueBMissing = valueB == null;\n  if (valueA && valueA.toNumber) {\n    valueA = valueA.toNumber();\n  }\n  if (valueB && valueB.toNumber) {\n    valueB = valueB.toNumber();\n  }\n  if (valueAMissing && valueBMissing) {\n    return 0;\n  }\n  if (valueAMissing) {\n    return -1;\n  }\n  if (valueBMissing) {\n    return 1;\n  }\n  function doQuickCompare(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n  if (typeof valueA !== \"string\") {\n    return doQuickCompare(valueA, valueB);\n  }\n  if (!accentedCompare) {\n    return doQuickCompare(valueA, valueB);\n  }\n  try {\n    return valueA.localeCompare(valueB);\n  } catch (e) {\n    return doQuickCompare(valueA, valueB);\n  }\n}\nfunction _values(object) {\n  if (object instanceof Set || object instanceof Map) {\n    const arr = [];\n    object.forEach((value) => arr.push(value));\n    return arr;\n  }\n  return Object.values(object);\n}\n\n// community-modules/core/src/utils/object.ts\nvar SKIP_JS_BUILTINS = /* @__PURE__ */ new Set([\"__proto__\", \"constructor\", \"prototype\"]);\nfunction _iterateObject(object, callback) {\n  if (object == null) {\n    return;\n  }\n  if (Array.isArray(object)) {\n    for (let i = 0; i < object.length; i++) {\n      callback(i.toString(), object[i]);\n    }\n    return;\n  }\n  for (const [key, value] of Object.entries(object)) {\n    callback(key, value);\n  }\n}\nfunction _cloneObject(object) {\n  const copy = {};\n  const keys = Object.keys(object);\n  for (let i = 0; i < keys.length; i++) {\n    if (SKIP_JS_BUILTINS.has(keys[i])) {\n      continue;\n    }\n    const key = keys[i];\n    const value = object[key];\n    copy[key] = value;\n  }\n  return copy;\n}\nfunction _deepCloneDefinition(object, keysToSkip) {\n  if (!object) {\n    return;\n  }\n  const obj = object;\n  const res = {};\n  Object.keys(obj).forEach((key) => {\n    if (keysToSkip && keysToSkip.indexOf(key) >= 0 || SKIP_JS_BUILTINS.has(key)) {\n      return;\n    }\n    const value = obj[key];\n    const sourceIsSimpleObject = _isNonNullObject(value) && value.constructor === Object;\n    if (sourceIsSimpleObject) {\n      res[key] = _deepCloneDefinition(value);\n    } else {\n      res[key] = value;\n    }\n  });\n  return res;\n}\nfunction _getAllValuesInObject(obj) {\n  if (!obj) {\n    return [];\n  }\n  const anyObject = Object;\n  if (typeof anyObject.values === \"function\") {\n    return anyObject.values(obj);\n  }\n  const ret = [];\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key) && obj.propertyIsEnumerable(key)) {\n      ret.push(obj[key]);\n    }\n  }\n  return ret;\n}\nfunction _mergeDeep(dest, source, copyUndefined = true, makeCopyOfSimpleObjects = false) {\n  if (!_exists(source)) {\n    return;\n  }\n  _iterateObject(source, (key, sourceValue) => {\n    if (SKIP_JS_BUILTINS.has(key)) {\n      return;\n    }\n    let destValue = dest[key];\n    if (destValue === sourceValue) {\n      return;\n    }\n    if (makeCopyOfSimpleObjects) {\n      const objectIsDueToBeCopied = destValue == null && sourceValue != null;\n      if (objectIsDueToBeCopied) {\n        const sourceIsSimpleObject = typeof sourceValue === \"object\" && sourceValue.constructor === Object;\n        const dontCopy = sourceIsSimpleObject;\n        if (dontCopy) {\n          destValue = {};\n          dest[key] = destValue;\n        }\n      }\n    }\n    if (_isNonNullObject(sourceValue) && _isNonNullObject(destValue) && !Array.isArray(destValue)) {\n      _mergeDeep(destValue, sourceValue, copyUndefined, makeCopyOfSimpleObjects);\n    } else if (copyUndefined || sourceValue !== void 0) {\n      dest[key] = sourceValue;\n    }\n  });\n}\nfunction _getValueUsingField(data, field, fieldContainsDots) {\n  if (!field || !data) {\n    return;\n  }\n  if (!fieldContainsDots) {\n    return data[field];\n  }\n  const fields = field.split(\".\");\n  let currentObject = data;\n  for (let i = 0; i < fields.length; i++) {\n    if (currentObject == null) {\n      return void 0;\n    }\n    currentObject = currentObject[fields[i]];\n  }\n  return currentObject;\n}\nfunction _isNonNullObject(value) {\n  return typeof value === \"object\" && value !== null;\n}\n\n// community-modules/core/src/entities/agColumn.ts\nvar COL_DEF_DEFAULTS = {\n  resizable: true,\n  sortable: true\n};\nvar instanceIdSequence = 0;\nfunction getNextColInstanceId() {\n  return instanceIdSequence++;\n}\nfunction isColumn(col) {\n  return col instanceof AgColumn;\n}\nvar DEFAULT_COLUMN_MIN_WIDTH = 20;\nvar AgColumn = class extends BeanStub {\n  constructor(colDef, userProvidedColDef, colId, primary) {\n    super();\n    this.isColumn = true;\n    // used by React (and possibly other frameworks) as key for rendering. also used to\n    // identify old vs new columns for destroying cols when no longer used.\n    this.instanceId = getNextColInstanceId();\n    // The measured height of this column's header when autoHeaderHeight is enabled\n    this.autoHeaderHeight = null;\n    this.moving = false;\n    this.menuVisible = false;\n    this.lastLeftPinned = false;\n    this.firstRightPinned = false;\n    this.filterActive = false;\n    this.columnEventService = new LocalEventService();\n    this.tooltipEnabled = false;\n    this.rowGroupActive = false;\n    this.pivotActive = false;\n    this.aggregationActive = false;\n    this.colDef = colDef;\n    this.userProvidedColDef = userProvidedColDef;\n    this.colId = colId;\n    this.primary = primary;\n    this.setState(colDef);\n  }\n  wireBeans(beans) {\n    this.columnHoverService = beans.columnHoverService;\n  }\n  getInstanceId() {\n    return this.instanceId;\n  }\n  setState(colDef) {\n    if (colDef.sort !== void 0) {\n      if (colDef.sort === \"asc\" || colDef.sort === \"desc\") {\n        this.sort = colDef.sort;\n      }\n    } else {\n      if (colDef.initialSort === \"asc\" || colDef.initialSort === \"desc\") {\n        this.sort = colDef.initialSort;\n      }\n    }\n    const sortIndex = colDef.sortIndex;\n    const initialSortIndex = colDef.initialSortIndex;\n    if (sortIndex !== void 0) {\n      if (sortIndex !== null) {\n        this.sortIndex = sortIndex;\n      }\n    } else {\n      if (initialSortIndex !== null) {\n        this.sortIndex = initialSortIndex;\n      }\n    }\n    const hide = colDef.hide;\n    const initialHide = colDef.initialHide;\n    if (hide !== void 0) {\n      this.visible = !hide;\n    } else {\n      this.visible = !initialHide;\n    }\n    if (colDef.pinned !== void 0) {\n      this.setPinned(colDef.pinned);\n    } else {\n      this.setPinned(colDef.initialPinned);\n    }\n    const flex = colDef.flex;\n    const initialFlex = colDef.initialFlex;\n    if (flex !== void 0) {\n      this.flex = flex;\n    } else if (initialFlex !== void 0) {\n      this.flex = initialFlex;\n    }\n  }\n  // gets called when user provides an alternative colDef, eg\n  setColDef(colDef, userProvidedColDef, source) {\n    this.colDef = colDef;\n    this.userProvidedColDef = userProvidedColDef;\n    this.initMinAndMaxWidths();\n    this.initDotNotation();\n    this.initTooltip();\n    this.columnEventService.dispatchEvent(this.createColumnEvent(\"colDefChanged\", source));\n  }\n  getUserProvidedColDef() {\n    return this.userProvidedColDef;\n  }\n  setParent(parent) {\n    this.parent = parent;\n  }\n  getParent() {\n    return this.parent;\n  }\n  setOriginalParent(originalParent) {\n    this.originalParent = originalParent;\n  }\n  getOriginalParent() {\n    return this.originalParent;\n  }\n  // this is done after constructor as it uses gridOptionsService\n  postConstruct() {\n    this.initMinAndMaxWidths();\n    this.resetActualWidth(\"gridInitializing\");\n    this.initDotNotation();\n    this.initTooltip();\n  }\n  initDotNotation() {\n    const suppressDotNotation = this.gos.get(\"suppressFieldDotNotation\");\n    this.fieldContainsDots = _exists(this.colDef.field) && this.colDef.field.indexOf(\".\") >= 0 && !suppressDotNotation;\n    this.tooltipFieldContainsDots = _exists(this.colDef.tooltipField) && this.colDef.tooltipField.indexOf(\".\") >= 0 && !suppressDotNotation;\n  }\n  initMinAndMaxWidths() {\n    const colDef = this.colDef;\n    this.minWidth = colDef.minWidth ?? DEFAULT_COLUMN_MIN_WIDTH;\n    this.maxWidth = colDef.maxWidth ?? Number.MAX_SAFE_INTEGER;\n  }\n  initTooltip() {\n    this.tooltipEnabled = _exists(this.colDef.tooltipField) || _exists(this.colDef.tooltipValueGetter) || _exists(this.colDef.tooltipComponent);\n  }\n  resetActualWidth(source) {\n    const initialWidth = this.calculateColInitialWidth(this.colDef);\n    this.setActualWidth(initialWidth, source, true);\n  }\n  calculateColInitialWidth(colDef) {\n    let width;\n    const colDefWidth = _attrToNumber(colDef.width);\n    const colDefInitialWidth = _attrToNumber(colDef.initialWidth);\n    if (colDefWidth != null) {\n      width = colDefWidth;\n    } else if (colDefInitialWidth != null) {\n      width = colDefInitialWidth;\n    } else {\n      width = 200;\n    }\n    return Math.max(Math.min(width, this.maxWidth), this.minWidth);\n  }\n  isEmptyGroup() {\n    return false;\n  }\n  isRowGroupDisplayed(colId) {\n    if (_missing(this.colDef) || _missing(this.colDef.showRowGroup)) {\n      return false;\n    }\n    const showingAllGroups = this.colDef.showRowGroup === true;\n    const showingThisGroup = this.colDef.showRowGroup === colId;\n    return showingAllGroups || showingThisGroup;\n  }\n  isPrimary() {\n    return this.primary;\n  }\n  isFilterAllowed() {\n    const filterDefined = !!this.colDef.filter;\n    return filterDefined;\n  }\n  isFieldContainsDots() {\n    return this.fieldContainsDots;\n  }\n  isTooltipEnabled() {\n    return this.tooltipEnabled;\n  }\n  isTooltipFieldContainsDots() {\n    return this.tooltipFieldContainsDots;\n  }\n  addEventListener(eventType, userListener) {\n    if (this.frameworkOverrides.shouldWrapOutgoing && !this.frameworkEventListenerService) {\n      this.columnEventService.setFrameworkOverrides(this.frameworkOverrides);\n      this.frameworkEventListenerService = new FrameworkEventListenerService(this.frameworkOverrides);\n    }\n    const listener = this.frameworkEventListenerService?.wrap(userListener) ?? userListener;\n    this.columnEventService.addEventListener(eventType, listener);\n  }\n  removeEventListener(eventType, userListener) {\n    const listener = this.frameworkEventListenerService?.unwrap(userListener) ?? userListener;\n    this.columnEventService.removeEventListener(eventType, listener);\n  }\n  createColumnFunctionCallbackParams(rowNode) {\n    return this.gos.addGridCommonParams({\n      node: rowNode,\n      data: rowNode.data,\n      column: this,\n      colDef: this.colDef\n    });\n  }\n  isSuppressNavigable(rowNode) {\n    if (typeof this.colDef.suppressNavigable === \"boolean\") {\n      return this.colDef.suppressNavigable;\n    }\n    if (typeof this.colDef.suppressNavigable === \"function\") {\n      const params = this.createColumnFunctionCallbackParams(rowNode);\n      const userFunc = this.colDef.suppressNavigable;\n      return userFunc(params);\n    }\n    return false;\n  }\n  isCellEditable(rowNode) {\n    if (rowNode.group) {\n      if (this.gos.get(\"treeData\")) {\n        if (!rowNode.data && !this.gos.get(\"enableGroupEdit\")) {\n          return false;\n        }\n      } else {\n        if (!this.gos.get(\"enableGroupEdit\")) {\n          return false;\n        }\n      }\n    }\n    return this.isColumnFunc(rowNode, this.colDef.editable);\n  }\n  isSuppressFillHandle() {\n    return !!this.colDef.suppressFillHandle;\n  }\n  isAutoHeight() {\n    return !!this.colDef.autoHeight;\n  }\n  isAutoHeaderHeight() {\n    return !!this.colDef.autoHeaderHeight;\n  }\n  isRowDrag(rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef.rowDrag);\n  }\n  isDndSource(rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef.dndSource);\n  }\n  isCellCheckboxSelection(rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef.checkboxSelection);\n  }\n  isSuppressPaste(rowNode) {\n    return this.isColumnFunc(rowNode, this.colDef ? this.colDef.suppressPaste : null);\n  }\n  isResizable() {\n    return !!this.getColDefValue(\"resizable\");\n  }\n  /** Get value from ColDef or default if it exists. */\n  getColDefValue(key) {\n    return this.colDef[key] ?? COL_DEF_DEFAULTS[key];\n  }\n  isColumnFunc(rowNode, value) {\n    if (typeof value === \"boolean\") {\n      return value;\n    }\n    if (typeof value === \"function\") {\n      const params = this.createColumnFunctionCallbackParams(rowNode);\n      const editableFunc = value;\n      return editableFunc(params);\n    }\n    return false;\n  }\n  setMoving(moving, source) {\n    this.moving = moving;\n    this.columnEventService.dispatchEvent(this.createColumnEvent(\"movingChanged\", source));\n  }\n  createColumnEvent(type, source) {\n    return this.gos.addGridCommonParams({\n      type,\n      column: this,\n      columns: [this],\n      source\n    });\n  }\n  isMoving() {\n    return this.moving;\n  }\n  getSort() {\n    return this.sort;\n  }\n  setSort(sort, source) {\n    if (this.sort !== sort) {\n      this.sort = sort;\n      this.columnEventService.dispatchEvent(this.createColumnEvent(\"sortChanged\", source));\n    }\n    this.dispatchStateUpdatedEvent(\"sort\");\n  }\n  isSortable() {\n    return !!this.getColDefValue(\"sortable\");\n  }\n  /** @deprecated v32 use col.getSort() === 'asc */\n  isSortAscending() {\n    return this.sort === \"asc\";\n  }\n  /** @deprecated v32 use col.getSort() === 'desc */\n  isSortDescending() {\n    return this.sort === \"desc\";\n  }\n  /** @deprecated v32 use col.getSort() === undefined */\n  isSortNone() {\n    return _missing(this.sort);\n  }\n  /** @deprecated v32 use col.getSort() !== undefined */\n  isSorting() {\n    return _exists(this.sort);\n  }\n  getSortIndex() {\n    return this.sortIndex;\n  }\n  setSortIndex(sortOrder) {\n    this.sortIndex = sortOrder;\n    this.dispatchStateUpdatedEvent(\"sortIndex\");\n  }\n  setMenuVisible(visible, source) {\n    if (this.menuVisible !== visible) {\n      this.menuVisible = visible;\n      this.columnEventService.dispatchEvent(this.createColumnEvent(\"menuVisibleChanged\", source));\n    }\n  }\n  isMenuVisible() {\n    return this.menuVisible;\n  }\n  setAggFunc(aggFunc) {\n    this.aggFunc = aggFunc;\n    this.dispatchStateUpdatedEvent(\"aggFunc\");\n  }\n  getAggFunc() {\n    return this.aggFunc;\n  }\n  getLeft() {\n    return this.left;\n  }\n  getOldLeft() {\n    return this.oldLeft;\n  }\n  getRight() {\n    return this.left + this.actualWidth;\n  }\n  setLeft(left, source) {\n    this.oldLeft = this.left;\n    if (this.left !== left) {\n      this.left = left;\n      this.columnEventService.dispatchEvent(this.createColumnEvent(\"leftChanged\", source));\n    }\n  }\n  isFilterActive() {\n    return this.filterActive;\n  }\n  // additionalEventAttributes is used by provided simple floating filter, so it can add 'floatingFilter=true' to the event\n  setFilterActive(active, source, additionalEventAttributes) {\n    if (this.filterActive !== active) {\n      this.filterActive = active;\n      this.columnEventService.dispatchEvent(this.createColumnEvent(\"filterActiveChanged\", source));\n    }\n    const filterChangedEvent = this.createColumnEvent(\"filterChanged\", source);\n    if (additionalEventAttributes) {\n      _mergeDeep(filterChangedEvent, additionalEventAttributes);\n    }\n    this.columnEventService.dispatchEvent(filterChangedEvent);\n  }\n  isHovered() {\n    return this.columnHoverService.isHovered(this);\n  }\n  setPinned(pinned) {\n    if (pinned === true || pinned === \"left\") {\n      this.pinned = \"left\";\n    } else if (pinned === \"right\") {\n      this.pinned = \"right\";\n    } else {\n      this.pinned = null;\n    }\n    this.dispatchStateUpdatedEvent(\"pinned\");\n  }\n  setFirstRightPinned(firstRightPinned, source) {\n    if (this.firstRightPinned !== firstRightPinned) {\n      this.firstRightPinned = firstRightPinned;\n      this.columnEventService.dispatchEvent(this.createColumnEvent(\"firstRightPinnedChanged\", source));\n    }\n  }\n  setLastLeftPinned(lastLeftPinned, source) {\n    if (this.lastLeftPinned !== lastLeftPinned) {\n      this.lastLeftPinned = lastLeftPinned;\n      this.columnEventService.dispatchEvent(this.createColumnEvent(\"lastLeftPinnedChanged\", source));\n    }\n  }\n  isFirstRightPinned() {\n    return this.firstRightPinned;\n  }\n  isLastLeftPinned() {\n    return this.lastLeftPinned;\n  }\n  isPinned() {\n    return this.pinned === \"left\" || this.pinned === \"right\";\n  }\n  isPinnedLeft() {\n    return this.pinned === \"left\";\n  }\n  isPinnedRight() {\n    return this.pinned === \"right\";\n  }\n  getPinned() {\n    return this.pinned;\n  }\n  setVisible(visible, source) {\n    const newValue = visible === true;\n    if (this.visible !== newValue) {\n      this.visible = newValue;\n      this.columnEventService.dispatchEvent(this.createColumnEvent(\"visibleChanged\", source));\n    }\n    this.dispatchStateUpdatedEvent(\"hide\");\n  }\n  isVisible() {\n    return this.visible;\n  }\n  isSpanHeaderHeight() {\n    const colDef = this.getColDef();\n    return !colDef.suppressSpanHeaderHeight && !colDef.autoHeaderHeight;\n  }\n  getColumnGroupPaddingInfo() {\n    let parent = this.getParent();\n    if (!parent || !parent.isPadding()) {\n      return { numberOfParents: 0, isSpanningTotal: false };\n    }\n    const numberOfParents = parent.getPaddingLevel() + 1;\n    let isSpanningTotal = true;\n    while (parent) {\n      if (!parent.isPadding()) {\n        isSpanningTotal = false;\n        break;\n      }\n      parent = parent.getParent();\n    }\n    return { numberOfParents, isSpanningTotal };\n  }\n  getColDef() {\n    return this.colDef;\n  }\n  getDefinition() {\n    return this.colDef;\n  }\n  getColumnGroupShow() {\n    return this.colDef.columnGroupShow;\n  }\n  getColId() {\n    return this.colId;\n  }\n  getId() {\n    return this.colId;\n  }\n  getUniqueId() {\n    return this.colId;\n  }\n  getActualWidth() {\n    return this.actualWidth;\n  }\n  getAutoHeaderHeight() {\n    return this.autoHeaderHeight;\n  }\n  /** Returns true if the header height has changed */\n  setAutoHeaderHeight(height) {\n    const changed = height !== this.autoHeaderHeight;\n    this.autoHeaderHeight = height;\n    return changed;\n  }\n  createBaseColDefParams(rowNode) {\n    const params = this.gos.addGridCommonParams({\n      node: rowNode,\n      data: rowNode.data,\n      colDef: this.colDef,\n      column: this\n    });\n    return params;\n  }\n  getColSpan(rowNode) {\n    if (_missing(this.colDef.colSpan)) {\n      return 1;\n    }\n    const params = this.createBaseColDefParams(rowNode);\n    const colSpan = this.colDef.colSpan(params);\n    return Math.max(colSpan, 1);\n  }\n  getRowSpan(rowNode) {\n    if (_missing(this.colDef.rowSpan)) {\n      return 1;\n    }\n    const params = this.createBaseColDefParams(rowNode);\n    const rowSpan = this.colDef.rowSpan(params);\n    return Math.max(rowSpan, 1);\n  }\n  setActualWidth(actualWidth, source, silent = false) {\n    actualWidth = Math.max(actualWidth, this.minWidth);\n    actualWidth = Math.min(actualWidth, this.maxWidth);\n    if (this.actualWidth !== actualWidth) {\n      this.actualWidth = actualWidth;\n      if (this.flex && source !== \"flex\" && source !== \"gridInitializing\") {\n        this.flex = null;\n      }\n      if (!silent) {\n        this.fireColumnWidthChangedEvent(source);\n      }\n    }\n    this.dispatchStateUpdatedEvent(\"width\");\n  }\n  fireColumnWidthChangedEvent(source) {\n    this.columnEventService.dispatchEvent(this.createColumnEvent(\"widthChanged\", source));\n  }\n  isGreaterThanMax(width) {\n    return width > this.maxWidth;\n  }\n  getMinWidth() {\n    return this.minWidth;\n  }\n  getMaxWidth() {\n    return this.maxWidth;\n  }\n  getFlex() {\n    return this.flex || 0;\n  }\n  // this method should only be used by the columnModel to\n  // change flex when required by the applyColumnState method.\n  setFlex(flex) {\n    if (this.flex !== flex) {\n      this.flex = flex;\n    }\n    this.dispatchStateUpdatedEvent(\"flex\");\n  }\n  setMinimum(source) {\n    this.setActualWidth(this.minWidth, source);\n  }\n  setRowGroupActive(rowGroup, source) {\n    if (this.rowGroupActive !== rowGroup) {\n      this.rowGroupActive = rowGroup;\n      this.columnEventService.dispatchEvent(this.createColumnEvent(\"columnRowGroupChanged\", source));\n    }\n    this.dispatchStateUpdatedEvent(\"rowGroup\");\n  }\n  isRowGroupActive() {\n    return this.rowGroupActive;\n  }\n  setPivotActive(pivot, source) {\n    if (this.pivotActive !== pivot) {\n      this.pivotActive = pivot;\n      this.columnEventService.dispatchEvent(this.createColumnEvent(\"columnPivotChanged\", source));\n    }\n    this.dispatchStateUpdatedEvent(\"pivot\");\n  }\n  isPivotActive() {\n    return this.pivotActive;\n  }\n  isAnyFunctionActive() {\n    return this.isPivotActive() || this.isRowGroupActive() || this.isValueActive();\n  }\n  isAnyFunctionAllowed() {\n    return this.isAllowPivot() || this.isAllowRowGroup() || this.isAllowValue();\n  }\n  setValueActive(value, source) {\n    if (this.aggregationActive !== value) {\n      this.aggregationActive = value;\n      this.columnEventService.dispatchEvent(this.createColumnEvent(\"columnValueChanged\", source));\n    }\n  }\n  isValueActive() {\n    return this.aggregationActive;\n  }\n  isAllowPivot() {\n    return this.colDef.enablePivot === true;\n  }\n  isAllowValue() {\n    return this.colDef.enableValue === true;\n  }\n  isAllowRowGroup() {\n    return this.colDef.enableRowGroup === true;\n  }\n  dispatchStateUpdatedEvent(key) {\n    this.columnEventService.dispatchEvent({\n      type: \"columnStateUpdated\",\n      key\n    });\n  }\n};\n\n// community-modules/core/src/entities/agProvidedColumnGroup.ts\nfunction isProvidedColumnGroup(col) {\n  return col instanceof AgProvidedColumnGroup;\n}\nvar AgProvidedColumnGroup = class extends BeanStub {\n  constructor(colGroupDef, groupId, padding, level) {\n    super();\n    this.isColumn = false;\n    this.expandable = false;\n    // used by React (and possibly other frameworks) as key for rendering. also used to\n    // identify old vs new columns for destroying cols when no longer used.\n    this.instanceId = getNextColInstanceId();\n    this.expandableListenerRemoveCallback = null;\n    this.colGroupDef = colGroupDef;\n    this.groupId = groupId;\n    this.expanded = !!colGroupDef && !!colGroupDef.openByDefault;\n    this.padding = padding;\n    this.level = level;\n  }\n  destroy() {\n    if (this.expandableListenerRemoveCallback) {\n      this.reset(null, void 0);\n    }\n    super.destroy();\n  }\n  reset(colGroupDef, level) {\n    this.colGroupDef = colGroupDef;\n    this.level = level;\n    this.originalParent = null;\n    if (this.expandableListenerRemoveCallback) {\n      this.expandableListenerRemoveCallback();\n    }\n    this.children = void 0;\n    this.expandable = void 0;\n  }\n  getInstanceId() {\n    return this.instanceId;\n  }\n  setOriginalParent(originalParent) {\n    this.originalParent = originalParent;\n  }\n  getOriginalParent() {\n    return this.originalParent;\n  }\n  getLevel() {\n    return this.level;\n  }\n  isVisible() {\n    if (this.children) {\n      return this.children.some((child) => child.isVisible());\n    }\n    return false;\n  }\n  isPadding() {\n    return this.padding;\n  }\n  setExpanded(expanded) {\n    this.expanded = expanded === void 0 ? false : expanded;\n    this.dispatchLocalEvent({ type: \"expandedChanged\" });\n  }\n  isExpandable() {\n    return this.expandable;\n  }\n  isExpanded() {\n    return this.expanded;\n  }\n  getGroupId() {\n    return this.groupId;\n  }\n  getId() {\n    return this.getGroupId();\n  }\n  setChildren(children) {\n    this.children = children;\n  }\n  getChildren() {\n    return this.children;\n  }\n  getColGroupDef() {\n    return this.colGroupDef;\n  }\n  getLeafColumns() {\n    const result = [];\n    this.addLeafColumns(result);\n    return result;\n  }\n  addLeafColumns(leafColumns) {\n    if (!this.children) {\n      return;\n    }\n    this.children.forEach((child) => {\n      if (isColumn(child)) {\n        leafColumns.push(child);\n      } else if (isProvidedColumnGroup(child)) {\n        child.addLeafColumns(leafColumns);\n      }\n    });\n  }\n  getColumnGroupShow() {\n    const colGroupDef = this.colGroupDef;\n    if (!colGroupDef) {\n      return;\n    }\n    return colGroupDef.columnGroupShow;\n  }\n  // need to check that this group has at least one col showing when both expanded and contracted.\n  // if not, then we don't allow expanding and contracting on this group\n  setupExpandable() {\n    this.setExpandable();\n    if (this.expandableListenerRemoveCallback) {\n      this.expandableListenerRemoveCallback();\n    }\n    const listener = this.onColumnVisibilityChanged.bind(this);\n    this.getLeafColumns().forEach((col) => col.addEventListener(\"visibleChanged\", listener));\n    this.expandableListenerRemoveCallback = () => {\n      this.getLeafColumns().forEach((col) => col.removeEventListener(\"visibleChanged\", listener));\n      this.expandableListenerRemoveCallback = null;\n    };\n  }\n  setExpandable() {\n    if (this.isPadding()) {\n      return;\n    }\n    let atLeastOneShowingWhenOpen = false;\n    let atLeastOneShowingWhenClosed = false;\n    let atLeastOneChangeable = false;\n    const children = this.findChildrenRemovingPadding();\n    for (let i = 0, j = children.length; i < j; i++) {\n      const abstractColumn = children[i];\n      if (!abstractColumn.isVisible()) {\n        continue;\n      }\n      const headerGroupShow = abstractColumn.getColumnGroupShow();\n      if (headerGroupShow === \"open\") {\n        atLeastOneShowingWhenOpen = true;\n        atLeastOneChangeable = true;\n      } else if (headerGroupShow === \"closed\") {\n        atLeastOneShowingWhenClosed = true;\n        atLeastOneChangeable = true;\n      } else {\n        atLeastOneShowingWhenOpen = true;\n        atLeastOneShowingWhenClosed = true;\n      }\n    }\n    const expandable = atLeastOneShowingWhenOpen && atLeastOneShowingWhenClosed && atLeastOneChangeable;\n    if (this.expandable !== expandable) {\n      this.expandable = expandable;\n      this.dispatchLocalEvent({ type: \"expandableChanged\" });\n    }\n  }\n  findChildrenRemovingPadding() {\n    const res = [];\n    const process = (items) => {\n      items.forEach((item) => {\n        const skipBecausePadding = isProvidedColumnGroup(item) && item.isPadding();\n        if (skipBecausePadding) {\n          process(item.children);\n        } else {\n          res.push(item);\n        }\n      });\n    };\n    process(this.children);\n    return res;\n  }\n  onColumnVisibilityChanged() {\n    this.setExpandable();\n  }\n};\n\n// community-modules/core/src/entities/defaultColumnTypes.ts\nvar DefaultColumnTypes = {\n  numericColumn: {\n    headerClass: \"ag-right-aligned-header\",\n    cellClass: \"ag-right-aligned-cell\"\n  },\n  rightAligned: {\n    headerClass: \"ag-right-aligned-header\",\n    cellClass: \"ag-right-aligned-cell\"\n  }\n};\n\n// community-modules/core/src/utils/function.ts\nvar doOnceFlags = {};\nfunction _doOnce(func, key) {\n  if (doOnceFlags[key]) {\n    return;\n  }\n  func();\n  doOnceFlags[key] = true;\n}\nfunction _log(message, ...args) {\n  console.log(\"AG Grid: \" + message, ...args);\n}\nfunction _warnOnce(msg, ...args) {\n  _doOnce(() => console.warn(\"AG Grid: \" + msg, ...args), msg + args?.join(\"\"));\n}\nfunction _errorOnce(msg, ...args) {\n  _doOnce(() => console.error(\"AG Grid: \" + msg, ...args), msg + args?.join(\"\"));\n}\nfunction _isFunction(val) {\n  return !!(val && val.constructor && val.call && val.apply);\n}\nfunction _executeInAWhile(funcs) {\n  _executeAfter(funcs, 400);\n}\nvar executeNextVMTurnFuncs = [];\nvar executeNextVMTurnPending = false;\nfunction _executeNextVMTurn(func) {\n  executeNextVMTurnFuncs.push(func);\n  if (executeNextVMTurnPending) {\n    return;\n  }\n  executeNextVMTurnPending = true;\n  window.setTimeout(() => {\n    const funcsCopy = executeNextVMTurnFuncs.slice();\n    executeNextVMTurnFuncs.length = 0;\n    executeNextVMTurnPending = false;\n    funcsCopy.forEach((func2) => func2());\n  }, 0);\n}\nfunction _executeAfter(funcs, milliseconds = 0) {\n  if (funcs.length > 0) {\n    window.setTimeout(() => funcs.forEach((func) => func()), milliseconds);\n  }\n}\nfunction _debounce(func, delay) {\n  let timeout;\n  return function(...args) {\n    const context = this;\n    window.clearTimeout(timeout);\n    timeout = window.setTimeout(function() {\n      func.apply(context, args);\n    }, delay);\n  };\n}\nfunction _throttle(func, wait) {\n  let previousCall = 0;\n  return function(...args) {\n    const context = this;\n    const currentCall = (/* @__PURE__ */ new Date()).getTime();\n    if (currentCall - previousCall < wait) {\n      return;\n    }\n    previousCall = currentCall;\n    func.apply(context, args);\n  };\n}\nfunction _waitUntil(condition, callback, timeout = 100, timeoutMessage) {\n  const timeStamp = (/* @__PURE__ */ new Date()).getTime();\n  let interval = null;\n  let executed = false;\n  const internalCallback = () => {\n    const reachedTimeout = (/* @__PURE__ */ new Date()).getTime() - timeStamp > timeout;\n    if (condition() || reachedTimeout) {\n      callback();\n      executed = true;\n      if (interval != null) {\n        window.clearInterval(interval);\n        interval = null;\n      }\n      if (reachedTimeout && timeoutMessage) {\n        _warnOnce(timeoutMessage);\n      }\n    }\n  };\n  internalCallback();\n  if (!executed) {\n    interval = window.setInterval(internalCallback, 10);\n  }\n}\nfunction _compose(...fns) {\n  return (arg) => fns.reduce((composed, f) => f(composed), arg);\n}\n\n// community-modules/core/src/columns/columnKeyCreator.ts\nvar ColumnKeyCreator = class {\n  constructor() {\n    this.existingKeys = {};\n  }\n  addExistingKeys(keys) {\n    for (let i = 0; i < keys.length; i++) {\n      this.existingKeys[keys[i]] = true;\n    }\n  }\n  getUniqueKey(colId, colField) {\n    colId = _toStringOrNull(colId);\n    let count = 0;\n    while (true) {\n      let idToTry;\n      if (colId) {\n        idToTry = colId;\n        if (count !== 0) {\n          idToTry += \"_\" + count;\n        }\n      } else if (colField) {\n        idToTry = colField;\n        if (count !== 0) {\n          idToTry += \"_\" + count;\n        }\n      } else {\n        idToTry = count;\n      }\n      if (!this.existingKeys[idToTry]) {\n        this.existingKeys[idToTry] = true;\n        return String(idToTry);\n      }\n      count++;\n    }\n  }\n};\n\n// community-modules/core/src/columns/columnUtils.ts\nvar GROUP_AUTO_COLUMN_ID = \"ag-Grid-AutoColumn\";\nfunction getColumnsFromTree(rootColumns) {\n  const result = [];\n  const recursiveFindColumns = (childColumns) => {\n    for (let i = 0; i < childColumns.length; i++) {\n      const child = childColumns[i];\n      if (isColumn(child)) {\n        result.push(child);\n      } else if (isProvidedColumnGroup(child)) {\n        recursiveFindColumns(child.getChildren());\n      }\n    }\n  };\n  recursiveFindColumns(rootColumns);\n  return result;\n}\nfunction getWidthOfColsInList(columnList) {\n  return columnList.reduce((width, col) => width + col.getActualWidth(), 0);\n}\nfunction destroyColumnTree(context, oldTree, newTree) {\n  const oldObjectsById = {};\n  if (!oldTree) {\n    return;\n  }\n  depthFirstOriginalTreeSearch(null, oldTree, (child) => {\n    oldObjectsById[child.getInstanceId()] = child;\n  });\n  if (newTree) {\n    depthFirstOriginalTreeSearch(null, newTree, (child) => {\n      oldObjectsById[child.getInstanceId()] = null;\n    });\n  }\n  const colsToDestroy = Object.values(oldObjectsById).filter((item) => item != null);\n  context.destroyBeans(colsToDestroy);\n}\nfunction isColumnGroupAutoCol(col) {\n  const colId = col.getId();\n  return colId.startsWith(GROUP_AUTO_COLUMN_ID);\n}\nfunction convertColumnTypes(type) {\n  let typeKeys = [];\n  if (type instanceof Array) {\n    const invalidArray = type.some((a) => typeof a !== \"string\");\n    if (invalidArray) {\n      _warnOnce(\"if colDef.type is supplied an array it should be of type 'string[]'\");\n    } else {\n      typeKeys = type;\n    }\n  } else if (typeof type === \"string\") {\n    typeKeys = type.split(\",\");\n  } else {\n    _warnOnce(\"colDef.type should be of type 'string' | 'string[]'\");\n  }\n  return typeKeys;\n}\n\n// community-modules/core/src/columns/columnFactory.ts\nvar ColumnFactory = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnFactory\";\n  }\n  wireBeans(beans) {\n    this.dataTypeService = beans.dataTypeService;\n  }\n  createColumnTree(defs, primaryColumns, existingTree, source) {\n    const columnKeyCreator = new ColumnKeyCreator();\n    const { existingCols, existingGroups, existingColKeys } = this.extractExistingTreeData(existingTree);\n    columnKeyCreator.addExistingKeys(existingColKeys);\n    const unbalancedTree = this.recursivelyCreateColumns(\n      defs,\n      0,\n      primaryColumns,\n      existingCols,\n      columnKeyCreator,\n      existingGroups,\n      source\n    );\n    const treeDept = this.findMaxDept(unbalancedTree, 0);\n    const columnTree = this.balanceColumnTree(unbalancedTree, 0, treeDept, columnKeyCreator);\n    const deptFirstCallback = (child, parent) => {\n      if (isProvidedColumnGroup(child)) {\n        child.setupExpandable();\n      }\n      child.setOriginalParent(parent);\n    };\n    depthFirstOriginalTreeSearch(null, columnTree, deptFirstCallback);\n    return {\n      columnTree,\n      treeDept\n    };\n  }\n  extractExistingTreeData(existingTree) {\n    const existingCols = [];\n    const existingGroups = [];\n    const existingColKeys = [];\n    if (existingTree) {\n      depthFirstOriginalTreeSearch(null, existingTree, (item) => {\n        if (isProvidedColumnGroup(item)) {\n          const group = item;\n          existingGroups.push(group);\n        } else {\n          const col = item;\n          existingColKeys.push(col.getId());\n          existingCols.push(col);\n        }\n      });\n    }\n    return { existingCols, existingGroups, existingColKeys };\n  }\n  createForAutoGroups(autoGroupCols, liveTree) {\n    const tree = [];\n    const dept = this.findDepth(liveTree);\n    autoGroupCols.forEach((col) => {\n      let nextChild = col;\n      for (let i = dept - 1; i >= 0; i--) {\n        const autoGroup = new AgProvidedColumnGroup(null, `FAKE_PATH_${col.getId()}}_${i}`, true, i);\n        this.createBean(autoGroup);\n        autoGroup.setChildren([nextChild]);\n        nextChild.setOriginalParent(autoGroup);\n        nextChild = autoGroup;\n      }\n      if (dept === 0) {\n        col.setOriginalParent(null);\n      }\n      tree.push(nextChild);\n    });\n    return [tree, dept];\n  }\n  findDepth(balancedColumnTree) {\n    let dept = 0;\n    let pointer = balancedColumnTree;\n    while (pointer && pointer[0] && isProvidedColumnGroup(pointer[0])) {\n      dept++;\n      pointer = pointer[0].getChildren();\n    }\n    return dept;\n  }\n  balanceColumnTree(unbalancedTree, currentDept, columnDept, columnKeyCreator) {\n    const result = [];\n    for (let i = 0; i < unbalancedTree.length; i++) {\n      const child = unbalancedTree[i];\n      if (isProvidedColumnGroup(child)) {\n        const originalGroup = child;\n        const newChildren = this.balanceColumnTree(\n          originalGroup.getChildren(),\n          currentDept + 1,\n          columnDept,\n          columnKeyCreator\n        );\n        originalGroup.setChildren(newChildren);\n        result.push(originalGroup);\n      } else {\n        let firstPaddedGroup;\n        let currentPaddedGroup;\n        for (let j = columnDept - 1; j >= currentDept; j--) {\n          const newColId = columnKeyCreator.getUniqueKey(null, null);\n          const colGroupDefMerged = this.createMergedColGroupDef(null);\n          const paddedGroup = new AgProvidedColumnGroup(colGroupDefMerged, newColId, true, currentDept);\n          this.createBean(paddedGroup);\n          if (currentPaddedGroup) {\n            currentPaddedGroup.setChildren([paddedGroup]);\n          }\n          currentPaddedGroup = paddedGroup;\n          if (!firstPaddedGroup) {\n            firstPaddedGroup = currentPaddedGroup;\n          }\n        }\n        if (firstPaddedGroup && currentPaddedGroup) {\n          result.push(firstPaddedGroup);\n          const hasGroups = unbalancedTree.some((leaf) => isProvidedColumnGroup(leaf));\n          if (hasGroups) {\n            currentPaddedGroup.setChildren([child]);\n            continue;\n          } else {\n            currentPaddedGroup.setChildren(unbalancedTree);\n            break;\n          }\n        }\n        result.push(child);\n      }\n    }\n    return result;\n  }\n  findMaxDept(treeChildren, dept) {\n    let maxDeptThisLevel = dept;\n    for (let i = 0; i < treeChildren.length; i++) {\n      const abstractColumn = treeChildren[i];\n      if (isProvidedColumnGroup(abstractColumn)) {\n        const originalGroup = abstractColumn;\n        const newDept = this.findMaxDept(originalGroup.getChildren(), dept + 1);\n        if (maxDeptThisLevel < newDept) {\n          maxDeptThisLevel = newDept;\n        }\n      }\n    }\n    return maxDeptThisLevel;\n  }\n  recursivelyCreateColumns(defs, level, primaryColumns, existingColsCopy, columnKeyCreator, existingGroups, source) {\n    if (!defs)\n      return [];\n    const result = new Array(defs.length);\n    for (let i = 0; i < result.length; i++) {\n      const def = defs[i];\n      if (this.isColumnGroup(def)) {\n        result[i] = this.createColumnGroup(\n          primaryColumns,\n          def,\n          level,\n          existingColsCopy,\n          columnKeyCreator,\n          existingGroups,\n          source\n        );\n      } else {\n        result[i] = this.createColumn(\n          primaryColumns,\n          def,\n          existingColsCopy,\n          columnKeyCreator,\n          source\n        );\n      }\n    }\n    return result;\n  }\n  createColumnGroup(primaryColumns, colGroupDef, level, existingColumns, columnKeyCreator, existingGroups, source) {\n    const colGroupDefMerged = this.createMergedColGroupDef(colGroupDef);\n    const groupId = columnKeyCreator.getUniqueKey(colGroupDefMerged.groupId || null, null);\n    const providedGroup = new AgProvidedColumnGroup(colGroupDefMerged, groupId, false, level);\n    this.createBean(providedGroup);\n    const existingGroupAndIndex = this.findExistingGroup(colGroupDef, existingGroups);\n    if (existingGroupAndIndex) {\n      existingGroups.splice(existingGroupAndIndex.idx, 1);\n    }\n    const existingGroup = existingGroupAndIndex?.group;\n    if (existingGroup) {\n      providedGroup.setExpanded(existingGroup.isExpanded());\n    }\n    const children = this.recursivelyCreateColumns(\n      colGroupDefMerged.children,\n      level + 1,\n      primaryColumns,\n      existingColumns,\n      columnKeyCreator,\n      existingGroups,\n      source\n    );\n    providedGroup.setChildren(children);\n    return providedGroup;\n  }\n  createMergedColGroupDef(colGroupDef) {\n    const colGroupDefMerged = {};\n    Object.assign(colGroupDefMerged, this.gos.get(\"defaultColGroupDef\"));\n    Object.assign(colGroupDefMerged, colGroupDef);\n    return colGroupDefMerged;\n  }\n  createColumn(primaryColumns, colDef, existingColsCopy, columnKeyCreator, source) {\n    const existingColAndIndex = this.findExistingColumn(colDef, existingColsCopy);\n    if (existingColAndIndex) {\n      existingColsCopy?.splice(existingColAndIndex.idx, 1);\n    }\n    let column = existingColAndIndex?.column;\n    if (!column) {\n      const colId = columnKeyCreator.getUniqueKey(colDef.colId, colDef.field);\n      const colDefMerged = this.addColumnDefaultAndTypes(colDef, colId);\n      column = new AgColumn(colDefMerged, colDef, colId, primaryColumns);\n      this.createBean(column);\n    } else {\n      const colDefMerged = this.addColumnDefaultAndTypes(colDef, column.getColId());\n      column.setColDef(colDefMerged, colDef, source);\n      this.applyColumnState(column, colDefMerged, source);\n    }\n    this.dataTypeService?.addColumnListeners(column);\n    return column;\n  }\n  applyColumnState(column, colDef, source) {\n    const flex = _attrToNumber(colDef.flex);\n    if (flex !== void 0) {\n      column.setFlex(flex);\n    }\n    const noFlexThisCol = column.getFlex() <= 0;\n    if (noFlexThisCol) {\n      const width = _attrToNumber(colDef.width);\n      if (width != null) {\n        column.setActualWidth(width, source);\n      } else {\n        const widthBeforeUpdate = column.getActualWidth();\n        column.setActualWidth(widthBeforeUpdate, source);\n      }\n    }\n    if (colDef.sort !== void 0) {\n      if (colDef.sort == \"asc\" || colDef.sort == \"desc\") {\n        column.setSort(colDef.sort, source);\n      } else {\n        column.setSort(void 0, source);\n      }\n    }\n    const sortIndex = _attrToNumber(colDef.sortIndex);\n    if (sortIndex !== void 0) {\n      column.setSortIndex(sortIndex);\n    }\n    const hide = _attrToBoolean(colDef.hide);\n    if (hide !== void 0) {\n      column.setVisible(!hide, source);\n    }\n    if (colDef.pinned !== void 0) {\n      column.setPinned(colDef.pinned);\n    }\n  }\n  findExistingColumn(newColDef, existingColsCopy) {\n    if (!existingColsCopy)\n      return void 0;\n    for (let i = 0; i < existingColsCopy.length; i++) {\n      const def = existingColsCopy[i].getUserProvidedColDef();\n      if (!def)\n        continue;\n      const newHasId = newColDef.colId != null;\n      if (newHasId) {\n        if (existingColsCopy[i].getId() === newColDef.colId) {\n          return { idx: i, column: existingColsCopy[i] };\n        }\n        continue;\n      }\n      const newHasField = newColDef.field != null;\n      if (newHasField) {\n        if (def.field === newColDef.field) {\n          return { idx: i, column: existingColsCopy[i] };\n        }\n        continue;\n      }\n      if (def === newColDef) {\n        return { idx: i, column: existingColsCopy[i] };\n      }\n    }\n    return void 0;\n  }\n  findExistingGroup(newGroupDef, existingGroups) {\n    const newHasId = newGroupDef.groupId != null;\n    if (!newHasId) {\n      return void 0;\n    }\n    for (let i = 0; i < existingGroups.length; i++) {\n      const existingGroup = existingGroups[i];\n      const existingDef = existingGroup.getColGroupDef();\n      if (!existingDef) {\n        continue;\n      }\n      if (existingGroup.getId() === newGroupDef.groupId) {\n        return { idx: i, group: existingGroup };\n      }\n    }\n    return void 0;\n  }\n  addColumnDefaultAndTypes(colDef, colId) {\n    const res = {};\n    const defaultColDef = this.gos.get(\"defaultColDef\");\n    _mergeDeep(res, defaultColDef, false, true);\n    const columnType = this.updateColDefAndGetColumnType(res, colDef, colId);\n    if (columnType) {\n      this.assignColumnTypes(columnType, res);\n    }\n    _mergeDeep(res, colDef, false, true);\n    const autoGroupColDef = this.gos.get(\"autoGroupColumnDef\");\n    const isSortingCoupled = this.gos.isColumnsSortingCoupledToGroup();\n    if (colDef.rowGroup && autoGroupColDef && isSortingCoupled) {\n      _mergeDeep(\n        res,\n        { sort: autoGroupColDef.sort, initialSort: autoGroupColDef.initialSort },\n        false,\n        true\n      );\n    }\n    this.dataTypeService?.validateColDef(res);\n    return res;\n  }\n  updateColDefAndGetColumnType(colDef, userColDef, colId) {\n    const dataTypeDefinitionColumnType = this.dataTypeService?.updateColDefAndGetColumnType(\n      colDef,\n      userColDef,\n      colId\n    );\n    const columnTypes = userColDef.type ?? dataTypeDefinitionColumnType ?? colDef.type;\n    colDef.type = columnTypes;\n    return columnTypes ? convertColumnTypes(columnTypes) : void 0;\n  }\n  assignColumnTypes(typeKeys, colDefMerged) {\n    if (!typeKeys.length) {\n      return;\n    }\n    const allColumnTypes = Object.assign({}, DefaultColumnTypes);\n    const userTypes = this.gos.get(\"columnTypes\") || {};\n    _iterateObject(userTypes, (key, value) => {\n      if (key in allColumnTypes) {\n        _warnOnce(`the column type '${key}' is a default column type and cannot be overridden.`);\n      } else {\n        const colType = value;\n        if (colType.type) {\n          _warnOnce(\n            `Column type definitions 'columnTypes' with a 'type' attribute are not supported because a column type cannot refer to another column type. Only column definitions 'columnDefs' can use the 'type' attribute to refer to a column type.`\n          );\n        }\n        allColumnTypes[key] = value;\n      }\n    });\n    typeKeys.forEach((t) => {\n      const typeColDef = allColumnTypes[t.trim()];\n      if (typeColDef) {\n        _mergeDeep(colDefMerged, typeColDef, false, true);\n      } else {\n        _warnOnce(\"colDef.type '\" + t + \"' does not correspond to defined gridOptions.columnTypes\");\n      }\n    });\n  }\n  // if object has children, we assume it's a group\n  isColumnGroup(abstractColDef) {\n    return abstractColDef.children !== void 0;\n  }\n};\nfunction depthFirstOriginalTreeSearch(parent, tree, callback) {\n  if (!tree) {\n    return;\n  }\n  for (let i = 0; i < tree.length; i++) {\n    const child = tree[i];\n    if (isProvidedColumnGroup(child)) {\n      depthFirstOriginalTreeSearch(child, child.getChildren(), callback);\n    }\n    callback(child, parent);\n  }\n}\n\n// community-modules/core/src/columns/columnModel.ts\nvar ColumnModel = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnModel\";\n    // if pivotMode is on, however pivot results are NOT shown if no pivot columns are set\n    this.pivotMode = false;\n    this.autoHeightActiveAtLeastOnce = false;\n    this.ready = false;\n    this.changeEventsDispatching = false;\n    // when we're waiting for cell data types to be inferred, we need to defer column resizing\n    this.shouldQueueResizeOperations = false;\n    this.resizeOperationQueue = [];\n  }\n  wireBeans(beans) {\n    this.context = beans.context;\n    this.ctrlsService = beans.ctrlsService;\n    this.columnFactory = beans.columnFactory;\n    this.columnSizeService = beans.columnSizeService;\n    this.visibleColsService = beans.visibleColsService;\n    this.columnViewportService = beans.columnViewportService;\n    this.pivotResultColsService = beans.pivotResultColsService;\n    this.columnAnimationService = beans.columnAnimationService;\n    this.autoColService = beans.autoColService;\n    this.valueCache = beans.valueCache;\n    this.columnDefFactory = beans.columnDefFactory;\n    this.columnApplyStateService = beans.columnApplyStateService;\n    this.columnGroupStateService = beans.columnGroupStateService;\n    this.eventDispatcher = beans.columnEventDispatcher;\n    this.columnMoveService = beans.columnMoveService;\n    this.columnAutosizeService = beans.columnAutosizeService;\n    this.funcColsService = beans.funcColsService;\n    this.quickFilterService = beans.quickFilterService;\n    this.showRowGroupColsService = beans.showRowGroupColsService;\n    this.environment = beans.environment;\n  }\n  postConstruct() {\n    const pivotMode = this.gos.get(\"pivotMode\");\n    if (this.isPivotSettingAllowed(pivotMode)) {\n      this.pivotMode = pivotMode;\n    }\n    this.addManagedPropertyListeners(\n      [\"groupDisplayType\", \"treeData\", \"treeDataDisplayType\", \"groupHideOpenParents\"],\n      (event) => this.refreshAll(convertSourceType(event.source))\n    );\n    this.addManagedPropertyListener(\n      \"autoGroupColumnDef\",\n      (event) => this.onAutoGroupColumnDefChanged(convertSourceType(event.source))\n    );\n    this.addManagedPropertyListeners(\n      [\"defaultColDef\", \"defaultColGroupDef\", \"columnTypes\", \"suppressFieldDotNotation\"],\n      (event) => this.recreateColumnDefs(convertSourceType(event.source))\n    );\n    this.addManagedPropertyListener(\n      \"pivotMode\",\n      (event) => this.setPivotMode(this.gos.get(\"pivotMode\"), convertSourceType(event.source))\n    );\n    this.addManagedEventListeners({ firstDataRendered: () => this.onFirstDataRendered() });\n  }\n  // called from SyncService, when grid has finished initialising\n  createColsFromColDefs(colsPreviouslyExisted, source) {\n    const dispatchEventsFunc = colsPreviouslyExisted ? this.columnApplyStateService.compareColumnStatesAndDispatchEvents(source) : void 0;\n    this.valueCache.expire();\n    const oldCols = this.colDefCols?.list;\n    const oldTree = this.colDefCols?.tree;\n    const newTree = this.columnFactory.createColumnTree(this.colDefs, true, oldTree, source);\n    destroyColumnTree(this.context, this.colDefCols?.tree, newTree.columnTree);\n    const tree = newTree.columnTree;\n    const treeDepth = newTree.treeDept;\n    const list = getColumnsFromTree(tree);\n    const map = {};\n    list.forEach((col) => map[col.getId()] = col);\n    this.colDefCols = { tree, treeDepth, list, map };\n    this.funcColsService.extractCols(source, oldCols);\n    this.ready = true;\n    this.refreshCols();\n    const maintainColOrder = colsPreviouslyExisted && !this.showingPivotResult && !this.gos.get(\"maintainColumnOrder\");\n    if (maintainColOrder) {\n      this.orderColsLikeColDefCols();\n    }\n    this.visibleColsService.refresh(source);\n    this.columnViewportService.checkViewportColumns();\n    this.eventDispatcher.everythingChanged(source);\n    if (dispatchEventsFunc) {\n      this.changeEventsDispatching = true;\n      dispatchEventsFunc();\n      this.changeEventsDispatching = false;\n    }\n    this.eventDispatcher.newColumnsLoaded(source);\n    if (source === \"gridInitializing\") {\n      this.columnSizeService.applyAutosizeStrategy();\n    }\n  }\n  // called from: buildAutoGroupColumns (events 'groupDisplayType', 'treeData', 'treeDataDisplayType', 'groupHideOpenParents')\n  // createColsFromColDefs (recreateColumnDefs, setColumnsDefs),\n  // setPivotMode, applyColumnState,\n  // functionColsService.setPrimaryColList, functionColsService.updatePrimaryColList,\n  // pivotResultColsService.setPivotResultCols\n  refreshCols() {\n    if (!this.colDefCols) {\n      return;\n    }\n    const prevColTree = this.cols?.tree;\n    this.saveColOrder();\n    this.selectCols();\n    this.createAutoCols();\n    this.addAutoCols();\n    this.restoreColOrder();\n    this.positionLockedCols();\n    this.showRowGroupColsService?.refresh();\n    this.quickFilterService?.refreshQuickFilterCols();\n    this.setColSpanActive();\n    this.setAutoHeightActive();\n    this.visibleColsService.clear();\n    this.columnViewportService.clear();\n    const dispatchChangedEvent = !_areEqual(prevColTree, this.cols.tree);\n    if (dispatchChangedEvent) {\n      this.eventDispatcher.gridColumns();\n    }\n  }\n  selectCols() {\n    const pivotResultCols = this.pivotResultColsService.getPivotResultCols();\n    this.showingPivotResult = pivotResultCols != null;\n    if (pivotResultCols) {\n      const { map, list, tree, treeDepth } = pivotResultCols;\n      this.cols = {\n        list: list.slice(),\n        map: { ...map },\n        tree: tree.slice(),\n        treeDepth\n      };\n      const hasSameColumns = pivotResultCols.list.some((col) => this.cols?.map[col.getColId()] !== void 0);\n      if (!hasSameColumns) {\n        this.lastPivotOrder = null;\n      }\n    } else {\n      const { map, list, tree, treeDepth } = this.colDefCols;\n      this.cols = {\n        list: list.slice(),\n        map: { ...map },\n        tree: tree.slice(),\n        treeDepth\n      };\n    }\n  }\n  getColsToShow() {\n    const showAutoGroupAndValuesOnly = this.isPivotMode() && !this.isShowingPivotResult();\n    const valueColumns = this.funcColsService.getValueColumns();\n    const res = this.cols.list.filter((col) => {\n      const isAutoGroupCol = isColumnGroupAutoCol(col);\n      if (showAutoGroupAndValuesOnly) {\n        const isValueCol = valueColumns && _includes(valueColumns, col);\n        return isAutoGroupCol || isValueCol;\n      } else {\n        return isAutoGroupCol || col.isVisible();\n      }\n    });\n    return res;\n  }\n  addAutoCols() {\n    if (this.autoCols == null) {\n      return;\n    }\n    this.cols.list = this.autoCols.list.concat(this.cols.list);\n    this.cols.tree = this.autoCols.tree.concat(this.cols.tree);\n    updateColsMap(this.cols);\n  }\n  createAutoCols() {\n    const groupFullWidthRow = this.gos.isGroupUseEntireRow(this.pivotMode);\n    const suppressAutoColumn = this.pivotMode ? this.gos.get(\"pivotSuppressAutoColumn\") : this.isSuppressAutoCol();\n    const rowGroupCols = this.funcColsService.getRowGroupColumns();\n    const groupingActive = rowGroupCols.length > 0 || this.gos.get(\"treeData\");\n    const noAutoCols = !groupingActive || suppressAutoColumn || groupFullWidthRow;\n    const destroyPrevious = () => {\n      if (this.autoCols) {\n        destroyColumnTree(this.context, this.autoCols.tree);\n        this.autoCols = null;\n      }\n    };\n    if (noAutoCols || !this.autoColService) {\n      destroyPrevious();\n      return;\n    }\n    const list = this.autoColService.createAutoCols(rowGroupCols) ?? [];\n    const autoColsSame = areColIdsEqual(list, this.autoCols?.list || null);\n    const newTreeDepth = this.cols.treeDepth;\n    const oldTreeDepth = this.autoCols ? this.autoCols.treeDepth : -1;\n    const treeDeptSame = oldTreeDepth == newTreeDepth;\n    if (autoColsSame && treeDeptSame) {\n      return;\n    }\n    destroyPrevious();\n    const [tree, treeDepth] = this.columnFactory.createForAutoGroups(list, this.cols?.tree);\n    this.autoCols = {\n      list,\n      tree,\n      treeDepth,\n      map: {}\n    };\n    const putAutocolsFirstInList = (cols) => {\n      if (!cols) {\n        return null;\n      }\n      const colsFiltered = cols.filter((col) => !isColumnGroupAutoCol(col));\n      return [...list, ...colsFiltered];\n    };\n    this.lastOrder = putAutocolsFirstInList(this.lastOrder);\n    this.lastPivotOrder = putAutocolsFirstInList(this.lastPivotOrder);\n  }\n  // on events 'groupDisplayType', 'treeData', 'treeDataDisplayType', 'groupHideOpenParents'\n  refreshAll(source) {\n    if (!this.isReady()) {\n      return;\n    }\n    this.refreshCols();\n    this.visibleColsService.refresh(source);\n  }\n  setColsVisible(keys, visible = false, source) {\n    this.columnApplyStateService.applyColumnState(\n      {\n        state: keys.map((key) => ({\n          colId: typeof key === \"string\" ? key : key.getColId(),\n          hide: !visible\n        }))\n      },\n      source\n    );\n  }\n  setColsPinned(keys, pinned, source) {\n    if (!this.cols) {\n      return;\n    }\n    if (_missingOrEmpty(keys)) {\n      return;\n    }\n    if (this.gos.isDomLayout(\"print\")) {\n      _warnOnce(`Changing the column pinning status is not allowed with domLayout='print'`);\n      return;\n    }\n    this.columnAnimationService.start();\n    let actualPinned;\n    if (pinned === true || pinned === \"left\") {\n      actualPinned = \"left\";\n    } else if (pinned === \"right\") {\n      actualPinned = \"right\";\n    } else {\n      actualPinned = null;\n    }\n    const updatedCols = [];\n    keys.forEach((key) => {\n      if (!key) {\n        return;\n      }\n      const column = this.getCol(key);\n      if (!column) {\n        return;\n      }\n      if (column.getPinned() !== actualPinned) {\n        column.setPinned(actualPinned);\n        updatedCols.push(column);\n      }\n    });\n    if (updatedCols.length) {\n      this.visibleColsService.refresh(source);\n      this.eventDispatcher.columnPinned(updatedCols, source);\n    }\n    this.columnAnimationService.finish();\n  }\n  // called by headerRenderer - when a header is opened or closed\n  setColumnGroupOpened(key, newValue, source) {\n    let keyAsString;\n    if (isProvidedColumnGroup(key)) {\n      keyAsString = key.getId();\n    } else {\n      keyAsString = key || \"\";\n    }\n    this.columnGroupStateService.setColumnGroupState([{ groupId: keyAsString, open: newValue }], source);\n  }\n  getProvidedColGroup(key) {\n    let res = null;\n    depthFirstOriginalTreeSearch(null, this.cols?.tree, (node) => {\n      if (isProvidedColumnGroup(node)) {\n        if (node.getId() === key) {\n          res = node;\n        }\n      }\n    });\n    return res;\n  }\n  isColGroupLocked(column) {\n    const groupLockGroupColumns = this.gos.get(\"groupLockGroupColumns\");\n    if (!column.isRowGroupActive() || groupLockGroupColumns === 0) {\n      return false;\n    }\n    if (groupLockGroupColumns === -1) {\n      return true;\n    }\n    const rowGroupCols = this.funcColsService.getRowGroupColumns();\n    const colIndex = rowGroupCols.findIndex((groupCol) => groupCol.getColId() === column.getColId());\n    return groupLockGroupColumns > colIndex;\n  }\n  isSuppressAutoCol() {\n    const groupDisplayType = this.gos.get(\"groupDisplayType\");\n    const isCustomRowGroups = groupDisplayType === \"custom\";\n    if (isCustomRowGroups) {\n      return true;\n    }\n    const treeDataDisplayType = this.gos.get(\"treeDataDisplayType\");\n    return treeDataDisplayType === \"custom\";\n  }\n  setAutoHeightActive() {\n    this.autoHeightActive = this.cols.list.some((col) => col.isVisible() && col.isAutoHeight());\n    if (this.autoHeightActive) {\n      this.autoHeightActiveAtLeastOnce = true;\n      const supportedRowModel = this.gos.isRowModelType(\"clientSide\") || this.gos.isRowModelType(\"serverSide\");\n      if (!supportedRowModel) {\n        _warnOnce(\"autoHeight columns only work with Client Side Row Model and Server Side Row Model.\");\n      }\n    }\n  }\n  restoreColOrder() {\n    const lastOrder = this.showingPivotResult ? this.lastPivotOrder : this.lastOrder;\n    if (!lastOrder) {\n      return;\n    }\n    const lastOrderMapped = new Map(lastOrder.map((col, index) => [col, index]));\n    const noColsFound = !this.cols.list.some((col) => lastOrderMapped.has(col));\n    if (noColsFound) {\n      return;\n    }\n    const colsMap = new Map(this.cols.list.map((col) => [col, true]));\n    const lastOrderFiltered = lastOrder.filter((col) => colsMap.has(col));\n    const lastOrderFilteredMap = new Map(lastOrderFiltered.map((col) => [col, true]));\n    const missingFromLastOrder = this.cols.list.filter((col) => !lastOrderFilteredMap.has(col));\n    const res = lastOrderFiltered.slice();\n    missingFromLastOrder.forEach((newCol) => {\n      let parent = newCol.getOriginalParent();\n      if (!parent) {\n        res.push(newCol);\n        return;\n      }\n      const siblings = [];\n      while (!siblings.length && parent) {\n        const leafCols = parent.getLeafColumns();\n        leafCols.forEach((leafCol) => {\n          const presentInNewCols = res.indexOf(leafCol) >= 0;\n          const notYetInSiblings = siblings.indexOf(leafCol) < 0;\n          if (presentInNewCols && notYetInSiblings) {\n            siblings.push(leafCol);\n          }\n        });\n        parent = parent.getOriginalParent();\n      }\n      if (!siblings.length) {\n        res.push(newCol);\n        return;\n      }\n      const indexes = siblings.map((col) => res.indexOf(col));\n      const lastIndex = Math.max(...indexes);\n      _insertIntoArray(res, newCol, lastIndex + 1);\n    });\n    this.cols.list = res;\n  }\n  orderColsLikeColDefCols() {\n    if (!this.colDefCols || !this.cols) {\n      return;\n    }\n    const colsOrdered = this.colDefCols.list.filter((col) => this.cols.list.indexOf(col) >= 0);\n    const otherCols = this.cols.list.filter((col) => colsOrdered.indexOf(col) < 0);\n    this.cols.list = [...otherCols, ...colsOrdered];\n    this.cols.list = this.columnMoveService.placeLockedColumns(this.cols.list);\n  }\n  sortColsLikeKeys(colIds) {\n    if (this.cols == null) {\n      return;\n    }\n    let newOrder = [];\n    const processedColIds = {};\n    colIds.forEach((colId) => {\n      if (processedColIds[colId]) {\n        return;\n      }\n      const col = this.cols.map[colId];\n      if (col) {\n        newOrder.push(col);\n        processedColIds[colId] = true;\n      }\n    });\n    let autoGroupInsertIndex = 0;\n    this.cols.list.forEach((col) => {\n      const colId = col.getColId();\n      const alreadyProcessed = processedColIds[colId] != null;\n      if (alreadyProcessed) {\n        return;\n      }\n      const isAutoGroupCol = colId.startsWith(GROUP_AUTO_COLUMN_ID);\n      if (isAutoGroupCol) {\n        _insertIntoArray(newOrder, col, autoGroupInsertIndex++);\n      } else {\n        newOrder.push(col);\n      }\n    });\n    newOrder = this.columnMoveService.placeLockedColumns(newOrder);\n    if (!this.columnMoveService.doesMovePassMarryChildren(newOrder)) {\n      _warnOnce(\n        \"Applying column order broke a group where columns should be married together. Applying new order has been discarded.\"\n      );\n      return;\n    }\n    this.cols.list = newOrder;\n  }\n  // returns the provided cols sorted in same order as they appear in this.cols, eg if this.cols\n  // contains [a,b,c,d,e] and col passed is [e,a] then the passed cols are sorted into [a,e]\n  sortColsLikeCols(cols) {\n    if (!cols || cols.length <= 1) {\n      return;\n    }\n    const notAllColsPresent = cols.filter((c) => this.cols.list.indexOf(c) < 0).length > 0;\n    if (notAllColsPresent) {\n      return;\n    }\n    cols.sort((a, b) => {\n      const indexA = this.cols.list.indexOf(a);\n      const indexB = this.cols.list.indexOf(b);\n      return indexA - indexB;\n    });\n  }\n  resetColDefIntoCol(column, source) {\n    const userColDef = column.getUserProvidedColDef();\n    if (!userColDef) {\n      return false;\n    }\n    const newColDef = this.columnFactory.addColumnDefaultAndTypes(userColDef, column.getColId());\n    column.setColDef(newColDef, userColDef, source);\n    return true;\n  }\n  queueResizeOperations() {\n    this.shouldQueueResizeOperations = true;\n  }\n  isShouldQueueResizeOperations() {\n    return this.shouldQueueResizeOperations;\n  }\n  processResizeOperations() {\n    this.shouldQueueResizeOperations = false;\n    this.resizeOperationQueue.forEach((resizeOperation) => resizeOperation());\n    this.resizeOperationQueue = [];\n  }\n  pushResizeOperation(func) {\n    this.resizeOperationQueue.push(func);\n  }\n  moveInCols(movedColumns, toIndex, source) {\n    _moveInArray(this.cols?.list, movedColumns, toIndex);\n    this.visibleColsService.refresh(source);\n  }\n  positionLockedCols() {\n    this.cols.list = this.columnMoveService.placeLockedColumns(this.cols.list);\n  }\n  saveColOrder() {\n    if (this.showingPivotResult) {\n      this.lastPivotOrder = this.cols?.list;\n    } else {\n      this.lastOrder = this.cols?.list;\n    }\n  }\n  getColumnDefs() {\n    if (!this.colDefCols) {\n      return;\n    }\n    const cols = this.colDefCols.list.slice();\n    if (this.showingPivotResult) {\n      cols.sort((a, b) => this.lastOrder.indexOf(a) - this.lastOrder.indexOf(b));\n    } else if (this.lastOrder) {\n      cols.sort((a, b) => this.cols.list.indexOf(a) - this.cols.list.indexOf(b));\n    }\n    const rowGroupColumns = this.funcColsService.getRowGroupColumns();\n    const pivotColumns = this.funcColsService.getPivotColumns();\n    return this.columnDefFactory.buildColumnDefs(cols, rowGroupColumns, pivotColumns);\n  }\n  isShowingPivotResult() {\n    return this.showingPivotResult;\n  }\n  // called by clientSideRowModel.refreshModel\n  isChangeEventsDispatching() {\n    return this.changeEventsDispatching;\n  }\n  isColSpanActive() {\n    return this.colSpanActive;\n  }\n  // used by Column Tool Panel\n  isProvidedColGroupsPresent() {\n    return this.colDefCols?.treeDepth > 0;\n  }\n  setColSpanActive() {\n    this.colSpanActive = this.cols.list.some((col) => col.getColDef().colSpan != null);\n  }\n  isAutoRowHeightActive() {\n    return this.autoHeightActive;\n  }\n  wasAutoRowHeightEverActive() {\n    return this.autoHeightActiveAtLeastOnce;\n  }\n  // + gridPanel -> for resizing the body and setting top margin\n  getHeaderRowCount() {\n    return this.cols ? this.cols.treeDepth + 1 : -1;\n  }\n  isReady() {\n    return this.ready;\n  }\n  isPivotMode() {\n    return this.pivotMode;\n  }\n  setPivotMode(pivotMode, source) {\n    if (pivotMode === this.pivotMode || !this.isPivotSettingAllowed(this.pivotMode)) {\n      return;\n    }\n    this.pivotMode = pivotMode;\n    if (!this.ready) {\n      return;\n    }\n    this.refreshCols();\n    this.visibleColsService.refresh(source);\n    this.eventDispatcher.pivotModeChanged();\n  }\n  isPivotSettingAllowed(pivot) {\n    if (pivot && this.gos.get(\"treeData\")) {\n      _warnOnce(\"Pivot mode not available with treeData.\");\n      return false;\n    }\n    return true;\n  }\n  // + clientSideRowModel\n  isPivotActive() {\n    const pivotColumns = this.funcColsService.getPivotColumns();\n    return this.pivotMode && !_missingOrEmpty(pivotColumns);\n  }\n  // called when dataTypes change\n  recreateColumnDefs(source) {\n    if (!this.cols) {\n      return;\n    }\n    if (this.autoCols) {\n      this.autoColService.updateAutoCols(this.autoCols.list, source);\n    }\n    this.createColsFromColDefs(true, source);\n  }\n  setColumnDefs(columnDefs, source) {\n    const colsPreviouslyExisted = !!this.colDefs;\n    this.colDefs = columnDefs;\n    this.createColsFromColDefs(colsPreviouslyExisted, source);\n  }\n  destroy() {\n    destroyColumnTree(this.context, this.colDefCols?.tree);\n    destroyColumnTree(this.context, this.autoCols?.tree);\n    super.destroy();\n  }\n  getColTree() {\n    return this.cols.tree;\n  }\n  // + columnSelectPanel\n  getColDefColTree() {\n    return this.colDefCols.tree;\n  }\n  // + clientSideRowController -> sorting, building quick filter text\n  // + headerRenderer -> sorting (clearing icon)\n  getColDefCols() {\n    return this.colDefCols?.list ? this.colDefCols.list : null;\n  }\n  // + moveColumnController\n  getCols() {\n    return this.cols?.list ?? [];\n  }\n  // returns colDefCols, pivotResultCols and autoCols\n  getAllCols() {\n    const pivotResultCols = this.pivotResultColsService.getPivotResultCols();\n    const pivotResultColsList = pivotResultCols?.list;\n    return [].concat(\n      ...[this.colDefCols?.list || [], this.autoCols?.list || [], pivotResultColsList || []]\n    );\n  }\n  getColsForKeys(keys) {\n    if (!keys) {\n      return [];\n    }\n    const res = keys.map((key) => this.getCol(key)).filter((col) => col != null);\n    return res;\n  }\n  getColDefCol(key) {\n    if (!this.colDefCols?.list) {\n      return null;\n    }\n    return this.getColFromCollection(key, this.colDefCols);\n  }\n  getCol(key) {\n    if (key == null) {\n      return null;\n    }\n    return this.getColFromCollection(key, this.cols);\n  }\n  getColFromCollection(key, cols) {\n    if (cols == null) {\n      return null;\n    }\n    const { map, list } = cols;\n    if (typeof key == \"string\" && map[key]) {\n      return map[key];\n    }\n    for (let i = 0; i < list.length; i++) {\n      if (columnsMatch(list[i], key)) {\n        return list[i];\n      }\n    }\n    return this.getAutoCol(key);\n  }\n  getAutoCol(key) {\n    if (this.autoCols == null)\n      return null;\n    return this.autoCols.list.find((groupCol) => columnsMatch(groupCol, key)) || null;\n  }\n  getAutoCols() {\n    return this.autoCols?.list || null;\n  }\n  setColHeaderHeight(col, height) {\n    const changed = col.setAutoHeaderHeight(height);\n    if (changed) {\n      if (col.isColumn) {\n        this.eventDispatcher.headerHeight(col);\n      } else {\n        this.eventDispatcher.groupHeaderHeight(col);\n      }\n    }\n  }\n  getGroupRowsHeight() {\n    const heights = [];\n    const headerRowContainerCtrls = this.ctrlsService.getHeaderRowContainerCtrls();\n    for (const headerRowContainerCtrl of headerRowContainerCtrls) {\n      if (!headerRowContainerCtrl) {\n        continue;\n      }\n      const groupRowCount = headerRowContainerCtrl.getGroupRowCount() || 0;\n      for (let i = 0; i < groupRowCount; i++) {\n        const headerRowCtrl = headerRowContainerCtrl.getGroupRowCtrlAtIndex(i);\n        const currentHeightAtPos = heights[i];\n        if (headerRowCtrl) {\n          const newHeight = this.getColumnGroupHeaderRowHeight(headerRowCtrl);\n          if (currentHeightAtPos == null || newHeight > currentHeightAtPos) {\n            heights[i] = newHeight;\n          }\n        }\n      }\n    }\n    return heights;\n  }\n  getColumnGroupHeaderRowHeight(headerRowCtrl) {\n    const defaultHeight = this.isPivotMode() ? this.getPivotGroupHeaderHeight() : this.getGroupHeaderHeight();\n    let displayedHeights = 0;\n    const headerRowCellCtrls = headerRowCtrl.getHeaderCtrls();\n    for (const headerCellCtrl of headerRowCellCtrls) {\n      const column = headerCellCtrl.getColumn();\n      if (column.isAutoHeaderHeight()) {\n        const height = column.getAutoHeaderHeight();\n        if (height != null && height > displayedHeights) {\n          displayedHeights = height;\n        }\n      }\n    }\n    return Math.max(defaultHeight, displayedHeights);\n  }\n  getColumnHeaderRowHeight() {\n    const defaultHeight = this.isPivotMode() ? this.getPivotHeaderHeight() : this.getHeaderHeight();\n    const allDisplayedCols = this.visibleColsService.getAllCols();\n    const displayedHeights = allDisplayedCols.filter((col) => col.isAutoHeaderHeight()).map((col) => col.getAutoHeaderHeight() || 0);\n    return Math.max(defaultHeight, ...displayedHeights);\n  }\n  getHeaderHeight() {\n    return this.gos.get(\"headerHeight\") ?? this.environment.getDefaultHeaderHeight();\n  }\n  getFloatingFiltersHeight() {\n    return this.gos.get(\"floatingFiltersHeight\") ?? this.getHeaderHeight();\n  }\n  getGroupHeaderHeight() {\n    return this.gos.get(\"groupHeaderHeight\") ?? this.getHeaderHeight();\n  }\n  getPivotHeaderHeight() {\n    return this.gos.get(\"pivotHeaderHeight\") ?? this.getHeaderHeight();\n  }\n  getPivotGroupHeaderHeight() {\n    return this.gos.get(\"pivotGroupHeaderHeight\") ?? this.getGroupHeaderHeight();\n  }\n  onFirstDataRendered() {\n    const autoSizeStrategy = this.gos.get(\"autoSizeStrategy\");\n    if (autoSizeStrategy?.type !== \"fitCellContents\") {\n      return;\n    }\n    const { colIds: columns, skipHeader } = autoSizeStrategy;\n    setTimeout(() => {\n      if (columns) {\n        this.columnAutosizeService.autoSizeCols({\n          colKeys: columns,\n          skipHeader,\n          source: \"autosizeColumns\"\n        });\n      } else {\n        this.columnAutosizeService.autoSizeAllColumns(\"autosizeColumns\", skipHeader);\n      }\n    });\n  }\n  onAutoGroupColumnDefChanged(source) {\n    if (this.autoCols) {\n      this.autoColService.updateAutoCols(this.autoCols.list, source);\n    }\n  }\n};\nfunction convertSourceType(source) {\n  return source === \"gridOptionsUpdated\" ? \"gridOptionsChanged\" : source;\n}\nfunction updateColsMap(cols) {\n  cols.map = {};\n  cols.list.forEach((col) => cols.map[col.getId()] = col);\n}\nfunction columnsMatch(column, key) {\n  const columnMatches = column === key;\n  const colDefMatches = column.getColDef() === key;\n  const idMatches = column.getColId() == key;\n  return columnMatches || colDefMatches || idMatches;\n}\nfunction areColIdsEqual(colsA, colsB) {\n  return _areEqual(colsA, colsB, (a, b) => a.getColId() === b.getColId());\n}\n\n// community-modules/core/src/columns/columnAutosizeService.ts\nvar ColumnAutosizeService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnAutosizeService\";\n    this.timesDelayed = 0;\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.visibleColsService = beans.visibleColsService;\n    this.animationFrameService = beans.animationFrameService;\n    this.autoWidthCalculator = beans.autoWidthCalculator;\n    this.eventDispatcher = beans.columnEventDispatcher;\n    this.ctrlsService = beans.ctrlsService;\n    this.renderStatusService = beans.renderStatusService;\n  }\n  autoSizeCols(params) {\n    if (this.columnModel.isShouldQueueResizeOperations()) {\n      this.columnModel.pushResizeOperation(() => this.autoSizeCols(params));\n      return;\n    }\n    const { colKeys, skipHeader, skipHeaderGroups, stopAtGroup, source = \"api\" } = params;\n    this.animationFrameService.flushAllFrames();\n    if (this.timesDelayed < 5 && this.renderStatusService && !this.renderStatusService.areHeaderCellsRendered()) {\n      this.timesDelayed++;\n      setTimeout(() => this.autoSizeCols(params));\n      return;\n    }\n    this.timesDelayed = 0;\n    const columnsAutosized = [];\n    let changesThisTimeAround = -1;\n    const shouldSkipHeader = skipHeader != null ? skipHeader : this.gos.get(\"skipHeaderOnAutoSize\");\n    const shouldSkipHeaderGroups = skipHeaderGroups != null ? skipHeaderGroups : shouldSkipHeader;\n    while (changesThisTimeAround !== 0) {\n      changesThisTimeAround = 0;\n      const updatedColumns = [];\n      colKeys.forEach((key) => {\n        if (!key) {\n          return;\n        }\n        const column = this.columnModel.getCol(key);\n        if (!column) {\n          return;\n        }\n        if (columnsAutosized.indexOf(column) >= 0) {\n          return;\n        }\n        const preferredWidth = this.autoWidthCalculator.getPreferredWidthForColumn(column, shouldSkipHeader);\n        if (preferredWidth > 0) {\n          const newWidth = this.normaliseColumnWidth(column, preferredWidth);\n          column.setActualWidth(newWidth, source);\n          columnsAutosized.push(column);\n          changesThisTimeAround++;\n        }\n        updatedColumns.push(column);\n      });\n      if (!updatedColumns.length) {\n        continue;\n      }\n      this.visibleColsService.refresh(source);\n    }\n    if (!shouldSkipHeaderGroups) {\n      this.autoSizeColumnGroupsByColumns(colKeys, source, stopAtGroup);\n    }\n    this.eventDispatcher.columnResized(columnsAutosized, true, \"autosizeColumns\");\n  }\n  autoSizeColumn(key, source, skipHeader) {\n    if (key) {\n      this.autoSizeCols({ colKeys: [key], skipHeader, skipHeaderGroups: true, source });\n    }\n  }\n  autoSizeColumnGroupsByColumns(keys, source, stopAtGroup) {\n    const columnGroups = /* @__PURE__ */ new Set();\n    const columns = this.columnModel.getColsForKeys(keys);\n    columns.forEach((col) => {\n      let parent = col.getParent();\n      while (parent && parent != stopAtGroup) {\n        if (!parent.isPadding()) {\n          columnGroups.add(parent);\n        }\n        parent = parent.getParent();\n      }\n    });\n    let headerGroupCtrl;\n    const resizedColumns = [];\n    for (const columnGroup of columnGroups) {\n      for (const headerContainerCtrl of this.ctrlsService.getHeaderRowContainerCtrls()) {\n        headerGroupCtrl = headerContainerCtrl.getHeaderCtrlForColumn(columnGroup);\n        if (headerGroupCtrl) {\n          break;\n        }\n      }\n      if (headerGroupCtrl) {\n        headerGroupCtrl.resizeLeafColumnsToFit(source);\n      }\n    }\n    return resizedColumns;\n  }\n  autoSizeAllColumns(source, skipHeader) {\n    if (this.columnModel.isShouldQueueResizeOperations()) {\n      this.columnModel.pushResizeOperation(() => this.autoSizeAllColumns(source, skipHeader));\n      return;\n    }\n    const allDisplayedColumns = this.visibleColsService.getAllCols();\n    this.autoSizeCols({ colKeys: allDisplayedColumns, skipHeader, source });\n  }\n  // returns the width we can set to this col, taking into consideration min and max widths\n  normaliseColumnWidth(column, newWidth) {\n    const minWidth = column.getMinWidth();\n    if (newWidth < minWidth) {\n      newWidth = minWidth;\n    }\n    const maxWidth = column.getMaxWidth();\n    if (column.isGreaterThanMax(newWidth)) {\n      newWidth = maxWidth;\n    }\n    return newWidth;\n  }\n};\n\n// community-modules/core/src/columns/funcColsService.ts\nvar FuncColsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"funcColsService\";\n    this.rowGroupCols = [];\n    this.valueCols = [];\n    this.pivotCols = [];\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.eventDispatcher = beans.columnEventDispatcher;\n    this.aggFuncService = beans.aggFuncService;\n    this.visibleColsService = beans.visibleColsService;\n  }\n  getModifyColumnsNoEventsCallbacks() {\n    return {\n      addGroupCol: (column) => this.rowGroupCols.push(column),\n      removeGroupCol: (column) => _removeFromArray(this.rowGroupCols, column),\n      addPivotCol: (column) => this.pivotCols.push(column),\n      removePivotCol: (column) => _removeFromArray(this.pivotCols, column),\n      addValueCol: (column) => this.valueCols.push(column),\n      removeValueCol: (column) => _removeFromArray(this.valueCols, column)\n    };\n  }\n  getSourceColumnsForGroupColumn(groupCol) {\n    const sourceColumnId = groupCol.getColDef().showRowGroup;\n    if (!sourceColumnId) {\n      return null;\n    }\n    if (sourceColumnId === true) {\n      return this.rowGroupCols.slice(0);\n    }\n    const column = this.columnModel.getColDefCol(sourceColumnId);\n    return column ? [column] : null;\n  }\n  sortRowGroupColumns(compareFn) {\n    this.rowGroupCols.sort(compareFn);\n  }\n  sortPivotColumns(compareFn) {\n    this.pivotCols.sort(compareFn);\n  }\n  // + rowController\n  getValueColumns() {\n    return this.valueCols ? this.valueCols : [];\n  }\n  // + rowController\n  getPivotColumns() {\n    return this.pivotCols ? this.pivotCols : [];\n  }\n  // + toolPanel\n  getRowGroupColumns() {\n    return this.rowGroupCols ? this.rowGroupCols : [];\n  }\n  isRowGroupEmpty() {\n    return _missingOrEmpty(this.rowGroupCols);\n  }\n  setColumnAggFunc(key, aggFunc, source) {\n    if (!key) {\n      return;\n    }\n    const column = this.columnModel.getColDefCol(key);\n    if (!column) {\n      return;\n    }\n    column.setAggFunc(aggFunc);\n    this.eventDispatcher.columnChanged(\"columnValueChanged\", [column], source);\n  }\n  setRowGroupColumns(colKeys, source) {\n    this.setColList(\n      colKeys,\n      this.rowGroupCols,\n      \"columnRowGroupChanged\",\n      true,\n      true,\n      (added, column) => this.setRowGroupActive(added, column, source),\n      source\n    );\n  }\n  setRowGroupActive(active, column, source) {\n    if (active === column.isRowGroupActive()) {\n      return;\n    }\n    column.setRowGroupActive(active, source);\n    if (active && !this.gos.get(\"suppressRowGroupHidesColumns\")) {\n      this.columnModel.setColsVisible([column], false, source);\n    }\n    if (!active && !this.gos.get(\"suppressMakeColumnVisibleAfterUnGroup\")) {\n      this.columnModel.setColsVisible([column], true, source);\n    }\n  }\n  addRowGroupColumns(keys, source) {\n    this.updateColList(\n      keys,\n      this.rowGroupCols,\n      true,\n      true,\n      (column) => this.setRowGroupActive(true, column, source),\n      \"columnRowGroupChanged\",\n      source\n    );\n  }\n  removeRowGroupColumns(keys, source) {\n    this.updateColList(\n      keys,\n      this.rowGroupCols,\n      false,\n      true,\n      (column) => this.setRowGroupActive(false, column, source),\n      \"columnRowGroupChanged\",\n      source\n    );\n  }\n  addPivotColumns(keys, source) {\n    this.updateColList(\n      keys,\n      this.pivotCols,\n      true,\n      false,\n      (column) => column.setPivotActive(true, source),\n      \"columnPivotChanged\",\n      source\n    );\n  }\n  setPivotColumns(colKeys, source) {\n    this.setColList(\n      colKeys,\n      this.pivotCols,\n      \"columnPivotChanged\",\n      true,\n      false,\n      (added, column) => {\n        column.setPivotActive(added, source);\n      },\n      source\n    );\n  }\n  removePivotColumns(keys, source) {\n    this.updateColList(\n      keys,\n      this.pivotCols,\n      false,\n      false,\n      (column) => column.setPivotActive(false, source),\n      \"columnPivotChanged\",\n      source\n    );\n  }\n  setValueColumns(colKeys, source) {\n    this.setColList(\n      colKeys,\n      this.valueCols,\n      \"columnValueChanged\",\n      false,\n      false,\n      (added, column) => this.setValueActive(added, column, source),\n      source\n    );\n  }\n  setValueActive(active, column, source) {\n    if (active === column.isValueActive()) {\n      return;\n    }\n    column.setValueActive(active, source);\n    if (active && !column.getAggFunc() && this.aggFuncService) {\n      const initialAggFunc = this.aggFuncService.getDefaultAggFunc(column);\n      column.setAggFunc(initialAggFunc);\n    }\n  }\n  addValueColumns(keys, source) {\n    this.updateColList(\n      keys,\n      this.valueCols,\n      true,\n      false,\n      (column) => this.setValueActive(true, column, source),\n      \"columnValueChanged\",\n      source\n    );\n  }\n  removeValueColumns(keys, source) {\n    this.updateColList(\n      keys,\n      this.valueCols,\n      false,\n      false,\n      (column) => this.setValueActive(false, column, source),\n      \"columnValueChanged\",\n      source\n    );\n  }\n  moveRowGroupColumn(fromIndex, toIndex, source) {\n    if (this.isRowGroupEmpty()) {\n      return;\n    }\n    const column = this.rowGroupCols[fromIndex];\n    const impactedColumns = this.rowGroupCols.slice(fromIndex, toIndex);\n    this.rowGroupCols.splice(fromIndex, 1);\n    this.rowGroupCols.splice(toIndex, 0, column);\n    this.eventDispatcher.rowGroupChanged(impactedColumns, source);\n  }\n  setColList(colKeys, masterList, eventName, detectOrderChange, autoGroupsNeedBuilding, columnCallback, source) {\n    const gridColumns = this.columnModel.getCols();\n    if (_missingOrEmpty(gridColumns)) {\n      return;\n    }\n    const changes = /* @__PURE__ */ new Map();\n    masterList.forEach((col, idx) => changes.set(col, idx));\n    masterList.length = 0;\n    if (_exists(colKeys)) {\n      colKeys.forEach((key) => {\n        const column = this.columnModel.getColDefCol(key);\n        if (column) {\n          masterList.push(column);\n        }\n      });\n    }\n    masterList.forEach((col, idx) => {\n      const oldIndex = changes.get(col);\n      if (oldIndex === void 0) {\n        changes.set(col, 0);\n        return;\n      }\n      if (detectOrderChange && oldIndex !== idx) {\n        return;\n      }\n      changes.delete(col);\n    });\n    const primaryCols = this.columnModel.getColDefCols();\n    (primaryCols || []).forEach((column) => {\n      const added = masterList.indexOf(column) >= 0;\n      columnCallback(added, column);\n    });\n    autoGroupsNeedBuilding && this.columnModel.refreshCols();\n    this.visibleColsService.refresh(source);\n    this.eventDispatcher.columnChanged(eventName, [...changes.keys()], source);\n  }\n  updateColList(keys, masterList, actionIsAdd, autoGroupsNeedBuilding, columnCallback, eventType, source) {\n    if (!keys || _missingOrEmpty(keys)) {\n      return;\n    }\n    let atLeastOne = false;\n    const updatedCols = /* @__PURE__ */ new Set();\n    keys.forEach((key) => {\n      if (!key) {\n        return;\n      }\n      const columnToAdd = this.columnModel.getColDefCol(key);\n      if (!columnToAdd) {\n        return;\n      }\n      updatedCols.add(columnToAdd);\n      if (actionIsAdd) {\n        if (masterList.indexOf(columnToAdd) >= 0) {\n          return;\n        }\n        masterList.push(columnToAdd);\n      } else {\n        const currentIndex = masterList.indexOf(columnToAdd);\n        if (currentIndex < 0) {\n          return;\n        }\n        for (let i = currentIndex + 1; i < masterList.length; i++) {\n          updatedCols.add(masterList[i]);\n        }\n        _removeFromArray(masterList, columnToAdd);\n      }\n      columnCallback(columnToAdd);\n      atLeastOne = true;\n    });\n    if (!atLeastOne) {\n      return;\n    }\n    if (autoGroupsNeedBuilding) {\n      this.columnModel.refreshCols();\n    }\n    this.visibleColsService.refresh(source);\n    this.eventDispatcher.genericColumnEvent(eventType, Array.from(updatedCols), source);\n  }\n  extractCols(source, oldProvidedCols) {\n    this.extractRowGroupCols(source, oldProvidedCols);\n    this.extractPivotCols(source, oldProvidedCols);\n    this.extractValueCols(source, oldProvidedCols);\n  }\n  extractValueCols(source, oldProvidedCols) {\n    this.valueCols = this.extractColsCommon(\n      oldProvidedCols,\n      this.valueCols,\n      (col, flag) => col.setValueActive(flag, source),\n      // aggFunc doesn't have index variant, cos order of value cols doesn't matter, so always return null\n      () => void 0,\n      () => void 0,\n      // aggFunc is a string, so return it's existence\n      (colDef) => {\n        const aggFunc = colDef.aggFunc;\n        if (aggFunc === null || aggFunc === \"\") {\n          return null;\n        }\n        if (aggFunc === void 0) {\n          return;\n        }\n        return !!aggFunc;\n      },\n      (colDef) => {\n        return colDef.initialAggFunc != null && colDef.initialAggFunc != \"\";\n      }\n    );\n    this.valueCols.forEach((col) => {\n      const colDef = col.getColDef();\n      if (colDef.aggFunc != null && colDef.aggFunc != \"\") {\n        col.setAggFunc(colDef.aggFunc);\n      } else {\n        if (!col.getAggFunc()) {\n          col.setAggFunc(colDef.initialAggFunc);\n        }\n      }\n    });\n  }\n  extractRowGroupCols(source, oldProvidedCols) {\n    this.rowGroupCols = this.extractColsCommon(\n      oldProvidedCols,\n      this.rowGroupCols,\n      (col, flag) => col.setRowGroupActive(flag, source),\n      (colDef) => colDef.rowGroupIndex,\n      (colDef) => colDef.initialRowGroupIndex,\n      (colDef) => colDef.rowGroup,\n      (colDef) => colDef.initialRowGroup\n    );\n  }\n  extractPivotCols(source, oldProvidedCols) {\n    this.pivotCols = this.extractColsCommon(\n      oldProvidedCols,\n      this.pivotCols,\n      (col, flag) => col.setPivotActive(flag, source),\n      (colDef) => colDef.pivotIndex,\n      (colDef) => colDef.initialPivotIndex,\n      (colDef) => colDef.pivot,\n      (colDef) => colDef.initialPivot\n    );\n  }\n  extractColsCommon(oldProvidedCols = [], previousCols = [], setFlagFunc, getIndexFunc, getInitialIndexFunc, getValueFunc, getInitialValueFunc) {\n    const colsWithIndex = [];\n    const colsWithValue = [];\n    const primaryCols = this.columnModel.getColDefCols() || [];\n    primaryCols.forEach((col) => {\n      const colIsNew = oldProvidedCols.indexOf(col) < 0;\n      const colDef = col.getColDef();\n      const value = _attrToBoolean(getValueFunc(colDef));\n      const initialValue = _attrToBoolean(getInitialValueFunc(colDef));\n      const index = _attrToNumber(getIndexFunc(colDef));\n      const initialIndex = _attrToNumber(getInitialIndexFunc(colDef));\n      let include;\n      const valuePresent = value !== void 0;\n      const indexPresent = index !== void 0;\n      const initialValuePresent = initialValue !== void 0;\n      const initialIndexPresent = initialIndex !== void 0;\n      if (valuePresent) {\n        include = value;\n      } else if (indexPresent) {\n        if (index === null) {\n          include = false;\n        } else {\n          include = index >= 0;\n        }\n      } else {\n        if (colIsNew) {\n          if (initialValuePresent) {\n            include = initialValue;\n          } else if (initialIndexPresent) {\n            include = initialIndex != null && initialIndex >= 0;\n          } else {\n            include = false;\n          }\n        } else {\n          include = previousCols.indexOf(col) >= 0;\n        }\n      }\n      if (include) {\n        const useIndex = colIsNew ? index != null || initialIndex != null : index != null;\n        useIndex ? colsWithIndex.push(col) : colsWithValue.push(col);\n      }\n    });\n    const getIndexForCol = (col) => {\n      const index = getIndexFunc(col.getColDef());\n      const defaultIndex = getInitialIndexFunc(col.getColDef());\n      return index != null ? index : defaultIndex;\n    };\n    colsWithIndex.sort((colA, colB) => {\n      const indexA = getIndexForCol(colA);\n      const indexB = getIndexForCol(colB);\n      if (indexA === indexB) {\n        return 0;\n      }\n      if (indexA < indexB) {\n        return -1;\n      }\n      return 1;\n    });\n    const res = [].concat(colsWithIndex);\n    previousCols.forEach((col) => {\n      if (colsWithValue.indexOf(col) >= 0) {\n        res.push(col);\n      }\n    });\n    colsWithValue.forEach((col) => {\n      if (res.indexOf(col) < 0) {\n        res.push(col);\n      }\n    });\n    previousCols.forEach((col) => {\n      if (res.indexOf(col) < 0) {\n        setFlagFunc(col, false);\n      }\n    });\n    res.forEach((col) => {\n      if (previousCols.indexOf(col) < 0) {\n        setFlagFunc(col, true);\n      }\n    });\n    return res;\n  }\n  generateColumnStateForRowGroupAndPivotIndexes(updatedRowGroupColumnState, updatedPivotColumnState) {\n    const existingColumnStateUpdates = {};\n    const orderColumns = (updatedColumnState, colList, enableProp, initialEnableProp, indexProp, initialIndexProp) => {\n      const primaryCols = this.columnModel.getColDefCols();\n      if (!colList.length || !primaryCols) {\n        return [];\n      }\n      const updatedColIdArray = Object.keys(updatedColumnState);\n      const updatedColIds = new Set(updatedColIdArray);\n      const newColIds = new Set(updatedColIdArray);\n      const allColIds = new Set(\n        colList.map((column) => {\n          const colId = column.getColId();\n          newColIds.delete(colId);\n          return colId;\n        }).concat(updatedColIdArray)\n      );\n      const colIdsInOriginalOrder = [];\n      const originalOrderMap = {};\n      let orderIndex = 0;\n      for (let i = 0; i < primaryCols.length; i++) {\n        const colId = primaryCols[i].getColId();\n        if (allColIds.has(colId)) {\n          colIdsInOriginalOrder.push(colId);\n          originalOrderMap[colId] = orderIndex++;\n        }\n      }\n      let index = 1e3;\n      let hasAddedNewCols = false;\n      let lastIndex = 0;\n      const processPrecedingNewCols = (colId) => {\n        const originalOrderIndex = originalOrderMap[colId];\n        for (let i = lastIndex; i < originalOrderIndex; i++) {\n          const newColId = colIdsInOriginalOrder[i];\n          if (newColIds.has(newColId)) {\n            updatedColumnState[newColId][indexProp] = index++;\n            newColIds.delete(newColId);\n          }\n        }\n        lastIndex = originalOrderIndex;\n      };\n      colList.forEach((column) => {\n        const colId = column.getColId();\n        if (updatedColIds.has(colId)) {\n          processPrecedingNewCols(colId);\n          updatedColumnState[colId][indexProp] = index++;\n        } else {\n          const colDef = column.getColDef();\n          const missingIndex = colDef[indexProp] === null || colDef[indexProp] === void 0 && colDef[initialIndexProp] == null;\n          if (missingIndex) {\n            if (!hasAddedNewCols) {\n              const propEnabled = colDef[enableProp] || colDef[enableProp] === void 0 && colDef[initialEnableProp];\n              if (propEnabled) {\n                processPrecedingNewCols(colId);\n              } else {\n                newColIds.forEach((newColId) => {\n                  updatedColumnState[newColId][indexProp] = index + originalOrderMap[newColId];\n                });\n                index += colIdsInOriginalOrder.length;\n                hasAddedNewCols = true;\n              }\n            }\n            if (!existingColumnStateUpdates[colId]) {\n              existingColumnStateUpdates[colId] = { colId };\n            }\n            existingColumnStateUpdates[colId][indexProp] = index++;\n          }\n        }\n      });\n    };\n    orderColumns(\n      updatedRowGroupColumnState,\n      this.rowGroupCols,\n      \"rowGroup\",\n      \"initialRowGroup\",\n      \"rowGroupIndex\",\n      \"initialRowGroupIndex\"\n    );\n    orderColumns(\n      updatedPivotColumnState,\n      this.pivotCols,\n      \"pivot\",\n      \"initialPivot\",\n      \"pivotIndex\",\n      \"initialPivotIndex\"\n    );\n    return Object.values(existingColumnStateUpdates);\n  }\n};\n\n// community-modules/core/src/columns/columnApplyStateService.ts\nvar ColumnApplyStateService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnApplyStateService\";\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.eventDispatcher = beans.columnEventDispatcher;\n    this.sortController = beans.sortController;\n    this.columnGetStateService = beans.columnGetStateService;\n    this.funcColsService = beans.funcColsService;\n    this.visibleColsService = beans.visibleColsService;\n    this.columnAnimationService = beans.columnAnimationService;\n    this.pivotResultColsService = beans.pivotResultColsService;\n  }\n  applyColumnState(params, source) {\n    const providedCols = this.columnModel.getColDefCols() || [];\n    if (_missingOrEmpty(providedCols)) {\n      return false;\n    }\n    if (params && params.state && !params.state.forEach) {\n      _warnOnce(\n        \"applyColumnState() - the state attribute should be an array, however an array was not found. Please provide an array of items (one for each col you want to change) for state.\"\n      );\n      return false;\n    }\n    const callbacks = this.funcColsService.getModifyColumnsNoEventsCallbacks();\n    const applyStates = (states, existingColumns, getById) => {\n      const dispatchEventsFunc = this.compareColumnStatesAndDispatchEvents(source);\n      const columnsWithNoState = existingColumns.slice();\n      const rowGroupIndexes = {};\n      const pivotIndexes = {};\n      const autoColStates = [];\n      const unmatchedAndAutoStates2 = [];\n      let unmatchedCount2 = 0;\n      const previousRowGroupCols = this.funcColsService.getRowGroupColumns().slice();\n      const previousPivotCols = this.funcColsService.getPivotColumns().slice();\n      states.forEach((state) => {\n        const colId = state.colId || \"\";\n        const isAutoGroupColumn = colId.startsWith(GROUP_AUTO_COLUMN_ID);\n        if (isAutoGroupColumn) {\n          autoColStates.push(state);\n          unmatchedAndAutoStates2.push(state);\n          return;\n        }\n        const column = getById(colId);\n        if (!column) {\n          unmatchedAndAutoStates2.push(state);\n          unmatchedCount2 += 1;\n        } else {\n          this.syncColumnWithStateItem(\n            column,\n            state,\n            params.defaultState,\n            rowGroupIndexes,\n            pivotIndexes,\n            false,\n            source,\n            callbacks\n          );\n          _removeFromArray(columnsWithNoState, column);\n        }\n      });\n      const applyDefaultsFunc = (col) => this.syncColumnWithStateItem(\n        col,\n        null,\n        params.defaultState,\n        rowGroupIndexes,\n        pivotIndexes,\n        false,\n        source,\n        callbacks\n      );\n      columnsWithNoState.forEach(applyDefaultsFunc);\n      this.funcColsService.sortRowGroupColumns(\n        comparatorByIndex.bind(this, rowGroupIndexes, previousRowGroupCols)\n      );\n      this.funcColsService.sortPivotColumns(comparatorByIndex.bind(this, pivotIndexes, previousPivotCols));\n      this.columnModel.refreshCols();\n      const autoCols = this.columnModel.getAutoCols() || [];\n      const autoColsCopy = autoCols.slice();\n      autoColStates.forEach((stateItem) => {\n        const autoCol = this.columnModel.getAutoCol(stateItem.colId);\n        _removeFromArray(autoColsCopy, autoCol);\n        this.syncColumnWithStateItem(\n          autoCol,\n          stateItem,\n          params.defaultState,\n          null,\n          null,\n          true,\n          source,\n          callbacks\n        );\n      });\n      autoColsCopy.forEach(applyDefaultsFunc);\n      this.orderLiveColsLikeState(params);\n      this.visibleColsService.refresh(source);\n      this.eventDispatcher.everythingChanged(source);\n      dispatchEventsFunc();\n      return { unmatchedAndAutoStates: unmatchedAndAutoStates2, unmatchedCount: unmatchedCount2 };\n    };\n    this.columnAnimationService.start();\n    let { unmatchedAndAutoStates, unmatchedCount } = applyStates(\n      params.state || [],\n      providedCols,\n      (id) => this.columnModel.getColDefCol(id)\n    );\n    if (unmatchedAndAutoStates.length > 0 || _exists(params.defaultState)) {\n      const pivotResultCols = this.pivotResultColsService.getPivotResultCols();\n      const pivotResultColsList = pivotResultCols?.list;\n      unmatchedCount = applyStates(\n        unmatchedAndAutoStates,\n        pivotResultColsList || [],\n        (id) => this.pivotResultColsService.getPivotResultCol(id)\n      ).unmatchedCount;\n    }\n    this.columnAnimationService.finish();\n    return unmatchedCount === 0;\n  }\n  resetColumnState(source) {\n    const primaryCols = this.columnModel.getColDefCols();\n    if (_missingOrEmpty(primaryCols)) {\n      return;\n    }\n    const primaryColumnTree = this.columnModel.getColDefColTree();\n    const primaryColumns = getColumnsFromTree(primaryColumnTree);\n    const columnStates = [];\n    let letRowGroupIndex = 1e3;\n    let letPivotIndex = 1e3;\n    let colsToProcess = [];\n    const groupAutoCols = this.columnModel.getAutoCols();\n    if (groupAutoCols) {\n      colsToProcess = colsToProcess.concat(groupAutoCols);\n    }\n    if (primaryColumns) {\n      colsToProcess = colsToProcess.concat(primaryColumns);\n    }\n    colsToProcess.forEach((column) => {\n      const stateItem = this.getColumnStateFromColDef(column);\n      if (_missing(stateItem.rowGroupIndex) && stateItem.rowGroup) {\n        stateItem.rowGroupIndex = letRowGroupIndex++;\n      }\n      if (_missing(stateItem.pivotIndex) && stateItem.pivot) {\n        stateItem.pivotIndex = letPivotIndex++;\n      }\n      columnStates.push(stateItem);\n    });\n    this.applyColumnState({ state: columnStates, applyOrder: true }, source);\n  }\n  getColumnStateFromColDef(column) {\n    const getValueOrNull = (a, b) => a != null ? a : b != null ? b : null;\n    const colDef = column.getColDef();\n    const sort = getValueOrNull(colDef.sort, colDef.initialSort);\n    const sortIndex = getValueOrNull(colDef.sortIndex, colDef.initialSortIndex);\n    const hide = getValueOrNull(colDef.hide, colDef.initialHide);\n    const pinned = getValueOrNull(colDef.pinned, colDef.initialPinned);\n    const width = getValueOrNull(colDef.width, colDef.initialWidth);\n    const flex = getValueOrNull(colDef.flex, colDef.initialFlex);\n    let rowGroupIndex = getValueOrNull(\n      colDef.rowGroupIndex,\n      colDef.initialRowGroupIndex\n    );\n    let rowGroup = getValueOrNull(colDef.rowGroup, colDef.initialRowGroup);\n    if (rowGroupIndex == null && (rowGroup == null || rowGroup == false)) {\n      rowGroupIndex = null;\n      rowGroup = null;\n    }\n    let pivotIndex = getValueOrNull(colDef.pivotIndex, colDef.initialPivotIndex);\n    let pivot = getValueOrNull(colDef.pivot, colDef.initialPivot);\n    if (pivotIndex == null && (pivot == null || pivot == false)) {\n      pivotIndex = null;\n      pivot = null;\n    }\n    const aggFunc = getValueOrNull(colDef.aggFunc, colDef.initialAggFunc);\n    return {\n      colId: column.getColId(),\n      sort,\n      sortIndex,\n      hide,\n      pinned,\n      width,\n      flex,\n      rowGroup,\n      rowGroupIndex,\n      pivot,\n      pivotIndex,\n      aggFunc\n    };\n  }\n  syncColumnWithStateItem(column, stateItem, defaultState, rowGroupIndexes, pivotIndexes, autoCol, source, callbacks) {\n    if (!column) {\n      return;\n    }\n    const getValue2 = (key1, key2) => {\n      const obj = {\n        value1: void 0,\n        value2: void 0\n      };\n      let calculated = false;\n      if (stateItem) {\n        if (stateItem[key1] !== void 0) {\n          obj.value1 = stateItem[key1];\n          calculated = true;\n        }\n        if (_exists(key2) && stateItem[key2] !== void 0) {\n          obj.value2 = stateItem[key2];\n          calculated = true;\n        }\n      }\n      if (!calculated && defaultState) {\n        if (defaultState[key1] !== void 0) {\n          obj.value1 = defaultState[key1];\n        }\n        if (_exists(key2) && defaultState[key2] !== void 0) {\n          obj.value2 = defaultState[key2];\n        }\n      }\n      return obj;\n    };\n    const hide = getValue2(\"hide\").value1;\n    if (hide !== void 0) {\n      column.setVisible(!hide, source);\n    }\n    const pinned = getValue2(\"pinned\").value1;\n    if (pinned !== void 0) {\n      column.setPinned(pinned);\n    }\n    const minColWidth = column.getColDef().minWidth ?? DEFAULT_COLUMN_MIN_WIDTH;\n    const flex = getValue2(\"flex\").value1;\n    if (flex !== void 0) {\n      column.setFlex(flex);\n    }\n    if (flex == null) {\n      const width = getValue2(\"width\").value1;\n      if (width != null) {\n        if (minColWidth != null && width >= minColWidth) {\n          column.setActualWidth(width, source);\n        }\n      }\n    }\n    const sort = getValue2(\"sort\").value1;\n    if (sort !== void 0) {\n      if (sort === \"desc\" || sort === \"asc\") {\n        column.setSort(sort, source);\n      } else {\n        column.setSort(void 0, source);\n      }\n    }\n    const sortIndex = getValue2(\"sortIndex\").value1;\n    if (sortIndex !== void 0) {\n      column.setSortIndex(sortIndex);\n    }\n    if (autoCol || !column.isPrimary()) {\n      return;\n    }\n    const aggFunc = getValue2(\"aggFunc\").value1;\n    if (aggFunc !== void 0) {\n      if (typeof aggFunc === \"string\") {\n        column.setAggFunc(aggFunc);\n        if (!column.isValueActive()) {\n          column.setValueActive(true, source);\n          callbacks.addValueCol(column);\n        }\n      } else {\n        if (_exists(aggFunc)) {\n          _warnOnce(\n            \"stateItem.aggFunc must be a string. if using your own aggregation functions, register the functions first before using them in get/set state. This is because it is intended for the column state to be stored and retrieved as simple JSON.\"\n          );\n        }\n        if (column.isValueActive()) {\n          column.setValueActive(false, source);\n          callbacks.removeValueCol(column);\n        }\n      }\n    }\n    const { value1: rowGroup, value2: rowGroupIndex } = getValue2(\"rowGroup\", \"rowGroupIndex\");\n    if (rowGroup !== void 0 || rowGroupIndex !== void 0) {\n      if (typeof rowGroupIndex === \"number\" || rowGroup) {\n        if (!column.isRowGroupActive()) {\n          column.setRowGroupActive(true, source);\n          callbacks.addGroupCol(column);\n        }\n        if (rowGroupIndexes && typeof rowGroupIndex === \"number\") {\n          rowGroupIndexes[column.getId()] = rowGroupIndex;\n        }\n      } else {\n        if (column.isRowGroupActive()) {\n          column.setRowGroupActive(false, source);\n          callbacks.removeGroupCol(column);\n        }\n      }\n    }\n    const { value1: pivot, value2: pivotIndex } = getValue2(\"pivot\", \"pivotIndex\");\n    if (pivot !== void 0 || pivotIndex !== void 0) {\n      if (typeof pivotIndex === \"number\" || pivot) {\n        if (!column.isPivotActive()) {\n          column.setPivotActive(true, source);\n          callbacks.addPivotCol(column);\n        }\n        if (pivotIndexes && typeof pivotIndex === \"number\") {\n          pivotIndexes[column.getId()] = pivotIndex;\n        }\n      } else {\n        if (column.isPivotActive()) {\n          column.setPivotActive(false, source);\n          callbacks.removePivotCol(column);\n        }\n      }\n    }\n  }\n  orderLiveColsLikeState(params) {\n    if (!params.applyOrder || !params.state) {\n      return;\n    }\n    const colIds = [];\n    params.state.forEach((item) => {\n      if (item.colId != null) {\n        colIds.push(item.colId);\n      }\n    });\n    this.columnModel.sortColsLikeKeys(colIds);\n  }\n  // calculates what events to fire between column state changes. gets used when:\n  // a) apply column state\n  // b) apply new column definitions (so changes from old cols)\n  compareColumnStatesAndDispatchEvents(source) {\n    const startState = {\n      rowGroupColumns: this.funcColsService.getRowGroupColumns().slice(),\n      pivotColumns: this.funcColsService.getPivotColumns().slice(),\n      valueColumns: this.funcColsService.getValueColumns().slice()\n    };\n    const columnStateBefore = this.columnGetStateService.getColumnState();\n    const columnStateBeforeMap = {};\n    columnStateBefore.forEach((col) => {\n      columnStateBeforeMap[col.colId] = col;\n    });\n    return () => {\n      const colsForState = this.columnModel.getAllCols();\n      const dispatchWhenListsDifferent = (eventType, colsBefore, colsAfter, idMapper) => {\n        const beforeList = colsBefore.map(idMapper);\n        const afterList = colsAfter.map(idMapper);\n        const unchanged = _areEqual(beforeList, afterList);\n        if (unchanged) {\n          return;\n        }\n        const changes = new Set(colsBefore);\n        colsAfter.forEach((id) => {\n          if (!changes.delete(id)) {\n            changes.add(id);\n          }\n        });\n        const changesArr = [...changes];\n        this.eventService.dispatchEvent({\n          type: eventType,\n          columns: changesArr,\n          column: changesArr.length === 1 ? changesArr[0] : null,\n          source\n        });\n      };\n      const getChangedColumns = (changedPredicate) => {\n        const changedColumns2 = [];\n        colsForState.forEach((column) => {\n          const colStateBefore = columnStateBeforeMap[column.getColId()];\n          if (colStateBefore && changedPredicate(colStateBefore, column)) {\n            changedColumns2.push(column);\n          }\n        });\n        return changedColumns2;\n      };\n      const columnIdMapper = (c) => c.getColId();\n      dispatchWhenListsDifferent(\n        \"columnRowGroupChanged\",\n        startState.rowGroupColumns,\n        this.funcColsService.getRowGroupColumns(),\n        columnIdMapper\n      );\n      dispatchWhenListsDifferent(\n        \"columnPivotChanged\",\n        startState.pivotColumns,\n        this.funcColsService.getPivotColumns(),\n        columnIdMapper\n      );\n      const valueChangePredicate = (cs, c) => {\n        const oldActive = cs.aggFunc != null;\n        const activeChanged = oldActive != c.isValueActive();\n        const aggFuncChanged = oldActive && cs.aggFunc != c.getAggFunc();\n        return activeChanged || aggFuncChanged;\n      };\n      const changedValues = getChangedColumns(valueChangePredicate);\n      if (changedValues.length > 0) {\n        this.eventDispatcher.columnChanged(\"columnValueChanged\", changedValues, source);\n      }\n      const resizeChangePredicate = (cs, c) => cs.width != c.getActualWidth();\n      this.eventDispatcher.columnResized(getChangedColumns(resizeChangePredicate), true, source);\n      const pinnedChangePredicate = (cs, c) => cs.pinned != c.getPinned();\n      this.eventDispatcher.columnPinned(getChangedColumns(pinnedChangePredicate), source);\n      const visibilityChangePredicate = (cs, c) => cs.hide == c.isVisible();\n      this.eventDispatcher.columnVisible(getChangedColumns(visibilityChangePredicate), source);\n      const sortChangePredicate = (cs, c) => cs.sort != c.getSort() || cs.sortIndex != c.getSortIndex();\n      const changedColumns = getChangedColumns(sortChangePredicate);\n      if (changedColumns.length > 0) {\n        this.sortController.dispatchSortChangedEvents(source, changedColumns);\n      }\n      this.normaliseColumnMovedEventForColumnState(columnStateBefore, source);\n    };\n  }\n  normaliseColumnMovedEventForColumnState(colStateBefore, source) {\n    const colStateAfter = this.columnGetStateService.getColumnState();\n    const colStateAfterMapped = {};\n    colStateAfter.forEach((s) => colStateAfterMapped[s.colId] = s);\n    const colsIntersectIds = {};\n    colStateBefore.forEach((s) => {\n      if (colStateAfterMapped[s.colId]) {\n        colsIntersectIds[s.colId] = true;\n      }\n    });\n    const beforeFiltered = colStateBefore.filter((c) => colsIntersectIds[c.colId]);\n    const afterFiltered = colStateAfter.filter((c) => colsIntersectIds[c.colId]);\n    const movedColumns = [];\n    afterFiltered.forEach((csAfter, index) => {\n      const csBefore = beforeFiltered && beforeFiltered[index];\n      if (csBefore && csBefore.colId !== csAfter.colId) {\n        const gridCol = this.columnModel.getCol(csBefore.colId);\n        if (gridCol) {\n          movedColumns.push(gridCol);\n        }\n      }\n    });\n    if (!movedColumns.length) {\n      return;\n    }\n    this.eventDispatcher.columnMoved({ movedColumns, source, finished: true });\n  }\n};\nvar comparatorByIndex = (indexes, oldList, colA, colB) => {\n  const indexA = indexes[colA.getId()];\n  const indexB = indexes[colB.getId()];\n  const aHasIndex = indexA != null;\n  const bHasIndex = indexB != null;\n  if (aHasIndex && bHasIndex) {\n    return indexA - indexB;\n  }\n  if (aHasIndex) {\n    return -1;\n  }\n  if (bHasIndex) {\n    return 1;\n  }\n  const oldIndexA = oldList.indexOf(colA);\n  const oldIndexB = oldList.indexOf(colB);\n  const aHasOldIndex = oldIndexA >= 0;\n  const bHasOldIndex = oldIndexB >= 0;\n  if (aHasOldIndex && bHasOldIndex) {\n    return oldIndexA - oldIndexB;\n  }\n  if (aHasOldIndex) {\n    return -1;\n  }\n  return 1;\n};\n\n// community-modules/core/src/columns/columnMoveService.ts\nvar ColumnMoveService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnMoveService\";\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.columnAnimationService = beans.columnAnimationService;\n    this.eventDispatcher = beans.columnEventDispatcher;\n  }\n  moveColumnByIndex(fromIndex, toIndex, source) {\n    const gridColumns = this.columnModel.getCols();\n    if (!gridColumns) {\n      return;\n    }\n    const column = gridColumns[fromIndex];\n    this.moveColumns([column], toIndex, source);\n  }\n  moveColumns(columnsToMoveKeys, toIndex, source, finished = true) {\n    const gridColumns = this.columnModel.getCols();\n    if (!gridColumns) {\n      return;\n    }\n    this.columnAnimationService.start();\n    if (toIndex > gridColumns.length - columnsToMoveKeys.length) {\n      _warnOnce(\"tried to insert columns in invalid location, toIndex = \", toIndex);\n      _warnOnce(\"remember that you should not count the moving columns when calculating the new index\");\n      return;\n    }\n    const movedColumns = this.columnModel.getColsForKeys(columnsToMoveKeys);\n    const failedRules = !this.doesMovePassRules(movedColumns, toIndex);\n    if (failedRules) {\n      return;\n    }\n    this.columnModel.moveInCols(movedColumns, toIndex, source);\n    this.eventDispatcher.columnMoved({ movedColumns, source, toIndex, finished });\n    this.columnAnimationService.finish();\n  }\n  doesMovePassRules(columnsToMove, toIndex) {\n    const proposedColumnOrder = this.getProposedColumnOrder(columnsToMove, toIndex);\n    return this.doesOrderPassRules(proposedColumnOrder);\n  }\n  doesOrderPassRules(gridOrder) {\n    if (!this.doesMovePassMarryChildren(gridOrder)) {\n      return false;\n    }\n    if (!this.doesMovePassLockedPositions(gridOrder)) {\n      return false;\n    }\n    return true;\n  }\n  getProposedColumnOrder(columnsToMove, toIndex) {\n    const gridColumns = this.columnModel.getCols();\n    const proposedColumnOrder = gridColumns.slice();\n    _moveInArray(proposedColumnOrder, columnsToMove, toIndex);\n    return proposedColumnOrder;\n  }\n  doesMovePassLockedPositions(proposedColumnOrder) {\n    const lockPositionToPlacement = (position) => {\n      if (!position) {\n        return 0 /* NONE */;\n      }\n      return position === \"left\" || position === true ? -1 /* LEFT */ : 1 /* RIGHT */;\n    };\n    const isRtl = this.gos.get(\"enableRtl\");\n    let lastPlacement = isRtl ? 1 /* RIGHT */ : -1 /* LEFT */;\n    let rulePassed = true;\n    proposedColumnOrder.forEach((col) => {\n      const placement = lockPositionToPlacement(col.getColDef().lockPosition);\n      if (isRtl) {\n        if (placement > lastPlacement) {\n          rulePassed = false;\n        }\n      } else {\n        if (placement < lastPlacement) {\n          rulePassed = false;\n        }\n      }\n      lastPlacement = placement;\n    });\n    return rulePassed;\n  }\n  doesMovePassMarryChildren(allColumnsCopy) {\n    let rulePassed = true;\n    const gridBalancedTree = this.columnModel.getColTree();\n    depthFirstOriginalTreeSearch(null, gridBalancedTree, (child) => {\n      if (!isProvidedColumnGroup(child)) {\n        return;\n      }\n      const columnGroup = child;\n      const colGroupDef = columnGroup.getColGroupDef();\n      const marryChildren = colGroupDef && colGroupDef.marryChildren;\n      if (!marryChildren) {\n        return;\n      }\n      const newIndexes = [];\n      columnGroup.getLeafColumns().forEach((col) => {\n        const newColIndex = allColumnsCopy.indexOf(col);\n        newIndexes.push(newColIndex);\n      });\n      const maxIndex = Math.max.apply(Math, newIndexes);\n      const minIndex = Math.min.apply(Math, newIndexes);\n      const spread = maxIndex - minIndex;\n      const maxSpread = columnGroup.getLeafColumns().length - 1;\n      if (spread > maxSpread) {\n        rulePassed = false;\n      }\n    });\n    return rulePassed;\n  }\n  placeLockedColumns(cols) {\n    const left = [];\n    const normal = [];\n    const right = [];\n    cols.forEach((col) => {\n      const position = col.getColDef().lockPosition;\n      if (position === \"right\") {\n        right.push(col);\n      } else if (position === \"left\" || position === true) {\n        left.push(col);\n      } else {\n        normal.push(col);\n      }\n    });\n    const isRtl = this.gos.get(\"enableRtl\");\n    if (isRtl) {\n      return [...right, ...normal, ...left];\n    }\n    return [...left, ...normal, ...right];\n  }\n};\n\n// community-modules/core/src/utils/string.ts\nvar reUnescapedHtml = /[&<>\"']/g;\nvar HTML_ESCAPES = {\n  \"&\": \"&amp;\",\n  \"<\": \"&lt;\",\n  \">\": \"&gt;\",\n  '\"': \"&quot;\",\n  \"'\": \"&#39;\"\n};\nfunction _utf8_encode(s) {\n  const stringFromCharCode = String.fromCharCode;\n  function ucs2decode(string) {\n    const output = [];\n    if (!string) {\n      return [];\n    }\n    const len = string.length;\n    let counter = 0;\n    let value;\n    let extra;\n    while (counter < len) {\n      value = string.charCodeAt(counter++);\n      if (value >= 55296 && value <= 56319 && counter < len) {\n        extra = string.charCodeAt(counter++);\n        if ((extra & 64512) == 56320) {\n          output.push(((value & 1023) << 10) + (extra & 1023) + 65536);\n        } else {\n          output.push(value);\n          counter--;\n        }\n      } else {\n        output.push(value);\n      }\n    }\n    return output;\n  }\n  function checkScalarValue(point) {\n    if (point >= 55296 && point <= 57343) {\n      throw Error(\"Lone surrogate U+\" + point.toString(16).toUpperCase() + \" is not a scalar value\");\n    }\n  }\n  function createByte(point, shift) {\n    return stringFromCharCode(point >> shift & 63 | 128);\n  }\n  function encodeCodePoint(point) {\n    if ((point & 4294967168) == 0) {\n      return stringFromCharCode(point);\n    }\n    let symbol = \"\";\n    if ((point & 4294965248) == 0) {\n      symbol = stringFromCharCode(point >> 6 & 31 | 192);\n    } else if ((point & 4294901760) == 0) {\n      checkScalarValue(point);\n      symbol = stringFromCharCode(point >> 12 & 15 | 224);\n      symbol += createByte(point, 6);\n    } else if ((point & 4292870144) == 0) {\n      symbol = stringFromCharCode(point >> 18 & 7 | 240);\n      symbol += createByte(point, 12);\n      symbol += createByte(point, 6);\n    }\n    symbol += stringFromCharCode(point & 63 | 128);\n    return symbol;\n  }\n  const codePoints = ucs2decode(s);\n  const length = codePoints.length;\n  let index = -1;\n  let codePoint;\n  let byteString = \"\";\n  while (++index < length) {\n    codePoint = codePoints[index];\n    byteString += encodeCodePoint(codePoint);\n  }\n  return byteString;\n}\nfunction _capitalise(str) {\n  return str[0].toUpperCase() + str.substring(1).toLowerCase();\n}\nfunction _escapeString(toEscape, skipEscapingHtmlChars) {\n  if (toEscape == null) {\n    return null;\n  }\n  const stringResult = toEscape.toString().toString();\n  if (skipEscapingHtmlChars) {\n    return stringResult;\n  }\n  return stringResult.replace(reUnescapedHtml, (chr) => HTML_ESCAPES[chr]);\n}\nfunction _camelCaseToHumanText(camelCase) {\n  if (!camelCase || camelCase == null) {\n    return null;\n  }\n  const rex = /([a-z])([A-Z])/g;\n  const rexCaps = /([A-Z]+)([A-Z])([a-z])/g;\n  const words = camelCase.replace(rex, \"$1 $2\").replace(rexCaps, \"$1 $2$3\").replace(/\\./g, \" \").split(\" \");\n  return words.map((word) => word.substring(0, 1).toUpperCase() + (word.length > 1 ? word.substring(1, word.length) : \"\")).join(\" \");\n}\nfunction _camelCaseToHyphenated(camelCase) {\n  return camelCase.replace(/[A-Z]/g, (s) => `-${s.toLocaleLowerCase()}`);\n}\n\n// community-modules/core/src/columns/columnNameService.ts\nvar ColumnNameService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnNameService\";\n  }\n  wireBeans(beans) {\n    this.expressionService = beans.expressionService;\n    this.funcColsService = beans.funcColsService;\n    this.columnModel = beans.columnModel;\n  }\n  getDisplayNameForColumn(column, location, includeAggFunc = false) {\n    if (!column) {\n      return null;\n    }\n    const headerName = this.getHeaderName(column.getColDef(), column, null, null, location);\n    if (includeAggFunc) {\n      return this.wrapHeaderNameWithAggFunc(column, headerName);\n    }\n    return headerName;\n  }\n  getDisplayNameForProvidedColumnGroup(columnGroup, providedColumnGroup, location) {\n    const colGroupDef = providedColumnGroup ? providedColumnGroup.getColGroupDef() : null;\n    if (colGroupDef) {\n      return this.getHeaderName(colGroupDef, null, columnGroup, providedColumnGroup, location);\n    }\n    return null;\n  }\n  getDisplayNameForColumnGroup(columnGroup, location) {\n    return this.getDisplayNameForProvidedColumnGroup(columnGroup, columnGroup.getProvidedColumnGroup(), location);\n  }\n  // location is where the column is going to appear, ie who is calling us\n  getHeaderName(colDef, column, columnGroup, providedColumnGroup, location) {\n    const headerValueGetter = colDef.headerValueGetter;\n    if (headerValueGetter) {\n      const params = this.gos.addGridCommonParams({\n        colDef,\n        column,\n        columnGroup,\n        providedColumnGroup,\n        location\n      });\n      if (typeof headerValueGetter === \"function\") {\n        return headerValueGetter(params);\n      } else if (typeof headerValueGetter === \"string\") {\n        return this.expressionService.evaluate(headerValueGetter, params);\n      }\n      _warnOnce(\"headerValueGetter must be a function or a string\");\n      return \"\";\n    } else if (colDef.headerName != null) {\n      return colDef.headerName;\n    } else if (colDef.field) {\n      return _camelCaseToHumanText(colDef.field);\n    }\n    return \"\";\n  }\n  wrapHeaderNameWithAggFunc(column, headerName) {\n    if (this.gos.get(\"suppressAggFuncInHeader\")) {\n      return headerName;\n    }\n    const pivotValueColumn = column.getColDef().pivotValueColumn;\n    const pivotActiveOnThisColumn = _exists(pivotValueColumn);\n    let aggFunc = null;\n    let aggFuncFound;\n    if (pivotActiveOnThisColumn) {\n      const valueColumns = this.funcColsService.getValueColumns();\n      const isCollapsedHeaderEnabled = this.gos.get(\"removePivotHeaderRowWhenSingleValueColumn\") && valueColumns.length === 1;\n      const isTotalColumn = column.getColDef().pivotTotalColumnIds !== void 0;\n      if (isCollapsedHeaderEnabled && !isTotalColumn) {\n        return headerName;\n      }\n      aggFunc = pivotValueColumn ? pivotValueColumn.getAggFunc() : null;\n      aggFuncFound = true;\n    } else {\n      const measureActive = column.isValueActive();\n      const aggregationPresent = this.columnModel.isPivotMode() || !this.funcColsService.isRowGroupEmpty();\n      if (measureActive && aggregationPresent) {\n        aggFunc = column.getAggFunc();\n        aggFuncFound = true;\n      } else {\n        aggFuncFound = false;\n      }\n    }\n    if (aggFuncFound) {\n      const aggFuncString = typeof aggFunc === \"string\" ? aggFunc : \"func\";\n      const localeTextFunc = this.localeService.getLocaleTextFunc();\n      const aggFuncStringTranslated = localeTextFunc(aggFuncString, aggFuncString);\n      return `${aggFuncStringTranslated}(${headerName})`;\n    }\n    return headerName;\n  }\n};\n\n// community-modules/core/src/columns/pivotResultColsService.ts\nvar PivotResultColsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"pivotResultColsService\";\n  }\n  wireBeans(beans) {\n    this.context = beans.context;\n    this.columnModel = beans.columnModel;\n    this.columnFactory = beans.columnFactory;\n    this.visibleColsService = beans.visibleColsService;\n  }\n  destroy() {\n    destroyColumnTree(this.context, this.pivotResultCols?.tree);\n    super.destroy();\n  }\n  isPivotResultColsPresent() {\n    return this.pivotResultCols != null;\n  }\n  lookupPivotResultCol(pivotKeys, valueColKey) {\n    if (this.pivotResultCols == null) {\n      return null;\n    }\n    const valueColumnToFind = this.columnModel.getColDefCol(valueColKey);\n    let foundColumn = null;\n    this.pivotResultCols.list.forEach((column) => {\n      const thisPivotKeys = column.getColDef().pivotKeys;\n      const pivotValueColumn = column.getColDef().pivotValueColumn;\n      const pivotKeyMatches = _areEqual(thisPivotKeys, pivotKeys);\n      const pivotValueMatches = pivotValueColumn === valueColumnToFind;\n      if (pivotKeyMatches && pivotValueMatches) {\n        foundColumn = column;\n      }\n    });\n    return foundColumn;\n  }\n  getPivotResultCols() {\n    return this.pivotResultCols;\n  }\n  getPivotResultCol(key) {\n    if (!this.pivotResultCols) {\n      return null;\n    }\n    return this.columnModel.getColFromCollection(key, this.pivotResultCols);\n  }\n  setPivotResultCols(colDefs, source) {\n    if (!this.columnModel.isReady()) {\n      return;\n    }\n    if (colDefs == null && this.pivotResultCols == null) {\n      return;\n    }\n    if (colDefs) {\n      this.processPivotResultColDef(colDefs);\n      const balancedTreeResult = this.columnFactory.createColumnTree(\n        colDefs,\n        false,\n        this.pivotResultCols?.tree || this.previousPivotResultCols || void 0,\n        source\n      );\n      destroyColumnTree(this.context, this.pivotResultCols?.tree, balancedTreeResult.columnTree);\n      const tree = balancedTreeResult.columnTree;\n      const treeDepth = balancedTreeResult.treeDept;\n      const list = getColumnsFromTree(tree);\n      const map = {};\n      this.pivotResultCols = { tree, treeDepth, list, map };\n      this.pivotResultCols.list.forEach((col) => this.pivotResultCols.map[col.getId()] = col);\n      this.previousPivotResultCols = null;\n    } else {\n      this.previousPivotResultCols = this.pivotResultCols ? this.pivotResultCols.tree : null;\n      this.pivotResultCols = null;\n    }\n    this.columnModel.refreshCols();\n    this.visibleColsService.refresh(source);\n  }\n  processPivotResultColDef(colDefs) {\n    const columnCallback = this.gos.get(\"processPivotResultColDef\");\n    const groupCallback = this.gos.get(\"processPivotResultColGroupDef\");\n    if (!columnCallback && !groupCallback) {\n      return void 0;\n    }\n    const searchForColDefs = (colDefs2) => {\n      colDefs2.forEach((abstractColDef) => {\n        const isGroup = _exists(abstractColDef.children);\n        if (isGroup) {\n          const colGroupDef = abstractColDef;\n          if (groupCallback) {\n            groupCallback(colGroupDef);\n          }\n          searchForColDefs(colGroupDef.children);\n        } else {\n          const colDef = abstractColDef;\n          if (columnCallback) {\n            columnCallback(colDef);\n          }\n        }\n      });\n    };\n    if (colDefs) {\n      searchForColDefs(colDefs);\n    }\n  }\n};\n\n// community-modules/core/src/columns/columnSizeService.ts\nvar ColumnSizeService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnSizeService\";\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.columnViewportService = beans.columnViewportService;\n    this.eventDispatcher = beans.columnEventDispatcher;\n    this.visibleColsService = beans.visibleColsService;\n    this.ctrlsService = beans.ctrlsService;\n  }\n  setColumnWidths(columnWidths, shiftKey, finished, source) {\n    const sets = [];\n    columnWidths.forEach((columnWidth) => {\n      const col = this.columnModel.getColDefCol(columnWidth.key) || this.columnModel.getCol(columnWidth.key);\n      if (!col) {\n        return;\n      }\n      sets.push({\n        width: columnWidth.newWidth,\n        ratios: [1],\n        columns: [col]\n      });\n      const defaultIsShift = this.gos.get(\"colResizeDefault\") === \"shift\";\n      if (defaultIsShift) {\n        shiftKey = !shiftKey;\n      }\n      if (shiftKey) {\n        const otherCol = this.visibleColsService.getColAfter(col);\n        if (!otherCol) {\n          return;\n        }\n        const widthDiff = col.getActualWidth() - columnWidth.newWidth;\n        const otherColWidth = otherCol.getActualWidth() + widthDiff;\n        sets.push({\n          width: otherColWidth,\n          ratios: [1],\n          columns: [otherCol]\n        });\n      }\n    });\n    if (sets.length === 0) {\n      return;\n    }\n    this.resizeColumnSets({\n      resizeSets: sets,\n      finished,\n      source\n    });\n  }\n  // method takes sets of columns and resizes them. either all sets will be resized, or nothing\n  // be resized. this is used for example when user tries to resize a group and holds shift key,\n  // then both the current group (grows), and the adjacent group (shrinks), will get resized,\n  // so that's two sets for this method.\n  resizeColumnSets(params) {\n    const { resizeSets, finished, source } = params;\n    const passMinMaxCheck = !resizeSets || resizeSets.every((columnResizeSet) => this.checkMinAndMaxWidthsForSet(columnResizeSet));\n    if (!passMinMaxCheck) {\n      if (finished) {\n        const columns = resizeSets && resizeSets.length > 0 ? resizeSets[0].columns : null;\n        this.eventDispatcher.columnResized(columns, finished, source);\n      }\n      return;\n    }\n    const changedCols = [];\n    const allResizedCols = [];\n    resizeSets.forEach((set) => {\n      const { width, columns, ratios } = set;\n      const newWidths = {};\n      const finishedCols = {};\n      columns.forEach((col) => allResizedCols.push(col));\n      let finishedColsGrew = true;\n      let loopCount = 0;\n      while (finishedColsGrew) {\n        loopCount++;\n        if (loopCount > 1e3) {\n          _errorOnce(\"infinite loop in resizeColumnSets\");\n          break;\n        }\n        finishedColsGrew = false;\n        const subsetCols = [];\n        let subsetRatioTotal = 0;\n        let pixelsToDistribute = width;\n        columns.forEach((col, index) => {\n          const thisColFinished = finishedCols[col.getId()];\n          if (thisColFinished) {\n            pixelsToDistribute -= newWidths[col.getId()];\n          } else {\n            subsetCols.push(col);\n            const ratioThisCol = ratios[index];\n            subsetRatioTotal += ratioThisCol;\n          }\n        });\n        const ratioScale = 1 / subsetRatioTotal;\n        subsetCols.forEach((col, index) => {\n          const lastCol = index === subsetCols.length - 1;\n          let colNewWidth;\n          if (lastCol) {\n            colNewWidth = pixelsToDistribute;\n          } else {\n            colNewWidth = Math.round(ratios[index] * width * ratioScale);\n            pixelsToDistribute -= colNewWidth;\n          }\n          const minWidth = col.getMinWidth();\n          const maxWidth = col.getMaxWidth();\n          if (colNewWidth < minWidth) {\n            colNewWidth = minWidth;\n            finishedCols[col.getId()] = true;\n            finishedColsGrew = true;\n          } else if (maxWidth > 0 && colNewWidth > maxWidth) {\n            colNewWidth = maxWidth;\n            finishedCols[col.getId()] = true;\n            finishedColsGrew = true;\n          }\n          newWidths[col.getId()] = colNewWidth;\n        });\n      }\n      columns.forEach((col) => {\n        const newWidth = newWidths[col.getId()];\n        const actualWidth = col.getActualWidth();\n        if (actualWidth !== newWidth) {\n          col.setActualWidth(newWidth, source);\n          changedCols.push(col);\n        }\n      });\n    });\n    const atLeastOneColChanged = changedCols.length > 0;\n    let flexedCols = [];\n    if (atLeastOneColChanged) {\n      flexedCols = this.refreshFlexedColumns({ resizingCols: allResizedCols, skipSetLeft: true });\n      this.visibleColsService.setLeftValues(source);\n      this.visibleColsService.updateBodyWidths();\n      this.columnViewportService.checkViewportColumns();\n    }\n    const colsForEvent = allResizedCols.concat(flexedCols);\n    if (atLeastOneColChanged || finished) {\n      this.eventDispatcher.columnResized(colsForEvent, finished, source, flexedCols);\n    }\n  }\n  checkMinAndMaxWidthsForSet(columnResizeSet) {\n    const { columns, width } = columnResizeSet;\n    let minWidthAccumulated = 0;\n    let maxWidthAccumulated = 0;\n    let maxWidthActive = true;\n    columns.forEach((col) => {\n      const minWidth = col.getMinWidth();\n      minWidthAccumulated += minWidth || 0;\n      const maxWidth = col.getMaxWidth();\n      if (maxWidth > 0) {\n        maxWidthAccumulated += maxWidth;\n      } else {\n        maxWidthActive = false;\n      }\n    });\n    const minWidthPasses = width >= minWidthAccumulated;\n    const maxWidthPasses = !maxWidthActive || width <= maxWidthAccumulated;\n    return minWidthPasses && maxWidthPasses;\n  }\n  refreshFlexedColumns(params = {}) {\n    const source = params.source ? params.source : \"flex\";\n    if (params.viewportWidth != null) {\n      this.flexViewportWidth = params.viewportWidth;\n    }\n    if (!this.flexViewportWidth) {\n      return [];\n    }\n    const displayedCenterCols = this.visibleColsService.getCenterCols();\n    let flexAfterDisplayIndex = -1;\n    if (params.resizingCols) {\n      const allResizingCols = new Set(params.resizingCols);\n      for (let i = displayedCenterCols.length - 1; i >= 0; i--) {\n        if (allResizingCols.has(displayedCenterCols[i])) {\n          flexAfterDisplayIndex = i;\n          break;\n        }\n      }\n    }\n    let knownColumnsWidth = 0;\n    let flexingColumns = [];\n    let minimumFlexedWidth = 0;\n    let totalFlex = 0;\n    for (let i = 0; i < displayedCenterCols.length; i++) {\n      const isFlex = displayedCenterCols[i].getFlex() && i > flexAfterDisplayIndex;\n      if (isFlex) {\n        flexingColumns.push(displayedCenterCols[i]);\n        totalFlex += displayedCenterCols[i].getFlex();\n        minimumFlexedWidth += displayedCenterCols[i].getMinWidth();\n      } else {\n        knownColumnsWidth += displayedCenterCols[i].getActualWidth();\n      }\n    }\n    if (!flexingColumns.length) {\n      return [];\n    }\n    let changedColumns = [];\n    if (knownColumnsWidth + minimumFlexedWidth > this.flexViewportWidth) {\n      flexingColumns.forEach((col) => col.setActualWidth(col.getMinWidth(), source));\n      changedColumns = flexingColumns;\n      flexingColumns = [];\n    }\n    const flexingColumnSizes = [];\n    let spaceForFlexingColumns;\n    outer:\n      while (true) {\n        spaceForFlexingColumns = this.flexViewportWidth - knownColumnsWidth;\n        const spacePerFlex = spaceForFlexingColumns / totalFlex;\n        for (let i = 0; i < flexingColumns.length; i++) {\n          const col = flexingColumns[i];\n          const widthByFlexRule = spacePerFlex * col.getFlex();\n          let constrainedWidth = 0;\n          const minWidth = col.getMinWidth();\n          const maxWidth = col.getMaxWidth();\n          if (widthByFlexRule < minWidth) {\n            constrainedWidth = minWidth;\n          } else if (widthByFlexRule > maxWidth) {\n            constrainedWidth = maxWidth;\n          }\n          if (constrainedWidth) {\n            col.setActualWidth(constrainedWidth, source);\n            _removeFromUnorderedArray(flexingColumns, col);\n            totalFlex -= col.getFlex();\n            changedColumns.push(col);\n            knownColumnsWidth += col.getActualWidth();\n            continue outer;\n          }\n          flexingColumnSizes[i] = Math.floor(widthByFlexRule);\n        }\n        break;\n      }\n    let remainingSpace = spaceForFlexingColumns;\n    flexingColumns.forEach((col, i) => {\n      col.setActualWidth(Math.min(flexingColumnSizes[i], remainingSpace), source);\n      changedColumns.push(col);\n      remainingSpace -= flexingColumnSizes[i];\n    });\n    if (!params.skipSetLeft) {\n      this.visibleColsService.setLeftValues(source);\n    }\n    if (params.updateBodyWidths) {\n      this.visibleColsService.updateBodyWidths();\n    }\n    if (params.fireResizedEvent) {\n      this.eventDispatcher.columnResized(changedColumns, true, source, flexingColumns);\n    }\n    return flexingColumns;\n  }\n  // called from api\n  sizeColumnsToFit(gridWidth, source = \"sizeColumnsToFit\", silent, params) {\n    if (this.columnModel.isShouldQueueResizeOperations()) {\n      this.columnModel.pushResizeOperation(() => this.sizeColumnsToFit(gridWidth, source, silent, params));\n      return;\n    }\n    const limitsMap = {};\n    if (params) {\n      params?.columnLimits?.forEach(({ key, ...dimensions }) => {\n        limitsMap[typeof key === \"string\" ? key : key.getColId()] = dimensions;\n      });\n    }\n    const allDisplayedColumns = this.visibleColsService.getAllCols();\n    const doColumnsAlreadyFit = gridWidth === getWidthOfColsInList(allDisplayedColumns);\n    if (gridWidth <= 0 || !allDisplayedColumns.length || doColumnsAlreadyFit) {\n      return;\n    }\n    const colsToSpread = [];\n    const colsToNotSpread = [];\n    allDisplayedColumns.forEach((column) => {\n      if (column.getColDef().suppressSizeToFit === true) {\n        colsToNotSpread.push(column);\n      } else {\n        colsToSpread.push(column);\n      }\n    });\n    const colsToDispatchEventFor = colsToSpread.slice(0);\n    let finishedResizing = false;\n    const moveToNotSpread = (column) => {\n      _removeFromArray(colsToSpread, column);\n      colsToNotSpread.push(column);\n    };\n    colsToSpread.forEach((column) => {\n      column.resetActualWidth(source);\n      const widthOverride = limitsMap?.[column.getId()];\n      const minOverride = widthOverride?.minWidth ?? params?.defaultMinWidth;\n      const maxOverride = widthOverride?.maxWidth ?? params?.defaultMaxWidth;\n      const colWidth = column.getActualWidth();\n      if (typeof minOverride === \"number\" && colWidth < minOverride) {\n        column.setActualWidth(minOverride, source, true);\n      } else if (typeof maxOverride === \"number\" && colWidth > maxOverride) {\n        column.setActualWidth(maxOverride, source, true);\n      }\n    });\n    while (!finishedResizing) {\n      finishedResizing = true;\n      const availablePixels = gridWidth - getWidthOfColsInList(colsToNotSpread);\n      if (availablePixels <= 0) {\n        colsToSpread.forEach((column) => {\n          const widthOverride = limitsMap?.[column.getId()]?.minWidth ?? params?.defaultMinWidth;\n          if (typeof widthOverride === \"number\") {\n            column.setActualWidth(widthOverride, source, true);\n            return;\n          }\n          column.setMinimum(source);\n        });\n      } else {\n        const scale = availablePixels / getWidthOfColsInList(colsToSpread);\n        let pixelsForLastCol = availablePixels;\n        for (let i = colsToSpread.length - 1; i >= 0; i--) {\n          const column = colsToSpread[i];\n          const widthOverride = limitsMap?.[column.getId()];\n          const minOverride = widthOverride?.minWidth ?? params?.defaultMinWidth;\n          const maxOverride = widthOverride?.maxWidth ?? params?.defaultMaxWidth;\n          const colMinWidth = column.getMinWidth();\n          const colMaxWidth = column.getMaxWidth();\n          const minWidth = typeof minOverride === \"number\" && minOverride > colMinWidth ? minOverride : colMinWidth;\n          const maxWidth = typeof maxOverride === \"number\" && maxOverride < colMaxWidth ? maxOverride : colMaxWidth;\n          let newWidth = Math.round(column.getActualWidth() * scale);\n          if (newWidth < minWidth) {\n            newWidth = minWidth;\n            moveToNotSpread(column);\n            finishedResizing = false;\n          } else if (newWidth > maxWidth) {\n            newWidth = maxWidth;\n            moveToNotSpread(column);\n            finishedResizing = false;\n          } else if (i === 0) {\n            newWidth = pixelsForLastCol;\n          }\n          column.setActualWidth(newWidth, source, true);\n          pixelsForLastCol -= newWidth;\n        }\n      }\n    }\n    colsToDispatchEventFor.forEach((col) => {\n      col.fireColumnWidthChangedEvent(source);\n    });\n    this.visibleColsService.setLeftValues(source);\n    this.visibleColsService.updateBodyWidths();\n    if (silent) {\n      return;\n    }\n    this.eventDispatcher.columnResized(colsToDispatchEventFor, true, source);\n  }\n  applyAutosizeStrategy() {\n    const autoSizeStrategy = this.gos.get(\"autoSizeStrategy\");\n    if (!autoSizeStrategy) {\n      return;\n    }\n    const { type } = autoSizeStrategy;\n    setTimeout(() => {\n      if (type === \"fitGridWidth\") {\n        const { columnLimits: propColumnLimits, defaultMinWidth, defaultMaxWidth } = autoSizeStrategy;\n        const columnLimits = propColumnLimits?.map(({ colId: key, minWidth, maxWidth }) => ({\n          key,\n          minWidth,\n          maxWidth\n        }));\n        this.ctrlsService.getGridBodyCtrl().sizeColumnsToFit({\n          defaultMinWidth,\n          defaultMaxWidth,\n          columnLimits\n        });\n      } else if (type === \"fitProvidedWidth\") {\n        this.sizeColumnsToFit(autoSizeStrategy.width, \"sizeColumnsToFit\");\n      }\n    });\n  }\n};\n\n// community-modules/core/src/entities/agColumnGroup.ts\nfunction createUniqueColumnGroupId(groupId, instanceId) {\n  return groupId + \"_\" + instanceId;\n}\nfunction isColumnGroup(col) {\n  return col instanceof AgColumnGroup;\n}\nvar AgColumnGroup = class extends BeanStub {\n  constructor(providedColumnGroup, groupId, partId, pinned) {\n    super();\n    this.isColumn = false;\n    // depends on the open/closed state of the group, only displaying columns are stored here\n    this.displayedChildren = [];\n    // The measured height of this column's header when autoHeaderHeight is enabled\n    this.autoHeaderHeight = null;\n    this.parent = null;\n    this.groupId = groupId;\n    this.partId = partId;\n    this.providedColumnGroup = providedColumnGroup;\n    this.pinned = pinned;\n  }\n  // as the user is adding and removing columns, the groups are recalculated.\n  // this reset clears out all children, ready for children to be added again\n  reset() {\n    this.parent = null;\n    this.children = null;\n    this.displayedChildren = null;\n  }\n  getParent() {\n    return this.parent;\n  }\n  setParent(parent) {\n    this.parent = parent;\n  }\n  getUniqueId() {\n    return createUniqueColumnGroupId(this.groupId, this.partId);\n  }\n  isEmptyGroup() {\n    return this.displayedChildren.length === 0;\n  }\n  isMoving() {\n    const allLeafColumns = this.getProvidedColumnGroup().getLeafColumns();\n    if (!allLeafColumns || allLeafColumns.length === 0) {\n      return false;\n    }\n    return allLeafColumns.every((col) => col.isMoving());\n  }\n  checkLeft() {\n    this.displayedChildren.forEach((child) => {\n      if (isColumnGroup(child)) {\n        child.checkLeft();\n      }\n    });\n    if (this.displayedChildren.length > 0) {\n      if (this.gos.get(\"enableRtl\")) {\n        const lastChild = _last(this.displayedChildren);\n        const lastChildLeft = lastChild.getLeft();\n        this.setLeft(lastChildLeft);\n      } else {\n        const firstChildLeft = this.displayedChildren[0].getLeft();\n        this.setLeft(firstChildLeft);\n      }\n    } else {\n      this.setLeft(null);\n    }\n  }\n  getLeft() {\n    return this.left;\n  }\n  getOldLeft() {\n    return this.oldLeft;\n  }\n  setLeft(left) {\n    this.oldLeft = this.left;\n    if (this.left !== left) {\n      this.left = left;\n      this.dispatchLocalEvent({ type: \"leftChanged\" });\n    }\n  }\n  getPinned() {\n    return this.pinned;\n  }\n  getGroupId() {\n    return this.groupId;\n  }\n  getPartId() {\n    return this.partId;\n  }\n  getActualWidth() {\n    let groupActualWidth = 0;\n    if (this.displayedChildren) {\n      this.displayedChildren.forEach((child) => {\n        groupActualWidth += child.getActualWidth();\n      });\n    }\n    return groupActualWidth;\n  }\n  isResizable() {\n    if (!this.displayedChildren) {\n      return false;\n    }\n    let result = false;\n    this.displayedChildren.forEach((child) => {\n      if (child.isResizable()) {\n        result = true;\n      }\n    });\n    return result;\n  }\n  getMinWidth() {\n    let result = 0;\n    this.displayedChildren.forEach((groupChild) => {\n      result += groupChild.getMinWidth();\n    });\n    return result;\n  }\n  addChild(child) {\n    if (!this.children) {\n      this.children = [];\n    }\n    this.children.push(child);\n  }\n  getDisplayedChildren() {\n    return this.displayedChildren;\n  }\n  getLeafColumns() {\n    const result = [];\n    this.addLeafColumns(result);\n    return result;\n  }\n  getDisplayedLeafColumns() {\n    const result = [];\n    this.addDisplayedLeafColumns(result);\n    return result;\n  }\n  getDefinition() {\n    return this.providedColumnGroup.getColGroupDef();\n  }\n  getColGroupDef() {\n    return this.providedColumnGroup.getColGroupDef();\n  }\n  isPadding() {\n    return this.providedColumnGroup.isPadding();\n  }\n  isExpandable() {\n    return this.providedColumnGroup.isExpandable();\n  }\n  isExpanded() {\n    return this.providedColumnGroup.isExpanded();\n  }\n  setExpanded(expanded) {\n    this.providedColumnGroup.setExpanded(expanded);\n  }\n  isAutoHeaderHeight() {\n    return !!this.getColGroupDef()?.autoHeaderHeight;\n  }\n  getAutoHeaderHeight() {\n    return this.autoHeaderHeight;\n  }\n  /** Returns true if the header height has changed */\n  setAutoHeaderHeight(height) {\n    const changed = height !== this.autoHeaderHeight;\n    this.autoHeaderHeight = height;\n    return changed;\n  }\n  addDisplayedLeafColumns(leafColumns) {\n    this.displayedChildren.forEach((child) => {\n      if (isColumn(child)) {\n        leafColumns.push(child);\n      } else if (isColumnGroup(child)) {\n        child.addDisplayedLeafColumns(leafColumns);\n      }\n    });\n  }\n  addLeafColumns(leafColumns) {\n    this.children.forEach((child) => {\n      if (isColumn(child)) {\n        leafColumns.push(child);\n      } else if (isColumnGroup(child)) {\n        child.addLeafColumns(leafColumns);\n      }\n    });\n  }\n  getChildren() {\n    return this.children;\n  }\n  getColumnGroupShow() {\n    return this.providedColumnGroup.getColumnGroupShow();\n  }\n  getProvidedColumnGroup() {\n    return this.providedColumnGroup;\n  }\n  getPaddingLevel() {\n    const parent = this.getParent();\n    if (!this.isPadding() || !parent || !parent.isPadding()) {\n      return 0;\n    }\n    return 1 + parent.getPaddingLevel();\n  }\n  calculateDisplayedColumns() {\n    this.displayedChildren = [];\n    let parentWithExpansion = this;\n    while (parentWithExpansion != null && parentWithExpansion.isPadding()) {\n      parentWithExpansion = parentWithExpansion.getParent();\n    }\n    const isExpandable = parentWithExpansion ? parentWithExpansion.getProvidedColumnGroup().isExpandable() : false;\n    if (!isExpandable) {\n      this.displayedChildren = this.children;\n      this.dispatchLocalEvent({ type: \"displayedChildrenChanged\" });\n      return;\n    }\n    this.children.forEach((child) => {\n      const emptyGroup = isColumnGroup(child) && (!child.displayedChildren || !child.displayedChildren.length);\n      if (emptyGroup) {\n        return;\n      }\n      const headerGroupShow = child.getColumnGroupShow();\n      switch (headerGroupShow) {\n        case \"open\":\n          if (parentWithExpansion.getProvidedColumnGroup().isExpanded()) {\n            this.displayedChildren.push(child);\n          }\n          break;\n        case \"closed\":\n          if (!parentWithExpansion.getProvidedColumnGroup().isExpanded()) {\n            this.displayedChildren.push(child);\n          }\n          break;\n        default:\n          this.displayedChildren.push(child);\n          break;\n      }\n    });\n    this.dispatchLocalEvent({ type: \"displayedChildrenChanged\" });\n  }\n};\n\n// community-modules/core/src/columns/groupInstanceIdCreator.ts\nvar GroupInstanceIdCreator = class {\n  constructor() {\n    // this map contains keys to numbers, so we remember what the last call was\n    this.existingIds = {};\n  }\n  getInstanceIdForKey(key) {\n    const lastResult = this.existingIds[key];\n    let result;\n    if (typeof lastResult !== \"number\") {\n      result = 0;\n    } else {\n      result = lastResult + 1;\n    }\n    this.existingIds[key] = result;\n    return result;\n  }\n};\n\n// community-modules/core/src/columns/visibleColsService.ts\nvar VisibleColsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"visibleColsService\";\n    // for fast lookup, to see if a column or group is still visible\n    this.colsAndGroupsMap = {};\n    // leave level columns of the displayed trees\n    this.columnsLeft = [];\n    this.columnsRight = [];\n    this.columnsCenter = [];\n    // all three lists above combined\n    this.columns = [];\n    this.bodyWidth = 0;\n    this.leftWidth = 0;\n    this.rightWidth = 0;\n    this.bodyWidthDirty = true;\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.columnSizeService = beans.columnSizeService;\n    this.columnViewportService = beans.columnViewportService;\n    this.eventDispatcher = beans.columnEventDispatcher;\n  }\n  refresh(source, skipTreeBuild = false) {\n    if (!skipTreeBuild) {\n      this.buildTrees();\n    }\n    this.updateOpenClosedVisibilityInColumnGroups();\n    this.columnsLeft = pickDisplayedCols(this.treeLeft);\n    this.columnsCenter = pickDisplayedCols(this.treeCenter);\n    this.columnsRight = pickDisplayedCols(this.treeRight);\n    this.joinColsAriaOrder();\n    this.joinCols();\n    this.setLeftValues(source);\n    this.autoHeightCols = this.columns.filter((col) => col.isAutoHeight());\n    this.columnSizeService.refreshFlexedColumns();\n    this.updateBodyWidths();\n    this.columnViewportService.checkViewportColumns(false);\n    this.setFirstRightAndLastLeftPinned(source);\n    this.eventDispatcher.visibleCols();\n  }\n  // after setColumnWidth or updateGroupsAndPresentedCols\n  updateBodyWidths() {\n    const newBodyWidth = getWidthOfColsInList(this.columnsCenter);\n    const newLeftWidth = getWidthOfColsInList(this.columnsLeft);\n    const newRightWidth = getWidthOfColsInList(this.columnsRight);\n    this.bodyWidthDirty = this.bodyWidth !== newBodyWidth;\n    const atLeastOneChanged = this.bodyWidth !== newBodyWidth || this.leftWidth !== newLeftWidth || this.rightWidth !== newRightWidth;\n    if (atLeastOneChanged) {\n      this.bodyWidth = newBodyWidth;\n      this.leftWidth = newLeftWidth;\n      this.rightWidth = newRightWidth;\n      this.eventService.dispatchEvent({\n        type: \"columnContainerWidthChanged\"\n      });\n      this.eventService.dispatchEvent({\n        type: \"displayedColumnsWidthChanged\"\n      });\n    }\n  }\n  // sets the left pixel position of each column\n  setLeftValues(source) {\n    this.setLeftValuesOfCols(source);\n    this.setLeftValuesOfGroups();\n  }\n  setFirstRightAndLastLeftPinned(source) {\n    let lastLeft;\n    let firstRight;\n    if (this.gos.get(\"enableRtl\")) {\n      lastLeft = this.columnsLeft ? this.columnsLeft[0] : null;\n      firstRight = this.columnsRight ? _last(this.columnsRight) : null;\n    } else {\n      lastLeft = this.columnsLeft ? _last(this.columnsLeft) : null;\n      firstRight = this.columnsRight ? this.columnsRight[0] : null;\n    }\n    this.columnModel.getCols().forEach((col) => {\n      col.setLastLeftPinned(col === lastLeft, source);\n      col.setFirstRightPinned(col === firstRight, source);\n    });\n  }\n  buildTrees() {\n    const cols = this.columnModel.getColsToShow();\n    const leftCols = cols.filter((col) => col.getPinned() == \"left\");\n    const rightCols = cols.filter((col) => col.getPinned() == \"right\");\n    const centerCols = cols.filter((col) => col.getPinned() != \"left\" && col.getPinned() != \"right\");\n    const idCreator = new GroupInstanceIdCreator();\n    this.treeLeft = this.createGroups({\n      columns: leftCols,\n      idCreator,\n      pinned: \"left\",\n      oldDisplayedGroups: this.treeLeft\n    });\n    this.treeRight = this.createGroups({\n      columns: rightCols,\n      idCreator,\n      pinned: \"right\",\n      oldDisplayedGroups: this.treeRight\n    });\n    this.treeCenter = this.createGroups({\n      columns: centerCols,\n      idCreator,\n      pinned: null,\n      oldDisplayedGroups: this.treeCenter\n    });\n    this.updateColsAndGroupsMap();\n  }\n  clear() {\n    this.columnsLeft = [];\n    this.columnsRight = [];\n    this.columnsCenter = [];\n    this.columns = [];\n    this.ariaOrderColumns = [];\n  }\n  joinColsAriaOrder() {\n    const allColumns = this.columnModel.getCols();\n    const pinnedLeft = [];\n    const center = [];\n    const pinnedRight = [];\n    for (const col of allColumns) {\n      const pinned = col.getPinned();\n      if (!pinned) {\n        center.push(col);\n      } else if (pinned === true || pinned === \"left\") {\n        pinnedLeft.push(col);\n      } else {\n        pinnedRight.push(col);\n      }\n    }\n    this.ariaOrderColumns = pinnedLeft.concat(center).concat(pinnedRight);\n  }\n  getAriaColIndex(colOrGroup) {\n    let col;\n    if (isColumnGroup(colOrGroup)) {\n      col = colOrGroup.getLeafColumns()[0];\n    } else {\n      col = colOrGroup;\n    }\n    return this.ariaOrderColumns.indexOf(col) + 1;\n  }\n  getAllAutoHeightCols() {\n    return this.autoHeightCols;\n  }\n  setLeftValuesOfGroups() {\n    [this.treeLeft, this.treeRight, this.treeCenter].forEach((columns) => {\n      columns.forEach((column) => {\n        if (isColumnGroup(column)) {\n          const columnGroup = column;\n          columnGroup.checkLeft();\n        }\n      });\n    });\n  }\n  setLeftValuesOfCols(source) {\n    const primaryCols = this.columnModel.getColDefCols();\n    if (!primaryCols) {\n      return;\n    }\n    const allColumns = this.columnModel.getCols().slice(0);\n    const doingRtl = this.gos.get(\"enableRtl\");\n    [this.columnsLeft, this.columnsRight, this.columnsCenter].forEach((columns) => {\n      if (doingRtl) {\n        let left = getWidthOfColsInList(columns);\n        columns.forEach((column) => {\n          left -= column.getActualWidth();\n          column.setLeft(left, source);\n        });\n      } else {\n        let left = 0;\n        columns.forEach((column) => {\n          column.setLeft(left, source);\n          left += column.getActualWidth();\n        });\n      }\n      _removeAllFromUnorderedArray(allColumns, columns);\n    });\n    allColumns.forEach((column) => {\n      column.setLeft(null, source);\n    });\n  }\n  joinCols() {\n    if (this.gos.get(\"enableRtl\")) {\n      this.columns = this.columnsRight.concat(this.columnsCenter).concat(this.columnsLeft);\n    } else {\n      this.columns = this.columnsLeft.concat(this.columnsCenter).concat(this.columnsRight);\n    }\n  }\n  getColsCenter() {\n    return this.columnsCenter;\n  }\n  getAllTrees() {\n    if (this.treeLeft && this.treeRight && this.treeCenter) {\n      return this.treeLeft.concat(this.treeCenter).concat(this.treeRight);\n    }\n    return null;\n  }\n  // + headerRenderer -> setting pinned body width\n  getTreeLeft() {\n    return this.treeLeft;\n  }\n  // + headerRenderer -> setting pinned body width\n  getTreeRight() {\n    return this.treeRight;\n  }\n  // + headerRenderer -> setting pinned body width\n  getTreeCenter() {\n    return this.treeCenter;\n  }\n  // + csvCreator\n  getAllCols() {\n    return this.columns;\n  }\n  // gridPanel -> ensureColumnVisible\n  isColDisplayed(column) {\n    return this.getAllCols().indexOf(column) >= 0;\n  }\n  getLeftColsForRow(rowNode) {\n    const colSpanActive = this.columnModel.isColSpanActive();\n    if (!colSpanActive) {\n      return this.columnsLeft;\n    }\n    return this.getColsForRow(rowNode, this.columnsLeft);\n  }\n  getRightColsForRow(rowNode) {\n    const colSpanActive = this.columnModel.isColSpanActive();\n    if (!colSpanActive) {\n      return this.columnsRight;\n    }\n    return this.getColsForRow(rowNode, this.columnsRight);\n  }\n  getColsForRow(rowNode, displayedColumns, filterCallback, emptySpaceBeforeColumn) {\n    const result = [];\n    let lastConsideredCol = null;\n    for (let i = 0; i < displayedColumns.length; i++) {\n      const col = displayedColumns[i];\n      const maxAllowedColSpan = displayedColumns.length - i;\n      const colSpan = Math.min(col.getColSpan(rowNode), maxAllowedColSpan);\n      const columnsToCheckFilter = [col];\n      if (colSpan > 1) {\n        const colsToRemove = colSpan - 1;\n        for (let j = 1; j <= colsToRemove; j++) {\n          columnsToCheckFilter.push(displayedColumns[i + j]);\n        }\n        i += colsToRemove;\n      }\n      let filterPasses;\n      if (filterCallback) {\n        filterPasses = false;\n        columnsToCheckFilter.forEach((colForFilter) => {\n          if (filterCallback(colForFilter)) {\n            filterPasses = true;\n          }\n        });\n      } else {\n        filterPasses = true;\n      }\n      if (filterPasses) {\n        if (result.length === 0 && lastConsideredCol) {\n          const gapBeforeColumn = emptySpaceBeforeColumn ? emptySpaceBeforeColumn(col) : false;\n          if (gapBeforeColumn) {\n            result.push(lastConsideredCol);\n          }\n        }\n        result.push(col);\n      }\n      lastConsideredCol = col;\n    }\n    return result;\n  }\n  // used by:\n  // + angularGrid -> for setting body width\n  // + rowController -> setting main row widths (when inserting and resizing)\n  // need to cache this\n  getBodyContainerWidth() {\n    return this.bodyWidth;\n  }\n  getContainerWidth(pinned) {\n    switch (pinned) {\n      case \"left\":\n        return this.leftWidth;\n      case \"right\":\n        return this.rightWidth;\n      default:\n        return this.bodyWidth;\n    }\n  }\n  // + rowController -> while inserting rows\n  getCenterCols() {\n    return this.columnsCenter;\n  }\n  // + rowController -> while inserting rows\n  getLeftCols() {\n    return this.columnsLeft;\n  }\n  getRightCols() {\n    return this.columnsRight;\n  }\n  getColBefore(col) {\n    const allDisplayedColumns = this.getAllCols();\n    const oldIndex = allDisplayedColumns.indexOf(col);\n    if (oldIndex > 0) {\n      return allDisplayedColumns[oldIndex - 1];\n    }\n    return null;\n  }\n  getGroupAtDirection(columnGroup, direction) {\n    const requiredLevel = columnGroup.getProvidedColumnGroup().getLevel() + columnGroup.getPaddingLevel();\n    const colGroupLeafColumns = columnGroup.getDisplayedLeafColumns();\n    const col = direction === \"After\" ? _last(colGroupLeafColumns) : colGroupLeafColumns[0];\n    const getDisplayColMethod = `getCol${direction}`;\n    while (true) {\n      const column = this[getDisplayColMethod](col);\n      if (!column) {\n        return null;\n      }\n      const groupPointer = this.getColGroupAtLevel(column, requiredLevel);\n      if (groupPointer !== columnGroup) {\n        return groupPointer;\n      }\n    }\n  }\n  getColGroupAtLevel(column, level) {\n    let groupPointer = column.getParent();\n    let originalGroupLevel;\n    let groupPointerLevel;\n    while (true) {\n      const groupPointerProvidedColumnGroup = groupPointer.getProvidedColumnGroup();\n      originalGroupLevel = groupPointerProvidedColumnGroup.getLevel();\n      groupPointerLevel = groupPointer.getPaddingLevel();\n      if (originalGroupLevel + groupPointerLevel <= level) {\n        break;\n      }\n      groupPointer = groupPointer.getParent();\n    }\n    return groupPointer;\n  }\n  isPinningLeft() {\n    return this.columnsLeft.length > 0;\n  }\n  isPinningRight() {\n    return this.columnsRight.length > 0;\n  }\n  updateColsAndGroupsMap() {\n    this.colsAndGroupsMap = {};\n    const func = (child) => {\n      this.colsAndGroupsMap[child.getUniqueId()] = child;\n    };\n    depthFirstAllColumnTreeSearch(this.treeCenter, false, func);\n    depthFirstAllColumnTreeSearch(this.treeLeft, false, func);\n    depthFirstAllColumnTreeSearch(this.treeRight, false, func);\n  }\n  isVisible(item) {\n    const fromMap = this.colsAndGroupsMap[item.getUniqueId()];\n    return fromMap === item;\n  }\n  updateOpenClosedVisibilityInColumnGroups() {\n    const allColumnGroups = this.getAllTrees();\n    depthFirstAllColumnTreeSearch(allColumnGroups, false, (child) => {\n      if (isColumnGroup(child)) {\n        child.calculateDisplayedColumns();\n      }\n    });\n  }\n  getFirstColumn() {\n    const isRtl = this.gos.get(\"enableRtl\");\n    const queryOrder = [\n      \"getLeftCols\",\n      \"getCenterCols\",\n      \"getRightCols\"\n    ];\n    if (isRtl) {\n      queryOrder.reverse();\n    }\n    for (let i = 0; i < queryOrder.length; i++) {\n      const container = this[queryOrder[i]]();\n      if (container.length) {\n        return isRtl ? _last(container) : container[0];\n      }\n    }\n    return null;\n  }\n  // returns the group with matching colId and instanceId. If instanceId is missing,\n  // matches only on the colId.\n  getColumnGroup(colId, partId) {\n    if (!colId) {\n      return null;\n    }\n    if (isColumnGroup(colId)) {\n      return colId;\n    }\n    const allColumnGroups = this.getAllTrees();\n    const checkPartId = typeof partId === \"number\";\n    let result = null;\n    depthFirstAllColumnTreeSearch(allColumnGroups, false, (child) => {\n      if (isColumnGroup(child)) {\n        const columnGroup = child;\n        let matched;\n        if (checkPartId) {\n          matched = colId === columnGroup.getGroupId() && partId === columnGroup.getPartId();\n        } else {\n          matched = colId === columnGroup.getGroupId();\n        }\n        if (matched) {\n          result = columnGroup;\n        }\n      }\n    });\n    return result;\n  }\n  // used by:\n  // + rowRenderer -> for navigation\n  getColAfter(col) {\n    const allDisplayedColumns = this.getAllCols();\n    const oldIndex = allDisplayedColumns.indexOf(col);\n    if (oldIndex < allDisplayedColumns.length - 1) {\n      return allDisplayedColumns[oldIndex + 1];\n    }\n    return null;\n  }\n  isBodyWidthDirty() {\n    return this.bodyWidthDirty;\n  }\n  setBodyWidthDirty() {\n    this.bodyWidthDirty = true;\n  }\n  // used by:\n  // + angularGrid -> setting pinned body width\n  // note: this should be cached\n  getColsLeftWidth() {\n    return getWidthOfColsInList(this.columnsLeft);\n  }\n  // note: this should be cached\n  getDisplayedColumnsRightWidth() {\n    return getWidthOfColsInList(this.columnsRight);\n  }\n  isColAtEdge(col, edge) {\n    const allColumns = this.getAllCols();\n    if (!allColumns.length) {\n      return false;\n    }\n    const isFirst = edge === \"first\";\n    let columnToCompare;\n    if (isColumnGroup(col)) {\n      const leafColumns = col.getDisplayedLeafColumns();\n      if (!leafColumns.length) {\n        return false;\n      }\n      columnToCompare = isFirst ? leafColumns[0] : _last(leafColumns);\n    } else {\n      columnToCompare = col;\n    }\n    return (isFirst ? allColumns[0] : _last(allColumns)) === columnToCompare;\n  }\n  createGroups(params) {\n    const { columns, idCreator, pinned, oldDisplayedGroups, isStandaloneStructure } = params;\n    const oldColumnsMapped = this.mapOldGroupsById(oldDisplayedGroups);\n    const topLevelResultCols = [];\n    let groupsOrColsAtCurrentLevel = columns;\n    while (groupsOrColsAtCurrentLevel.length) {\n      const currentlyIterating = groupsOrColsAtCurrentLevel;\n      groupsOrColsAtCurrentLevel = [];\n      let lastGroupedColIdx = 0;\n      const createGroupToIndex = (to) => {\n        const from = lastGroupedColIdx;\n        lastGroupedColIdx = to;\n        const previousNode = currentlyIterating[from];\n        const previousNodeProvided = isColumnGroup(previousNode) ? previousNode.getProvidedColumnGroup() : previousNode;\n        const previousNodeParent = previousNodeProvided.getOriginalParent();\n        if (previousNodeParent == null) {\n          for (let i = from; i < to; i++) {\n            topLevelResultCols.push(currentlyIterating[i]);\n          }\n          return;\n        }\n        const newGroup = this.createColGroup(\n          previousNodeParent,\n          idCreator,\n          oldColumnsMapped,\n          pinned,\n          isStandaloneStructure\n        );\n        for (let i = from; i < to; i++) {\n          newGroup.addChild(currentlyIterating[i]);\n        }\n        groupsOrColsAtCurrentLevel.push(newGroup);\n      };\n      for (let i = 1; i < currentlyIterating.length; i++) {\n        const thisNode = currentlyIterating[i];\n        const thisNodeProvided = isColumnGroup(thisNode) ? thisNode.getProvidedColumnGroup() : thisNode;\n        const thisNodeParent = thisNodeProvided.getOriginalParent();\n        const previousNode = currentlyIterating[lastGroupedColIdx];\n        const previousNodeProvided = isColumnGroup(previousNode) ? previousNode.getProvidedColumnGroup() : previousNode;\n        const previousNodeParent = previousNodeProvided.getOriginalParent();\n        if (thisNodeParent !== previousNodeParent) {\n          createGroupToIndex(i);\n        }\n      }\n      if (lastGroupedColIdx < currentlyIterating.length) {\n        createGroupToIndex(currentlyIterating.length);\n      }\n    }\n    if (!isStandaloneStructure) {\n      this.setupParentsIntoCols(topLevelResultCols, null);\n    }\n    return topLevelResultCols;\n  }\n  createColGroup(providedGroup, groupInstanceIdCreator, oldColumnsMapped, pinned, isStandaloneStructure) {\n    const groupId = providedGroup.getGroupId();\n    const instanceId = groupInstanceIdCreator.getInstanceIdForKey(groupId);\n    const uniqueId = createUniqueColumnGroupId(groupId, instanceId);\n    let columnGroup = oldColumnsMapped[uniqueId];\n    if (columnGroup && columnGroup.getProvidedColumnGroup() !== providedGroup) {\n      columnGroup = null;\n    }\n    if (_exists(columnGroup)) {\n      columnGroup.reset();\n    } else {\n      columnGroup = new AgColumnGroup(providedGroup, groupId, instanceId, pinned);\n      if (!isStandaloneStructure) {\n        this.createBean(columnGroup);\n      }\n    }\n    return columnGroup;\n  }\n  // returns back a 2d map of ColumnGroup as follows: groupId -> instanceId -> ColumnGroup\n  mapOldGroupsById(displayedGroups) {\n    const result = {};\n    const recursive = (columnsOrGroups) => {\n      columnsOrGroups.forEach((columnOrGroup) => {\n        if (isColumnGroup(columnOrGroup)) {\n          const columnGroup = columnOrGroup;\n          result[columnOrGroup.getUniqueId()] = columnGroup;\n          recursive(columnGroup.getChildren());\n        }\n      });\n    };\n    if (displayedGroups) {\n      recursive(displayedGroups);\n    }\n    return result;\n  }\n  setupParentsIntoCols(columnsOrGroups, parent) {\n    columnsOrGroups.forEach((columnsOrGroup) => {\n      columnsOrGroup.setParent(parent);\n      if (isColumnGroup(columnsOrGroup)) {\n        const columnGroup = columnsOrGroup;\n        this.setupParentsIntoCols(columnGroup.getChildren(), columnGroup);\n      }\n    });\n  }\n};\nfunction depthFirstAllColumnTreeSearch(tree, useDisplayedChildren, callback) {\n  if (!tree) {\n    return;\n  }\n  for (let i = 0; i < tree.length; i++) {\n    const child = tree[i];\n    if (isColumnGroup(child)) {\n      const childTree = useDisplayedChildren ? child.getDisplayedChildren() : child.getChildren();\n      depthFirstAllColumnTreeSearch(childTree, useDisplayedChildren, callback);\n    }\n    callback(child);\n  }\n}\nfunction pickDisplayedCols(tree) {\n  const res = [];\n  depthFirstAllColumnTreeSearch(tree, true, (child) => {\n    if (isColumn(child)) {\n      res.push(child);\n    }\n  });\n  return res;\n}\n\n// community-modules/core/src/eventTypes.ts\nvar PUBLIC_EVENTS = [\n  \"columnEverythingChanged\",\n  \"newColumnsLoaded\",\n  \"columnPivotModeChanged\",\n  \"pivotMaxColumnsExceeded\",\n  \"columnRowGroupChanged\",\n  \"expandOrCollapseAll\",\n  \"columnPivotChanged\",\n  \"gridColumnsChanged\",\n  \"columnValueChanged\",\n  \"columnMoved\",\n  \"columnVisible\",\n  \"columnPinned\",\n  \"columnGroupOpened\",\n  \"columnResized\",\n  \"displayedColumnsChanged\",\n  \"virtualColumnsChanged\",\n  \"columnHeaderMouseOver\",\n  \"columnHeaderMouseLeave\",\n  \"columnHeaderClicked\",\n  \"columnHeaderContextMenu\",\n  \"asyncTransactionsFlushed\",\n  \"rowGroupOpened\",\n  \"rowDataUpdated\",\n  \"pinnedRowDataChanged\",\n  \"rangeSelectionChanged\",\n  \"chartCreated\",\n  \"chartRangeSelectionChanged\",\n  \"chartOptionsChanged\",\n  \"chartDestroyed\",\n  \"toolPanelVisibleChanged\",\n  \"toolPanelSizeChanged\",\n  \"modelUpdated\",\n  \"cutStart\",\n  \"cutEnd\",\n  \"pasteStart\",\n  \"pasteEnd\",\n  \"fillStart\",\n  \"fillEnd\",\n  \"rangeDeleteStart\",\n  \"rangeDeleteEnd\",\n  \"undoStarted\",\n  \"undoEnded\",\n  \"redoStarted\",\n  \"redoEnded\",\n  \"cellClicked\",\n  \"cellDoubleClicked\",\n  \"cellMouseDown\",\n  \"cellContextMenu\",\n  \"cellValueChanged\",\n  \"cellEditRequest\",\n  \"rowValueChanged\",\n  \"headerFocused\",\n  \"cellFocused\",\n  \"rowSelected\",\n  \"selectionChanged\",\n  \"tooltipShow\",\n  \"tooltipHide\",\n  \"cellKeyDown\",\n  \"cellMouseOver\",\n  \"cellMouseOut\",\n  \"filterChanged\",\n  \"filterModified\",\n  \"filterOpened\",\n  \"advancedFilterBuilderVisibleChanged\",\n  \"sortChanged\",\n  \"virtualRowRemoved\",\n  \"rowClicked\",\n  \"rowDoubleClicked\",\n  \"gridReady\",\n  \"gridPreDestroyed\",\n  \"gridSizeChanged\",\n  \"viewportChanged\",\n  \"firstDataRendered\",\n  \"dragStarted\",\n  \"dragStopped\",\n  \"rowEditingStarted\",\n  \"rowEditingStopped\",\n  \"cellEditingStarted\",\n  \"cellEditingStopped\",\n  \"bodyScroll\",\n  \"bodyScrollEnd\",\n  \"paginationChanged\",\n  \"componentStateChanged\",\n  \"storeRefreshed\",\n  \"stateUpdated\",\n  \"columnMenuVisibleChanged\",\n  \"contextMenuVisibleChanged\",\n  \"rowDragEnter\",\n  \"rowDragMove\",\n  \"rowDragLeave\",\n  \"rowDragEnd\"\n];\nvar INTERNAL_EVENTS = [\n  \"scrollbarWidthChanged\",\n  \"keyShortcutChangedCellStart\",\n  \"keyShortcutChangedCellEnd\",\n  \"pinnedHeightChanged\",\n  \"cellFocusCleared\",\n  \"fullWidthRowFocused\",\n  \"checkboxChanged\",\n  \"heightScaleChanged\",\n  \"suppressMovableColumns\",\n  \"suppressMenuHide\",\n  \"suppressFieldDotNotation\",\n  \"columnPanelItemDragStart\",\n  \"columnPanelItemDragEnd\",\n  \"bodyHeightChanged\",\n  \"columnContainerWidthChanged\",\n  \"displayedColumnsWidthChanged\",\n  \"scrollVisibilityChanged\",\n  \"columnHoverChanged\",\n  \"flashCells\",\n  \"paginationPixelOffsetChanged\",\n  \"displayedRowsChanged\",\n  \"leftPinnedWidthChanged\",\n  \"rightPinnedWidthChanged\",\n  \"rowContainerHeightChanged\",\n  \"headerHeightChanged\",\n  \"columnGroupHeaderHeightChanged\",\n  \"columnHeaderHeightChanged\",\n  \"gridStylesChanged\",\n  \"storeUpdated\",\n  \"filterDestroyed\",\n  \"rowDataUpdateStarted\",\n  \"rowCountReady\",\n  \"advancedFilterEnabledChanged\",\n  \"dataTypesInferred\",\n  \"fieldValueChanged\",\n  \"fieldPickerValueSelected\",\n  \"richSelectListRowSelected\",\n  \"sideBarUpdated\",\n  \"alignedGridScroll\",\n  \"alignedGridColumn\",\n  \"gridOptionsChanged\",\n  \"chartTitleEdit\",\n  \"recalculateRowBounds\",\n  \"stickyTopOffsetChanged\",\n  \"overlayExclusiveChanged\"\n];\nvar ALL_EVENTS = [...PUBLIC_EVENTS, ...INTERNAL_EVENTS];\n\n// community-modules/core/src/propertyKeys.ts\nvar INITIAL_GRID_OPTION_KEYS = {\n  enableBrowserTooltips: true,\n  tooltipTrigger: true,\n  tooltipMouseTrack: true,\n  tooltipShowMode: true,\n  tooltipInteraction: true,\n  defaultColGroupDef: true,\n  suppressAutoSize: true,\n  skipHeaderOnAutoSize: true,\n  autoSizeStrategy: true,\n  components: true,\n  stopEditingWhenCellsLoseFocus: true,\n  undoRedoCellEditing: true,\n  undoRedoCellEditingLimit: true,\n  excelStyles: true,\n  cacheQuickFilter: true,\n  advancedFilterModel: true,\n  customChartThemes: true,\n  chartThemeOverrides: true,\n  chartToolPanelsDef: true,\n  loadingCellRendererSelector: true,\n  localeText: true,\n  keepDetailRows: true,\n  keepDetailRowsCount: true,\n  detailRowHeight: true,\n  detailRowAutoHeight: true,\n  tabIndex: true,\n  valueCache: true,\n  valueCacheNeverExpires: true,\n  enableCellExpressions: true,\n  suppressTouch: true,\n  suppressAsyncEvents: true,\n  suppressBrowserResizeObserver: true,\n  suppressPropertyNamesCheck: true,\n  debug: true,\n  loadingOverlayComponent: true,\n  suppressLoadingOverlay: true,\n  noRowsOverlayComponent: true,\n  paginationPageSizeSelector: true,\n  paginateChildRows: true,\n  pivotPanelShow: true,\n  pivotSuppressAutoColumn: true,\n  suppressExpandablePivotGroups: true,\n  aggFuncs: true,\n  suppressAggFuncInHeader: true,\n  removePivotHeaderRowWhenSingleValueColumn: true,\n  allowShowChangeAfterFilter: true,\n  ensureDomOrder: true,\n  enableRtl: true,\n  suppressColumnVirtualisation: true,\n  suppressMaxRenderedRowRestriction: true,\n  suppressRowVirtualisation: true,\n  rowDragText: true,\n  suppressGroupMaintainValueType: true,\n  groupLockGroupColumns: true,\n  rowGroupPanelSuppressSort: true,\n  suppressGroupRowsSticky: true,\n  rowModelType: true,\n  cacheOverflowSize: true,\n  infiniteInitialRowCount: true,\n  serverSideInitialRowCount: true,\n  suppressServerSideInfiniteScroll: true,\n  maxBlocksInCache: true,\n  maxConcurrentDatasourceRequests: true,\n  blockLoadDebounceMillis: true,\n  serverSideOnlyRefreshFilteredGroups: true,\n  serverSidePivotResultFieldSeparator: true,\n  viewportRowModelPageSize: true,\n  viewportRowModelBufferSize: true,\n  debounceVerticalScrollbar: true,\n  suppressAnimationFrame: true,\n  suppressPreventDefaultOnMouseWheel: true,\n  scrollbarWidth: true,\n  icons: true,\n  suppressRowTransform: true,\n  gridId: true,\n  enableGroupEdit: true,\n  initialState: true,\n  processUnpinnedColumns: true,\n  createChartContainer: true,\n  getLocaleText: true,\n  getRowId: true,\n  reactiveCustomComponents: true,\n  columnMenu: true\n};\nvar _PropertyKeys = class _PropertyKeys {\n};\n_PropertyKeys.STRING_PROPERTIES = [\n  \"rowSelection\",\n  \"overlayLoadingTemplate\",\n  \"overlayNoRowsTemplate\",\n  \"gridId\",\n  \"quickFilterText\",\n  \"rowModelType\",\n  \"editType\",\n  \"domLayout\",\n  \"clipboardDelimiter\",\n  \"rowGroupPanelShow\",\n  \"multiSortKey\",\n  \"pivotColumnGroupTotals\",\n  \"pivotRowTotals\",\n  \"pivotPanelShow\",\n  \"fillHandleDirection\",\n  \"groupDisplayType\",\n  \"treeDataDisplayType\",\n  \"colResizeDefault\",\n  \"tooltipTrigger\",\n  \"serverSidePivotResultFieldSeparator\",\n  \"columnMenu\",\n  \"tooltipShowMode\",\n  \"grandTotalRow\"\n];\n_PropertyKeys.OBJECT_PROPERTIES = [\n  \"components\",\n  \"rowStyle\",\n  \"context\",\n  \"autoGroupColumnDef\",\n  \"localeText\",\n  \"icons\",\n  \"datasource\",\n  \"serverSideDatasource\",\n  \"viewportDatasource\",\n  \"groupRowRendererParams\",\n  \"aggFuncs\",\n  \"fullWidthCellRendererParams\",\n  \"defaultColGroupDef\",\n  \"defaultColDef\",\n  \"defaultCsvExportParams\",\n  \"defaultExcelExportParams\",\n  \"columnTypes\",\n  \"rowClassRules\",\n  \"detailCellRendererParams\",\n  \"loadingCellRendererParams\",\n  \"loadingOverlayComponentParams\",\n  \"noRowsOverlayComponentParams\",\n  \"popupParent\",\n  \"statusBar\",\n  \"sideBar\",\n  \"chartThemeOverrides\",\n  \"customChartThemes\",\n  \"chartToolPanelsDef\",\n  \"dataTypeDefinitions\",\n  \"advancedFilterModel\",\n  \"advancedFilterParent\",\n  \"advancedFilterBuilderParams\",\n  \"initialState\",\n  \"autoSizeStrategy\"\n];\n_PropertyKeys.ARRAY_PROPERTIES = [\n  \"sortingOrder\",\n  \"alignedGrids\",\n  \"rowData\",\n  \"columnDefs\",\n  \"excelStyles\",\n  \"pinnedTopRowData\",\n  \"pinnedBottomRowData\",\n  \"chartThemes\",\n  \"rowClass\",\n  \"paginationPageSizeSelector\"\n];\n// These properties are coerced at runtime, do not do union types\n_PropertyKeys.NUMBER_PROPERTIES = [\n  \"rowHeight\",\n  \"detailRowHeight\",\n  \"rowBuffer\",\n  \"headerHeight\",\n  \"groupHeaderHeight\",\n  \"groupLockGroupColumns\",\n  \"floatingFiltersHeight\",\n  \"pivotHeaderHeight\",\n  \"pivotGroupHeaderHeight\",\n  \"groupDefaultExpanded\",\n  \"pivotDefaultExpanded\",\n  \"viewportRowModelPageSize\",\n  \"viewportRowModelBufferSize\",\n  \"autoSizePadding\",\n  \"maxBlocksInCache\",\n  \"maxConcurrentDatasourceRequests\",\n  \"tooltipShowDelay\",\n  \"tooltipHideDelay\",\n  \"cacheOverflowSize\",\n  \"paginationPageSize\",\n  \"cacheBlockSize\",\n  \"infiniteInitialRowCount\",\n  \"serverSideInitialRowCount\",\n  \"scrollbarWidth\",\n  \"asyncTransactionWaitMillis\",\n  \"blockLoadDebounceMillis\",\n  \"keepDetailRowsCount\",\n  \"undoRedoCellEditingLimit\",\n  \"cellFlashDelay\",\n  \"cellFadeDelay\",\n  \"cellFlashDuration\",\n  \"cellFadeDuration\",\n  \"tabIndex\",\n  \"pivotMaxGeneratedColumns\"\n];\n// These properties are coerced at runtime, do not do union types\n_PropertyKeys.BOOLEAN_PROPERTIES = [\n  \"suppressMakeColumnVisibleAfterUnGroup\",\n  \"suppressRowClickSelection\",\n  \"suppressCellFocus\",\n  \"suppressHeaderFocus\",\n  \"suppressHorizontalScroll\",\n  \"groupSelectsChildren\",\n  \"alwaysShowHorizontalScroll\",\n  \"alwaysShowVerticalScroll\",\n  \"debug\",\n  \"enableBrowserTooltips\",\n  \"enableCellExpressions\",\n  \"groupIncludeTotalFooter\",\n  \"groupSuppressBlankHeader\",\n  \"suppressMenuHide\",\n  \"suppressRowDeselection\",\n  \"unSortIcon\",\n  \"suppressMultiSort\",\n  \"alwaysMultiSort\",\n  \"singleClickEdit\",\n  \"suppressLoadingOverlay\",\n  \"suppressNoRowsOverlay\",\n  \"suppressAutoSize\",\n  \"skipHeaderOnAutoSize\",\n  \"suppressColumnMoveAnimation\",\n  \"suppressMovableColumns\",\n  \"suppressFieldDotNotation\",\n  \"enableRangeSelection\",\n  \"enableRangeHandle\",\n  \"enableFillHandle\",\n  \"suppressClearOnFillReduction\",\n  \"deltaSort\",\n  \"suppressTouch\",\n  \"suppressAsyncEvents\",\n  \"allowContextMenuWithControlKey\",\n  \"suppressContextMenu\",\n  \"enableCellChangeFlash\",\n  \"suppressDragLeaveHidesColumns\",\n  \"suppressRowGroupHidesColumns\",\n  \"suppressMiddleClickScrolls\",\n  \"suppressPreventDefaultOnMouseWheel\",\n  \"suppressCopyRowsToClipboard\",\n  \"copyHeadersToClipboard\",\n  \"copyGroupHeadersToClipboard\",\n  \"pivotMode\",\n  \"suppressAggFuncInHeader\",\n  \"suppressColumnVirtualisation\",\n  \"alwaysAggregateAtRootLevel\",\n  \"suppressFocusAfterRefresh\",\n  \"functionsReadOnly\",\n  \"animateRows\",\n  \"groupSelectsFiltered\",\n  \"groupRemoveSingleChildren\",\n  \"groupRemoveLowestSingleChildren\",\n  \"enableRtl\",\n  \"suppressClickEdit\",\n  \"rowDragEntireRow\",\n  \"rowDragManaged\",\n  \"suppressRowDrag\",\n  \"suppressMoveWhenRowDragging\",\n  \"rowDragMultiRow\",\n  \"enableGroupEdit\",\n  \"embedFullWidthRows\",\n  \"suppressPaginationPanel\",\n  \"groupHideOpenParents\",\n  \"groupAllowUnbalanced\",\n  \"pagination\",\n  \"paginationAutoPageSize\",\n  \"suppressScrollOnNewData\",\n  \"suppressScrollWhenPopupsAreOpen\",\n  \"purgeClosedRowNodes\",\n  \"cacheQuickFilter\",\n  \"includeHiddenColumnsInQuickFilter\",\n  \"ensureDomOrder\",\n  \"accentedSort\",\n  \"suppressChangeDetection\",\n  \"valueCache\",\n  \"valueCacheNeverExpires\",\n  \"aggregateOnlyChangedColumns\",\n  \"suppressAnimationFrame\",\n  \"suppressExcelExport\",\n  \"suppressCsvExport\",\n  \"includeHiddenColumnsInAdvancedFilter\",\n  \"suppressMultiRangeSelection\",\n  \"enterNavigatesVerticallyAfterEdit\",\n  \"enterNavigatesVertically\",\n  \"suppressPropertyNamesCheck\",\n  \"rowMultiSelectWithClick\",\n  \"suppressRowHoverHighlight\",\n  \"suppressRowTransform\",\n  \"suppressClipboardPaste\",\n  \"suppressLastEmptyLineOnPaste\",\n  \"enableCharts\",\n  \"suppressMaintainUnsortedOrder\",\n  \"enableCellTextSelection\",\n  \"suppressBrowserResizeObserver\",\n  \"suppressMaxRenderedRowRestriction\",\n  \"excludeChildrenWhenTreeDataFiltering\",\n  \"tooltipMouseTrack\",\n  \"tooltipInteraction\",\n  \"keepDetailRows\",\n  \"paginateChildRows\",\n  \"preventDefaultOnContextMenu\",\n  \"undoRedoCellEditing\",\n  \"allowDragFromColumnsToolPanel\",\n  \"pivotSuppressAutoColumn\",\n  \"suppressExpandablePivotGroups\",\n  \"debounceVerticalScrollbar\",\n  \"detailRowAutoHeight\",\n  \"serverSideSortAllLevels\",\n  \"serverSideEnableClientSideSort\",\n  \"serverSideOnlyRefreshFilteredGroups\",\n  \"serverSideSortOnServer\",\n  \"serverSideFilterOnServer\",\n  \"suppressAggFilteredOnly\",\n  \"showOpenedGroup\",\n  \"suppressClipboardApi\",\n  \"suppressModelUpdateAfterUpdateTransaction\",\n  \"stopEditingWhenCellsLoseFocus\",\n  \"maintainColumnOrder\",\n  \"groupMaintainOrder\",\n  \"columnHoverHighlight\",\n  \"readOnlyEdit\",\n  \"suppressRowVirtualisation\",\n  \"enableCellEditingOnBackspace\",\n  \"resetRowDataOnUpdate\",\n  \"removePivotHeaderRowWhenSingleValueColumn\",\n  \"suppressCopySingleCellRanges\",\n  \"suppressGroupRowsSticky\",\n  \"suppressCutToClipboard\",\n  \"suppressServerSideInfiniteScroll\",\n  \"rowGroupPanelSuppressSort\",\n  \"allowShowChangeAfterFilter\",\n  \"enableAdvancedFilter\",\n  \"masterDetail\",\n  \"treeData\",\n  \"suppressGroupMaintainValueType\",\n  \"reactiveCustomComponents\",\n  \"applyQuickFilterBeforePivotOrAgg\",\n  \"suppressServerSideFullWidthLoadingRow\",\n  \"suppressAdvancedFilterEval\",\n  \"loading\"\n];\n// If property does not fit above, i.e union that should not be coerced.\n_PropertyKeys.OTHER_PROPERTIES = [\"suppressStickyTotalRow\"];\n_PropertyKeys.FUNCTION_PROPERTIES = [\n  \"doesExternalFilterPass\",\n  \"processPivotResultColDef\",\n  \"processPivotResultColGroupDef\",\n  \"getBusinessKeyForNode\",\n  \"isRowSelectable\",\n  \"rowDragText\",\n  \"groupRowRenderer\",\n  \"fullWidthCellRenderer\",\n  \"loadingCellRenderer\",\n  \"loadingOverlayComponent\",\n  \"noRowsOverlayComponent\",\n  \"detailCellRenderer\",\n  \"quickFilterParser\",\n  \"quickFilterMatcher\",\n  \"getLocaleText\",\n  \"isExternalFilterPresent\",\n  \"getRowHeight\",\n  \"getRowClass\",\n  \"getRowStyle\",\n  \"getContextMenuItems\",\n  \"getMainMenuItems\",\n  \"processRowPostCreate\",\n  \"processCellForClipboard\",\n  \"getGroupRowAgg\",\n  \"isFullWidthRow\",\n  \"sendToClipboard\",\n  \"focusGridInnerElement\",\n  \"navigateToNextHeader\",\n  \"tabToNextHeader\",\n  \"navigateToNextCell\",\n  \"tabToNextCell\",\n  \"processCellFromClipboard\",\n  \"getDocument\",\n  \"postProcessPopup\",\n  \"getChildCount\",\n  \"getDataPath\",\n  \"isRowMaster\",\n  \"postSortRows\",\n  \"processHeaderForClipboard\",\n  \"processUnpinnedColumns\",\n  \"processGroupHeaderForClipboard\",\n  \"paginationNumberFormatter\",\n  \"processDataFromClipboard\",\n  \"getServerSideGroupKey\",\n  \"isServerSideGroup\",\n  \"createChartContainer\",\n  \"getChartToolbarItems\",\n  \"fillOperation\",\n  \"isApplyServerSideTransaction\",\n  \"getServerSideGroupLevelParams\",\n  \"isServerSideGroupOpenByDefault\",\n  \"isGroupOpenByDefault\",\n  \"initialGroupOrderComparator\",\n  \"groupIncludeFooter\",\n  \"loadingCellRendererSelector\",\n  \"getRowId\",\n  \"groupAggFiltering\",\n  \"chartMenuItems\",\n  \"groupTotalRow\"\n];\n_PropertyKeys.ALL_PROPERTIES = [\n  ..._PropertyKeys.ARRAY_PROPERTIES,\n  ..._PropertyKeys.OBJECT_PROPERTIES,\n  ..._PropertyKeys.STRING_PROPERTIES,\n  ..._PropertyKeys.NUMBER_PROPERTIES,\n  ..._PropertyKeys.FUNCTION_PROPERTIES,\n  ..._PropertyKeys.BOOLEAN_PROPERTIES,\n  ..._PropertyKeys.OTHER_PROPERTIES\n];\nvar PropertyKeys = _PropertyKeys;\n\n// community-modules/core/src/components/componentUtil.ts\nvar _ComponentUtil = class _ComponentUtil {\n  static getCallbackForEvent(eventName) {\n    if (!eventName || eventName.length < 2) {\n      return eventName;\n    }\n    return \"on\" + eventName[0].toUpperCase() + eventName.substring(1);\n  }\n};\n_ComponentUtil.VUE_OMITTED_PROPERTY = \"AG-VUE-OMITTED-PROPERTY\";\n_ComponentUtil.PUBLIC_EVENTS = PUBLIC_EVENTS;\n// onXXX methods, based on the above events\n_ComponentUtil.EVENT_CALLBACKS = ALL_EVENTS.map((event) => _ComponentUtil.getCallbackForEvent(event));\n_ComponentUtil.BOOLEAN_PROPERTIES = PropertyKeys.BOOLEAN_PROPERTIES;\n_ComponentUtil.ALL_PROPERTIES = PropertyKeys.ALL_PROPERTIES;\n_ComponentUtil.ALL_PROPERTIES_AND_CALLBACKS = [..._ComponentUtil.ALL_PROPERTIES, ..._ComponentUtil.EVENT_CALLBACKS];\n_ComponentUtil.ALL_PROPERTIES_AND_CALLBACKS_SET = new Set(_ComponentUtil.ALL_PROPERTIES_AND_CALLBACKS);\nvar ComponentUtil = _ComponentUtil;\nfunction _combineAttributesAndGridOptions(gridOptions, component) {\n  if (typeof gridOptions !== \"object\") {\n    gridOptions = {};\n  }\n  const mergedOptions = { ...gridOptions };\n  const keys = ComponentUtil.ALL_PROPERTIES_AND_CALLBACKS;\n  keys.forEach((key) => {\n    const value = component[key];\n    if (typeof value !== \"undefined\" && value !== ComponentUtil.VUE_OMITTED_PROPERTY) {\n      mergedOptions[key] = value;\n    }\n  });\n  return mergedOptions;\n}\nfunction _processOnChange(changes, api) {\n  if (!changes) {\n    return;\n  }\n  const gridChanges = {};\n  let hasChanges = false;\n  Object.keys(changes).filter((key) => ComponentUtil.ALL_PROPERTIES_AND_CALLBACKS_SET.has(key)).forEach((key) => {\n    gridChanges[key] = changes[key];\n    hasChanges = true;\n  });\n  if (!hasChanges) {\n    return;\n  }\n  const internalUpdateEvent = {\n    type: \"gridOptionsChanged\",\n    options: gridChanges\n  };\n  api.dispatchEvent(internalUpdateEvent);\n  const event = {\n    type: \"componentStateChanged\"\n  };\n  _iterateObject(gridChanges, (key, value) => {\n    event[key] = value;\n  });\n  api.dispatchEvent(event);\n}\n\n// community-modules/core/src/rendering/cssClassManager.ts\nvar CssClassManager = class {\n  constructor(getGui) {\n    // to minimise DOM hits, we only apply CSS classes if they have changed. as adding a CSS class that is already\n    // there, or removing one that wasn't present, all takes CPU.\n    this.cssClassStates = {};\n    this.getGui = getGui;\n  }\n  addCssClass(className) {\n    const list = (className || \"\").split(\" \");\n    if (list.length > 1) {\n      list.forEach((cls) => this.addCssClass(cls));\n      return;\n    }\n    const updateNeeded = this.cssClassStates[className] !== true;\n    if (updateNeeded && className.length) {\n      const eGui = this.getGui();\n      if (eGui) {\n        eGui.classList.add(className);\n      }\n      this.cssClassStates[className] = true;\n    }\n  }\n  removeCssClass(className) {\n    const list = (className || \"\").split(\" \");\n    if (list.length > 1) {\n      list.forEach((cls) => this.removeCssClass(cls));\n      return;\n    }\n    const updateNeeded = this.cssClassStates[className] !== false;\n    if (updateNeeded && className.length) {\n      const eGui = this.getGui();\n      if (eGui) {\n        eGui.classList.remove(className);\n      }\n      this.cssClassStates[className] = false;\n    }\n  }\n  containsCssClass(className) {\n    const eGui = this.getGui();\n    if (!eGui) {\n      return false;\n    }\n    return eGui.classList.contains(className);\n  }\n  addOrRemoveCssClass(className, addOrRemove) {\n    if (!className) {\n      return;\n    }\n    if (className.indexOf(\" \") >= 0) {\n      const list = (className || \"\").split(\" \");\n      if (list.length > 1) {\n        list.forEach((cls) => this.addOrRemoveCssClass(cls, addOrRemove));\n        return;\n      }\n    }\n    const updateNeeded = this.cssClassStates[className] !== addOrRemove;\n    if (updateNeeded && className.length) {\n      const eGui = this.getGui();\n      if (eGui) {\n        eGui.classList.toggle(className, addOrRemove);\n      }\n      this.cssClassStates[className] = addOrRemove;\n    }\n  }\n};\n\n// community-modules/core/src/utils/aria.ts\nfunction _toggleAriaAttribute(element, attribute, value) {\n  if (value == null || typeof value === \"string\" && value == \"\") {\n    _removeAriaAttribute(element, attribute);\n  } else {\n    _setAriaAttribute(element, attribute, value);\n  }\n}\nfunction _setAriaAttribute(element, attribute, value) {\n  element.setAttribute(_ariaAttributeName(attribute), value.toString());\n}\nfunction _removeAriaAttribute(element, attribute) {\n  element.removeAttribute(_ariaAttributeName(attribute));\n}\nfunction _ariaAttributeName(attribute) {\n  return `aria-${attribute}`;\n}\nfunction _setAriaRole(element, role) {\n  if (role) {\n    element.setAttribute(\"role\", role);\n  } else {\n    element.removeAttribute(\"role\");\n  }\n}\nfunction _getAriaSortState(sortDirection) {\n  let sort;\n  if (sortDirection === \"asc\") {\n    sort = \"ascending\";\n  } else if (sortDirection === \"desc\") {\n    sort = \"descending\";\n  } else if (sortDirection === \"mixed\") {\n    sort = \"other\";\n  } else {\n    sort = \"none\";\n  }\n  return sort;\n}\nfunction _getAriaPosInSet(element) {\n  return parseInt(element.getAttribute(\"aria-posinset\"), 10);\n}\nfunction _getAriaLabel(element) {\n  return element.getAttribute(\"aria-label\");\n}\nfunction _setAriaLabel(element, label) {\n  _toggleAriaAttribute(element, \"label\", label);\n}\nfunction _setAriaLabelledBy(element, labelledBy) {\n  _toggleAriaAttribute(element, \"labelledby\", labelledBy);\n}\nfunction _setAriaDescribedBy(element, describedby) {\n  _toggleAriaAttribute(element, \"describedby\", describedby);\n}\nfunction _setAriaLive(element, live) {\n  _toggleAriaAttribute(element, \"live\", live);\n}\nfunction _setAriaAtomic(element, atomic) {\n  _toggleAriaAttribute(element, \"atomic\", atomic);\n}\nfunction _setAriaRelevant(element, relevant) {\n  _toggleAriaAttribute(element, \"relevant\", relevant);\n}\nfunction _setAriaLevel(element, level) {\n  _toggleAriaAttribute(element, \"level\", level);\n}\nfunction _setAriaDisabled(element, disabled) {\n  _toggleAriaAttribute(element, \"disabled\", disabled);\n}\nfunction _setAriaHidden(element, hidden) {\n  _toggleAriaAttribute(element, \"hidden\", hidden);\n}\nfunction _setAriaActiveDescendant(element, descendantId) {\n  _toggleAriaAttribute(element, \"activedescendant\", descendantId);\n}\nfunction _setAriaExpanded(element, expanded) {\n  _setAriaAttribute(element, \"expanded\", expanded);\n}\nfunction _removeAriaExpanded(element) {\n  _removeAriaAttribute(element, \"expanded\");\n}\nfunction _setAriaSetSize(element, setsize) {\n  _setAriaAttribute(element, \"setsize\", setsize);\n}\nfunction _setAriaPosInSet(element, position) {\n  _setAriaAttribute(element, \"posinset\", position);\n}\nfunction _setAriaMultiSelectable(element, multiSelectable) {\n  _setAriaAttribute(element, \"multiselectable\", multiSelectable);\n}\nfunction _setAriaRowCount(element, rowCount) {\n  _setAriaAttribute(element, \"rowcount\", rowCount);\n}\nfunction _setAriaRowIndex(element, rowIndex) {\n  _setAriaAttribute(element, \"rowindex\", rowIndex);\n}\nfunction _setAriaColCount(element, colCount) {\n  _setAriaAttribute(element, \"colcount\", colCount);\n}\nfunction _setAriaColIndex(element, colIndex) {\n  _setAriaAttribute(element, \"colindex\", colIndex);\n}\nfunction _setAriaColSpan(element, colSpan) {\n  _setAriaAttribute(element, \"colspan\", colSpan);\n}\nfunction _setAriaSort(element, sort) {\n  _setAriaAttribute(element, \"sort\", sort);\n}\nfunction _removeAriaSort(element) {\n  _removeAriaAttribute(element, \"sort\");\n}\nfunction _setAriaSelected(element, selected) {\n  _toggleAriaAttribute(element, \"selected\", selected);\n}\nfunction _setAriaChecked(element, checked) {\n  _setAriaAttribute(element, \"checked\", checked === void 0 ? \"mixed\" : checked);\n}\nfunction _setAriaControls(controllerElement, controlledElement) {\n  _toggleAriaAttribute(controllerElement, \"controls\", controlledElement.id);\n  _setAriaLabelledBy(controlledElement, controllerElement.id);\n}\nfunction _getAriaCheckboxStateName(translate, state) {\n  return state === void 0 ? translate(\"ariaIndeterminate\", \"indeterminate\") : state === true ? translate(\"ariaChecked\", \"checked\") : translate(\"ariaUnchecked\", \"unchecked\");\n}\n\n// community-modules/core/src/utils/browser.ts\nvar isSafari;\nvar safariVersion;\nvar isChrome;\nvar isFirefox;\nvar isMacOs;\nvar isIOS;\nvar invisibleScrollbar;\nvar browserScrollbarWidth;\nfunction _isBrowserSafari() {\n  if (isSafari === void 0) {\n    isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  }\n  return isSafari;\n}\nfunction _getSafariVersion() {\n  if (safariVersion === void 0) {\n    if (_isBrowserSafari()) {\n      const versionMatch = navigator.userAgent.match(/version\\/(\\d+)/i);\n      if (versionMatch) {\n        safariVersion = versionMatch[1] != null ? parseFloat(versionMatch[1]) : 0;\n      }\n    } else {\n      safariVersion = 0;\n    }\n  }\n  return safariVersion;\n}\nfunction _isBrowserChrome() {\n  if (isChrome === void 0) {\n    const win = window;\n    isChrome = !!win.chrome && (!!win.chrome.webstore || !!win.chrome.runtime) || /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n  }\n  return isChrome;\n}\nfunction _isBrowserFirefox() {\n  if (isFirefox === void 0) {\n    isFirefox = /(firefox)/i.test(navigator.userAgent);\n  }\n  return isFirefox;\n}\nfunction _isMacOsUserAgent() {\n  if (isMacOs === void 0) {\n    isMacOs = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n  }\n  return isMacOs;\n}\nfunction _isIOSUserAgent() {\n  if (isIOS === void 0) {\n    isIOS = /iPad|iPhone|iPod/.test(navigator.platform) || navigator.platform === \"MacIntel\" && navigator.maxTouchPoints > 1;\n  }\n  return isIOS;\n}\nfunction _browserSupportsPreventScroll() {\n  return !_isBrowserSafari() || _getSafariVersion() >= 15;\n}\nfunction _getTabIndex(el) {\n  if (!el) {\n    return null;\n  }\n  const numberTabIndex = el.tabIndex;\n  const tabIndex = el.getAttribute(\"tabIndex\");\n  if (numberTabIndex === -1 && (tabIndex === null || tabIndex === \"\" && !_isBrowserFirefox())) {\n    return null;\n  }\n  return numberTabIndex.toString();\n}\nfunction _getMaxDivHeight() {\n  if (!document.body) {\n    return -1;\n  }\n  let res = 1e6;\n  const testUpTo = navigator.userAgent.toLowerCase().match(/firefox/) ? 6e6 : 1e9;\n  const div = document.createElement(\"div\");\n  document.body.appendChild(div);\n  while (true) {\n    const test = res * 2;\n    div.style.height = test + \"px\";\n    if (test > testUpTo || div.clientHeight !== test) {\n      break;\n    } else {\n      res = test;\n    }\n  }\n  document.body.removeChild(div);\n  return res;\n}\nfunction _getBodyWidth() {\n  return document.body?.clientWidth ?? (window.innerHeight || document.documentElement?.clientWidth || -1);\n}\nfunction _getBodyHeight() {\n  return document.body?.clientHeight ?? (window.innerHeight || document.documentElement?.clientHeight || -1);\n}\nfunction _getScrollbarWidth() {\n  if (browserScrollbarWidth == null) {\n    initScrollbarWidthAndVisibility();\n  }\n  return browserScrollbarWidth;\n}\nfunction initScrollbarWidthAndVisibility() {\n  const body = document.body;\n  const div = document.createElement(\"div\");\n  div.style.width = div.style.height = \"100px\";\n  div.style.opacity = \"0\";\n  div.style.overflow = \"scroll\";\n  div.style.msOverflowStyle = \"scrollbar\";\n  div.style.position = \"absolute\";\n  body.appendChild(div);\n  let width = div.offsetWidth - div.clientWidth;\n  if (width === 0 && div.clientWidth === 0) {\n    width = null;\n  }\n  if (div.parentNode) {\n    div.parentNode.removeChild(div);\n  }\n  if (width != null) {\n    browserScrollbarWidth = width;\n    invisibleScrollbar = width === 0;\n  }\n}\nfunction _isInvisibleScrollbar() {\n  if (invisibleScrollbar == null) {\n    initScrollbarWidthAndVisibility();\n  }\n  return invisibleScrollbar;\n}\n\n// community-modules/core/src/utils/dom.ts\nvar rtlNegativeScroll;\nfunction _radioCssClass(element, elementClass, otherElementClass) {\n  const parent = element.parentElement;\n  let sibling = parent && parent.firstChild;\n  while (sibling) {\n    if (elementClass) {\n      sibling.classList.toggle(elementClass, sibling === element);\n    }\n    if (otherElementClass) {\n      sibling.classList.toggle(otherElementClass, sibling !== element);\n    }\n    sibling = sibling.nextSibling;\n  }\n}\nvar FOCUSABLE_SELECTOR = \"[tabindex], input, select, button, textarea, [href]\";\nvar FOCUSABLE_EXCLUDE = \"[disabled], .ag-disabled:not(.ag-button), .ag-disabled *\";\nfunction _isFocusableFormField(element) {\n  const matches = Element.prototype.matches || Element.prototype.msMatchesSelector;\n  const inputSelector = \"input, select, button, textarea\";\n  const isFocusable = matches.call(element, inputSelector);\n  const isNotFocusable = matches.call(element, FOCUSABLE_EXCLUDE);\n  const isElementVisible = _isVisible(element);\n  const focusable = isFocusable && !isNotFocusable && isElementVisible;\n  return focusable;\n}\nfunction _setDisplayed(element, displayed, options = {}) {\n  const { skipAriaHidden } = options;\n  element.classList.toggle(\"ag-hidden\", !displayed);\n  if (!skipAriaHidden) {\n    _setAriaHidden(element, !displayed);\n  }\n}\nfunction _setVisible(element, visible, options = {}) {\n  const { skipAriaHidden } = options;\n  element.classList.toggle(\"ag-invisible\", !visible);\n  if (!skipAriaHidden) {\n    _setAriaHidden(element, !visible);\n  }\n}\nfunction _setDisabled(element, disabled) {\n  const attributeName = \"disabled\";\n  const addOrRemoveDisabledAttribute = disabled ? (e) => e.setAttribute(attributeName, \"\") : (e) => e.removeAttribute(attributeName);\n  addOrRemoveDisabledAttribute(element);\n  _nodeListForEach(element.querySelectorAll(\"input\"), (input) => addOrRemoveDisabledAttribute(input));\n}\nfunction _isElementChildOfClass(element, cls, maxNest) {\n  let counter = 0;\n  while (element) {\n    if (element.classList.contains(cls)) {\n      return true;\n    }\n    element = element.parentElement;\n    if (typeof maxNest == \"number\") {\n      if (++counter > maxNest) {\n        break;\n      }\n    } else if (element === maxNest) {\n      break;\n    }\n  }\n  return false;\n}\nfunction _getElementSize(el) {\n  const {\n    height,\n    width,\n    borderTopWidth,\n    borderRightWidth,\n    borderBottomWidth,\n    borderLeftWidth,\n    paddingTop,\n    paddingRight,\n    paddingBottom,\n    paddingLeft,\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n    boxSizing\n  } = window.getComputedStyle(el);\n  return {\n    height: parseFloat(height || \"0\"),\n    width: parseFloat(width || \"0\"),\n    borderTopWidth: parseFloat(borderTopWidth || \"0\"),\n    borderRightWidth: parseFloat(borderRightWidth || \"0\"),\n    borderBottomWidth: parseFloat(borderBottomWidth || \"0\"),\n    borderLeftWidth: parseFloat(borderLeftWidth || \"0\"),\n    paddingTop: parseFloat(paddingTop || \"0\"),\n    paddingRight: parseFloat(paddingRight || \"0\"),\n    paddingBottom: parseFloat(paddingBottom || \"0\"),\n    paddingLeft: parseFloat(paddingLeft || \"0\"),\n    marginTop: parseFloat(marginTop || \"0\"),\n    marginRight: parseFloat(marginRight || \"0\"),\n    marginBottom: parseFloat(marginBottom || \"0\"),\n    marginLeft: parseFloat(marginLeft || \"0\"),\n    boxSizing\n  };\n}\nfunction _getInnerHeight(el) {\n  const size = _getElementSize(el);\n  if (size.boxSizing === \"border-box\") {\n    return size.height - size.paddingTop - size.paddingBottom;\n  }\n  return size.height;\n}\nfunction _getInnerWidth(el) {\n  const size = _getElementSize(el);\n  if (size.boxSizing === \"border-box\") {\n    return size.width - size.paddingLeft - size.paddingRight;\n  }\n  return size.width;\n}\nfunction _getAbsoluteHeight(el) {\n  const { height, marginBottom, marginTop } = _getElementSize(el);\n  return Math.floor(height + marginBottom + marginTop);\n}\nfunction _getAbsoluteWidth(el) {\n  const { width, marginLeft, marginRight } = _getElementSize(el);\n  return Math.floor(width + marginLeft + marginRight);\n}\nfunction _getElementRectWithOffset(el) {\n  const offsetElementRect = el.getBoundingClientRect();\n  const { borderTopWidth, borderLeftWidth, borderRightWidth, borderBottomWidth } = _getElementSize(el);\n  return {\n    top: offsetElementRect.top + (borderTopWidth || 0),\n    left: offsetElementRect.left + (borderLeftWidth || 0),\n    right: offsetElementRect.right + (borderRightWidth || 0),\n    bottom: offsetElementRect.bottom + (borderBottomWidth || 0)\n  };\n}\nfunction _isRtlNegativeScroll() {\n  if (typeof rtlNegativeScroll === \"boolean\") {\n    return rtlNegativeScroll;\n  }\n  const template = document.createElement(\"div\");\n  template.style.direction = \"rtl\";\n  template.style.width = \"1px\";\n  template.style.height = \"1px\";\n  template.style.position = \"fixed\";\n  template.style.top = \"0px\";\n  template.style.overflow = \"hidden\";\n  template.dir = \"rtl\";\n  template.innerHTML = /* html */\n  `<div style=\"width: 2px\">\n            <span style=\"display: inline-block; width: 1px\"></span>\n            <span style=\"display: inline-block; width: 1px\"></span>\n        </div>`;\n  document.body.appendChild(template);\n  template.scrollLeft = 1;\n  rtlNegativeScroll = Math.floor(template.scrollLeft) === 0;\n  document.body.removeChild(template);\n  return rtlNegativeScroll;\n}\nfunction _getScrollLeft(element, rtl) {\n  let scrollLeft = element.scrollLeft;\n  if (rtl) {\n    scrollLeft = Math.abs(scrollLeft);\n    if (_isBrowserChrome() && !_isRtlNegativeScroll()) {\n      scrollLeft = element.scrollWidth - element.clientWidth - scrollLeft;\n    }\n  }\n  return scrollLeft;\n}\nfunction _setScrollLeft(element, value, rtl) {\n  if (rtl) {\n    if (_isRtlNegativeScroll()) {\n      value *= -1;\n    } else if (_isBrowserSafari() || _isBrowserChrome()) {\n      value = element.scrollWidth - element.clientWidth - value;\n    }\n  }\n  element.scrollLeft = value;\n}\nfunction _clearElement(el) {\n  while (el && el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n}\nfunction _removeFromParent(node) {\n  if (node && node.parentNode) {\n    node.parentNode.removeChild(node);\n  }\n}\nfunction _isInDOM(element) {\n  return !!element.offsetParent;\n}\nfunction _isVisible(element) {\n  const el = element;\n  if (el.checkVisibility) {\n    return el.checkVisibility({ checkVisibilityCSS: true });\n  }\n  const isHidden = !_isInDOM(element) || window.getComputedStyle(element).visibility !== \"visible\";\n  return !isHidden;\n}\nfunction _loadTemplate(template) {\n  const tempDiv = document.createElement(\"div\");\n  tempDiv.innerHTML = (template || \"\").trim();\n  return tempDiv.firstChild;\n}\nfunction _ensureDomOrder(eContainer, eChild, eChildBefore) {\n  if (eChildBefore && eChildBefore.nextSibling === eChild) {\n    return;\n  }\n  if (eChildBefore) {\n    if (eChildBefore.nextSibling) {\n      eContainer.insertBefore(eChild, eChildBefore.nextSibling);\n    } else {\n      eContainer.appendChild(eChild);\n    }\n  } else {\n    if (eContainer.firstChild && eContainer.firstChild !== eChild) {\n      eContainer.insertAdjacentElement(\"afterbegin\", eChild);\n    }\n  }\n}\nfunction _setDomChildOrder(eContainer, orderedChildren) {\n  for (let i = 0; i < orderedChildren.length; i++) {\n    const correctCellAtIndex = orderedChildren[i];\n    const actualCellAtIndex = eContainer.children[i];\n    if (actualCellAtIndex !== correctCellAtIndex) {\n      eContainer.insertBefore(correctCellAtIndex, actualCellAtIndex);\n    }\n  }\n}\nfunction _insertWithDomOrder(eContainer, eToInsert, eChildBefore) {\n  if (eChildBefore) {\n    eChildBefore.insertAdjacentElement(\"afterend\", eToInsert);\n  } else {\n    if (eContainer.firstChild) {\n      eContainer.insertAdjacentElement(\"afterbegin\", eToInsert);\n    } else {\n      eContainer.appendChild(eToInsert);\n    }\n  }\n}\nfunction _addStylesToElement(eElement, styles) {\n  if (!styles) {\n    return;\n  }\n  for (const [key, value] of Object.entries(styles)) {\n    if (!key || !key.length || value == null) {\n      continue;\n    }\n    const parsedKey = _camelCaseToHyphenated(key);\n    const valueAsString = value.toString();\n    const parsedValue = valueAsString.replace(/\\s*!important/g, \"\");\n    const priority = parsedValue.length != valueAsString.length ? \"important\" : void 0;\n    eElement.style.setProperty(parsedKey, parsedValue, priority);\n  }\n}\nfunction _isHorizontalScrollShowing(element) {\n  return element.clientWidth < element.scrollWidth;\n}\nfunction _isVerticalScrollShowing(element) {\n  return element.clientHeight < element.scrollHeight;\n}\nfunction _setElementWidth(element, width) {\n  if (width === \"flex\") {\n    element.style.removeProperty(\"width\");\n    element.style.removeProperty(\"minWidth\");\n    element.style.removeProperty(\"maxWidth\");\n    element.style.flex = \"1 1 auto\";\n  } else {\n    _setFixedWidth(element, width);\n  }\n}\nfunction _setFixedWidth(element, width) {\n  width = _formatSize(width);\n  element.style.width = width.toString();\n  element.style.maxWidth = width.toString();\n  element.style.minWidth = width.toString();\n}\nfunction _setFixedHeight(element, height) {\n  height = _formatSize(height);\n  element.style.height = height.toString();\n  element.style.maxHeight = height.toString();\n  element.style.minHeight = height.toString();\n}\nfunction _formatSize(size) {\n  if (typeof size === \"number\") {\n    return `${size}px`;\n  }\n  return size;\n}\nfunction _isNodeOrElement(o) {\n  return o instanceof Node || o instanceof HTMLElement;\n}\nfunction _copyNodeList(nodeList) {\n  if (nodeList == null) {\n    return [];\n  }\n  const result = [];\n  _nodeListForEach(nodeList, (node) => result.push(node));\n  return result;\n}\nfunction _iterateNamedNodeMap(map, callback) {\n  if (!map) {\n    return;\n  }\n  for (let i = 0; i < map.length; i++) {\n    const attr = map[i];\n    callback(attr.name, attr.value);\n  }\n}\nfunction _addOrRemoveAttribute(element, name, value) {\n  if (value == null || value === \"\") {\n    element.removeAttribute(name);\n  } else {\n    element.setAttribute(name, value.toString());\n  }\n}\nfunction _nodeListForEach(nodeList, action) {\n  if (nodeList == null) {\n    return;\n  }\n  for (let i = 0; i < nodeList.length; i++) {\n    action(nodeList[i]);\n  }\n}\nfunction _bindCellRendererToHtmlElement(cellRendererPromise, eTarget) {\n  cellRendererPromise.then((cellRenderer) => {\n    const gui = cellRenderer.getGui();\n    if (gui != null) {\n      if (typeof gui === \"object\") {\n        eTarget.appendChild(gui);\n      } else {\n        eTarget.innerHTML = gui;\n      }\n    }\n  });\n}\n\n// community-modules/core/src/utils/numberSequence.ts\nvar NumberSequence = class {\n  constructor(initValue = 0, step = 1) {\n    this.nextValue = initValue;\n    this.step = step;\n  }\n  next() {\n    const valToReturn = this.nextValue;\n    this.nextValue += this.step;\n    return valToReturn;\n  }\n  peek() {\n    return this.nextValue;\n  }\n  skip(count) {\n    this.nextValue += count;\n  }\n};\n\n// community-modules/core/src/widgets/tooltipStateManager.ts\nvar SHOW_QUICK_TOOLTIP_DIFF = 1e3;\nvar FADE_OUT_TOOLTIP_TIMEOUT = 1e3;\nvar INTERACTIVE_HIDE_DELAY = 100;\nvar _TooltipStateManager = class _TooltipStateManager extends BeanStub {\n  constructor(parentComp, tooltipShowDelayOverride, tooltipHideDelayOverride, shouldDisplayTooltip) {\n    super();\n    this.parentComp = parentComp;\n    this.tooltipShowDelayOverride = tooltipShowDelayOverride;\n    this.tooltipHideDelayOverride = tooltipHideDelayOverride;\n    this.shouldDisplayTooltip = shouldDisplayTooltip;\n    this.interactionEnabled = false;\n    this.isInteractingWithTooltip = false;\n    this.state = 0 /* NOTHING */;\n    // when showing the tooltip, we need to make sure it's the most recent instance we request, as due to\n    // async we could request two tooltips before the first instance returns, in which case we should\n    // disregard the second instance.\n    this.tooltipInstanceCount = 0;\n    this.tooltipMouseTrack = false;\n  }\n  wireBeans(beans) {\n    this.popupService = beans.popupService;\n    this.userComponentFactory = beans.userComponentFactory;\n  }\n  postConstruct() {\n    if (this.gos.get(\"tooltipInteraction\")) {\n      this.interactionEnabled = true;\n    }\n    this.tooltipTrigger = this.getTooltipTrigger();\n    this.tooltipMouseTrack = this.gos.get(\"tooltipMouseTrack\");\n    const el = this.parentComp.getGui();\n    if (this.tooltipTrigger === 0 /* HOVER */) {\n      this.addManagedListeners(el, {\n        mouseenter: this.onMouseEnter.bind(this),\n        mouseleave: this.onMouseLeave.bind(this)\n      });\n    }\n    if (this.tooltipTrigger === 1 /* FOCUS */) {\n      this.addManagedListeners(el, {\n        focusin: this.onFocusIn.bind(this),\n        focusout: this.onFocusOut.bind(this)\n      });\n    }\n    this.addManagedListeners(el, { mousemove: this.onMouseMove.bind(this) });\n    if (!this.interactionEnabled) {\n      this.addManagedListeners(el, {\n        mousedown: this.onMouseDown.bind(this),\n        keydown: this.onKeyDown.bind(this)\n      });\n    }\n  }\n  getGridOptionsTooltipDelay(delayOption) {\n    const delay = this.gos.get(delayOption);\n    if (delay < 0) {\n      _warnOnce(`${delayOption} should not be lower than 0`);\n    }\n    return Math.max(200, delay);\n  }\n  getTooltipDelay(type) {\n    if (type === \"show\") {\n      return this.tooltipShowDelayOverride ?? this.getGridOptionsTooltipDelay(\"tooltipShowDelay\");\n    }\n    return this.tooltipHideDelayOverride ?? this.getGridOptionsTooltipDelay(\"tooltipHideDelay\");\n  }\n  destroy() {\n    this.setToDoNothing();\n    super.destroy();\n  }\n  getTooltipTrigger() {\n    const trigger = this.gos.get(\"tooltipTrigger\");\n    if (!trigger || trigger === \"hover\") {\n      return 0 /* HOVER */;\n    }\n    return 1 /* FOCUS */;\n  }\n  onMouseEnter(e) {\n    if (this.interactionEnabled && this.interactiveTooltipTimeoutId) {\n      this.unlockService();\n      this.startHideTimeout();\n    }\n    if (_isIOSUserAgent()) {\n      return;\n    }\n    if (_TooltipStateManager.isLocked) {\n      this.showTooltipTimeoutId = window.setTimeout(() => {\n        this.prepareToShowTooltip(e);\n      }, INTERACTIVE_HIDE_DELAY);\n    } else {\n      this.prepareToShowTooltip(e);\n    }\n  }\n  onMouseMove(e) {\n    if (this.lastMouseEvent) {\n      this.lastMouseEvent = e;\n    }\n    if (this.tooltipMouseTrack && this.state === 2 /* SHOWING */ && this.tooltipComp) {\n      this.positionTooltip();\n    }\n  }\n  onMouseDown() {\n    this.setToDoNothing();\n  }\n  onMouseLeave() {\n    if (this.interactionEnabled) {\n      this.lockService();\n    } else {\n      this.setToDoNothing();\n    }\n  }\n  onFocusIn() {\n    this.prepareToShowTooltip();\n  }\n  onFocusOut(e) {\n    const relatedTarget = e.relatedTarget;\n    const parentCompGui = this.parentComp.getGui();\n    const tooltipGui = this.tooltipComp?.getGui();\n    if (this.isInteractingWithTooltip || parentCompGui.contains(relatedTarget) || this.interactionEnabled && tooltipGui?.contains(relatedTarget)) {\n      return;\n    }\n    this.setToDoNothing();\n  }\n  onKeyDown() {\n    this.setToDoNothing();\n  }\n  prepareToShowTooltip(mouseEvent) {\n    if (this.state != 0 /* NOTHING */ || _TooltipStateManager.isLocked) {\n      return;\n    }\n    let delay = 0;\n    if (mouseEvent) {\n      delay = this.isLastTooltipHiddenRecently() ? 200 : this.getTooltipDelay(\"show\");\n    }\n    this.lastMouseEvent = mouseEvent || null;\n    this.showTooltipTimeoutId = window.setTimeout(this.showTooltip.bind(this), delay);\n    this.state = 1 /* WAITING_TO_SHOW */;\n  }\n  isLastTooltipHiddenRecently() {\n    const now = (/* @__PURE__ */ new Date()).getTime();\n    const then = _TooltipStateManager.lastTooltipHideTime;\n    return now - then < SHOW_QUICK_TOOLTIP_DIFF;\n  }\n  setToDoNothing(fromHideTooltip) {\n    if (!fromHideTooltip && this.state === 2 /* SHOWING */) {\n      this.hideTooltip();\n    }\n    if (this.onBodyScrollEventCallback) {\n      this.onBodyScrollEventCallback();\n      this.onBodyScrollEventCallback = void 0;\n    }\n    if (this.onColumnMovedEventCallback) {\n      this.onColumnMovedEventCallback();\n      this.onColumnMovedEventCallback = void 0;\n    }\n    this.clearTimeouts();\n    this.state = 0 /* NOTHING */;\n    this.lastMouseEvent = null;\n  }\n  showTooltip() {\n    const params = {\n      ...this.parentComp.getTooltipParams()\n    };\n    if (!_exists(params.value) || this.shouldDisplayTooltip && !this.shouldDisplayTooltip()) {\n      this.setToDoNothing();\n      return;\n    }\n    this.state = 2 /* SHOWING */;\n    this.tooltipInstanceCount++;\n    const callback = this.newTooltipComponentCallback.bind(this, this.tooltipInstanceCount);\n    const userDetails = this.userComponentFactory.getTooltipCompDetails(params);\n    userDetails.newAgStackInstance().then(callback);\n  }\n  hideTooltip(forceHide) {\n    if (!forceHide && this.isInteractingWithTooltip) {\n      return;\n    }\n    if (this.tooltipComp) {\n      this.destroyTooltipComp();\n      _TooltipStateManager.lastTooltipHideTime = (/* @__PURE__ */ new Date()).getTime();\n    }\n    this.eventService.dispatchEvent({\n      type: \"tooltipHide\",\n      parentGui: this.parentComp.getGui()\n    });\n    if (forceHide) {\n      this.isInteractingWithTooltip = false;\n    }\n    this.setToDoNothing(true);\n  }\n  newTooltipComponentCallback(tooltipInstanceCopy, tooltipComp) {\n    const compNoLongerNeeded = this.state !== 2 /* SHOWING */ || this.tooltipInstanceCount !== tooltipInstanceCopy;\n    if (compNoLongerNeeded) {\n      this.destroyBean(tooltipComp);\n      return;\n    }\n    const eGui = tooltipComp.getGui();\n    this.tooltipComp = tooltipComp;\n    if (!eGui.classList.contains(\"ag-tooltip\")) {\n      eGui.classList.add(\"ag-tooltip-custom\");\n    }\n    if (this.tooltipTrigger === 0 /* HOVER */) {\n      eGui.classList.add(\"ag-tooltip-animate\");\n    }\n    if (this.interactionEnabled) {\n      eGui.classList.add(\"ag-tooltip-interactive\");\n    }\n    const translate = this.localeService.getLocaleTextFunc();\n    const addPopupRes = this.popupService.addPopup({\n      eChild: eGui,\n      ariaLabel: translate(\"ariaLabelTooltip\", \"Tooltip\")\n    });\n    if (addPopupRes) {\n      this.tooltipPopupDestroyFunc = addPopupRes.hideFunc;\n    }\n    this.positionTooltip();\n    if (this.tooltipTrigger === 1 /* FOCUS */) {\n      const listener = () => this.setToDoNothing();\n      [this.onBodyScrollEventCallback, this.onColumnMovedEventCallback] = this.addManagedEventListeners({\n        bodyScroll: listener,\n        columnMoved: listener\n      });\n    }\n    if (this.interactionEnabled) {\n      [this.tooltipMouseEnterListener, this.tooltipMouseLeaveListener] = this.addManagedElementListeners(eGui, {\n        mouseenter: this.onTooltipMouseEnter.bind(this),\n        mouseleave: this.onTooltipMouseLeave.bind(this)\n      });\n      if (this.tooltipTrigger === 1 /* FOCUS */) {\n        [this.tooltipFocusInListener, this.tooltipFocusOutListener] = this.addManagedElementListeners(eGui, {\n          focusin: this.onTooltipFocusIn.bind(this),\n          focusout: this.onTooltipFocusOut.bind(this)\n        });\n      }\n    }\n    this.eventService.dispatchEvent({\n      type: \"tooltipShow\",\n      tooltipGui: eGui,\n      parentGui: this.parentComp.getGui()\n    });\n    this.startHideTimeout();\n  }\n  onTooltipMouseEnter() {\n    this.isInteractingWithTooltip = true;\n    this.unlockService();\n  }\n  onTooltipMouseLeave() {\n    if (this.isTooltipFocused()) {\n      return;\n    }\n    this.isInteractingWithTooltip = false;\n    this.lockService();\n  }\n  onTooltipFocusIn() {\n    this.isInteractingWithTooltip = true;\n  }\n  isTooltipFocused() {\n    const tooltipGui = this.tooltipComp?.getGui();\n    const activeEl = this.gos.getActiveDomElement();\n    return !!tooltipGui && tooltipGui.contains(activeEl);\n  }\n  onTooltipFocusOut(e) {\n    const parentGui = this.parentComp.getGui();\n    if (this.isTooltipFocused()) {\n      return;\n    }\n    this.isInteractingWithTooltip = false;\n    if (parentGui.contains(e.relatedTarget)) {\n      this.startHideTimeout();\n    } else {\n      this.hideTooltip();\n    }\n  }\n  positionTooltip() {\n    const params = {\n      type: \"tooltip\",\n      ePopup: this.tooltipComp.getGui(),\n      nudgeY: 18,\n      skipObserver: this.tooltipMouseTrack\n    };\n    if (this.lastMouseEvent) {\n      this.popupService.positionPopupUnderMouseEvent({\n        ...params,\n        mouseEvent: this.lastMouseEvent\n      });\n    } else {\n      this.popupService.positionPopupByComponent({\n        ...params,\n        eventSource: this.parentComp.getGui(),\n        position: \"under\",\n        keepWithinBounds: true,\n        nudgeY: 5\n      });\n    }\n  }\n  destroyTooltipComp() {\n    this.tooltipComp.getGui().classList.add(\"ag-tooltip-hiding\");\n    const tooltipPopupDestroyFunc = this.tooltipPopupDestroyFunc;\n    const tooltipComp = this.tooltipComp;\n    const delay = this.tooltipTrigger === 0 /* HOVER */ ? FADE_OUT_TOOLTIP_TIMEOUT : 0;\n    window.setTimeout(() => {\n      tooltipPopupDestroyFunc();\n      this.destroyBean(tooltipComp);\n    }, delay);\n    this.clearTooltipListeners();\n    this.tooltipPopupDestroyFunc = void 0;\n    this.tooltipComp = void 0;\n  }\n  clearTooltipListeners() {\n    [\n      this.tooltipMouseEnterListener,\n      this.tooltipMouseLeaveListener,\n      this.tooltipFocusInListener,\n      this.tooltipFocusOutListener\n    ].forEach((listener) => {\n      if (listener) {\n        listener();\n      }\n    });\n    this.tooltipMouseEnterListener = this.tooltipMouseLeaveListener = this.tooltipFocusInListener = this.tooltipFocusOutListener = null;\n  }\n  lockService() {\n    _TooltipStateManager.isLocked = true;\n    this.interactiveTooltipTimeoutId = window.setTimeout(() => {\n      this.unlockService();\n      this.setToDoNothing();\n    }, INTERACTIVE_HIDE_DELAY);\n  }\n  unlockService() {\n    _TooltipStateManager.isLocked = false;\n    this.clearInteractiveTimeout();\n  }\n  startHideTimeout() {\n    this.clearHideTimeout();\n    this.hideTooltipTimeoutId = window.setTimeout(this.hideTooltip.bind(this), this.getTooltipDelay(\"hide\"));\n  }\n  clearShowTimeout() {\n    if (!this.showTooltipTimeoutId) {\n      return;\n    }\n    window.clearTimeout(this.showTooltipTimeoutId);\n    this.showTooltipTimeoutId = void 0;\n  }\n  clearHideTimeout() {\n    if (!this.hideTooltipTimeoutId) {\n      return;\n    }\n    window.clearTimeout(this.hideTooltipTimeoutId);\n    this.hideTooltipTimeoutId = void 0;\n  }\n  clearInteractiveTimeout() {\n    if (!this.interactiveTooltipTimeoutId) {\n      return;\n    }\n    window.clearTimeout(this.interactiveTooltipTimeoutId);\n    this.interactiveTooltipTimeoutId = void 0;\n  }\n  clearTimeouts() {\n    this.clearShowTimeout();\n    this.clearHideTimeout();\n    this.clearInteractiveTimeout();\n  }\n};\n_TooltipStateManager.isLocked = false;\nvar TooltipStateManager = _TooltipStateManager;\n\n// community-modules/core/src/widgets/tooltipFeature.ts\nvar TooltipFeature = class extends BeanStub {\n  constructor(ctrl, beans) {\n    super();\n    this.ctrl = ctrl;\n    if (beans) {\n      this.beans = beans;\n    }\n  }\n  wireBeans(beans) {\n    this.beans = beans;\n  }\n  postConstruct() {\n    this.refreshToolTip();\n  }\n  setBrowserTooltip(tooltip) {\n    const name = \"title\";\n    const eGui = this.ctrl.getGui();\n    if (!eGui) {\n      return;\n    }\n    if (tooltip != null && tooltip != \"\") {\n      eGui.setAttribute(name, tooltip);\n    } else {\n      eGui.removeAttribute(name);\n    }\n  }\n  updateTooltipText() {\n    this.tooltip = this.ctrl.getTooltipValue();\n  }\n  createTooltipFeatureIfNeeded() {\n    if (this.tooltipManager != null) {\n      return;\n    }\n    const parent = {\n      getTooltipParams: () => this.getTooltipParams(),\n      getGui: () => this.ctrl.getGui()\n    };\n    this.tooltipManager = this.createBean(\n      new TooltipStateManager(\n        parent,\n        this.ctrl.getTooltipShowDelayOverride?.(),\n        this.ctrl.getTooltipHideDelayOverride?.(),\n        this.ctrl.shouldDisplayTooltip\n      ),\n      this.beans.context\n    );\n  }\n  refreshToolTip() {\n    this.browserTooltips = this.beans.gos.get(\"enableBrowserTooltips\");\n    this.updateTooltipText();\n    if (this.browserTooltips) {\n      this.setBrowserTooltip(this.tooltip);\n      if (this.tooltipManager) {\n        this.tooltipManager = this.destroyBean(this.tooltipManager, this.beans.context);\n      }\n    } else {\n      this.setBrowserTooltip(null);\n      this.createTooltipFeatureIfNeeded();\n    }\n  }\n  getTooltipParams() {\n    const ctrl = this.ctrl;\n    const column = ctrl.getColumn?.();\n    const colDef = ctrl.getColDef?.();\n    const rowNode = ctrl.getRowNode?.();\n    return {\n      location: ctrl.getLocation(),\n      //'cell',\n      colDef,\n      column,\n      rowIndex: ctrl.getRowIndex?.(),\n      node: rowNode,\n      data: rowNode?.data,\n      value: this.getTooltipText(),\n      valueFormatted: ctrl.getValueFormatted?.(),\n      hideTooltipCallback: () => this.tooltipManager?.hideTooltip(true)\n    };\n  }\n  getTooltipText() {\n    return this.tooltip;\n  }\n  // overriding to make public, as we don't dispose this bean via context\n  destroy() {\n    if (this.tooltipManager) {\n      this.tooltipManager = this.destroyBean(this.tooltipManager, this.beans.context);\n    }\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/widgets/component.ts\nvar compIdSequence = new NumberSequence();\nvar RefPlaceholder = null;\nvar Component = class _Component extends BeanStub {\n  constructor(template, componentSelectors) {\n    super();\n    this.suppressDataRefValidation = false;\n    // if false, then CSS class \"ag-hidden\" is applied, which sets \"display: none\"\n    this.displayed = true;\n    // if false, then CSS class \"ag-invisible\" is applied, which sets \"visibility: hidden\"\n    this.visible = true;\n    // unique id for this row component. this is used for getting a reference to the HTML dom.\n    // we cannot use the RowNode id as this is not unique (due to animation, old rows can be lying\n    // around as we create a new rowComp instance for the same row node).\n    this.compId = compIdSequence.next();\n    this.cssClassManager = new CssClassManager(() => this.eGui);\n    this.componentSelectors = new Map((componentSelectors ?? []).map((comp) => [comp.selector, comp]));\n    if (template) {\n      this.setTemplate(template);\n    }\n  }\n  preWireBeans(beans) {\n    super.preWireBeans(beans);\n  }\n  preConstruct() {\n    this.usingBrowserTooltips = this.gos.get(\"enableBrowserTooltips\");\n    this.wireTemplate(this.getGui());\n  }\n  wireTemplate(element, paramsMap) {\n    if (element && this.gos) {\n      this.applyElementsToComponent(element);\n      this.createChildComponentsFromTags(element, paramsMap);\n    }\n  }\n  getCompId() {\n    return this.compId;\n  }\n  getTooltipParams() {\n    return {\n      value: this.tooltipText,\n      location: \"UNKNOWN\"\n    };\n  }\n  setTooltip(params) {\n    const { newTooltipText, showDelayOverride, hideDelayOverride, location, shouldDisplayTooltip } = params || {};\n    if (this.tooltipFeature) {\n      this.tooltipFeature = this.destroyBean(this.tooltipFeature);\n    }\n    if (this.tooltipText !== newTooltipText) {\n      this.tooltipText = newTooltipText;\n    }\n    const getTooltipValue = () => this.tooltipText;\n    if (newTooltipText != null) {\n      this.tooltipFeature = this.createBean(\n        new TooltipFeature({\n          getTooltipValue,\n          getGui: () => this.getGui(),\n          getLocation: () => location ?? \"UNKNOWN\",\n          getColDef: params?.getColDef,\n          getColumn: params?.getColumn,\n          getTooltipShowDelayOverride: showDelayOverride != null ? () => showDelayOverride : void 0,\n          getTooltipHideDelayOverride: hideDelayOverride != null ? () => hideDelayOverride : void 0,\n          shouldDisplayTooltip\n        })\n      );\n    }\n  }\n  getDataRefAttribute(element) {\n    if (element.getAttribute) {\n      return element.getAttribute(\"data-ref\");\n    }\n    return null;\n  }\n  applyElementsToComponent(element, elementRef, paramsMap, newComponent = null) {\n    if (elementRef === void 0) {\n      elementRef = this.getDataRefAttribute(element);\n    }\n    if (elementRef) {\n      const current = this[elementRef];\n      if (current === RefPlaceholder) {\n        this[elementRef] = newComponent ?? element;\n      } else {\n        const usedAsParamRef = paramsMap && paramsMap[elementRef];\n        if (!this.suppressDataRefValidation && !usedAsParamRef) {\n          _warnOnce(`Issue with data-ref: ${elementRef} on ${this.constructor.name} with ${current}`);\n        }\n      }\n    }\n  }\n  // for registered components only, eg creates AgCheckbox instance from ag-checkbox HTML tag\n  createChildComponentsFromTags(parentNode, paramsMap) {\n    const childNodeList = _copyNodeList(parentNode.childNodes);\n    childNodeList.forEach((childNode) => {\n      if (!(childNode instanceof HTMLElement)) {\n        return;\n      }\n      const childComp = this.createComponentFromElement(\n        childNode,\n        (childComp2) => {\n          const childGui = childComp2.getGui();\n          if (childGui) {\n            this.copyAttributesFromNode(childNode, childComp2.getGui());\n          }\n        },\n        paramsMap\n      );\n      if (childComp) {\n        if (childComp.addItems && childNode.children.length) {\n          this.createChildComponentsFromTags(childNode, paramsMap);\n          const items = Array.prototype.slice.call(childNode.children);\n          childComp.addItems(items);\n        }\n        this.swapComponentForNode(childComp, parentNode, childNode);\n      } else if (childNode.childNodes) {\n        this.createChildComponentsFromTags(childNode, paramsMap);\n      }\n    });\n  }\n  createComponentFromElement(element, afterPreCreateCallback, paramsMap) {\n    const key = element.nodeName;\n    const elementRef = this.getDataRefAttribute(element);\n    const isAgGridComponent = key.indexOf(\"AG-\") === 0;\n    const componentSelector = isAgGridComponent ? this.componentSelectors.get(key) : null;\n    let newComponent = null;\n    if (componentSelector) {\n      _Component.elementGettingCreated = element;\n      const componentParams = paramsMap && elementRef ? paramsMap[elementRef] : void 0;\n      newComponent = new componentSelector.component(componentParams);\n      newComponent.setParentComponent(this);\n      this.createBean(newComponent, null, afterPreCreateCallback);\n    } else if (isAgGridComponent) {\n      _warnOnce(`Missing selector: ${key}`);\n    }\n    this.applyElementsToComponent(element, elementRef, paramsMap, newComponent);\n    return newComponent;\n  }\n  copyAttributesFromNode(source, dest) {\n    _iterateNamedNodeMap(source.attributes, (name, value) => dest.setAttribute(name, value));\n  }\n  swapComponentForNode(newComponent, parentNode, childNode) {\n    const eComponent = newComponent.getGui();\n    parentNode.replaceChild(eComponent, childNode);\n    parentNode.insertBefore(document.createComment(childNode.nodeName), eComponent);\n    this.addDestroyFunc(this.destroyBean.bind(this, newComponent));\n  }\n  activateTabIndex(elements) {\n    const tabIndex = this.gos.get(\"tabIndex\");\n    if (!elements) {\n      elements = [];\n    }\n    if (!elements.length) {\n      elements.push(this.getGui());\n    }\n    elements.forEach((el) => el.setAttribute(\"tabindex\", tabIndex.toString()));\n  }\n  setTemplate(template, componentSelectors, paramsMap) {\n    const eGui = _loadTemplate(template);\n    this.setTemplateFromElement(eGui, componentSelectors, paramsMap);\n  }\n  setTemplateFromElement(element, components, paramsMap, suppressDataRefValidation = false) {\n    this.eGui = element;\n    this.suppressDataRefValidation = suppressDataRefValidation;\n    if (components) {\n      for (let i = 0; i < components.length; i++) {\n        const component = components[i];\n        this.componentSelectors.set(component.selector, component);\n      }\n    }\n    this.wireTemplate(element, paramsMap);\n  }\n  getGui() {\n    return this.eGui;\n  }\n  getFocusableElement() {\n    return this.eGui;\n  }\n  getAriaElement() {\n    return this.getFocusableElement();\n  }\n  setParentComponent(component) {\n    this.parentComponent = component;\n  }\n  getParentComponent() {\n    return this.parentComponent;\n  }\n  // this method is for older code, that wants to provide the gui element,\n  // it is not intended for this to be in ag-Stack\n  setGui(eGui) {\n    this.eGui = eGui;\n  }\n  queryForHtmlElement(cssSelector) {\n    return this.eGui.querySelector(cssSelector);\n  }\n  getContainerAndElement(newChild, container) {\n    let parent = container;\n    if (newChild == null) {\n      return null;\n    }\n    if (!parent) {\n      parent = this.eGui;\n    }\n    if (_isNodeOrElement(newChild)) {\n      return {\n        element: newChild,\n        parent\n      };\n    }\n    return {\n      element: newChild.getGui(),\n      parent\n    };\n  }\n  prependChild(newChild, container) {\n    const { element, parent } = this.getContainerAndElement(newChild, container) || {};\n    if (!element || !parent) {\n      return;\n    }\n    parent.insertAdjacentElement(\"afterbegin\", element);\n  }\n  appendChild(newChild, container) {\n    const { element, parent } = this.getContainerAndElement(newChild, container) || {};\n    if (!element || !parent) {\n      return;\n    }\n    parent.appendChild(element);\n  }\n  isDisplayed() {\n    return this.displayed;\n  }\n  setVisible(visible, options = {}) {\n    if (visible !== this.visible) {\n      this.visible = visible;\n      const { skipAriaHidden } = options;\n      _setVisible(this.eGui, visible, { skipAriaHidden });\n    }\n  }\n  setDisplayed(displayed, options = {}) {\n    if (displayed !== this.displayed) {\n      this.displayed = displayed;\n      const { skipAriaHidden } = options;\n      _setDisplayed(this.eGui, displayed, { skipAriaHidden });\n      const event = {\n        type: \"displayChanged\",\n        visible: this.displayed\n      };\n      this.dispatchLocalEvent(event);\n    }\n  }\n  destroy() {\n    if (this.parentComponent) {\n      this.parentComponent = void 0;\n    }\n    if (this.tooltipFeature) {\n      this.tooltipFeature = this.destroyBean(this.tooltipFeature);\n    }\n    super.destroy();\n  }\n  addGuiEventListener(event, listener, options) {\n    this.eGui.addEventListener(event, listener, options);\n    this.addDestroyFunc(() => this.eGui.removeEventListener(event, listener));\n  }\n  addCssClass(className) {\n    this.cssClassManager.addCssClass(className);\n  }\n  removeCssClass(className) {\n    this.cssClassManager.removeCssClass(className);\n  }\n  containsCssClass(className) {\n    return this.cssClassManager.containsCssClass(className);\n  }\n  addOrRemoveCssClass(className, addOrRemove) {\n    this.cssClassManager.addOrRemoveCssClass(className, addOrRemove);\n  }\n};\n\n// community-modules/core/src/utils/icon.ts\nvar iconNameClassMap = {\n  // header column group shown when expanded (click to contract)\n  columnGroupOpened: \"expanded\",\n  // header column group shown when contracted (click to expand)\n  columnGroupClosed: \"contracted\",\n  // tool panel column group contracted (click to expand)\n  columnSelectClosed: \"tree-closed\",\n  // tool panel column group expanded (click to contract)\n  columnSelectOpen: \"tree-open\",\n  // column tool panel header expand/collapse all button, shown when some children are expanded and\n  //     others are collapsed\n  columnSelectIndeterminate: \"tree-indeterminate\",\n  // shown on ghost icon while dragging column to the side of the grid to pin\n  columnMovePin: \"pin\",\n  // shown on ghost icon while dragging over part of the page that is not a drop zone\n  columnMoveHide: \"eye-slash\",\n  // shown on ghost icon while dragging columns to reorder\n  columnMoveMove: \"arrows\",\n  // animating icon shown when dragging a column to the right of the grid causes horizontal scrolling\n  columnMoveLeft: \"left\",\n  // animating icon shown when dragging a column to the left of the grid causes horizontal scrolling\n  columnMoveRight: \"right\",\n  // shown on ghost icon while dragging over Row Groups drop zone\n  columnMoveGroup: \"group\",\n  // shown on ghost icon while dragging over Values drop zone\n  columnMoveValue: \"aggregation\",\n  // shown on ghost icon while dragging over pivot drop zone\n  columnMovePivot: \"pivot\",\n  // shown on ghost icon while dragging over drop zone that doesn't support it, e.g.\n  //     string column over aggregation drop zone\n  dropNotAllowed: \"not-allowed\",\n  // shown on row group when contracted (click to expand)\n  groupContracted: \"tree-closed\",\n  // shown on row group when expanded (click to contract)\n  groupExpanded: \"tree-open\",\n  // set filter tree list group contracted (click to expand)\n  setFilterGroupClosed: \"tree-closed\",\n  // set filter tree list group expanded (click to contract)\n  setFilterGroupOpen: \"tree-open\",\n  // set filter tree list expand/collapse all button, shown when some children are expanded and\n  //     others are collapsed\n  setFilterGroupIndeterminate: \"tree-indeterminate\",\n  // context menu chart item\n  chart: \"chart\",\n  // chart window title bar\n  close: \"cross\",\n  // X (remove) on column 'pill' after adding it to a drop zone list\n  cancel: \"cancel\",\n  // indicates the currently active pin state in the \"Pin column\" sub-menu of the column menu\n  check: \"tick\",\n  // \"go to first\" button in pagination controls\n  first: \"first\",\n  // \"go to previous\" button in pagination controls\n  previous: \"previous\",\n  // \"go to next\" button in pagination controls\n  next: \"next\",\n  // \"go to last\" button in pagination controls\n  last: \"last\",\n  // shown on top right of chart when chart is linked to range data (click to unlink)\n  linked: \"linked\",\n  // shown on top right of chart when chart is not linked to range data (click to link)\n  unlinked: \"unlinked\",\n  // \"Choose colour\" button on chart settings tab\n  colorPicker: \"color-picker\",\n  // rotating spinner shown by the loading cell renderer\n  groupLoading: \"loading\",\n  // button to launch enterprise column menu\n  menu: \"menu\",\n  menuAlt: \"menu-alt\",\n  // filter tool panel tab\n  filter: \"filter\",\n  // column tool panel tab\n  columns: \"columns\",\n  // button in chart regular size window title bar (click to maximise)\n  maximize: \"maximize\",\n  // button in chart maximised window title bar (click to make regular size)\n  minimize: \"minimize\",\n  // \"Pin column\" item in column header menu\n  menuPin: \"pin\",\n  // \"Value aggregation\" column menu item (shown on numeric columns when grouping is active)\"\n  menuValue: \"aggregation\",\n  // \"Group by {column-name}\" item in column header menu\n  menuAddRowGroup: \"group\",\n  // \"Un-Group by {column-name}\" item in column header menu\n  menuRemoveRowGroup: \"group\",\n  // context menu copy item\n  clipboardCopy: \"copy\",\n  // context menu cut item\n  clipboardCut: \"cut\",\n  // context menu paste item\n  clipboardPaste: \"paste\",\n  // identifies the pivot drop zone\n  pivotPanel: \"pivot\",\n  // \"Row groups\" drop zone in column tool panel\n  rowGroupPanel: \"group\",\n  // columns tool panel Values drop zone\n  valuePanel: \"aggregation\",\n  // drag handle used to pick up draggable columns\n  columnDrag: \"grip\",\n  // drag handle used to pick up draggable rows\n  rowDrag: \"grip\",\n  // context menu export item\n  save: \"save\",\n  // csv export\n  csvExport: \"csv\",\n  // excel export,\n  excelExport: \"excel\",\n  // icon on dropdown editors\n  smallDown: \"small-down\",\n  // version of small-right used in RTL mode\n  smallLeft: \"small-left\",\n  // separater between column 'pills' when you add multiple columns to the header drop zone\n  smallRight: \"small-right\",\n  smallUp: \"small-up\",\n  // show on column header when column is sorted ascending\n  sortAscending: \"asc\",\n  // show on column header when column is sorted descending\n  sortDescending: \"desc\",\n  // show on column header when column has no sort, only when enabled with gridOptions.unSortIcon=true\n  sortUnSort: \"none\",\n  // Builder button in Advanced Filter\n  advancedFilterBuilder: \"group\",\n  // drag handle used to pick up Advanced Filter Builder rows\n  advancedFilterBuilderDrag: \"grip\",\n  // Advanced Filter Builder row validation error\n  advancedFilterBuilderInvalid: \"not-allowed\",\n  // shown on Advanced Filter Builder rows to move them up\n  advancedFilterBuilderMoveUp: \"up\",\n  // shown on Advanced Filter Builder rows to move them down\n  advancedFilterBuilderMoveDown: \"down\",\n  // shown on Advanced Filter Builder rows to add new rows\n  advancedFilterBuilderAdd: \"plus\",\n  // shown on Advanced Filter Builder rows to remove row\n  advancedFilterBuilderRemove: \"minus\",\n  // Edit Chart menu item shown in Integrated Charts menu\n  chartsMenuEdit: \"chart\",\n  // Advanced Settings menu item shown in Integrated Charts menu\n  chartsMenuAdvancedSettings: \"settings\",\n  // shown in Integrated Charts menu add fields\n  chartsMenuAdd: \"plus\",\n  // checked checkbox\n  checkboxChecked: \"checkbox-checked\",\n  // indeterminate checkbox\n  checkboxIndeterminate: \"checkbox-indeterminate\",\n  // unchecked checkbox\n  checkboxUnchecked: \"checkbox-unchecked\",\n  // radio button on\n  radioButtonOn: \"radio-button-on\",\n  // radio button off\n  radioButtonOff: \"radio-button-off\"\n};\nvar ICONS = (() => {\n  const icons = new Set(Object.values(iconNameClassMap));\n  icons.add(\"eye\");\n  return icons;\n})();\nfunction _createIcon(iconName, gos, column) {\n  const iconContents = _createIconNoSpan(iconName, gos, column);\n  if (iconContents) {\n    const { className } = iconContents;\n    if (typeof className === \"string\" && className.indexOf(\"ag-icon\") > -1 || typeof className === \"object\" && className[\"ag-icon\"]) {\n      return iconContents;\n    }\n  }\n  const eResult = document.createElement(\"span\");\n  eResult.appendChild(iconContents);\n  return eResult;\n}\nfunction _createIconNoSpan(iconName, gos, column, forceCreate) {\n  let userProvidedIcon = null;\n  const icons = column && column.getColDef().icons;\n  if (icons) {\n    userProvidedIcon = icons[iconName];\n  }\n  if (gos && !userProvidedIcon) {\n    const optionsIcons = gos.get(\"icons\");\n    if (optionsIcons) {\n      userProvidedIcon = optionsIcons[iconName];\n    }\n  }\n  if (userProvidedIcon) {\n    let rendererResult;\n    if (typeof userProvidedIcon === \"function\") {\n      rendererResult = userProvidedIcon();\n    } else if (typeof userProvidedIcon === \"string\") {\n      rendererResult = userProvidedIcon;\n    } else {\n      throw new Error(\"icon from grid options needs to be a string or a function\");\n    }\n    if (typeof rendererResult === \"string\") {\n      return _loadTemplate(rendererResult);\n    }\n    if (_isNodeOrElement(rendererResult)) {\n      return rendererResult;\n    }\n    _warnOnce(\"iconRenderer should return back a string or a dom object\");\n  } else {\n    const span = document.createElement(\"span\");\n    let cssClass = iconNameClassMap[iconName] ?? (ICONS.has(iconName) ? iconName : void 0);\n    if (!cssClass) {\n      if (!forceCreate) {\n        _warnOnce(`Did not find icon ${iconName}`);\n        cssClass = \"\";\n      } else {\n        cssClass = iconName;\n      }\n    }\n    span.setAttribute(\"class\", `ag-icon ag-icon-${cssClass}`);\n    span.setAttribute(\"unselectable\", \"on\");\n    _setAriaRole(span, \"presentation\");\n    return span;\n  }\n}\n\n// community-modules/core/src/utils/mouse.ts\nfunction _areEventsNear(e1, e2, pixelCount) {\n  if (pixelCount === 0) {\n    return false;\n  }\n  const diffX = Math.abs(e1.clientX - e2.clientX);\n  const diffY = Math.abs(e1.clientY - e2.clientY);\n  return Math.max(diffX, diffY) <= pixelCount;\n}\n\n// community-modules/core/src/widgets/touchListener.ts\nvar TouchListener = class {\n  constructor(eElement, preventMouseClick = false) {\n    this.DOUBLE_TAP_MILLIS = 500;\n    this.destroyFuncs = [];\n    this.touching = false;\n    this.localEventService = new LocalEventService();\n    this.eElement = eElement;\n    this.preventMouseClick = preventMouseClick;\n    const startListener = this.onTouchStart.bind(this);\n    const moveListener = this.onTouchMove.bind(this);\n    const endListener = this.onTouchEnd.bind(this);\n    this.eElement.addEventListener(\"touchstart\", startListener, { passive: true });\n    this.eElement.addEventListener(\"touchmove\", moveListener, { passive: true });\n    this.eElement.addEventListener(\"touchend\", endListener, { passive: false });\n    this.destroyFuncs.push(() => {\n      this.eElement.removeEventListener(\"touchstart\", startListener, { passive: true });\n      this.eElement.removeEventListener(\"touchmove\", moveListener, { passive: true });\n      this.eElement.removeEventListener(\"touchend\", endListener, { passive: false });\n    });\n  }\n  getActiveTouch(touchList) {\n    for (let i = 0; i < touchList.length; i++) {\n      const matches = touchList[i].identifier === this.touchStart.identifier;\n      if (matches) {\n        return touchList[i];\n      }\n    }\n    return null;\n  }\n  addEventListener(eventType, listener) {\n    this.localEventService.addEventListener(eventType, listener);\n  }\n  removeEventListener(eventType, listener) {\n    this.localEventService.removeEventListener(eventType, listener);\n  }\n  onTouchStart(touchEvent) {\n    if (this.touching) {\n      return;\n    }\n    this.touchStart = touchEvent.touches[0];\n    this.touching = true;\n    this.moved = false;\n    const touchStartCopy = this.touchStart;\n    window.setTimeout(() => {\n      const touchesMatch = this.touchStart === touchStartCopy;\n      if (this.touching && touchesMatch && !this.moved) {\n        this.moved = true;\n        const event = {\n          type: \"longTap\",\n          touchStart: this.touchStart,\n          touchEvent\n        };\n        this.localEventService.dispatchEvent(event);\n      }\n    }, 500);\n  }\n  onTouchMove(touchEvent) {\n    if (!this.touching) {\n      return;\n    }\n    const touch = this.getActiveTouch(touchEvent.touches);\n    if (!touch) {\n      return;\n    }\n    const eventIsFarAway = !_areEventsNear(touch, this.touchStart, 4);\n    if (eventIsFarAway) {\n      this.moved = true;\n    }\n  }\n  onTouchEnd(touchEvent) {\n    if (!this.touching) {\n      return;\n    }\n    if (!this.moved) {\n      const event = {\n        type: \"tap\",\n        touchStart: this.touchStart\n      };\n      this.localEventService.dispatchEvent(event);\n      this.checkForDoubleTap();\n    }\n    if (this.preventMouseClick && touchEvent.cancelable) {\n      touchEvent.preventDefault();\n    }\n    this.touching = false;\n  }\n  checkForDoubleTap() {\n    const now = (/* @__PURE__ */ new Date()).getTime();\n    if (this.lastTapTime && this.lastTapTime > 0) {\n      const interval = now - this.lastTapTime;\n      if (interval > this.DOUBLE_TAP_MILLIS) {\n        const event = {\n          type: \"doubleTap\",\n          touchStart: this.touchStart\n        };\n        this.localEventService.dispatchEvent(event);\n        this.lastTapTime = null;\n      } else {\n        this.lastTapTime = now;\n      }\n    } else {\n      this.lastTapTime = now;\n    }\n  }\n  destroy() {\n    this.destroyFuncs.forEach((func) => func());\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/column/sortIndicatorComp.ts\nfunction makeSpan(dataRefSuffix, classSuffix) {\n  return (\n    /* html */\n    `<span data-ref=\"eSort${dataRefSuffix}\" class=\"ag-sort-indicator-icon ag-sort-${classSuffix} ag-hidden\" aria-hidden=\"true\"></span>`\n  );\n}\nvar SortIndicatorTemplate = (\n  /* html */\n  `<span class=\"ag-sort-indicator-container\">\n        ${makeSpan(\"Order\", \"order\")}\n        ${makeSpan(\"Asc\", \"ascending-icon\")}\n        ${makeSpan(\"Desc\", \"descending-icon\")}\n        ${makeSpan(\"Mixed\", \"mixed-icon\")}\n        ${makeSpan(\"None\", \"none-icon\")}\n    </span>`\n);\nvar SortIndicatorComp = class extends Component {\n  constructor(skipTemplate) {\n    super();\n    this.eSortOrder = RefPlaceholder;\n    this.eSortAsc = RefPlaceholder;\n    this.eSortDesc = RefPlaceholder;\n    this.eSortMixed = RefPlaceholder;\n    this.eSortNone = RefPlaceholder;\n    if (!skipTemplate) {\n      this.setTemplate(SortIndicatorTemplate);\n    }\n  }\n  wireBeans(beans) {\n    this.sortController = beans.sortController;\n  }\n  attachCustomElements(eSortOrder, eSortAsc, eSortDesc, eSortMixed, eSortNone) {\n    this.eSortOrder = eSortOrder;\n    this.eSortAsc = eSortAsc;\n    this.eSortDesc = eSortDesc;\n    this.eSortMixed = eSortMixed;\n    this.eSortNone = eSortNone;\n  }\n  setupSort(column, suppressOrder = false) {\n    this.column = column;\n    this.suppressOrder = suppressOrder;\n    this.setupMultiSortIndicator();\n    if (!this.column.isSortable() && !this.column.getColDef().showRowGroup) {\n      return;\n    }\n    this.addInIcon(\"sortAscending\", this.eSortAsc, column);\n    this.addInIcon(\"sortDescending\", this.eSortDesc, column);\n    this.addInIcon(\"sortUnSort\", this.eSortNone, column);\n    const updateIcons = this.updateIcons.bind(this);\n    const sortUpdated = this.onSortChanged.bind(this);\n    this.addManagedPropertyListener(\"unSortIcon\", updateIcons);\n    this.addManagedEventListeners({\n      newColumnsLoaded: updateIcons,\n      // Watch global events, as row group columns can effect their display column.\n      sortChanged: sortUpdated,\n      // when grouping changes so can sort indexes and icons\n      columnRowGroupChanged: sortUpdated\n    });\n    this.onSortChanged();\n  }\n  addInIcon(iconName, eParent, column) {\n    if (eParent == null) {\n      return;\n    }\n    const eIcon = _createIconNoSpan(iconName, this.gos, column);\n    if (eIcon) {\n      eParent.appendChild(eIcon);\n    }\n  }\n  onSortChanged() {\n    this.updateIcons();\n    if (!this.suppressOrder) {\n      this.updateSortOrder();\n    }\n  }\n  updateIcons() {\n    const sortDirection = this.sortController.getDisplaySortForColumn(this.column);\n    if (this.eSortAsc) {\n      const isAscending = sortDirection === \"asc\";\n      _setDisplayed(this.eSortAsc, isAscending, { skipAriaHidden: true });\n    }\n    if (this.eSortDesc) {\n      const isDescending = sortDirection === \"desc\";\n      _setDisplayed(this.eSortDesc, isDescending, { skipAriaHidden: true });\n    }\n    if (this.eSortNone) {\n      const alwaysHideNoSort = !this.column.getColDef().unSortIcon && !this.gos.get(\"unSortIcon\");\n      const isNone = sortDirection === null || sortDirection === void 0;\n      _setDisplayed(this.eSortNone, !alwaysHideNoSort && isNone, { skipAriaHidden: true });\n    }\n  }\n  setupMultiSortIndicator() {\n    this.addInIcon(\"sortUnSort\", this.eSortMixed, this.column);\n    const isColumnShowingRowGroup = this.column.getColDef().showRowGroup;\n    const areGroupsCoupled = this.gos.isColumnsSortingCoupledToGroup();\n    if (areGroupsCoupled && isColumnShowingRowGroup) {\n      this.addManagedEventListeners({\n        // Watch global events, as row group columns can effect their display column.\n        sortChanged: this.updateMultiSortIndicator.bind(this),\n        // when grouping changes so can sort indexes and icons\n        columnRowGroupChanged: this.updateMultiSortIndicator.bind(this)\n      });\n      this.updateMultiSortIndicator();\n    }\n  }\n  updateMultiSortIndicator() {\n    if (this.eSortMixed) {\n      const isMixedSort = this.sortController.getDisplaySortForColumn(this.column) === \"mixed\";\n      _setDisplayed(this.eSortMixed, isMixedSort, { skipAriaHidden: true });\n    }\n  }\n  // we listen here for global sort events, NOT column sort events, as we want to do this\n  // when sorting has been set on all column (if we listened just for our col (where we\n  // set the asc / desc icons) then it's possible other cols are yet to get their sorting state.\n  updateSortOrder() {\n    if (!this.eSortOrder) {\n      return;\n    }\n    const allColumnsWithSorting = this.sortController.getColumnsWithSortingOrdered();\n    const indexThisCol = this.sortController.getDisplaySortIndexForColumn(this.column) ?? -1;\n    const moreThanOneColSorting = allColumnsWithSorting.some(\n      (col) => this.sortController.getDisplaySortIndexForColumn(col) ?? -1 >= 1\n    );\n    const showIndex = indexThisCol >= 0 && moreThanOneColSorting;\n    _setDisplayed(this.eSortOrder, showIndex, { skipAriaHidden: true });\n    if (indexThisCol >= 0) {\n      this.eSortOrder.textContent = (indexThisCol + 1).toString();\n    } else {\n      _clearElement(this.eSortOrder);\n    }\n  }\n};\nvar SortIndicatorSelector = {\n  selector: \"AG-SORT-INDICATOR\",\n  component: SortIndicatorComp\n};\n\n// community-modules/core/src/headerRendering/cells/column/headerComp.ts\nvar HeaderCompTemplate = (\n  /* html */\n  `<div class=\"ag-cell-label-container\" role=\"presentation\">\n        <span data-ref=\"eMenu\" class=\"ag-header-icon ag-header-cell-menu-button\" aria-hidden=\"true\"></span>\n        <span data-ref=\"eFilterButton\" class=\"ag-header-icon ag-header-cell-filter-button\" aria-hidden=\"true\"></span>\n        <div data-ref=\"eLabel\" class=\"ag-header-cell-label\" role=\"presentation\">\n            <span data-ref=\"eText\" class=\"ag-header-cell-text\"></span>\n            <span data-ref=\"eFilter\" class=\"ag-header-icon ag-header-label-icon ag-filter-icon\" aria-hidden=\"true\"></span>\n            <ag-sort-indicator data-ref=\"eSortIndicator\"></ag-sort-indicator>\n        </div>\n    </div>`\n);\nvar HeaderComp = class extends Component {\n  constructor() {\n    super(...arguments);\n    this.eFilter = RefPlaceholder;\n    this.eFilterButton = RefPlaceholder;\n    this.eSortIndicator = RefPlaceholder;\n    this.eMenu = RefPlaceholder;\n    this.eLabel = RefPlaceholder;\n    this.eText = RefPlaceholder;\n    /**\n     * Selectors for custom headers templates\n     */\n    this.eSortOrder = RefPlaceholder;\n    this.eSortAsc = RefPlaceholder;\n    this.eSortDesc = RefPlaceholder;\n    this.eSortMixed = RefPlaceholder;\n    this.eSortNone = RefPlaceholder;\n    this.lastMovingChanged = 0;\n  }\n  wireBeans(beans) {\n    this.sortController = beans.sortController;\n    this.menuService = beans.menuService;\n    this.funcColsService = beans.funcColsService;\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n  refresh(params) {\n    const oldParams = this.params;\n    this.params = params;\n    if (this.workOutTemplate() != this.currentTemplate || this.workOutShowMenu() != this.currentShowMenu || this.workOutSort() != this.currentSort || this.shouldSuppressMenuHide() != this.currentSuppressMenuHide || oldParams.enableFilterButton != params.enableFilterButton || oldParams.enableFilterIcon != params.enableFilterIcon) {\n      return false;\n    }\n    this.setDisplayName(params);\n    return true;\n  }\n  workOutTemplate() {\n    let template = this.params.template ?? HeaderCompTemplate;\n    template = template && template.trim ? template.trim() : template;\n    return template;\n  }\n  init(params) {\n    this.params = params;\n    this.currentTemplate = this.workOutTemplate();\n    this.setTemplate(this.currentTemplate, [SortIndicatorSelector]);\n    this.setupTap();\n    this.setMenu();\n    this.setupSort();\n    this.setupFilterIcon();\n    this.setupFilterButton();\n    this.setDisplayName(params);\n  }\n  setDisplayName(params) {\n    if (this.currentDisplayName != params.displayName) {\n      this.currentDisplayName = params.displayName;\n      const displayNameSanitised = _escapeString(this.currentDisplayName, true);\n      if (this.eText) {\n        this.eText.textContent = displayNameSanitised;\n      }\n    }\n  }\n  addInIcon(iconName, eParent, column) {\n    if (eParent == null) {\n      return;\n    }\n    const eIcon = _createIconNoSpan(iconName, this.gos, column);\n    if (eIcon) {\n      eParent.appendChild(eIcon);\n    }\n  }\n  setupTap() {\n    const { gos } = this;\n    if (gos.get(\"suppressTouch\")) {\n      return;\n    }\n    const touchListener = new TouchListener(this.getGui(), true);\n    const suppressMenuHide = this.shouldSuppressMenuHide();\n    const tapMenuButton = suppressMenuHide && _exists(this.eMenu);\n    const menuTouchListener = tapMenuButton ? new TouchListener(this.eMenu, true) : touchListener;\n    if (this.params.enableMenu) {\n      const eventType = tapMenuButton ? \"tap\" : \"longTap\";\n      const showMenuFn = (event) => this.params.showColumnMenuAfterMouseClick(event.touchStart);\n      this.addManagedListeners(menuTouchListener, { [eventType]: showMenuFn });\n    }\n    if (this.params.enableSorting) {\n      const tapListener = (event) => {\n        const target = event.touchStart.target;\n        if (suppressMenuHide && (this.eMenu?.contains(target) || this.eFilterButton?.contains(target))) {\n          return;\n        }\n        this.sortController.progressSort(this.params.column, false, \"uiColumnSorted\");\n      };\n      this.addManagedListeners(touchListener, { tap: tapListener });\n    }\n    if (this.params.enableFilterButton) {\n      const filterButtonTouchListener = new TouchListener(this.eFilterButton, true);\n      this.addManagedListeners(filterButtonTouchListener, {\n        tap: () => this.params.showFilter(this.eFilterButton)\n      });\n      this.addDestroyFunc(() => filterButtonTouchListener.destroy());\n    }\n    this.addDestroyFunc(() => touchListener.destroy());\n    if (tapMenuButton) {\n      this.addDestroyFunc(() => menuTouchListener.destroy());\n    }\n  }\n  workOutShowMenu() {\n    return this.params.enableMenu && this.menuService.isHeaderMenuButtonEnabled();\n  }\n  shouldSuppressMenuHide() {\n    return this.menuService.isHeaderMenuButtonAlwaysShowEnabled();\n  }\n  setMenu() {\n    if (!this.eMenu) {\n      return;\n    }\n    this.currentShowMenu = this.workOutShowMenu();\n    if (!this.currentShowMenu) {\n      _removeFromParent(this.eMenu);\n      this.eMenu = void 0;\n      return;\n    }\n    const isLegacyMenu = this.menuService.isLegacyMenuEnabled();\n    this.addInIcon(isLegacyMenu ? \"menu\" : \"menuAlt\", this.eMenu, this.params.column);\n    this.eMenu.classList.toggle(\"ag-header-menu-icon\", !isLegacyMenu);\n    this.currentSuppressMenuHide = this.shouldSuppressMenuHide();\n    this.addManagedElementListeners(this.eMenu, { click: () => this.params.showColumnMenu(this.eMenu) });\n    this.eMenu.classList.toggle(\"ag-header-menu-always-show\", this.currentSuppressMenuHide);\n  }\n  onMenuKeyboardShortcut(isFilterShortcut) {\n    const column = this.params.column;\n    const isLegacyMenuEnabled = this.menuService.isLegacyMenuEnabled();\n    if (isFilterShortcut && !isLegacyMenuEnabled) {\n      if (this.menuService.isFilterMenuInHeaderEnabled(column)) {\n        this.params.showFilter(this.eFilterButton ?? this.eMenu ?? this.getGui());\n        return true;\n      }\n    } else if (this.params.enableMenu) {\n      this.params.showColumnMenu(this.eMenu ?? this.eFilterButton ?? this.getGui());\n      return true;\n    }\n    return false;\n  }\n  workOutSort() {\n    return this.params.enableSorting;\n  }\n  setupSort() {\n    this.currentSort = this.params.enableSorting;\n    if (!this.eSortIndicator) {\n      this.eSortIndicator = this.createBean(new SortIndicatorComp(true));\n      this.eSortIndicator.attachCustomElements(\n        this.eSortOrder,\n        this.eSortAsc,\n        this.eSortDesc,\n        this.eSortMixed,\n        this.eSortNone\n      );\n    }\n    this.eSortIndicator.setupSort(this.params.column);\n    if (!this.currentSort) {\n      return;\n    }\n    this.addManagedListeners(this.params.column, {\n      movingChanged: () => {\n        this.lastMovingChanged = (/* @__PURE__ */ new Date()).getTime();\n      }\n    });\n    if (this.eLabel) {\n      this.addManagedElementListeners(this.eLabel, {\n        click: (event) => {\n          const moving = this.params.column.isMoving();\n          const nowTime = (/* @__PURE__ */ new Date()).getTime();\n          const movedRecently = nowTime - this.lastMovingChanged < 50;\n          const columnMoving = moving || movedRecently;\n          if (!columnMoving) {\n            const sortUsingCtrl = this.gos.get(\"multiSortKey\") === \"ctrl\";\n            const multiSort = sortUsingCtrl ? event.ctrlKey || event.metaKey : event.shiftKey;\n            this.params.progressSort(multiSort);\n          }\n        }\n      });\n    }\n    const onSortingChanged = () => {\n      const sort = this.params.column.getSort();\n      this.addOrRemoveCssClass(\"ag-header-cell-sorted-asc\", sort === \"asc\");\n      this.addOrRemoveCssClass(\"ag-header-cell-sorted-desc\", sort === \"desc\");\n      this.addOrRemoveCssClass(\"ag-header-cell-sorted-none\", !sort);\n      if (this.params.column.getColDef().showRowGroup) {\n        const sourceColumns = this.funcColsService.getSourceColumnsForGroupColumn(\n          this.params.column\n        );\n        const sortDirectionsMatch = sourceColumns?.every(\n          (sourceCol) => this.params.column.getSort() == sourceCol.getSort()\n        );\n        const isMultiSorting = !sortDirectionsMatch;\n        this.addOrRemoveCssClass(\"ag-header-cell-sorted-mixed\", isMultiSorting);\n      }\n    };\n    this.addManagedEventListeners({\n      sortChanged: onSortingChanged,\n      columnRowGroupChanged: onSortingChanged\n    });\n  }\n  setupFilterIcon() {\n    if (!this.eFilter) {\n      return;\n    }\n    this.configureFilter(this.params.enableFilterIcon, this.eFilter, this.onFilterChangedIcon.bind(this));\n  }\n  setupFilterButton() {\n    if (!this.eFilterButton) {\n      return;\n    }\n    const configured = this.configureFilter(\n      this.params.enableFilterButton,\n      this.eFilterButton,\n      this.onFilterChangedButton.bind(this)\n    );\n    if (configured) {\n      this.addManagedElementListeners(this.eFilterButton, {\n        click: () => this.params.showFilter(this.eFilterButton)\n      });\n    } else {\n      this.eFilterButton = void 0;\n    }\n  }\n  configureFilter(enabled, element, filterChangedCallback) {\n    if (!enabled) {\n      _removeFromParent(element);\n      return false;\n    }\n    const column = this.params.column;\n    this.addInIcon(\"filter\", element, column);\n    this.addManagedListeners(column, { filterChanged: filterChangedCallback });\n    filterChangedCallback();\n    return true;\n  }\n  onFilterChangedIcon() {\n    const filterPresent = this.params.column.isFilterActive();\n    _setDisplayed(this.eFilter, filterPresent, { skipAriaHidden: true });\n  }\n  onFilterChangedButton() {\n    const filterPresent = this.params.column.isFilterActive();\n    this.eFilterButton.classList.toggle(\"ag-filter-active\", filterPresent);\n  }\n  getAnchorElementForMenu(isFilter) {\n    if (isFilter) {\n      return this.eFilterButton ?? this.eMenu ?? this.getGui();\n    }\n    return this.eMenu ?? this.eFilterButton ?? this.getGui();\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/columnGroup/headerGroupComp.ts\nvar HeaderGroupComp = class extends Component {\n  constructor() {\n    super(\n      /* html */\n      `<div class=\"ag-header-group-cell-label\" role=\"presentation\">\n            <span data-ref=\"agLabel\" class=\"ag-header-group-text\" role=\"presentation\"></span>\n            <span data-ref=\"agOpened\" class=\"ag-header-icon ag-header-expand-icon ag-header-expand-icon-expanded\"></span>\n            <span data-ref=\"agClosed\" class=\"ag-header-icon ag-header-expand-icon ag-header-expand-icon-collapsed\"></span>\n        </div>`\n    );\n    this.agOpened = RefPlaceholder;\n    this.agClosed = RefPlaceholder;\n    this.agLabel = RefPlaceholder;\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n  init(params) {\n    this.params = params;\n    this.checkWarnings();\n    this.setupLabel();\n    this.addGroupExpandIcon();\n    this.setupExpandIcons();\n  }\n  checkWarnings() {\n    const paramsAny = this.params;\n    if (paramsAny.template) {\n      _warnOnce(\n        `A template was provided for Header Group Comp - templates are only supported for Header Comps (not groups)`\n      );\n    }\n  }\n  setupExpandIcons() {\n    this.addInIcon(\"columnGroupOpened\", this.agOpened);\n    this.addInIcon(\"columnGroupClosed\", this.agClosed);\n    const expandAction = (event) => {\n      if (_isStopPropagationForAgGrid(event)) {\n        return;\n      }\n      const newExpandedValue = !this.params.columnGroup.isExpanded();\n      this.columnModel.setColumnGroupOpened(\n        this.params.columnGroup.getProvidedColumnGroup(),\n        newExpandedValue,\n        \"uiColumnExpanded\"\n      );\n    };\n    this.addTouchAndClickListeners(this.agClosed, expandAction);\n    this.addTouchAndClickListeners(this.agOpened, expandAction);\n    const stopPropagationAction = (event) => {\n      _stopPropagationForAgGrid(event);\n    };\n    this.addManagedElementListeners(this.agClosed, { dblclick: stopPropagationAction });\n    this.addManagedElementListeners(this.agOpened, { dblclick: stopPropagationAction });\n    this.addManagedElementListeners(this.getGui(), { dblclick: expandAction });\n    this.updateIconVisibility();\n    const providedColumnGroup = this.params.columnGroup.getProvidedColumnGroup();\n    const updateIcon = this.updateIconVisibility.bind(this);\n    this.addManagedListeners(providedColumnGroup, {\n      expandedChanged: updateIcon,\n      expandableChanged: updateIcon\n    });\n  }\n  addTouchAndClickListeners(eElement, action) {\n    const touchListener = new TouchListener(eElement, true);\n    this.addManagedListeners(touchListener, { tap: action });\n    this.addDestroyFunc(() => touchListener.destroy());\n    this.addManagedElementListeners(eElement, { click: action });\n  }\n  updateIconVisibility() {\n    const columnGroup = this.params.columnGroup;\n    if (columnGroup.isExpandable()) {\n      const expanded = this.params.columnGroup.isExpanded();\n      _setDisplayed(this.agOpened, expanded);\n      _setDisplayed(this.agClosed, !expanded);\n    } else {\n      _setDisplayed(this.agOpened, false);\n      _setDisplayed(this.agClosed, false);\n    }\n  }\n  addInIcon(iconName, element) {\n    const eIcon = _createIconNoSpan(iconName, this.gos, null);\n    if (eIcon) {\n      element.appendChild(eIcon);\n    }\n  }\n  addGroupExpandIcon() {\n    if (!this.params.columnGroup.isExpandable()) {\n      _setDisplayed(this.agOpened, false);\n      _setDisplayed(this.agClosed, false);\n      return;\n    }\n  }\n  setupLabel() {\n    const { displayName, columnGroup } = this.params;\n    if (_exists(displayName)) {\n      const displayNameSanitised = _escapeString(displayName, true);\n      this.agLabel.textContent = displayNameSanitised;\n    }\n    this.addOrRemoveCssClass(\"ag-sticky-label\", !columnGroup.getColGroupDef()?.suppressStickyLabel);\n  }\n};\n\n// community-modules/core/src/modules/moduleNames.ts\nvar ModuleNames = /* @__PURE__ */ ((ModuleNames2) => {\n  ModuleNames2[\"CommunityCoreModule\"] = \"@ag-grid-community/core\";\n  ModuleNames2[\"InfiniteRowModelModule\"] = \"@ag-grid-community/infinite-row-model\";\n  ModuleNames2[\"ClientSideRowModelModule\"] = \"@ag-grid-community/client-side-row-model\";\n  ModuleNames2[\"CsvExportModule\"] = \"@ag-grid-community/csv-export\";\n  ModuleNames2[\"EnterpriseCoreModule\"] = \"@ag-grid-enterprise/core\";\n  ModuleNames2[\"RowGroupingModule\"] = \"@ag-grid-enterprise/row-grouping\";\n  ModuleNames2[\"ColumnsToolPanelModule\"] = \"@ag-grid-enterprise/column-tool-panel\";\n  ModuleNames2[\"FiltersToolPanelModule\"] = \"@ag-grid-enterprise/filter-tool-panel\";\n  ModuleNames2[\"MenuModule\"] = \"@ag-grid-enterprise/menu\";\n  ModuleNames2[\"SetFilterModule\"] = \"@ag-grid-enterprise/set-filter\";\n  ModuleNames2[\"MultiFilterModule\"] = \"@ag-grid-enterprise/multi-filter\";\n  ModuleNames2[\"StatusBarModule\"] = \"@ag-grid-enterprise/status-bar\";\n  ModuleNames2[\"SideBarModule\"] = \"@ag-grid-enterprise/side-bar\";\n  ModuleNames2[\"RangeSelectionModule\"] = \"@ag-grid-enterprise/range-selection\";\n  ModuleNames2[\"MasterDetailModule\"] = \"@ag-grid-enterprise/master-detail\";\n  ModuleNames2[\"RichSelectModule\"] = \"@ag-grid-enterprise/rich-select\";\n  ModuleNames2[\"GridChartsModule\"] = \"@ag-grid-enterprise/charts\";\n  ModuleNames2[\"ViewportRowModelModule\"] = \"@ag-grid-enterprise/viewport-row-model\";\n  ModuleNames2[\"ServerSideRowModelModule\"] = \"@ag-grid-enterprise/server-side-row-model\";\n  ModuleNames2[\"ExcelExportModule\"] = \"@ag-grid-enterprise/excel-export\";\n  ModuleNames2[\"ClipboardModule\"] = \"@ag-grid-enterprise/clipboard\";\n  ModuleNames2[\"SparklinesModule\"] = \"@ag-grid-enterprise/sparklines\";\n  ModuleNames2[\"AdvancedFilterModule\"] = \"@ag-grid-enterprise/advanced-filter\";\n  ModuleNames2[\"AngularModule\"] = \"@ag-grid-community/angular\";\n  ModuleNames2[\"ReactModule\"] = \"@ag-grid-community/react\";\n  ModuleNames2[\"VueModule\"] = \"@ag-grid-community/vue\";\n  return ModuleNames2;\n})(ModuleNames || {});\n\n// community-modules/core/src/modules/moduleRegistry.ts\nvar _ModuleRegistry = class _ModuleRegistry {\n  /**\n   * Globally register the given module for all grids.\n   * @param module - module to register\n   */\n  static register(module) {\n    _ModuleRegistry.__register(module, true, void 0);\n  }\n  /**\n   * Globally register the given modules for all grids.\n   * @param modules - modules to register\n   */\n  static registerModules(modules) {\n    _ModuleRegistry.__registerModules(modules, true, void 0);\n  }\n  /** AG GRID INTERNAL - Module registration helper. */\n  static __register(module, moduleBased, gridId) {\n    _ModuleRegistry.runVersionChecks(module);\n    if (gridId !== void 0) {\n      _ModuleRegistry.areGridScopedModules = true;\n      if (_ModuleRegistry.gridModulesMap[gridId] === void 0) {\n        _ModuleRegistry.gridModulesMap[gridId] = {};\n      }\n      _ModuleRegistry.gridModulesMap[gridId][module.moduleName] = module;\n    } else {\n      _ModuleRegistry.globalModulesMap[module.moduleName] = module;\n    }\n    _ModuleRegistry.setModuleBased(moduleBased);\n  }\n  /** AG GRID INTERNAL - Unregister grid scoped module. */\n  static __unRegisterGridModules(gridId) {\n    delete _ModuleRegistry.gridModulesMap[gridId];\n  }\n  /** AG GRID INTERNAL - Module registration helper. */\n  static __registerModules(modules, moduleBased, gridId) {\n    _ModuleRegistry.setModuleBased(moduleBased);\n    if (!modules) {\n      return;\n    }\n    modules.forEach((module) => _ModuleRegistry.__register(module, moduleBased, gridId));\n  }\n  static isValidModuleVersion(module) {\n    const [moduleMajor, moduleMinor] = module.version.split(\".\") || [];\n    const [currentModuleMajor, currentModuleMinor] = _ModuleRegistry.currentModuleVersion.split(\".\") || [];\n    return moduleMajor === currentModuleMajor && moduleMinor === currentModuleMinor;\n  }\n  static runVersionChecks(module) {\n    if (!_ModuleRegistry.currentModuleVersion) {\n      _ModuleRegistry.currentModuleVersion = module.version;\n    }\n    const errorMsg = (details) => `You are using incompatible versions of AG Grid modules. Major and minor versions should always match across modules. ${details} Please update all modules to the same version.`;\n    if (!module.version) {\n      _errorOnce(errorMsg(`'${module.moduleName}' is incompatible.`));\n    } else if (!_ModuleRegistry.isValidModuleVersion(module)) {\n      _errorOnce(\n        errorMsg(\n          `'${module.moduleName}' is version ${module.version} but the other modules are version ${_ModuleRegistry.currentModuleVersion}.`\n        )\n      );\n    }\n    if (module.validate) {\n      const result = module.validate();\n      if (!result.isValid) {\n        const errorResult = result;\n        _errorOnce(`${errorResult.message}`);\n      }\n    }\n  }\n  static setModuleBased(moduleBased) {\n    if (_ModuleRegistry.moduleBased === void 0) {\n      _ModuleRegistry.moduleBased = moduleBased;\n    } else {\n      if (_ModuleRegistry.moduleBased !== moduleBased) {\n        _errorOnce(\n          `AG Grid: You are mixing modules (i.e. @ag-grid-community/core) and packages (ag-grid-community) - you can only use one or the other of these mechanisms.`\n        );\n        _errorOnce(\"Please see https://www.ag-grid.com/javascript-grid/modules/ for more information.\");\n      }\n    }\n  }\n  /**\n   * AG GRID INTERNAL - Set if files are being served from a single UMD bundle to provide accurate enterprise upgrade steps.\n   */\n  static __setIsBundled() {\n    _ModuleRegistry.isBundled = true;\n  }\n  /** AG GRID INTERNAL - Assert a given module has been register, globally or individually with this grid. */\n  static __assertRegistered(moduleName, reason, gridId) {\n    if (this.__isRegistered(moduleName, gridId)) {\n      return true;\n    }\n    let warningMessage;\n    if (_ModuleRegistry.isBundled) {\n      {\n        warningMessage = `AG Grid: unable to use ${reason} as 'ag-grid-enterprise' has not been loaded. Check you are using the Enterprise bundle:\n        \n        <script src=\"https://cdn.jsdelivr.net/npm/ag-grid-enterprise@AG_GRID_VERSION/dist/ag-grid-enterprise.min.js\"><\\/script>\n        \nFor more info see: https://ag-grid.com/javascript-data-grid/getting-started/#getting-started-with-ag-grid-enterprise`;\n      }\n    } else if (_ModuleRegistry.moduleBased || _ModuleRegistry.moduleBased === void 0) {\n      const modName = Object.entries(ModuleNames).find(([k, v]) => v === moduleName)?.[0];\n      warningMessage = `AG Grid: unable to use ${reason} as the ${modName} is not registered${_ModuleRegistry.areGridScopedModules ? ` for gridId: ${gridId}` : \"\"}. Check if you have registered the module:\n           \n    import { ModuleRegistry } from '@ag-grid-community/core';\n    import { ${modName} } from '${moduleName}';\n    \n    ModuleRegistry.registerModules([ ${modName} ]);\n\nFor more info see: https://www.ag-grid.com/javascript-grid/modules/`;\n    } else {\n      warningMessage = `AG Grid: unable to use ${reason} as package 'ag-grid-enterprise' has not been imported. Check that you have imported the package:\n            \n    import 'ag-grid-enterprise';`;\n    }\n    _errorOnce(warningMessage);\n    return false;\n  }\n  /** AG GRID INTERNAL - Is the given module registered, globally or individually with this grid. */\n  static __isRegistered(moduleName, gridId) {\n    return !!_ModuleRegistry.globalModulesMap[moduleName] || !!_ModuleRegistry.gridModulesMap[gridId]?.[moduleName];\n  }\n  /** AG GRID INTERNAL - Get all registered modules globally / individually for this grid. */\n  static __getRegisteredModules(gridId) {\n    return [..._values(_ModuleRegistry.globalModulesMap), ..._values(_ModuleRegistry.gridModulesMap[gridId] || {})];\n  }\n  /** AG GRID INTERNAL - Get the list of modules registered individually for this grid. */\n  static __getGridRegisteredModules(gridId) {\n    return _values(_ModuleRegistry.gridModulesMap[gridId] ?? {}) || [];\n  }\n  /** INTERNAL */\n  static __isPackageBased() {\n    return !_ModuleRegistry.moduleBased;\n  }\n};\n// having in a map a) removes duplicates and b) allows fast lookup\n_ModuleRegistry.globalModulesMap = {};\n_ModuleRegistry.gridModulesMap = {};\n_ModuleRegistry.areGridScopedModules = false;\nvar ModuleRegistry = _ModuleRegistry;\n\n// community-modules/core/src/rendering/cellRenderers/animateShowChangeCellRenderer.ts\nvar ARROW_UP = \"\\u2191\";\nvar ARROW_DOWN = \"\\u2193\";\nvar AnimateShowChangeCellRenderer = class extends Component {\n  constructor() {\n    super();\n    this.refreshCount = 0;\n    const template = document.createElement(\"span\");\n    const delta = document.createElement(\"span\");\n    delta.setAttribute(\"class\", \"ag-value-change-delta\");\n    const value = document.createElement(\"span\");\n    value.setAttribute(\"class\", \"ag-value-change-value\");\n    template.appendChild(delta);\n    template.appendChild(value);\n    this.setTemplateFromElement(template);\n  }\n  wireBeans(beans) {\n    this.filterManager = beans.filterManager;\n  }\n  init(params) {\n    this.eValue = this.queryForHtmlElement(\".ag-value-change-value\");\n    this.eDelta = this.queryForHtmlElement(\".ag-value-change-delta\");\n    this.refresh(params, true);\n  }\n  showDelta(params, delta) {\n    const absDelta = Math.abs(delta);\n    const valueFormatted = params.formatValue(absDelta);\n    const valueToUse = _exists(valueFormatted) ? valueFormatted : absDelta;\n    const deltaUp = delta >= 0;\n    if (deltaUp) {\n      this.eDelta.textContent = ARROW_UP + valueToUse;\n    } else {\n      this.eDelta.textContent = ARROW_DOWN + valueToUse;\n    }\n    this.eDelta.classList.toggle(\"ag-value-change-delta-up\", deltaUp);\n    this.eDelta.classList.toggle(\"ag-value-change-delta-down\", !deltaUp);\n  }\n  setTimerToRemoveDelta() {\n    this.refreshCount++;\n    const refreshCountCopy = this.refreshCount;\n    this.getFrameworkOverrides().wrapIncoming(() => {\n      window.setTimeout(() => {\n        if (refreshCountCopy === this.refreshCount) {\n          this.hideDeltaValue();\n        }\n      }, 2e3);\n    });\n  }\n  hideDeltaValue() {\n    this.eValue.classList.remove(\"ag-value-change-value-highlight\");\n    _clearElement(this.eDelta);\n  }\n  refresh(params, isInitialRender = false) {\n    const value = params.value;\n    if (value === this.lastValue) {\n      return false;\n    }\n    if (_exists(params.valueFormatted)) {\n      this.eValue.textContent = params.valueFormatted;\n    } else if (_exists(params.value)) {\n      this.eValue.textContent = value;\n    } else {\n      _clearElement(this.eValue);\n    }\n    if (this.filterManager?.isSuppressFlashingCellsBecauseFiltering()) {\n      return false;\n    }\n    if (typeof value === \"number\" && typeof this.lastValue === \"number\") {\n      const delta = value - this.lastValue;\n      this.showDelta(params, delta);\n    }\n    if (this.lastValue) {\n      this.eValue.classList.add(\"ag-value-change-value-highlight\");\n    }\n    if (!isInitialRender) {\n      this.setTimerToRemoveDelta();\n    }\n    this.lastValue = value;\n    return true;\n  }\n};\n\n// community-modules/core/src/rendering/cellRenderers/animateSlideCellRenderer.ts\nvar AnimateSlideCellRenderer = class extends Component {\n  constructor() {\n    super();\n    this.refreshCount = 0;\n    const template = document.createElement(\"span\");\n    const slide = document.createElement(\"span\");\n    slide.setAttribute(\"class\", \"ag-value-slide-current\");\n    template.appendChild(slide);\n    this.setTemplateFromElement(template);\n    this.eCurrent = this.queryForHtmlElement(\".ag-value-slide-current\");\n  }\n  wireBeans(beans) {\n    this.filterManager = beans.filterManager;\n  }\n  init(params) {\n    this.refresh(params, true);\n  }\n  addSlideAnimation() {\n    this.refreshCount++;\n    const refreshCountCopy = this.refreshCount;\n    if (this.ePrevious) {\n      this.getGui().removeChild(this.ePrevious);\n    }\n    const prevElement = document.createElement(\"span\");\n    prevElement.setAttribute(\"class\", \"ag-value-slide-previous ag-value-slide-out\");\n    this.ePrevious = prevElement;\n    this.ePrevious.textContent = this.eCurrent.textContent;\n    this.getGui().insertBefore(this.ePrevious, this.eCurrent);\n    this.getFrameworkOverrides().wrapIncoming(() => {\n      window.setTimeout(() => {\n        if (refreshCountCopy !== this.refreshCount) {\n          return;\n        }\n        this.ePrevious.classList.add(\"ag-value-slide-out-end\");\n      }, 50);\n      window.setTimeout(() => {\n        if (refreshCountCopy !== this.refreshCount) {\n          return;\n        }\n        this.getGui().removeChild(this.ePrevious);\n        this.ePrevious = null;\n      }, 3e3);\n    });\n  }\n  refresh(params, isInitialRender = false) {\n    let value = params.value;\n    if (_missing(value)) {\n      value = \"\";\n    }\n    if (value === this.lastValue) {\n      return false;\n    }\n    if (this.filterManager?.isSuppressFlashingCellsBecauseFiltering()) {\n      return false;\n    }\n    if (!isInitialRender) {\n      this.addSlideAnimation();\n    }\n    this.lastValue = value;\n    if (_exists(params.valueFormatted)) {\n      this.eCurrent.textContent = params.valueFormatted;\n    } else if (_exists(params.value)) {\n      this.eCurrent.textContent = value;\n    } else {\n      _clearElement(this.eCurrent);\n    }\n    return true;\n  }\n};\n\n// community-modules/core/src/constants/keyCode.ts\nvar KeyCode = class {\n};\nKeyCode.BACKSPACE = \"Backspace\";\nKeyCode.TAB = \"Tab\";\nKeyCode.ENTER = \"Enter\";\nKeyCode.ESCAPE = \"Escape\";\nKeyCode.SPACE = \" \";\nKeyCode.LEFT = \"ArrowLeft\";\nKeyCode.UP = \"ArrowUp\";\nKeyCode.RIGHT = \"ArrowRight\";\nKeyCode.DOWN = \"ArrowDown\";\nKeyCode.DELETE = \"Delete\";\nKeyCode.F2 = \"F2\";\nKeyCode.PAGE_UP = \"PageUp\";\nKeyCode.PAGE_DOWN = \"PageDown\";\nKeyCode.PAGE_HOME = \"Home\";\nKeyCode.PAGE_END = \"End\";\n// these should be used with `event.code` instead of `event.key`\n// as `event.key` changes when non-latin keyboards are used\nKeyCode.A = \"KeyA\";\nKeyCode.C = \"KeyC\";\nKeyCode.D = \"KeyD\";\nKeyCode.V = \"KeyV\";\nKeyCode.X = \"KeyX\";\nKeyCode.Y = \"KeyY\";\nKeyCode.Z = \"KeyZ\";\n\n// community-modules/core/src/widgets/agAbstractLabel.ts\nvar AgAbstractLabel = class extends Component {\n  constructor(config, template, components) {\n    super(template, components);\n    this.labelSeparator = \"\";\n    this.labelAlignment = \"left\";\n    this.disabled = false;\n    this.label = \"\";\n    this.config = config || {};\n  }\n  postConstruct() {\n    this.addCssClass(\"ag-labeled\");\n    this.eLabel.classList.add(\"ag-label\");\n    const { labelSeparator, label, labelWidth, labelAlignment, disabled } = this.config;\n    if (disabled != null) {\n      this.setDisabled(disabled);\n    }\n    if (labelSeparator != null) {\n      this.setLabelSeparator(labelSeparator);\n    }\n    if (label != null) {\n      this.setLabel(label);\n    }\n    if (labelWidth != null) {\n      this.setLabelWidth(labelWidth);\n    }\n    this.setLabelAlignment(labelAlignment || this.labelAlignment);\n    this.refreshLabel();\n  }\n  refreshLabel() {\n    _clearElement(this.eLabel);\n    if (typeof this.label === \"string\") {\n      this.eLabel.innerText = this.label + this.labelSeparator;\n    } else if (this.label) {\n      this.eLabel.appendChild(this.label);\n    }\n    if (this.label === \"\") {\n      _setDisplayed(this.eLabel, false);\n      _setAriaRole(this.eLabel, \"presentation\");\n    } else {\n      _setDisplayed(this.eLabel, true);\n      _setAriaRole(this.eLabel, null);\n    }\n  }\n  setLabelSeparator(labelSeparator) {\n    if (this.labelSeparator === labelSeparator) {\n      return this;\n    }\n    this.labelSeparator = labelSeparator;\n    if (this.label != null) {\n      this.refreshLabel();\n    }\n    return this;\n  }\n  getLabelId() {\n    this.eLabel.id = this.eLabel.id || `ag-${this.getCompId()}-label`;\n    return this.eLabel.id;\n  }\n  getLabel() {\n    return this.label;\n  }\n  setLabel(label) {\n    if (this.label === label) {\n      return this;\n    }\n    this.label = label;\n    this.refreshLabel();\n    return this;\n  }\n  setLabelAlignment(alignment) {\n    const eGui = this.getGui();\n    const eGuiClassList = eGui.classList;\n    eGuiClassList.toggle(\"ag-label-align-left\", alignment === \"left\");\n    eGuiClassList.toggle(\"ag-label-align-right\", alignment === \"right\");\n    eGuiClassList.toggle(\"ag-label-align-top\", alignment === \"top\");\n    return this;\n  }\n  setLabelEllipsis(hasEllipsis) {\n    this.eLabel.classList.toggle(\"ag-label-ellipsis\", hasEllipsis);\n    return this;\n  }\n  setLabelWidth(width) {\n    if (this.label == null) {\n      return this;\n    }\n    _setElementWidth(this.eLabel, width);\n    return this;\n  }\n  setDisabled(disabled) {\n    disabled = !!disabled;\n    const element = this.getGui();\n    _setDisabled(element, disabled);\n    element.classList.toggle(\"ag-disabled\", disabled);\n    this.disabled = disabled;\n    return this;\n  }\n  isDisabled() {\n    return !!this.disabled;\n  }\n};\n\n// community-modules/core/src/widgets/agAbstractField.ts\nvar AgAbstractField = class extends AgAbstractLabel {\n  constructor(config, template, components, className) {\n    super(config, template, components);\n    this.className = className;\n  }\n  postConstruct() {\n    super.postConstruct();\n    const { width, value, onValueChange } = this.config;\n    if (width != null) {\n      this.setWidth(width);\n    }\n    if (value != null) {\n      this.setValue(value);\n    }\n    if (onValueChange != null) {\n      this.onValueChange(onValueChange);\n    }\n    if (this.className) {\n      this.addCssClass(this.className);\n    }\n    this.refreshAriaLabelledBy();\n  }\n  setLabel(label) {\n    super.setLabel(label);\n    this.refreshAriaLabelledBy();\n    return this;\n  }\n  refreshAriaLabelledBy() {\n    const ariaEl = this.getAriaElement();\n    const labelId = this.getLabelId();\n    const label = this.getLabel();\n    if (label == null || label == \"\" || _getAriaLabel(ariaEl) !== null) {\n      _setAriaLabelledBy(ariaEl, \"\");\n    } else {\n      _setAriaLabelledBy(ariaEl, labelId ?? \"\");\n    }\n  }\n  setAriaLabel(label) {\n    _setAriaLabel(this.getAriaElement(), label);\n    this.refreshAriaLabelledBy();\n    return this;\n  }\n  onValueChange(callbackFn) {\n    this.addManagedListeners(this, { fieldValueChanged: () => callbackFn(this.getValue()) });\n    return this;\n  }\n  getWidth() {\n    return this.getGui().clientWidth;\n  }\n  setWidth(width) {\n    _setFixedWidth(this.getGui(), width);\n    return this;\n  }\n  getPreviousValue() {\n    return this.previousValue;\n  }\n  getValue() {\n    return this.value;\n  }\n  setValue(value, silent) {\n    if (this.value === value) {\n      return this;\n    }\n    this.previousValue = this.value;\n    this.value = value;\n    if (!silent) {\n      this.dispatchLocalEvent({ type: \"fieldValueChanged\" });\n    }\n    return this;\n  }\n};\n\n// community-modules/core/src/widgets/agAbstractInputField.ts\nvar AgAbstractInputField = class extends AgAbstractField {\n  constructor(config, className, inputType = \"text\", displayFieldTag = \"input\") {\n    super(\n      config,\n      config?.template ?? /* html */\n      `\n            <div role=\"presentation\">\n                <div data-ref=\"eLabel\" class=\"ag-input-field-label\"></div>\n                <div data-ref=\"eWrapper\" class=\"ag-wrapper ag-input-wrapper\" role=\"presentation\">\n                    <${displayFieldTag} data-ref=\"eInput\" class=\"ag-input-field-input\"></${displayFieldTag}>\n                </div>\n            </div>`,\n      [],\n      className\n    );\n    this.inputType = inputType;\n    this.displayFieldTag = displayFieldTag;\n    this.eLabel = RefPlaceholder;\n    this.eWrapper = RefPlaceholder;\n    this.eInput = RefPlaceholder;\n  }\n  postConstruct() {\n    super.postConstruct();\n    this.setInputType();\n    this.eLabel.classList.add(`${this.className}-label`);\n    this.eWrapper.classList.add(`${this.className}-input-wrapper`);\n    this.eInput.classList.add(`${this.className}-input`);\n    this.addCssClass(\"ag-input-field\");\n    this.eInput.id = this.eInput.id || `ag-${this.getCompId()}-input`;\n    const { inputName, inputWidth } = this.config;\n    if (inputName != null) {\n      this.setInputName(inputName);\n    }\n    if (inputWidth != null) {\n      this.setInputWidth(inputWidth);\n    }\n    this.addInputListeners();\n    this.activateTabIndex([this.eInput]);\n  }\n  addInputListeners() {\n    this.addManagedElementListeners(this.eInput, { input: (e) => this.setValue(e.target.value) });\n  }\n  setInputType() {\n    if (this.displayFieldTag === \"input\") {\n      this.eInput.setAttribute(\"type\", this.inputType);\n    }\n  }\n  getInputElement() {\n    return this.eInput;\n  }\n  setInputWidth(width) {\n    _setElementWidth(this.eWrapper, width);\n    return this;\n  }\n  setInputName(name) {\n    this.getInputElement().setAttribute(\"name\", name);\n    return this;\n  }\n  getFocusableElement() {\n    return this.eInput;\n  }\n  setMaxLength(length) {\n    const eInput = this.eInput;\n    eInput.maxLength = length;\n    return this;\n  }\n  setInputPlaceholder(placeholder) {\n    _addOrRemoveAttribute(this.eInput, \"placeholder\", placeholder);\n    return this;\n  }\n  setInputAriaLabel(label) {\n    _setAriaLabel(this.eInput, label);\n    this.refreshAriaLabelledBy();\n    return this;\n  }\n  setDisabled(disabled) {\n    _setDisabled(this.eInput, disabled);\n    return super.setDisabled(disabled);\n  }\n  setAutoComplete(value) {\n    if (value === true) {\n      _addOrRemoveAttribute(this.eInput, \"autocomplete\", null);\n    } else {\n      const autoCompleteValue = typeof value === \"string\" ? value : \"off\";\n      _addOrRemoveAttribute(this.eInput, \"autocomplete\", autoCompleteValue);\n    }\n    return this;\n  }\n};\n\n// community-modules/core/src/widgets/agCheckbox.ts\nvar AgCheckbox = class extends AgAbstractInputField {\n  constructor(config, className = \"ag-checkbox\", inputType = \"checkbox\") {\n    super(config, className, inputType);\n    this.labelAlignment = \"right\";\n    this.selected = false;\n    this.readOnly = false;\n    this.passive = false;\n  }\n  postConstruct() {\n    super.postConstruct();\n    const { readOnly, passive } = this.config;\n    if (typeof readOnly === \"boolean\")\n      this.setReadOnly(readOnly);\n    if (typeof passive === \"boolean\")\n      this.setPassive(passive);\n  }\n  addInputListeners() {\n    this.addManagedElementListeners(this.eInput, { click: this.onCheckboxClick.bind(this) });\n    this.addManagedElementListeners(this.eLabel, { click: this.toggle.bind(this) });\n  }\n  getNextValue() {\n    return this.selected === void 0 ? true : !this.selected;\n  }\n  setPassive(passive) {\n    this.passive = passive;\n  }\n  isReadOnly() {\n    return this.readOnly;\n  }\n  setReadOnly(readOnly) {\n    this.eWrapper.classList.toggle(\"ag-disabled\", readOnly);\n    this.eInput.disabled = readOnly;\n    this.readOnly = readOnly;\n  }\n  setDisabled(disabled) {\n    this.eWrapper.classList.toggle(\"ag-disabled\", disabled);\n    return super.setDisabled(disabled);\n  }\n  toggle() {\n    if (this.eInput.disabled) {\n      return;\n    }\n    const previousValue = this.isSelected();\n    const nextValue = this.getNextValue();\n    if (this.passive) {\n      this.dispatchChange(nextValue, previousValue);\n    } else {\n      this.setValue(nextValue);\n    }\n  }\n  getValue() {\n    return this.isSelected();\n  }\n  setValue(value, silent) {\n    this.refreshSelectedClass(value);\n    this.setSelected(value, silent);\n    return this;\n  }\n  setName(name) {\n    const input = this.getInputElement();\n    input.name = name;\n    return this;\n  }\n  isSelected() {\n    return this.selected;\n  }\n  setSelected(selected, silent) {\n    if (this.isSelected() === selected) {\n      return;\n    }\n    this.previousValue = this.isSelected();\n    selected = this.selected = typeof selected === \"boolean\" ? selected : void 0;\n    this.eInput.checked = selected;\n    this.eInput.indeterminate = selected === void 0;\n    if (!silent) {\n      this.dispatchChange(this.selected, this.previousValue);\n    }\n  }\n  dispatchChange(selected, previousValue, event) {\n    this.dispatchLocalEvent({ type: \"fieldValueChanged\", selected, previousValue, event });\n    const input = this.getInputElement();\n    this.eventService.dispatchEvent({\n      type: \"checkboxChanged\",\n      id: input.id,\n      name: input.name,\n      selected,\n      previousValue\n    });\n  }\n  onCheckboxClick(e) {\n    if (this.passive || this.eInput.disabled) {\n      return;\n    }\n    const previousValue = this.isSelected();\n    const selected = this.selected = e.target.checked;\n    this.refreshSelectedClass(selected);\n    this.dispatchChange(selected, previousValue, e);\n  }\n  refreshSelectedClass(value) {\n    this.eWrapper.classList.toggle(\"ag-checked\", value === true);\n    this.eWrapper.classList.toggle(\"ag-indeterminate\", value == null);\n  }\n};\nvar AgCheckboxSelector = {\n  selector: \"AG-CHECKBOX\",\n  component: AgCheckbox\n};\n\n// community-modules/core/src/rendering/cellRenderers/checkboxCellRenderer.ts\nvar CheckboxCellRenderer = class extends Component {\n  constructor() {\n    super(\n      /* html*/\n      `\n            <div class=\"ag-cell-wrapper ag-checkbox-cell\" role=\"presentation\">\n                <ag-checkbox role=\"presentation\" data-ref=\"eCheckbox\"></ag-checkbox>\n            </div>`,\n      [AgCheckboxSelector]\n    );\n    this.eCheckbox = RefPlaceholder;\n  }\n  init(params) {\n    this.params = params;\n    this.updateCheckbox(params);\n    const inputEl = this.eCheckbox.getInputElement();\n    inputEl.setAttribute(\"tabindex\", \"-1\");\n    _setAriaLive(inputEl, \"polite\");\n    this.addManagedListeners(inputEl, {\n      click: (event) => {\n        _stopPropagationForAgGrid(event);\n        if (this.eCheckbox.isDisabled()) {\n          return;\n        }\n        const isSelected = this.eCheckbox.getValue();\n        this.onCheckboxChanged(isSelected);\n      },\n      dblclick: (event) => {\n        _stopPropagationForAgGrid(event);\n      }\n    });\n    this.addManagedElementListeners(this.params.eGridCell, {\n      keydown: (event) => {\n        if (event.key === KeyCode.SPACE && !this.eCheckbox.isDisabled()) {\n          if (this.params.eGridCell === this.gos.getActiveDomElement()) {\n            this.eCheckbox.toggle();\n          }\n          const isSelected = this.eCheckbox.getValue();\n          this.onCheckboxChanged(isSelected);\n          event.preventDefault();\n        }\n      }\n    });\n  }\n  refresh(params) {\n    this.params = params;\n    this.updateCheckbox(params);\n    return true;\n  }\n  updateCheckbox(params) {\n    let isSelected;\n    let displayed = true;\n    if (params.node.group && params.column) {\n      if (typeof params.value === \"boolean\") {\n        isSelected = params.value;\n      } else {\n        const colId = params.column.getColId();\n        if (colId.startsWith(GROUP_AUTO_COLUMN_ID)) {\n          isSelected = params.value == null || params.value === \"\" ? void 0 : params.value === \"true\";\n        } else if (params.node.aggData && params.node.aggData[colId] !== void 0) {\n          isSelected = params.value ?? void 0;\n        } else {\n          displayed = false;\n        }\n      }\n    } else {\n      isSelected = params.value ?? void 0;\n    }\n    if (!displayed) {\n      this.eCheckbox.setDisplayed(false);\n      return;\n    }\n    this.eCheckbox.setValue(isSelected);\n    const disabled = params.disabled != null ? params.disabled : !params.column?.isCellEditable(params.node);\n    this.eCheckbox.setDisabled(disabled);\n    const translate = this.localeService.getLocaleTextFunc();\n    const stateName = _getAriaCheckboxStateName(translate, isSelected);\n    const ariaLabel = disabled ? stateName : `${translate(\"ariaToggleCellValue\", \"Press SPACE to toggle cell value\")} (${stateName})`;\n    this.eCheckbox.setInputAriaLabel(ariaLabel);\n  }\n  onCheckboxChanged(isSelected) {\n    const { column, node, value } = this.params;\n    this.eventService.dispatchEvent({\n      type: \"cellEditingStarted\",\n      column,\n      colDef: column?.getColDef(),\n      data: node.data,\n      node,\n      rowIndex: node.rowIndex,\n      rowPinned: node.rowPinned,\n      value\n    });\n    const valueChanged = this.params.node.setDataValue(this.params.column, isSelected, \"edit\");\n    this.eventService.dispatchEvent({\n      type: \"cellEditingStopped\",\n      column,\n      colDef: column?.getColDef(),\n      data: node.data,\n      node,\n      rowIndex: node.rowIndex,\n      rowPinned: node.rowPinned,\n      value,\n      oldValue: value,\n      newValue: isSelected,\n      valueChanged\n    });\n  }\n};\n\n// community-modules/core/src/rendering/cellRenderers/loadingCellRenderer.ts\nvar LoadingCellRenderer = class extends Component {\n  constructor() {\n    super(\n      /* html */\n      `<div class=\"ag-loading\">\n            <span class=\"ag-loading-icon\" data-ref=\"eLoadingIcon\"></span>\n            <span class=\"ag-loading-text\" data-ref=\"eLoadingText\"></span>\n        </div>`\n    );\n    this.eLoadingIcon = RefPlaceholder;\n    this.eLoadingText = RefPlaceholder;\n  }\n  init(params) {\n    params.node.failedLoad ? this.setupFailed() : this.setupLoading();\n  }\n  setupFailed() {\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    this.eLoadingText.innerText = localeTextFunc(\"loadingError\", \"ERR\");\n  }\n  setupLoading() {\n    const eLoadingIcon = _createIconNoSpan(\"groupLoading\", this.gos, null);\n    if (eLoadingIcon) {\n      this.eLoadingIcon.appendChild(eLoadingIcon);\n    }\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    this.eLoadingText.innerText = localeTextFunc(\"loadingOoo\", \"Loading\");\n  }\n  refresh(params) {\n    return false;\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/rendering/cellRenderers/skeletonCellRenderer.ts\nvar SkeletonCellRenderer = class extends Component {\n  constructor() {\n    super(\n      /* html */\n      `<div class=\"ag-skeleton-container\"></div>`\n    );\n  }\n  init(params) {\n    const id = `ag-cell-skeleton-renderer-${this.getCompId()}`;\n    this.getGui().setAttribute(\"id\", id);\n    this.addDestroyFunc(() => _setAriaLabelledBy(params.eParentOfValue));\n    _setAriaLabelledBy(params.eParentOfValue, id);\n    params.node.failedLoad ? this.setupFailed() : this.setupLoading(params);\n  }\n  setupFailed() {\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    this.getGui().innerText = localeTextFunc(\"loadingError\", \"ERR\");\n    const ariaFailed = localeTextFunc(\"ariaSkeletonCellLoadingFailed\", \"Row failed to load\");\n    _setAriaLabel(this.getGui(), ariaFailed);\n  }\n  setupLoading(params) {\n    const eDocument = this.gos.getDocument();\n    const skeletonEffect = eDocument.createElement(\"div\");\n    skeletonEffect.classList.add(\"ag-skeleton-effect\");\n    const rowIndex = params.node.rowIndex;\n    if (rowIndex != null) {\n      const width = 75 + 25 * (rowIndex % 2 === 0 ? Math.sin(rowIndex) : Math.cos(rowIndex));\n      skeletonEffect.style.width = `${width}%`;\n    }\n    this.getGui().appendChild(skeletonEffect);\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    const ariaLoading = localeTextFunc(\"ariaSkeletonCellLoading\", \"Row data is loading\");\n    _setAriaLabel(this.getGui(), ariaLoading);\n  }\n  refresh(params) {\n    return false;\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/rendering/overlays/overlayComponent.ts\nvar OverlayComponent = class extends Component {\n  constructor() {\n    super();\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/rendering/overlays/loadingOverlayComponent.ts\nvar LoadingOverlayComponent = class extends OverlayComponent {\n  init() {\n    const customTemplate = _makeNull(this.gos.get(\"overlayLoadingTemplate\")?.trim());\n    this.setTemplate(\n      customTemplate ?? /* html */\n      `<span aria-live=\"polite\" aria-atomic=\"true\" class=\"ag-overlay-loading-center\"></span>`\n    );\n    if (!customTemplate) {\n      const localeTextFunc = this.localeService.getLocaleTextFunc();\n      setTimeout(() => {\n        this.getGui().textContent = localeTextFunc(\"loadingOoo\", \"Loading...\");\n      });\n    }\n  }\n};\n\n// community-modules/core/src/rendering/overlays/noRowsOverlayComponent.ts\nvar NoRowsOverlayComponent = class extends OverlayComponent {\n  init() {\n    const customTemplate = _makeNull(this.gos.get(\"overlayNoRowsTemplate\")?.trim());\n    this.setTemplate(customTemplate ?? /* html */\n    `<span class=\"ag-overlay-no-rows-center\"></span>`);\n    if (!customTemplate) {\n      const localeTextFunc = this.localeService.getLocaleTextFunc();\n      setTimeout(() => {\n        this.getGui().textContent = localeTextFunc(\"noRowsToShow\", \"No Rows To Show\");\n      });\n    }\n  }\n};\n\n// community-modules/core/src/widgets/popupComponent.ts\nvar PopupComponent = class extends Component {\n  isPopup() {\n    return true;\n  }\n  setParentComponent(container) {\n    container.addCssClass(\"ag-has-popup\");\n    super.setParentComponent(container);\n  }\n  destroy() {\n    const parentComp = this.parentComponent;\n    const hasParent = parentComp && parentComp.isAlive();\n    if (hasParent) {\n      parentComp.getGui().classList.remove(\"ag-has-popup\");\n    }\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/rendering/tooltipComponent.ts\nvar TooltipComponent = class extends PopupComponent {\n  constructor() {\n    super(\n      /* html */\n      `<div class=\"ag-tooltip\"></div>`\n    );\n  }\n  // will need to type params\n  init(params) {\n    const { value } = params;\n    this.getGui().textContent = _escapeString(value, true);\n  }\n};\n\n// community-modules/core/src/utils/fuzzyMatch.ts\nfunction _fuzzyCheckStrings(inputValues, validValues, allSuggestions) {\n  const fuzzyMatches = {};\n  const invalidInputs = inputValues.filter(\n    (inputValue) => !validValues.some((validValue) => validValue === inputValue)\n  );\n  if (invalidInputs.length > 0) {\n    invalidInputs.forEach(\n      (invalidInput) => fuzzyMatches[invalidInput] = _fuzzySuggestions(invalidInput, allSuggestions).values\n    );\n  }\n  return fuzzyMatches;\n}\nfunction _fuzzySuggestions(inputValue, allSuggestions, hideIrrelevant, filterByPercentageOfBestMatch) {\n  let thisSuggestions = allSuggestions.map((text, idx) => ({\n    value: text,\n    relevance: stringWeightedDistances(inputValue.toLowerCase(), text.toLocaleLowerCase()),\n    idx\n  }));\n  thisSuggestions.sort((a, b) => b.relevance - a.relevance);\n  if (hideIrrelevant) {\n    thisSuggestions = thisSuggestions.filter((suggestion) => suggestion.relevance !== 0);\n  }\n  if (thisSuggestions.length > 0 && filterByPercentageOfBestMatch && filterByPercentageOfBestMatch > 0) {\n    const bestMatch = thisSuggestions[0].relevance;\n    const limit = bestMatch * filterByPercentageOfBestMatch;\n    thisSuggestions = thisSuggestions.filter((suggestion) => limit - suggestion.relevance < 0);\n  }\n  const values = [];\n  const indices = [];\n  for (const suggestion of thisSuggestions) {\n    values.push(suggestion.value);\n    indices.push(suggestion.idx);\n  }\n  return { values, indices };\n}\nfunction stringWeightedDistances(str1, str2) {\n  const a = str1.replace(/\\s/g, \"\");\n  const b = str2.replace(/\\s/g, \"\");\n  let weight = 0;\n  let lastIndex = -1;\n  for (let i = 0; i < a.length; i++) {\n    const idx = b.indexOf(a[i], lastIndex + 1);\n    if (idx === -1) {\n      continue;\n    }\n    lastIndex = idx;\n    weight += 100 - lastIndex * 100 / 1e4 * 100;\n  }\n  return weight;\n}\n\n// community-modules/core/src/components/framework/userComponentRegistry.ts\nvar UserComponentRegistry = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"userComponentRegistry\";\n    this.agGridDefaults = {\n      //header\n      agColumnHeader: HeaderComp,\n      agColumnGroupHeader: HeaderGroupComp,\n      agSortIndicator: SortIndicatorComp,\n      // renderers\n      agAnimateShowChangeCellRenderer: AnimateShowChangeCellRenderer,\n      agAnimateSlideCellRenderer: AnimateSlideCellRenderer,\n      agLoadingCellRenderer: LoadingCellRenderer,\n      agSkeletonCellRenderer: SkeletonCellRenderer,\n      agCheckboxCellRenderer: CheckboxCellRenderer,\n      //overlays\n      agLoadingOverlay: LoadingOverlayComponent,\n      agNoRowsOverlay: NoRowsOverlayComponent,\n      // tooltips\n      agTooltipComponent: TooltipComponent\n    };\n    /** Used to provide useful error messages if a user is trying to use an enterprise component without loading the module. */\n    this.enterpriseAgDefaultCompsModule = {\n      agSetColumnFilter: \"@ag-grid-enterprise/set-filter\" /* SetFilterModule */,\n      agSetColumnFloatingFilter: \"@ag-grid-enterprise/set-filter\" /* SetFilterModule */,\n      agMultiColumnFilter: \"@ag-grid-enterprise/multi-filter\" /* MultiFilterModule */,\n      agMultiColumnFloatingFilter: \"@ag-grid-enterprise/multi-filter\" /* MultiFilterModule */,\n      agGroupColumnFilter: \"@ag-grid-enterprise/row-grouping\" /* RowGroupingModule */,\n      agGroupColumnFloatingFilter: \"@ag-grid-enterprise/row-grouping\" /* RowGroupingModule */,\n      agGroupCellRenderer: \"@ag-grid-enterprise/row-grouping\" /* RowGroupingModule */,\n      // Actually in enterprise core as used by MasterDetail too but best guess is they are grouping\n      agGroupRowRenderer: \"@ag-grid-enterprise/row-grouping\" /* RowGroupingModule */,\n      // Actually in enterprise core as used by MasterDetail but best guess is they are grouping\n      agRichSelect: \"@ag-grid-enterprise/rich-select\" /* RichSelectModule */,\n      agRichSelectCellEditor: \"@ag-grid-enterprise/rich-select\" /* RichSelectModule */,\n      agDetailCellRenderer: \"@ag-grid-enterprise/master-detail\" /* MasterDetailModule */,\n      agSparklineCellRenderer: \"@ag-grid-enterprise/sparklines\" /* SparklinesModule */\n    };\n    this.jsComps = {};\n  }\n  postConstruct() {\n    const comps = this.gos.get(\"components\");\n    if (comps != null) {\n      _iterateObject(comps, (key, component) => this.registerJsComponent(key, component));\n    }\n  }\n  registerDefaultComponent(name, component) {\n    this.agGridDefaults[name] = component;\n  }\n  registerJsComponent(name, component) {\n    this.jsComps[name] = component;\n  }\n  retrieve(propertyName, name) {\n    const createResult = (component, componentFromFramework) => ({\n      componentFromFramework,\n      component\n    });\n    const registeredViaFrameworkComp = this.getFrameworkOverrides().frameworkComponent(\n      name,\n      this.gos.get(\"components\")\n    );\n    if (registeredViaFrameworkComp != null) {\n      return createResult(registeredViaFrameworkComp, true);\n    }\n    const jsComponent = this.jsComps[name];\n    if (jsComponent) {\n      const isFwkComp = this.getFrameworkOverrides().isFrameworkComponent(jsComponent);\n      return createResult(jsComponent, isFwkComp);\n    }\n    const defaultComponent = this.agGridDefaults[name];\n    if (defaultComponent) {\n      return createResult(defaultComponent, false);\n    }\n    const moduleForComponent = this.enterpriseAgDefaultCompsModule[name];\n    if (moduleForComponent) {\n      ModuleRegistry.__assertRegistered(\n        moduleForComponent,\n        `AG Grid '${propertyName}' component: ${name}`,\n        this.gridId\n      );\n    } else {\n      _doOnce(() => {\n        this.warnAboutMissingComponent(propertyName, name);\n      }, \"MissingComp\" + name);\n    }\n    return null;\n  }\n  warnAboutMissingComponent(propertyName, componentName) {\n    const validComponents = [\n      // Don't include the old names / internals in potential suggestions\n      ...Object.keys(this.agGridDefaults).filter(\n        (k) => ![\"agCellEditor\", \"agGroupRowRenderer\", \"agSortIndicator\"].includes(k)\n      ),\n      ...Object.keys(this.jsComps)\n    ];\n    const suggestions = _fuzzySuggestions(componentName, validComponents, true, 0.8).values;\n    _warnOnce(\n      `Could not find '${componentName}' component. It was configured as \"${propertyName}: '${componentName}'\" but it wasn't found in the list of registered components.`\n    );\n    if (suggestions.length > 0) {\n      _warnOnce(`         Did you mean: [${suggestions.slice(0, 3)}]?`);\n    }\n    _warnOnce(\n      `If using a custom component check it has been registered as described in: ${this.getFrameworkOverrides().getDocLink(\"components/\")}`\n    );\n  }\n};\n\n// community-modules/core/src/utils/promise.ts\nvar AgPromise = class _AgPromise {\n  constructor(callback) {\n    this.status = 0 /* IN_PROGRESS */;\n    this.resolution = null;\n    this.waiters = [];\n    callback(\n      (value) => this.onDone(value),\n      (params) => this.onReject(params)\n    );\n  }\n  static all(promises) {\n    return promises.length ? new _AgPromise((resolve) => {\n      let remainingToResolve = promises.length;\n      const combinedValues = new Array(remainingToResolve);\n      promises.forEach((promise, index) => {\n        promise.then((value) => {\n          combinedValues[index] = value;\n          remainingToResolve--;\n          if (remainingToResolve === 0) {\n            resolve(combinedValues);\n          }\n        });\n      });\n    }) : _AgPromise.resolve();\n  }\n  static resolve(value = null) {\n    return new _AgPromise((resolve) => resolve(value));\n  }\n  then(func) {\n    return new _AgPromise((resolve) => {\n      if (this.status === 1 /* RESOLVED */) {\n        resolve(func(this.resolution));\n      } else {\n        this.waiters.push((value) => resolve(func(value)));\n      }\n    });\n  }\n  onDone(value) {\n    this.status = 1 /* RESOLVED */;\n    this.resolution = value;\n    this.waiters.forEach((waiter) => waiter(value));\n  }\n  onReject(params) {\n  }\n};\n\n// community-modules/core/src/components/framework/componentTypes.ts\nvar DateComponent = {\n  propertyName: \"dateComponent\",\n  cellRenderer: false\n};\nvar HeaderComponent = {\n  propertyName: \"headerComponent\",\n  cellRenderer: false\n};\nvar HeaderGroupComponent = {\n  propertyName: \"headerGroupComponent\",\n  cellRenderer: false\n};\nvar CellRendererComponent = {\n  propertyName: \"cellRenderer\",\n  cellRenderer: true\n};\nvar EditorRendererComponent = {\n  propertyName: \"cellRenderer\",\n  cellRenderer: false\n};\nvar LoadingCellRendererComponent = {\n  propertyName: \"loadingCellRenderer\",\n  cellRenderer: true\n};\nvar CellEditorComponent = {\n  propertyName: \"cellEditor\",\n  cellRenderer: false\n};\nvar InnerRendererComponent = {\n  propertyName: \"innerRenderer\",\n  cellRenderer: true\n};\nvar LoadingOverlayComponent2 = {\n  propertyName: \"loadingOverlayComponent\",\n  cellRenderer: false\n};\nvar NoRowsOverlayComponent2 = {\n  propertyName: \"noRowsOverlayComponent\",\n  cellRenderer: false\n};\nvar TooltipComponent2 = {\n  propertyName: \"tooltipComponent\",\n  cellRenderer: false\n};\nvar FilterComponent = {\n  propertyName: \"filter\",\n  cellRenderer: false\n};\nvar FloatingFilterComponent = {\n  propertyName: \"floatingFilterComponent\",\n  cellRenderer: false\n};\nvar ToolPanelComponent = {\n  propertyName: \"toolPanel\",\n  cellRenderer: false\n};\nvar StatusPanelComponent = {\n  propertyName: \"statusPanel\",\n  cellRenderer: false\n};\nvar FullWidth = {\n  propertyName: \"fullWidthCellRenderer\",\n  cellRenderer: true\n};\nvar FullWidthLoading = {\n  propertyName: \"loadingCellRenderer\",\n  cellRenderer: true\n};\nvar FullWidthGroup = {\n  propertyName: \"groupRowRenderer\",\n  cellRenderer: true\n};\nvar FullWidthDetail = {\n  propertyName: \"detailCellRenderer\",\n  cellRenderer: true\n};\nvar MenuItemComponent = {\n  propertyName: \"menuItem\",\n  cellRenderer: false\n};\n\n// community-modules/core/src/components/framework/userComponentFactory.ts\nvar UserComponentFactory = class _UserComponentFactory extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"userComponentFactory\";\n  }\n  wireBeans(beans) {\n    this.agComponentUtils = beans.agComponentUtils;\n    this.componentMetadataProvider = beans.componentMetadataProvider;\n    this.userComponentRegistry = beans.userComponentRegistry;\n    this.frameworkComponentWrapper = beans.frameworkComponentWrapper;\n    this.gridOptions = beans.gridOptions;\n  }\n  getHeaderCompDetails(colDef, params) {\n    return this.getCompDetails(colDef, HeaderComponent, \"agColumnHeader\", params);\n  }\n  getHeaderGroupCompDetails(params) {\n    const colGroupDef = params.columnGroup.getColGroupDef();\n    return this.getCompDetails(colGroupDef, HeaderGroupComponent, \"agColumnGroupHeader\", params);\n  }\n  // this one is unusual, as it can be LoadingCellRenderer, DetailCellRenderer, FullWidthCellRenderer or GroupRowRenderer.\n  // so we have to pass the type in.\n  getFullWidthCellRendererDetails(params) {\n    return this.getCompDetails(this.gridOptions, FullWidth, null, params, true);\n  }\n  getFullWidthLoadingCellRendererDetails(params) {\n    return this.getCompDetails(this.gridOptions, FullWidthLoading, \"agLoadingCellRenderer\", params, true);\n  }\n  getFullWidthGroupCellRendererDetails(params) {\n    return this.getCompDetails(this.gridOptions, FullWidthGroup, \"agGroupRowRenderer\", params, true);\n  }\n  getFullWidthDetailCellRendererDetails(params) {\n    return this.getCompDetails(this.gridOptions, FullWidthDetail, \"agDetailCellRenderer\", params, true);\n  }\n  // CELL RENDERER\n  getInnerRendererDetails(def, params) {\n    return this.getCompDetails(def, InnerRendererComponent, null, params);\n  }\n  getFullWidthGroupRowInnerCellRenderer(def, params) {\n    return this.getCompDetails(def, InnerRendererComponent, null, params);\n  }\n  getCellRendererDetails(def, params) {\n    return this.getCompDetails(def, CellRendererComponent, null, params);\n  }\n  getEditorRendererDetails(def, params) {\n    return this.getCompDetails(def, EditorRendererComponent, null, params);\n  }\n  getLoadingCellRendererDetails(def, params) {\n    return this.getCompDetails(def, LoadingCellRendererComponent, \"agSkeletonCellRenderer\", params, true);\n  }\n  // CELL EDITOR\n  getCellEditorDetails(def, params) {\n    return this.getCompDetails(def, CellEditorComponent, \"agCellEditor\", params, true);\n  }\n  // FILTER\n  getFilterDetails(def, params, defaultFilter) {\n    return this.getCompDetails(def, FilterComponent, defaultFilter, params, true);\n  }\n  getDateCompDetails(params) {\n    return this.getCompDetails(this.gridOptions, DateComponent, \"agDateInput\", params, true);\n  }\n  getLoadingOverlayCompDetails(params) {\n    return this.getCompDetails(this.gridOptions, LoadingOverlayComponent2, \"agLoadingOverlay\", params, true);\n  }\n  getNoRowsOverlayCompDetails(params) {\n    return this.getCompDetails(this.gridOptions, NoRowsOverlayComponent2, \"agNoRowsOverlay\", params, true);\n  }\n  getTooltipCompDetails(params) {\n    return this.getCompDetails(params.colDef, TooltipComponent2, \"agTooltipComponent\", params, true);\n  }\n  getSetFilterCellRendererDetails(def, params) {\n    return this.getCompDetails(def, CellRendererComponent, null, params);\n  }\n  getFloatingFilterCompDetails(def, params, defaultFloatingFilter) {\n    return this.getCompDetails(def, FloatingFilterComponent, defaultFloatingFilter, params);\n  }\n  getToolPanelCompDetails(toolPanelDef, params) {\n    return this.getCompDetails(toolPanelDef, ToolPanelComponent, null, params, true);\n  }\n  getStatusPanelCompDetails(def, params) {\n    return this.getCompDetails(def, StatusPanelComponent, null, params, true);\n  }\n  getMenuItemCompDetails(def, params) {\n    return this.getCompDetails(def, MenuItemComponent, \"agMenuItem\", params, true);\n  }\n  getCompDetails(defObject, type, defaultName, params, mandatory = false) {\n    const { propertyName, cellRenderer } = type;\n    let { compName, jsComp, fwComp, paramsFromSelector, popupFromSelector, popupPositionFromSelector } = _UserComponentFactory.getCompKeys(this.frameworkOverrides, defObject, type, params);\n    const lookupFromRegistry = (key) => {\n      const item = this.userComponentRegistry.retrieve(propertyName, key);\n      if (item) {\n        jsComp = !item.componentFromFramework ? item.component : void 0;\n        fwComp = item.componentFromFramework ? item.component : void 0;\n      }\n    };\n    if (compName != null) {\n      lookupFromRegistry(compName);\n    }\n    if (jsComp == null && fwComp == null && defaultName != null) {\n      lookupFromRegistry(defaultName);\n    }\n    if (jsComp && cellRenderer && !this.agComponentUtils.doesImplementIComponent(jsComp)) {\n      jsComp = this.agComponentUtils.adaptFunction(propertyName, jsComp);\n    }\n    if (!jsComp && !fwComp) {\n      if (mandatory) {\n        _errorOnce(`Could not find component ${compName}, did you forget to configure this component?`);\n      }\n      return;\n    }\n    const paramsMerged = this.mergeParamsWithApplicationProvidedParams(defObject, type, params, paramsFromSelector);\n    const componentFromFramework = jsComp == null;\n    const componentClass = jsComp ? jsComp : fwComp;\n    return {\n      componentFromFramework,\n      componentClass,\n      params: paramsMerged,\n      type,\n      popupFromSelector,\n      popupPositionFromSelector,\n      newAgStackInstance: () => this.newAgStackInstance(componentClass, componentFromFramework, paramsMerged, type)\n    };\n  }\n  static getCompKeys(frameworkOverrides, defObject, type, params) {\n    const { propertyName } = type;\n    let compName;\n    let jsComp;\n    let fwComp;\n    let paramsFromSelector;\n    let popupFromSelector;\n    let popupPositionFromSelector;\n    if (defObject) {\n      const defObjectAny = defObject;\n      const selectorFunc = defObjectAny[propertyName + \"Selector\"];\n      const selectorRes = selectorFunc ? selectorFunc(params) : null;\n      const assignComp = (providedJsComp) => {\n        if (typeof providedJsComp === \"string\") {\n          compName = providedJsComp;\n        } else if (providedJsComp != null && providedJsComp !== true) {\n          const isFwkComp = frameworkOverrides.isFrameworkComponent(providedJsComp);\n          if (isFwkComp) {\n            fwComp = providedJsComp;\n          } else {\n            jsComp = providedJsComp;\n          }\n        }\n      };\n      if (selectorRes) {\n        assignComp(selectorRes.component);\n        paramsFromSelector = selectorRes.params;\n        popupFromSelector = selectorRes.popup;\n        popupPositionFromSelector = selectorRes.popupPosition;\n      } else {\n        assignComp(defObjectAny[propertyName]);\n      }\n    }\n    return { compName, jsComp, fwComp, paramsFromSelector, popupFromSelector, popupPositionFromSelector };\n  }\n  newAgStackInstance(ComponentClass, componentFromFramework, params, type) {\n    const propertyName = type.propertyName;\n    const jsComponent = !componentFromFramework;\n    let instance;\n    if (jsComponent) {\n      instance = new ComponentClass();\n    } else {\n      const thisComponentConfig = this.componentMetadataProvider.retrieve(propertyName);\n      instance = this.frameworkComponentWrapper.wrap(\n        ComponentClass,\n        thisComponentConfig.mandatoryMethodList,\n        thisComponentConfig.optionalMethodList,\n        type\n      );\n    }\n    const deferredInit = this.initComponent(instance, params);\n    if (deferredInit == null) {\n      return AgPromise.resolve(instance);\n    }\n    return deferredInit.then(() => instance);\n  }\n  // used by Floating Filter\n  mergeParamsWithApplicationProvidedParams(defObject, type, paramsFromGrid, paramsFromSelector = null) {\n    const params = this.gos.getGridCommonParams();\n    _mergeDeep(params, paramsFromGrid);\n    const defObjectAny = defObject;\n    const userParams = defObjectAny && defObjectAny[type.propertyName + \"Params\"];\n    if (typeof userParams === \"function\") {\n      const userParamsFromFunc = userParams(paramsFromGrid);\n      _mergeDeep(params, userParamsFromFunc);\n    } else if (typeof userParams === \"object\") {\n      _mergeDeep(params, userParams);\n    }\n    _mergeDeep(params, paramsFromSelector);\n    return params;\n  }\n  initComponent(component, params) {\n    this.createBean(component);\n    if (component.init == null) {\n      return;\n    }\n    return component.init(params);\n  }\n};\n\n// community-modules/core/src/components/framework/unwrapUserComp.ts\nfunction _unwrapUserComp(comp) {\n  const compAsAny = comp;\n  const isProxy = compAsAny != null && compAsAny.getFrameworkComponentInstance != null;\n  return isProxy ? compAsAny.getFrameworkComponentInstance() : comp;\n}\n\n// community-modules/core/src/context/genericContext.ts\nvar GenericContext = class {\n  constructor(params) {\n    this.beans = {};\n    this.createdBeans = [];\n    this.destroyed = false;\n    if (!params || !params.beanClasses) {\n      return;\n    }\n    this.beanDestroyComparator = params.beanDestroyComparator;\n    this.init(params);\n  }\n  init(params) {\n    Object.entries(params.providedBeanInstances).forEach(([beanName, beanInstance]) => {\n      this.beans[beanName] = beanInstance;\n    });\n    params.beanClasses.forEach((BeanClass) => {\n      const instance = new BeanClass();\n      if (instance.beanName) {\n        this.beans[instance.beanName] = instance;\n      } else {\n        console.error(`Bean ${BeanClass.name} is missing beanName`);\n      }\n      this.createdBeans.push(instance);\n    });\n    params.derivedBeans?.forEach((beanFunc) => {\n      const { beanName, bean } = beanFunc(this);\n      this.beans[beanName] = bean;\n      this.createdBeans.push(bean);\n    });\n    if (params.beanInitComparator) {\n      this.createdBeans.sort(params.beanInitComparator);\n    }\n    this.initBeans(this.createdBeans);\n  }\n  getBeanInstances() {\n    return Object.values(this.beans);\n  }\n  createBean(bean, afterPreCreateCallback) {\n    if (!bean) {\n      throw Error(`Can't wire to bean since it is null`);\n    }\n    this.initBeans([bean], afterPreCreateCallback);\n    return bean;\n  }\n  initBeans(beanInstances, afterPreCreateCallback) {\n    beanInstances.forEach((instance) => {\n      instance.preWireBeans?.(this.beans);\n      instance.wireBeans?.(this.beans);\n    });\n    beanInstances.forEach((instance) => instance.preConstruct?.());\n    if (afterPreCreateCallback) {\n      beanInstances.forEach(afterPreCreateCallback);\n    }\n    beanInstances.forEach((instance) => instance.postConstruct?.());\n  }\n  getBeans() {\n    return this.beans;\n  }\n  getBean(name) {\n    return this.beans[name];\n  }\n  destroy() {\n    if (this.destroyed) {\n      return;\n    }\n    this.destroyed = true;\n    const beanInstances = this.getBeanInstances();\n    if (this.beanDestroyComparator) {\n      beanInstances.sort(this.beanDestroyComparator);\n    }\n    this.destroyBeans(beanInstances);\n    this.beans = {};\n    this.createdBeans = [];\n  }\n  /**\n   * Destroys a bean and returns undefined to support destruction and clean up in a single line.\n   * this.dateComp = this.context.destroyBean(this.dateComp);\n   */\n  destroyBean(bean) {\n    bean?.destroy?.();\n  }\n  /**\n   * Destroys an array of beans and returns an empty array to support destruction and clean up in a single line.\n   * this.dateComps = this.context.destroyBeans(this.dateComps);\n   */\n  destroyBeans(beans) {\n    if (beans) {\n      for (let i = 0; i < beans.length; i++) {\n        this.destroyBean(beans[i]);\n      }\n    }\n    return [];\n  }\n  isDestroyed() {\n    return this.destroyed;\n  }\n};\n\n// community-modules/core/src/context/context.ts\nvar Context = class extends GenericContext {\n  init(params) {\n    this.gridId = params.gridId;\n    this.beans.context = this;\n    super.init(params);\n  }\n  destroy() {\n    super.destroy();\n    ModuleRegistry.__unRegisterGridModules(this.gridId);\n  }\n  getGridId() {\n    return this.gridId;\n  }\n};\n\n// community-modules/core/src/interfaces/iExcelCreator.ts\nvar ExcelFactoryMode = /* @__PURE__ */ ((ExcelFactoryMode2) => {\n  ExcelFactoryMode2[ExcelFactoryMode2[\"SINGLE_SHEET\"] = 0] = \"SINGLE_SHEET\";\n  ExcelFactoryMode2[ExcelFactoryMode2[\"MULTI_SHEET\"] = 1] = \"MULTI_SHEET\";\n  return ExcelFactoryMode2;\n})(ExcelFactoryMode || {});\n\n// community-modules/core/src/constants/direction.ts\nvar VerticalDirection = /* @__PURE__ */ ((VerticalDirection2) => {\n  VerticalDirection2[VerticalDirection2[\"Up\"] = 0] = \"Up\";\n  VerticalDirection2[VerticalDirection2[\"Down\"] = 1] = \"Down\";\n  return VerticalDirection2;\n})(VerticalDirection || {});\nvar HorizontalDirection = /* @__PURE__ */ ((HorizontalDirection2) => {\n  HorizontalDirection2[HorizontalDirection2[\"Left\"] = 0] = \"Left\";\n  HorizontalDirection2[HorizontalDirection2[\"Right\"] = 1] = \"Right\";\n  return HorizontalDirection2;\n})(HorizontalDirection || {});\n\n// community-modules/core/src/dragAndDrop/dragAndDropService.ts\nvar DragSourceType = /* @__PURE__ */ ((DragSourceType2) => {\n  DragSourceType2[DragSourceType2[\"ToolPanel\"] = 0] = \"ToolPanel\";\n  DragSourceType2[DragSourceType2[\"HeaderCell\"] = 1] = \"HeaderCell\";\n  DragSourceType2[DragSourceType2[\"RowDrag\"] = 2] = \"RowDrag\";\n  DragSourceType2[DragSourceType2[\"ChartPanel\"] = 3] = \"ChartPanel\";\n  DragSourceType2[DragSourceType2[\"AdvancedFilterBuilder\"] = 4] = \"AdvancedFilterBuilder\";\n  return DragSourceType2;\n})(DragSourceType || {});\nvar GHOST_TEMPLATE = (\n  /* html */\n  `<div class=\"ag-dnd-ghost ag-unselectable\">\n<span class=\"ag-dnd-ghost-icon ag-shake-left-to-right\"></span>\n<div class=\"ag-dnd-ghost-label\"></div>\n</div>`\n);\nvar DragAndDropService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"dragAndDropService\";\n    this.dragSourceAndParamsList = [];\n    this.dropTargets = [];\n  }\n  wireBeans(beans) {\n    this.dragService = beans.dragService;\n    this.mouseEventService = beans.mouseEventService;\n    this.environment = beans.environment;\n  }\n  postConstruct() {\n    const create = (iconName) => _createIcon(iconName, this.gos, null);\n    this.dropIconMap = {\n      pinned: create(\"columnMovePin\"),\n      hide: create(\"columnMoveHide\"),\n      move: create(\"columnMoveMove\"),\n      left: create(\"columnMoveLeft\"),\n      right: create(\"columnMoveRight\"),\n      group: create(\"columnMoveGroup\"),\n      aggregate: create(\"columnMoveValue\"),\n      pivot: create(\"columnMovePivot\"),\n      notAllowed: create(\"dropNotAllowed\")\n    };\n  }\n  addDragSource(dragSource, allowTouch = false) {\n    const params = {\n      eElement: dragSource.eElement,\n      dragStartPixels: dragSource.dragStartPixels,\n      onDragStart: this.onDragStart.bind(this, dragSource),\n      onDragStop: this.onDragStop.bind(this),\n      onDragging: this.onDragging.bind(this),\n      includeTouch: allowTouch\n    };\n    this.dragSourceAndParamsList.push({ params, dragSource });\n    this.dragService.addDragSource(params);\n  }\n  removeDragSource(dragSource) {\n    const sourceAndParams = this.dragSourceAndParamsList.find((item) => item.dragSource === dragSource);\n    if (sourceAndParams) {\n      this.dragService.removeDragSource(sourceAndParams.params);\n      _removeFromArray(this.dragSourceAndParamsList, sourceAndParams);\n    }\n  }\n  destroy() {\n    this.dragSourceAndParamsList.forEach(\n      (sourceAndParams) => this.dragService.removeDragSource(sourceAndParams.params)\n    );\n    this.dragSourceAndParamsList.length = 0;\n    this.dropTargets.length = 0;\n    super.destroy();\n  }\n  nudge() {\n    if (this.dragging) {\n      this.onDragging(this.eventLastTime, true);\n    }\n  }\n  onDragStart(dragSource, mouseEvent) {\n    this.dragging = true;\n    this.dragSource = dragSource;\n    this.eventLastTime = mouseEvent;\n    this.dragItem = this.dragSource.getDragItem();\n    this.dragSource.onDragStarted?.();\n    this.createGhost();\n  }\n  onDragStop(mouseEvent) {\n    this.eventLastTime = null;\n    this.dragging = false;\n    this.dragSource.onDragStopped?.();\n    if (this.lastDropTarget?.onDragStop) {\n      const draggingEvent = this.createDropTargetEvent(this.lastDropTarget, mouseEvent, null, null, false);\n      this.lastDropTarget.onDragStop(draggingEvent);\n    }\n    this.lastDropTarget = void 0;\n    this.dragItem = null;\n    this.removeGhost();\n  }\n  onDragging(mouseEvent, fromNudge) {\n    const hDirection = this.getHorizontalDirection(mouseEvent);\n    const vDirection = this.getVerticalDirection(mouseEvent);\n    this.eventLastTime = mouseEvent;\n    this.positionGhost(mouseEvent);\n    const validDropTargets = this.dropTargets.filter((target) => this.isMouseOnDropTarget(mouseEvent, target));\n    const dropTarget = this.findCurrentDropTarget(mouseEvent, validDropTargets);\n    if (dropTarget !== this.lastDropTarget) {\n      this.leaveLastTargetIfExists(mouseEvent, hDirection, vDirection, fromNudge);\n      if (this.lastDropTarget !== null && dropTarget === null) {\n        this.dragSource.onGridExit?.(this.dragItem);\n      }\n      if (this.lastDropTarget === null && dropTarget !== null) {\n        this.dragSource.onGridEnter?.(this.dragItem);\n      }\n      this.enterDragTargetIfExists(dropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n      this.lastDropTarget = dropTarget;\n    } else if (dropTarget && dropTarget.onDragging) {\n      const draggingEvent = this.createDropTargetEvent(dropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n      dropTarget.onDragging(draggingEvent);\n    }\n  }\n  getAllContainersFromDropTarget(dropTarget) {\n    const secondaryContainers = dropTarget.getSecondaryContainers ? dropTarget.getSecondaryContainers() : null;\n    const containers = [[dropTarget.getContainer()]];\n    return secondaryContainers ? containers.concat(secondaryContainers) : containers;\n  }\n  allContainersIntersect(mouseEvent, containers) {\n    for (const container of containers) {\n      const { width, height, left, right, top, bottom } = container.getBoundingClientRect();\n      if (width === 0 || height === 0) {\n        return false;\n      }\n      const horizontalFit = mouseEvent.clientX >= left && mouseEvent.clientX < right;\n      const verticalFit = mouseEvent.clientY >= top && mouseEvent.clientY < bottom;\n      if (!horizontalFit || !verticalFit) {\n        return false;\n      }\n    }\n    return true;\n  }\n  // checks if the mouse is on the drop target. it checks eContainer and eSecondaryContainers\n  isMouseOnDropTarget(mouseEvent, dropTarget) {\n    const allContainersFromDropTarget = this.getAllContainersFromDropTarget(dropTarget);\n    let mouseOverTarget = false;\n    for (const currentContainers of allContainersFromDropTarget) {\n      if (this.allContainersIntersect(mouseEvent, currentContainers)) {\n        mouseOverTarget = true;\n        break;\n      }\n    }\n    const { eElement, type } = this.dragSource;\n    if (dropTarget.targetContainsSource && !dropTarget.getContainer().contains(eElement)) {\n      return false;\n    }\n    return mouseOverTarget && dropTarget.isInterestedIn(type, eElement);\n  }\n  findCurrentDropTarget(mouseEvent, validDropTargets) {\n    const len = validDropTargets.length;\n    if (len === 0) {\n      return null;\n    }\n    if (len === 1) {\n      return validDropTargets[0];\n    }\n    const rootNode = this.gos.getRootNode();\n    const elementStack = rootNode.elementsFromPoint(mouseEvent.clientX, mouseEvent.clientY);\n    for (const el of elementStack) {\n      for (const dropTarget of validDropTargets) {\n        const containers = _flatten(this.getAllContainersFromDropTarget(dropTarget));\n        if (containers.indexOf(el) !== -1) {\n          return dropTarget;\n        }\n      }\n    }\n    return null;\n  }\n  enterDragTargetIfExists(dropTarget, mouseEvent, hDirection, vDirection, fromNudge) {\n    if (!dropTarget) {\n      return;\n    }\n    if (dropTarget.onDragEnter) {\n      const dragEnterEvent = this.createDropTargetEvent(\n        dropTarget,\n        mouseEvent,\n        hDirection,\n        vDirection,\n        fromNudge\n      );\n      dropTarget.onDragEnter(dragEnterEvent);\n    }\n    this.setGhostIcon(dropTarget.getIconName ? dropTarget.getIconName() : null);\n  }\n  leaveLastTargetIfExists(mouseEvent, hDirection, vDirection, fromNudge) {\n    if (!this.lastDropTarget) {\n      return;\n    }\n    if (this.lastDropTarget.onDragLeave) {\n      const dragLeaveEvent = this.createDropTargetEvent(\n        this.lastDropTarget,\n        mouseEvent,\n        hDirection,\n        vDirection,\n        fromNudge\n      );\n      this.lastDropTarget.onDragLeave(dragLeaveEvent);\n    }\n    this.setGhostIcon(null);\n  }\n  addDropTarget(dropTarget) {\n    this.dropTargets.push(dropTarget);\n  }\n  removeDropTarget(dropTarget) {\n    this.dropTargets = this.dropTargets.filter((target) => target.getContainer() !== dropTarget.getContainer());\n  }\n  hasExternalDropZones() {\n    return this.dropTargets.some((zones) => zones.external);\n  }\n  findExternalZone(params) {\n    const externalTargets = this.dropTargets.filter((target) => target.external);\n    return externalTargets.find((zone) => zone.getContainer() === params.getContainer()) || null;\n  }\n  getHorizontalDirection(event) {\n    const clientX = this.eventLastTime && this.eventLastTime.clientX;\n    const eClientX = event.clientX;\n    if (clientX === eClientX) {\n      return null;\n    }\n    return clientX > eClientX ? 0 /* Left */ : 1 /* Right */;\n  }\n  getVerticalDirection(event) {\n    const clientY = this.eventLastTime && this.eventLastTime.clientY;\n    const eClientY = event.clientY;\n    if (clientY === eClientY) {\n      return null;\n    }\n    return clientY > eClientY ? 0 /* Up */ : 1 /* Down */;\n  }\n  createDropTargetEvent(dropTarget, event, hDirection, vDirection, fromNudge) {\n    const dropZoneTarget = dropTarget.getContainer();\n    const rect = dropZoneTarget.getBoundingClientRect();\n    const { dragItem, dragSource } = this;\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    return this.gos.addGridCommonParams({\n      event,\n      x,\n      y,\n      vDirection,\n      hDirection,\n      dragSource,\n      fromNudge,\n      dragItem,\n      dropZoneTarget\n    });\n  }\n  positionGhost(event) {\n    const ghost = this.eGhost;\n    if (!ghost) {\n      return;\n    }\n    const ghostRect = ghost.getBoundingClientRect();\n    const ghostHeight = ghostRect.height;\n    const browserWidth = _getBodyWidth() - 2;\n    const browserHeight = _getBodyHeight() - 2;\n    const offsetParentSize = _getElementRectWithOffset(ghost.offsetParent);\n    const { clientY, clientX } = event;\n    let top = clientY - offsetParentSize.top - ghostHeight / 2;\n    let left = clientX - offsetParentSize.left - 10;\n    const eDocument = this.gos.getDocument();\n    const win = eDocument.defaultView || window;\n    const windowScrollY = win.pageYOffset || eDocument.documentElement.scrollTop;\n    const windowScrollX = win.pageXOffset || eDocument.documentElement.scrollLeft;\n    if (browserWidth > 0 && left + ghost.clientWidth > browserWidth + windowScrollX) {\n      left = browserWidth + windowScrollX - ghost.clientWidth;\n    }\n    if (left < 0) {\n      left = 0;\n    }\n    if (browserHeight > 0 && top + ghost.clientHeight > browserHeight + windowScrollY) {\n      top = browserHeight + windowScrollY - ghost.clientHeight;\n    }\n    if (top < 0) {\n      top = 0;\n    }\n    ghost.style.left = `${left}px`;\n    ghost.style.top = `${top}px`;\n  }\n  removeGhost() {\n    if (this.eGhost && this.eGhostParent) {\n      this.eGhostParent.removeChild(this.eGhost);\n    }\n    this.eGhost = null;\n  }\n  createGhost() {\n    this.eGhost = _loadTemplate(GHOST_TEMPLATE);\n    this.mouseEventService.stampTopLevelGridCompWithGridInstance(this.eGhost);\n    this.environment.applyThemeClasses(this.eGhost);\n    this.eGhostIcon = this.eGhost.querySelector(\".ag-dnd-ghost-icon\");\n    this.setGhostIcon(null);\n    const eText = this.eGhost.querySelector(\".ag-dnd-ghost-label\");\n    let dragItemName = this.dragSource.dragItemName;\n    if (_isFunction(dragItemName)) {\n      dragItemName = dragItemName();\n    }\n    eText.innerHTML = _escapeString(dragItemName) || \"\";\n    this.eGhost.style.height = \"25px\";\n    this.eGhost.style.top = \"20px\";\n    this.eGhost.style.left = \"20px\";\n    const eDocument = this.gos.getDocument();\n    let rootNode = null;\n    let targetEl = null;\n    try {\n      rootNode = eDocument.fullscreenElement;\n    } catch (e) {\n    } finally {\n      if (!rootNode) {\n        rootNode = this.gos.getRootNode();\n      }\n      const body = rootNode.querySelector(\"body\");\n      if (body) {\n        targetEl = body;\n      } else if (rootNode instanceof ShadowRoot) {\n        targetEl = rootNode;\n      } else if (rootNode instanceof Document) {\n        targetEl = rootNode?.documentElement;\n      } else {\n        targetEl = rootNode;\n      }\n    }\n    this.eGhostParent = targetEl;\n    if (!this.eGhostParent) {\n      _warnOnce(\"Could not find document body, it is needed for dragging columns\");\n    } else {\n      this.eGhostParent.appendChild(this.eGhost);\n    }\n  }\n  setGhostIcon(iconName, shake = false) {\n    _clearElement(this.eGhostIcon);\n    let eIcon = null;\n    if (!iconName) {\n      iconName = this.dragSource.getDefaultIconName ? this.dragSource.getDefaultIconName() : \"notAllowed\";\n    }\n    eIcon = this.dropIconMap[iconName];\n    this.eGhostIcon.classList.toggle(\"ag-shake-left-to-right\", shake);\n    if (eIcon === this.dropIconMap[\"hide\"] && this.gos.get(\"suppressDragLeaveHidesColumns\")) {\n      return;\n    }\n    if (eIcon) {\n      this.eGhostIcon.appendChild(eIcon);\n    }\n  }\n};\n\n// community-modules/core/src/autoScrollService.ts\nvar AutoScrollService = class {\n  constructor(params) {\n    this.tickingInterval = null;\n    this.onScrollCallback = null;\n    this.scrollContainer = params.scrollContainer;\n    this.scrollHorizontally = params.scrollAxis.indexOf(\"x\") !== -1;\n    this.scrollVertically = params.scrollAxis.indexOf(\"y\") !== -1;\n    this.scrollByTick = params.scrollByTick != null ? params.scrollByTick : 20;\n    if (params.onScrollCallback) {\n      this.onScrollCallback = params.onScrollCallback;\n    }\n    if (this.scrollVertically) {\n      this.getVerticalPosition = params.getVerticalPosition;\n      this.setVerticalPosition = params.setVerticalPosition;\n    }\n    if (this.scrollHorizontally) {\n      this.getHorizontalPosition = params.getHorizontalPosition;\n      this.setHorizontalPosition = params.setHorizontalPosition;\n    }\n    this.shouldSkipVerticalScroll = params.shouldSkipVerticalScroll || (() => false);\n    this.shouldSkipHorizontalScroll = params.shouldSkipHorizontalScroll || (() => false);\n  }\n  check(mouseEvent, forceSkipVerticalScroll = false) {\n    const skipVerticalScroll = forceSkipVerticalScroll || this.shouldSkipVerticalScroll();\n    if (skipVerticalScroll && this.shouldSkipHorizontalScroll()) {\n      return;\n    }\n    const rect = this.scrollContainer.getBoundingClientRect();\n    const scrollTick = this.scrollByTick;\n    this.tickLeft = mouseEvent.clientX < rect.left + scrollTick;\n    this.tickRight = mouseEvent.clientX > rect.right - scrollTick;\n    this.tickUp = mouseEvent.clientY < rect.top + scrollTick && !skipVerticalScroll;\n    this.tickDown = mouseEvent.clientY > rect.bottom - scrollTick && !skipVerticalScroll;\n    if (this.tickLeft || this.tickRight || this.tickUp || this.tickDown) {\n      this.ensureTickingStarted();\n    } else {\n      this.ensureCleared();\n    }\n  }\n  ensureTickingStarted() {\n    if (this.tickingInterval === null) {\n      this.tickingInterval = window.setInterval(this.doTick.bind(this), 100);\n      this.tickCount = 0;\n    }\n  }\n  doTick() {\n    this.tickCount++;\n    const tickAmount = this.tickCount > 20 ? 200 : this.tickCount > 10 ? 80 : 40;\n    if (this.scrollVertically) {\n      const vScrollPosition = this.getVerticalPosition();\n      if (this.tickUp) {\n        this.setVerticalPosition(vScrollPosition - tickAmount);\n      }\n      if (this.tickDown) {\n        this.setVerticalPosition(vScrollPosition + tickAmount);\n      }\n    }\n    if (this.scrollHorizontally) {\n      const hScrollPosition = this.getHorizontalPosition();\n      if (this.tickLeft) {\n        this.setHorizontalPosition(hScrollPosition - tickAmount);\n      }\n      if (this.tickRight) {\n        this.setHorizontalPosition(hScrollPosition + tickAmount);\n      }\n    }\n    if (this.onScrollCallback) {\n      this.onScrollCallback();\n    }\n  }\n  ensureCleared() {\n    if (this.tickingInterval) {\n      window.clearInterval(this.tickingInterval);\n      this.tickingInterval = null;\n    }\n  }\n};\n\n// community-modules/core/src/interfaces/iRowNode.ts\nvar RowHighlightPosition = /* @__PURE__ */ ((RowHighlightPosition2) => {\n  RowHighlightPosition2[RowHighlightPosition2[\"Above\"] = 0] = \"Above\";\n  RowHighlightPosition2[RowHighlightPosition2[\"Below\"] = 1] = \"Below\";\n  return RowHighlightPosition2;\n})(RowHighlightPosition || {});\n\n// community-modules/core/src/gridBodyComp/rowDragFeature.ts\nvar RowDragFeature = class extends BeanStub {\n  wireBeans(beans) {\n    this.dragAndDropService = beans.dragAndDropService;\n    this.rowModel = beans.rowModel;\n    this.pageBoundsService = beans.pageBoundsService;\n    this.focusService = beans.focusService;\n    this.sortController = beans.sortController;\n    this.filterManager = beans.filterManager;\n    this.selectionService = beans.selectionService;\n    this.mouseEventService = beans.mouseEventService;\n    this.ctrlsService = beans.ctrlsService;\n    this.funcColsService = beans.funcColsService;\n    this.rangeService = beans.rangeService;\n  }\n  constructor(eContainer) {\n    super();\n    this.eContainer = eContainer;\n  }\n  postConstruct() {\n    if (this.gos.isRowModelType(\"clientSide\")) {\n      this.clientSideRowModel = this.rowModel;\n    }\n    this.ctrlsService.whenReady((p) => {\n      const gridBodyCon = p.gridBodyCtrl;\n      this.autoScrollService = new AutoScrollService({\n        scrollContainer: gridBodyCon.getBodyViewportElement(),\n        scrollAxis: \"y\",\n        getVerticalPosition: () => gridBodyCon.getScrollFeature().getVScrollPosition().top,\n        setVerticalPosition: (position) => gridBodyCon.getScrollFeature().setVerticalScrollPosition(position),\n        onScrollCallback: () => {\n          this.onDragging(this.lastDraggingEvent);\n        }\n      });\n    });\n  }\n  getContainer() {\n    return this.eContainer;\n  }\n  isInterestedIn(type) {\n    return type === 2 /* RowDrag */;\n  }\n  getIconName() {\n    const managedDrag = this.gos.get(\"rowDragManaged\");\n    if (managedDrag && this.shouldPreventRowMove()) {\n      return \"notAllowed\";\n    }\n    return \"move\";\n  }\n  shouldPreventRowMove() {\n    const rowGroupCols = this.funcColsService.getRowGroupColumns();\n    if (rowGroupCols.length) {\n      return true;\n    }\n    const isFilterPresent = this.filterManager?.isAnyFilterPresent();\n    if (isFilterPresent) {\n      return true;\n    }\n    const isSortActive = this.sortController.isSortActive();\n    if (isSortActive) {\n      return true;\n    }\n    return false;\n  }\n  getRowNodes(draggingEvent) {\n    if (!this.isFromThisGrid(draggingEvent)) {\n      return draggingEvent.dragItem.rowNodes || [];\n    }\n    const currentNode = draggingEvent.dragItem.rowNode;\n    const isRowDragMultiRow = this.gos.get(\"rowDragMultiRow\");\n    if (isRowDragMultiRow) {\n      const selectedNodes = [...this.selectionService.getSelectedNodes()].sort((a, b) => {\n        if (a.rowIndex == null || b.rowIndex == null) {\n          return 0;\n        }\n        return this.getRowIndexNumber(a) - this.getRowIndexNumber(b);\n      });\n      if (selectedNodes.indexOf(currentNode) !== -1) {\n        return selectedNodes;\n      }\n    }\n    return [currentNode];\n  }\n  onDragEnter(draggingEvent) {\n    draggingEvent.dragItem.rowNodes = this.getRowNodes(draggingEvent);\n    this.dispatchGridEvent(\"rowDragEnter\", draggingEvent);\n    this.getRowNodes(draggingEvent).forEach((rowNode) => {\n      rowNode.setDragging(true);\n    });\n    this.onEnterOrDragging(draggingEvent);\n  }\n  onDragging(draggingEvent) {\n    this.onEnterOrDragging(draggingEvent);\n  }\n  isFromThisGrid(draggingEvent) {\n    const { dragSourceDomDataKey } = draggingEvent.dragSource;\n    return dragSourceDomDataKey === this.gos.getDomDataKey();\n  }\n  isDropZoneWithinThisGrid(draggingEvent) {\n    const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    const gridGui = gridBodyCon.getGui();\n    const { dropZoneTarget } = draggingEvent;\n    return !gridGui.contains(dropZoneTarget);\n  }\n  onEnterOrDragging(draggingEvent) {\n    this.dispatchGridEvent(\"rowDragMove\", draggingEvent);\n    this.lastDraggingEvent = draggingEvent;\n    const pixel = this.mouseEventService.getNormalisedPosition(draggingEvent).y;\n    const managedDrag = this.gos.get(\"rowDragManaged\");\n    if (managedDrag) {\n      this.doManagedDrag(draggingEvent, pixel);\n    }\n    this.autoScrollService.check(draggingEvent.event);\n  }\n  doManagedDrag(draggingEvent, pixel) {\n    const isFromThisGrid = this.isFromThisGrid(draggingEvent);\n    const managedDrag = this.gos.get(\"rowDragManaged\");\n    const rowNodes = draggingEvent.dragItem.rowNodes;\n    if (managedDrag && this.shouldPreventRowMove()) {\n      return;\n    }\n    if (this.gos.get(\"suppressMoveWhenRowDragging\") || !isFromThisGrid) {\n      if (!this.isDropZoneWithinThisGrid(draggingEvent)) {\n        this.clientSideRowModel.highlightRowAtPixel(rowNodes[0], pixel);\n      }\n    } else {\n      this.moveRows(rowNodes, pixel);\n    }\n  }\n  getRowIndexNumber(rowNode) {\n    const rowIndexStr = rowNode.getRowIndexString();\n    return parseInt(_last(rowIndexStr.split(\"-\")), 10);\n  }\n  moveRowAndClearHighlight(draggingEvent) {\n    const lastHighlightedRowNode = this.clientSideRowModel.getLastHighlightedRowNode();\n    const isBelow = lastHighlightedRowNode && lastHighlightedRowNode.highlighted === 1 /* Below */;\n    const pixel = this.mouseEventService.getNormalisedPosition(draggingEvent).y;\n    const rowNodes = draggingEvent.dragItem.rowNodes;\n    let increment = isBelow ? 1 : 0;\n    if (this.isFromThisGrid(draggingEvent)) {\n      rowNodes.forEach((rowNode) => {\n        if (rowNode.rowTop < pixel) {\n          increment -= 1;\n        }\n      });\n      this.moveRows(rowNodes, pixel, increment);\n    } else {\n      const getRowIdFunc = this.gos.getRowIdCallback();\n      let addIndex = this.clientSideRowModel.getRowIndexAtPixel(pixel) + 1;\n      if (this.clientSideRowModel.getHighlightPosition(pixel) === 0 /* Above */) {\n        addIndex--;\n      }\n      this.clientSideRowModel.updateRowData({\n        add: rowNodes.filter(\n          (node) => !this.clientSideRowModel.getRowNode(\n            getRowIdFunc?.({ data: node.data, level: 0, rowPinned: node.rowPinned }) ?? node.data.id\n          )\n        ).map((node) => node.data),\n        addIndex\n      });\n    }\n    this.clearRowHighlight();\n  }\n  clearRowHighlight() {\n    this.clientSideRowModel.highlightRowAtPixel(null);\n  }\n  moveRows(rowNodes, pixel, increment = 0) {\n    const rowWasMoved = this.clientSideRowModel.ensureRowsAtPixel(rowNodes, pixel, increment);\n    if (rowWasMoved) {\n      this.focusService.clearFocusedCell();\n      this.rangeService?.removeAllCellRanges();\n    }\n  }\n  addRowDropZone(params) {\n    if (!params.getContainer()) {\n      _warnOnce(\"addRowDropZone - A container target needs to be provided\");\n      return;\n    }\n    if (this.dragAndDropService.findExternalZone(params)) {\n      _warnOnce(\n        \"addRowDropZone - target already exists in the list of DropZones. Use `removeRowDropZone` before adding it again.\"\n      );\n      return;\n    }\n    let processedParams = {\n      getContainer: params.getContainer\n    };\n    if (params.fromGrid) {\n      processedParams = params;\n    } else {\n      if (params.onDragEnter) {\n        processedParams.onDragEnter = (e) => {\n          params.onDragEnter(this.draggingToRowDragEvent(\"rowDragEnter\", e));\n        };\n      }\n      if (params.onDragLeave) {\n        processedParams.onDragLeave = (e) => {\n          params.onDragLeave(this.draggingToRowDragEvent(\"rowDragLeave\", e));\n        };\n      }\n      if (params.onDragging) {\n        processedParams.onDragging = (e) => {\n          params.onDragging(this.draggingToRowDragEvent(\"rowDragMove\", e));\n        };\n      }\n      if (params.onDragStop) {\n        processedParams.onDragStop = (e) => {\n          params.onDragStop(this.draggingToRowDragEvent(\"rowDragEnd\", e));\n        };\n      }\n    }\n    this.dragAndDropService.addDropTarget({\n      isInterestedIn: (type) => type === 2 /* RowDrag */,\n      getIconName: () => \"move\",\n      external: true,\n      ...processedParams\n    });\n  }\n  getRowDropZone(events) {\n    const getContainer = this.getContainer.bind(this);\n    const onDragEnter = this.onDragEnter.bind(this);\n    const onDragLeave = this.onDragLeave.bind(this);\n    const onDragging = this.onDragging.bind(this);\n    const onDragStop = this.onDragStop.bind(this);\n    if (!events) {\n      return {\n        getContainer,\n        onDragEnter,\n        onDragLeave,\n        onDragging,\n        onDragStop,\n        /* @private */\n        fromGrid: true\n      };\n    }\n    return {\n      getContainer,\n      onDragEnter: events.onDragEnter ? (e) => {\n        onDragEnter(e);\n        events.onDragEnter(this.draggingToRowDragEvent(\"rowDragEnter\", e));\n      } : onDragEnter,\n      onDragLeave: events.onDragLeave ? (e) => {\n        onDragLeave(e);\n        events.onDragLeave(this.draggingToRowDragEvent(\"rowDragLeave\", e));\n      } : onDragLeave,\n      onDragging: events.onDragging ? (e) => {\n        onDragging(e);\n        events.onDragging(this.draggingToRowDragEvent(\"rowDragMove\", e));\n      } : onDragging,\n      onDragStop: events.onDragStop ? (e) => {\n        onDragStop(e);\n        events.onDragStop(this.draggingToRowDragEvent(\"rowDragEnd\", e));\n      } : onDragStop,\n      fromGrid: true\n    };\n  }\n  draggingToRowDragEvent(type, draggingEvent) {\n    const yNormalised = this.mouseEventService.getNormalisedPosition(draggingEvent).y;\n    const mouseIsPastLastRow = yNormalised > this.pageBoundsService.getCurrentPageHeight();\n    let overIndex = -1;\n    let overNode;\n    if (!mouseIsPastLastRow) {\n      overIndex = this.rowModel.getRowIndexAtPixel(yNormalised);\n      overNode = this.rowModel.getRow(overIndex);\n    }\n    let vDirectionString;\n    switch (draggingEvent.vDirection) {\n      case 1 /* Down */:\n        vDirectionString = \"down\";\n        break;\n      case 0 /* Up */:\n        vDirectionString = \"up\";\n        break;\n      default:\n        vDirectionString = null;\n        break;\n    }\n    const event = this.gos.addGridCommonParams({\n      type,\n      event: draggingEvent.event,\n      node: draggingEvent.dragItem.rowNode,\n      nodes: draggingEvent.dragItem.rowNodes,\n      overIndex,\n      overNode,\n      y: yNormalised,\n      vDirection: vDirectionString\n    });\n    return event;\n  }\n  dispatchGridEvent(type, draggingEvent) {\n    const event = this.draggingToRowDragEvent(type, draggingEvent);\n    this.eventService.dispatchEvent(event);\n  }\n  onDragLeave(draggingEvent) {\n    this.dispatchGridEvent(\"rowDragLeave\", draggingEvent);\n    this.stopDragging(draggingEvent);\n    if (this.gos.get(\"rowDragManaged\")) {\n      this.clearRowHighlight();\n    }\n  }\n  onDragStop(draggingEvent) {\n    this.dispatchGridEvent(\"rowDragEnd\", draggingEvent);\n    this.stopDragging(draggingEvent);\n    if (this.gos.get(\"rowDragManaged\") && (this.gos.get(\"suppressMoveWhenRowDragging\") || !this.isFromThisGrid(draggingEvent)) && !this.isDropZoneWithinThisGrid(draggingEvent)) {\n      this.moveRowAndClearHighlight(draggingEvent);\n    }\n  }\n  stopDragging(draggingEvent) {\n    this.autoScrollService.ensureCleared();\n    this.getRowNodes(draggingEvent).forEach((rowNode) => {\n      rowNode.setDragging(false);\n    });\n  }\n};\n\n// community-modules/core/src/dragAndDrop/dragService.ts\nvar DragService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"dragService\";\n    this.dragEndFunctions = [];\n    this.dragSources = [];\n  }\n  wireBeans(beans) {\n    this.mouseEventService = beans.mouseEventService;\n  }\n  destroy() {\n    this.dragSources.forEach(this.removeListener.bind(this));\n    this.dragSources.length = 0;\n    super.destroy();\n  }\n  removeListener(dragSourceAndListener) {\n    const element = dragSourceAndListener.dragSource.eElement;\n    const mouseDownListener = dragSourceAndListener.mouseDownListener;\n    element.removeEventListener(\"mousedown\", mouseDownListener);\n    if (dragSourceAndListener.touchEnabled) {\n      const touchStartListener = dragSourceAndListener.touchStartListener;\n      element.removeEventListener(\"touchstart\", touchStartListener, { passive: true });\n    }\n  }\n  removeDragSource(params) {\n    const dragSourceAndListener = this.dragSources.find((item) => item.dragSource === params);\n    if (!dragSourceAndListener) {\n      return;\n    }\n    this.removeListener(dragSourceAndListener);\n    _removeFromArray(this.dragSources, dragSourceAndListener);\n  }\n  isDragging() {\n    return this.dragging;\n  }\n  addDragSource(params) {\n    const mouseListener = this.onMouseDown.bind(this, params);\n    const { eElement, includeTouch, stopPropagationForTouch } = params;\n    eElement.addEventListener(\"mousedown\", mouseListener);\n    let touchListener = null;\n    const suppressTouch = this.gos.get(\"suppressTouch\");\n    if (includeTouch && !suppressTouch) {\n      touchListener = (touchEvent) => {\n        if (_isFocusableFormField(touchEvent.target)) {\n          return;\n        }\n        if (stopPropagationForTouch) {\n          touchEvent.stopPropagation();\n        }\n        this.onTouchStart(params, touchEvent);\n      };\n      eElement.addEventListener(\"touchstart\", touchListener, { passive: false });\n    }\n    this.dragSources.push({\n      dragSource: params,\n      mouseDownListener: mouseListener,\n      touchStartListener: touchListener,\n      touchEnabled: !!includeTouch\n    });\n  }\n  getStartTarget() {\n    return this.startTarget;\n  }\n  // gets called whenever mouse down on any drag source\n  onTouchStart(params, touchEvent) {\n    this.currentDragParams = params;\n    this.dragging = false;\n    const touch = touchEvent.touches[0];\n    this.touchLastTime = touch;\n    this.touchStart = touch;\n    const touchMoveEvent = (e) => this.onTouchMove(e, params.eElement);\n    const touchEndEvent = (e) => this.onTouchUp(e, params.eElement);\n    const documentTouchMove = (e) => {\n      if (e.cancelable) {\n        e.preventDefault();\n      }\n    };\n    const target = touchEvent.target;\n    const events = [\n      // Prevents the page document from moving while we are dragging items around.\n      // preventDefault needs to be called in the touchmove listener and never inside the\n      // touchstart, because using touchstart causes the click event to be cancelled on touch devices.\n      {\n        target: this.gos.getRootNode(),\n        type: \"touchmove\",\n        listener: documentTouchMove,\n        options: { passive: false }\n      },\n      { target, type: \"touchmove\", listener: touchMoveEvent, options: { passive: true } },\n      { target, type: \"touchend\", listener: touchEndEvent, options: { passive: true } },\n      { target, type: \"touchcancel\", listener: touchEndEvent, options: { passive: true } }\n    ];\n    this.addTemporaryEvents(events);\n    if (params.dragStartPixels === 0) {\n      this.onCommonMove(touch, this.touchStart, params.eElement);\n    }\n  }\n  // gets called whenever mouse down on any drag source\n  onMouseDown(params, mouseEvent) {\n    const e = mouseEvent;\n    if (params.skipMouseEvent && params.skipMouseEvent(mouseEvent)) {\n      return;\n    }\n    if (e._alreadyProcessedByDragService) {\n      return;\n    }\n    e._alreadyProcessedByDragService = true;\n    if (mouseEvent.button !== 0) {\n      return;\n    }\n    if (this.shouldPreventMouseEvent(mouseEvent)) {\n      mouseEvent.preventDefault();\n    }\n    this.currentDragParams = params;\n    this.dragging = false;\n    this.mouseStartEvent = mouseEvent;\n    this.startTarget = mouseEvent.target;\n    const mouseMoveEvent = (event) => this.onMouseMove(event, params.eElement);\n    const mouseUpEvent = (event) => this.onMouseUp(event, params.eElement);\n    const contextEvent = (event) => event.preventDefault();\n    const target = this.gos.getRootNode();\n    const events = [\n      { target, type: \"mousemove\", listener: mouseMoveEvent },\n      { target, type: \"mouseup\", listener: mouseUpEvent },\n      { target, type: \"contextmenu\", listener: contextEvent }\n    ];\n    this.addTemporaryEvents(events);\n    if (params.dragStartPixels === 0) {\n      this.onMouseMove(mouseEvent, params.eElement);\n    }\n  }\n  addTemporaryEvents(events) {\n    events.forEach((currentEvent) => {\n      const { target, type, listener, options } = currentEvent;\n      target.addEventListener(type, listener, options);\n    });\n    this.dragEndFunctions.push(() => {\n      events.forEach((currentEvent) => {\n        const { target, type, listener, options } = currentEvent;\n        target.removeEventListener(type, listener, options);\n      });\n    });\n  }\n  // returns true if the event is close to the original event by X pixels either vertically or horizontally.\n  // we only start dragging after X pixels so this allows us to know if we should start dragging yet.\n  isEventNearStartEvent(currentEvent, startEvent) {\n    const { dragStartPixels } = this.currentDragParams;\n    const requiredPixelDiff = _exists(dragStartPixels) ? dragStartPixels : 4;\n    return _areEventsNear(currentEvent, startEvent, requiredPixelDiff);\n  }\n  getFirstActiveTouch(touchList) {\n    for (let i = 0; i < touchList.length; i++) {\n      if (touchList[i].identifier === this.touchStart.identifier) {\n        return touchList[i];\n      }\n    }\n    return null;\n  }\n  onCommonMove(currentEvent, startEvent, el) {\n    if (!this.dragging) {\n      if (!this.dragging && this.isEventNearStartEvent(currentEvent, startEvent)) {\n        return;\n      }\n      this.dragging = true;\n      this.eventService.dispatchEvent({\n        type: \"dragStarted\",\n        target: el\n      });\n      this.currentDragParams.onDragStart(startEvent);\n      this.currentDragParams.onDragging(startEvent);\n    }\n    this.currentDragParams.onDragging(currentEvent);\n  }\n  onTouchMove(touchEvent, el) {\n    const touch = this.getFirstActiveTouch(touchEvent.touches);\n    if (!touch) {\n      return;\n    }\n    this.onCommonMove(touch, this.touchStart, el);\n  }\n  // only gets called after a mouse down - as this is only added after mouseDown\n  // and is removed when mouseUp happens\n  onMouseMove(mouseEvent, el) {\n    if (_isBrowserSafari()) {\n      const eDocument = this.gos.getDocument();\n      eDocument.getSelection()?.removeAllRanges();\n    }\n    if (this.shouldPreventMouseEvent(mouseEvent)) {\n      mouseEvent.preventDefault();\n    }\n    this.onCommonMove(mouseEvent, this.mouseStartEvent, el);\n  }\n  shouldPreventMouseEvent(mouseEvent) {\n    const isEnableCellTextSelect = this.gos.get(\"enableCellTextSelection\");\n    const isMouseMove = mouseEvent.type === \"mousemove\";\n    return (\n      // when `isEnableCellTextSelect` is `true`, we need to preventDefault on mouseMove\n      // to avoid the grid text being selected while dragging components.\n      isEnableCellTextSelect && isMouseMove && mouseEvent.cancelable && this.mouseEventService.isEventFromThisGrid(mouseEvent) && !this.isOverFormFieldElement(mouseEvent)\n    );\n  }\n  isOverFormFieldElement(mouseEvent) {\n    const el = mouseEvent.target;\n    const tagName = el?.tagName.toLocaleLowerCase();\n    return !!tagName?.match(\"^a$|textarea|input|select|button\");\n  }\n  onTouchUp(touchEvent, el) {\n    let touch = this.getFirstActiveTouch(touchEvent.changedTouches);\n    if (!touch) {\n      touch = this.touchLastTime;\n    }\n    this.onUpCommon(touch, el);\n  }\n  onMouseUp(mouseEvent, el) {\n    this.onUpCommon(mouseEvent, el);\n  }\n  onUpCommon(eventOrTouch, el) {\n    if (this.dragging) {\n      this.dragging = false;\n      this.currentDragParams.onDragStop(eventOrTouch);\n      this.eventService.dispatchEvent({\n        type: \"dragStopped\",\n        target: el\n      });\n    }\n    this.mouseStartEvent = null;\n    this.startTarget = null;\n    this.touchStart = null;\n    this.touchLastTime = null;\n    this.currentDragParams = null;\n    this.dragEndFunctions.forEach((func) => func());\n    this.dragEndFunctions.length = 0;\n  }\n};\n\n// community-modules/core/src/rendering/row/rowDragComp.ts\nvar RowDragComp = class extends Component {\n  constructor(cellValueFn, rowNode, column, customGui, dragStartPixels, suppressVisibilityChange) {\n    super();\n    this.cellValueFn = cellValueFn;\n    this.rowNode = rowNode;\n    this.column = column;\n    this.customGui = customGui;\n    this.dragStartPixels = dragStartPixels;\n    this.suppressVisibilityChange = suppressVisibilityChange;\n    this.dragSource = null;\n  }\n  wireBeans(beans) {\n    this.beans = beans;\n  }\n  isCustomGui() {\n    return this.customGui != null;\n  }\n  postConstruct() {\n    if (!this.customGui) {\n      this.setTemplate(\n        /* html */\n        `<div class=\"ag-drag-handle ag-row-drag\" aria-hidden=\"true\"></div>`\n      );\n      this.getGui().appendChild(_createIconNoSpan(\"rowDrag\", this.gos, null));\n      this.addDragSource();\n    } else {\n      this.setDragElement(this.customGui, this.dragStartPixels);\n    }\n    this.checkCompatibility();\n    if (!this.suppressVisibilityChange) {\n      const strategy = this.gos.get(\"rowDragManaged\") ? new ManagedVisibilityStrategy(this, this.beans, this.rowNode, this.column) : new NonManagedVisibilityStrategy(this, this.beans, this.rowNode, this.column);\n      this.createManagedBean(strategy, this.beans.context);\n    }\n  }\n  setDragElement(dragElement, dragStartPixels) {\n    this.setTemplateFromElement(dragElement);\n    this.addDragSource(dragStartPixels);\n  }\n  getSelectedNodes() {\n    const isRowDragMultiRow = this.gos.get(\"rowDragMultiRow\");\n    if (!isRowDragMultiRow) {\n      return [this.rowNode];\n    }\n    const selection = this.beans.selectionService.getSelectedNodes();\n    return selection.indexOf(this.rowNode) !== -1 ? selection : [this.rowNode];\n  }\n  // returns true if all compatibility items work out\n  checkCompatibility() {\n    const managed = this.gos.get(\"rowDragManaged\");\n    const treeData = this.gos.get(\"treeData\");\n    if (treeData && managed) {\n      _warnOnce(\"If using row drag with tree data, you cannot have rowDragManaged=true\");\n    }\n  }\n  getDragItem() {\n    return {\n      rowNode: this.rowNode,\n      rowNodes: this.getSelectedNodes(),\n      columns: this.column ? [this.column] : void 0,\n      defaultTextValue: this.cellValueFn()\n    };\n  }\n  getRowDragText(column) {\n    if (column) {\n      const colDef = column.getColDef();\n      if (colDef.rowDragText) {\n        return colDef.rowDragText;\n      }\n    }\n    return this.gos.get(\"rowDragText\");\n  }\n  addDragSource(dragStartPixels = 4) {\n    if (this.dragSource) {\n      this.removeDragSource();\n    }\n    const eGui = this.getGui();\n    if (this.gos.get(\"enableCellTextSelection\")) {\n      this.removeMouseDownListener();\n      this.mouseDownListener = this.addManagedElementListeners(eGui, {\n        mousedown: (e) => {\n          e?.preventDefault();\n        }\n      })[0];\n    }\n    const translate = this.localeService.getLocaleTextFunc();\n    this.dragSource = {\n      type: 2 /* RowDrag */,\n      eElement: eGui,\n      dragItemName: () => {\n        const dragItem = this.getDragItem();\n        const dragItemCount = dragItem.rowNodes?.length || 1;\n        const rowDragText = this.getRowDragText(this.column);\n        if (rowDragText) {\n          return rowDragText(dragItem, dragItemCount);\n        }\n        return dragItemCount === 1 ? this.cellValueFn() : `${dragItemCount} ${translate(\"rowDragRows\", \"rows\")}`;\n      },\n      getDragItem: () => this.getDragItem(),\n      dragStartPixels,\n      dragSourceDomDataKey: this.gos.getDomDataKey()\n    };\n    this.beans.dragAndDropService.addDragSource(this.dragSource, true);\n  }\n  destroy() {\n    this.removeDragSource();\n    this.removeMouseDownListener();\n    super.destroy();\n  }\n  removeDragSource() {\n    if (!this.dragSource) {\n      return;\n    }\n    this.beans.dragAndDropService.removeDragSource(this.dragSource);\n    this.dragSource = null;\n  }\n  removeMouseDownListener() {\n    if (!this.mouseDownListener) {\n      return;\n    }\n    this.mouseDownListener();\n    this.mouseDownListener = void 0;\n  }\n};\nvar VisibilityStrategy = class extends BeanStub {\n  constructor(parent, rowNode, column) {\n    super();\n    this.parent = parent;\n    this.rowNode = rowNode;\n    this.column = column;\n  }\n  setDisplayedOrVisible(neverDisplayed) {\n    const displayedOptions = { skipAriaHidden: true };\n    if (neverDisplayed) {\n      this.parent.setDisplayed(false, displayedOptions);\n    } else {\n      let shown = true;\n      let isShownSometimes = false;\n      if (this.column) {\n        shown = this.column.isRowDrag(this.rowNode) || this.parent.isCustomGui();\n        isShownSometimes = _isFunction(this.column.getColDef().rowDrag);\n      }\n      if (isShownSometimes) {\n        this.parent.setDisplayed(true, displayedOptions);\n        this.parent.setVisible(shown, displayedOptions);\n      } else {\n        this.parent.setDisplayed(shown, displayedOptions);\n        this.parent.setVisible(true, displayedOptions);\n      }\n    }\n  }\n};\nvar NonManagedVisibilityStrategy = class extends VisibilityStrategy {\n  constructor(parent, beans, rowNode, column) {\n    super(parent, rowNode, column);\n    this.beans = beans;\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(\"suppressRowDrag\", this.onSuppressRowDrag.bind(this));\n    const listener = this.workOutVisibility.bind(this);\n    this.addManagedListeners(this.rowNode, {\n      dataChanged: listener,\n      cellChanged: listener\n    });\n    this.addManagedListeners(this.beans.eventService, { newColumnsLoaded: listener });\n    this.workOutVisibility();\n  }\n  onSuppressRowDrag() {\n    this.workOutVisibility();\n  }\n  workOutVisibility() {\n    const neverDisplayed = this.gos.get(\"suppressRowDrag\");\n    this.setDisplayedOrVisible(neverDisplayed);\n  }\n};\nvar ManagedVisibilityStrategy = class extends VisibilityStrategy {\n  constructor(parent, beans, rowNode, column) {\n    super(parent, rowNode, column);\n    this.beans = beans;\n  }\n  postConstruct() {\n    const listener = this.workOutVisibility.bind(this);\n    this.addManagedListeners(this.beans.eventService, {\n      sortChanged: listener,\n      filterChanged: listener,\n      columnRowGroupChanged: listener,\n      newColumnsLoaded: listener\n    });\n    this.addManagedListeners(this.rowNode, {\n      dataChanged: listener,\n      cellChanged: listener\n    });\n    this.addManagedPropertyListener(\"suppressRowDrag\", this.onSuppressRowDrag.bind(this));\n    this.workOutVisibility();\n  }\n  onSuppressRowDrag() {\n    this.workOutVisibility();\n  }\n  workOutVisibility() {\n    const gridBodyCon = this.beans.ctrlsService.getGridBodyCtrl();\n    const rowDragFeature = gridBodyCon.getRowDragFeature();\n    const shouldPreventRowMove = rowDragFeature && rowDragFeature.shouldPreventRowMove();\n    const suppressRowDrag = this.gos.get(\"suppressRowDrag\");\n    const hasExternalDropZones = this.beans.dragAndDropService.hasExternalDropZones();\n    const neverDisplayed = shouldPreventRowMove && !hasExternalDropZones || suppressRowDrag;\n    this.setDisplayedOrVisible(neverDisplayed);\n  }\n};\n\n// community-modules/core/src/entities/rowNode.ts\nvar IGNORED_SIBLING_PROPERTIES = /* @__PURE__ */ new Set([\n  \"localEventService\",\n  \"__objectId\",\n  \"sticky\"\n]);\nvar _RowNode = class _RowNode {\n  constructor(beans) {\n    /** The current row index. If the row is filtered out or in a collapsed group, this value will be `null`. */\n    this.rowIndex = null;\n    /** The key for the group eg Ireland, UK, USA */\n    this.key = null;\n    /** Children mapped by the pivot columns. */\n    this.childrenMapped = {};\n    /**\n     * This will be `true` if it has a rowIndex assigned, otherwise `false`.\n     */\n    this.displayed = false;\n    /** The row top position in pixels. */\n    this.rowTop = null;\n    /** The top pixel for this row last time, makes sense if data set was ordered or filtered,\n     * it is used so new rows can animate in from their old position. */\n    this.oldRowTop = null;\n    /** `true` by default - can be overridden via gridOptions.isRowSelectable(rowNode) */\n    this.selectable = true;\n    /** Used by sorting service - to give deterministic sort to groups. Previously we\n     * just id for this, however id is a string and had slower sorting compared to numbers. */\n    this.__objectId = _RowNode.OBJECT_ID_SEQUENCE++;\n    /** When one or more Columns are using autoHeight, this keeps track of height of each autoHeight Cell,\n     * indexed by the Column ID. */\n    this.__autoHeights = {};\n    /** `true` when nodes with the same id are being removed and added as part of the same batch transaction */\n    this.alreadyRendered = false;\n    this.highlighted = null;\n    this.hovered = false;\n    this.selected = false;\n    this.beans = beans;\n  }\n  /**\n   * Replaces the data on the `rowNode`. When this method is called, the grid will refresh the entire rendered row if it is displayed.\n   */\n  setData(data) {\n    this.setDataCommon(data, false);\n  }\n  // similar to setRowData, however it is expected that the data is the same data item. this\n  // is intended to be used with Redux type stores, where the whole data can be changed. we are\n  // guaranteed that the data is the same entity (so grid doesn't need to worry about the id of the\n  // underlying data changing, hence doesn't need to worry about selection). the grid, upon receiving\n  // dataChanged event, will refresh the cells rather than rip them all out (so user can show transitions).\n  /**\n   * Updates the data on the `rowNode`. When this method is called, the grid will refresh the entire rendered row if it is displayed.\n   */\n  updateData(data) {\n    this.setDataCommon(data, true);\n  }\n  setDataCommon(data, update) {\n    const oldData = this.data;\n    this.data = data;\n    this.beans.valueCache.onDataChanged();\n    this.updateDataOnDetailNode();\n    this.checkRowSelectable();\n    this.resetQuickFilterAggregateText();\n    const event = this.createDataChangedEvent(data, oldData, update);\n    this.localEventService?.dispatchEvent(event);\n  }\n  // when we are doing master / detail, the detail node is lazy created, but then kept around.\n  // so if we show / hide the detail, the same detail rowNode is used. so we need to keep the data\n  // in sync, otherwise expand/collapse of the detail would still show the old values.\n  updateDataOnDetailNode() {\n    if (this.detailNode) {\n      this.detailNode.data = this.data;\n    }\n  }\n  createDataChangedEvent(newData, oldData, update) {\n    return {\n      type: \"dataChanged\",\n      node: this,\n      oldData,\n      newData,\n      update\n    };\n  }\n  getRowIndexString() {\n    if (this.rowIndex == null) {\n      _errorOnce(\n        \"Could not find rowIndex, this means tasks are being executed on a rowNode that has been removed from the grid.\"\n      );\n      return null;\n    }\n    if (this.rowPinned === \"top\") {\n      return \"t-\" + this.rowIndex;\n    }\n    if (this.rowPinned === \"bottom\") {\n      return \"b-\" + this.rowIndex;\n    }\n    return this.rowIndex.toString();\n  }\n  createDaemonNode() {\n    const oldNode = new _RowNode(this.beans);\n    oldNode.id = this.id;\n    oldNode.data = this.data;\n    oldNode.__daemon = true;\n    oldNode.selected = this.selected;\n    oldNode.level = this.level;\n    return oldNode;\n  }\n  setDataAndId(data, id) {\n    const oldNode = _exists(this.id) ? this.createDaemonNode() : null;\n    const oldData = this.data;\n    this.data = data;\n    this.updateDataOnDetailNode();\n    this.setId(id);\n    this.checkRowSelectable();\n    this.beans.selectionService.syncInRowNode(this, oldNode);\n    const event = this.createDataChangedEvent(data, oldData, false);\n    this.localEventService?.dispatchEvent(event);\n  }\n  checkRowSelectable() {\n    const isRowSelectableFunc = this.beans.gos.get(\"isRowSelectable\");\n    this.setRowSelectable(isRowSelectableFunc ? isRowSelectableFunc(this) : true);\n  }\n  setRowSelectable(newVal, suppressSelectionUpdate) {\n    if (this.selectable !== newVal) {\n      this.selectable = newVal;\n      this.dispatchRowEvent(\"selectableChanged\");\n      if (suppressSelectionUpdate) {\n        return;\n      }\n      const isGroupSelectsChildren = this.beans.gos.get(\"groupSelectsChildren\");\n      if (isGroupSelectsChildren) {\n        const selected = this.calculateSelectedFromChildren();\n        this.setSelectedParams({\n          newValue: selected ?? false,\n          source: \"selectableChanged\"\n        });\n        return;\n      }\n      if (this.isSelected() && !this.selectable) {\n        this.setSelectedParams({\n          newValue: false,\n          source: \"selectableChanged\"\n        });\n      }\n    }\n  }\n  setId(id) {\n    const getRowIdFunc = this.beans.gos.getRowIdCallback();\n    if (getRowIdFunc) {\n      if (this.data) {\n        const parentKeys = this.getGroupKeys(true);\n        this.id = getRowIdFunc({\n          data: this.data,\n          parentKeys: parentKeys.length > 0 ? parentKeys : void 0,\n          level: this.level,\n          rowPinned: this.rowPinned\n        });\n        if (this.id.startsWith(_RowNode.ID_PREFIX_ROW_GROUP)) {\n          _errorOnce(\n            `Row IDs cannot start with ${_RowNode.ID_PREFIX_ROW_GROUP}, this is a reserved prefix for AG Grid's row grouping feature.`\n          );\n        }\n      } else {\n        this.id = void 0;\n      }\n    } else {\n      this.id = id;\n    }\n  }\n  getGroupKeys(excludeSelf = false) {\n    const keys = [];\n    let pointer = this;\n    if (excludeSelf) {\n      pointer = pointer.parent;\n    }\n    while (pointer && pointer.level >= 0) {\n      keys.push(pointer.key);\n      pointer = pointer.parent;\n    }\n    keys.reverse();\n    return keys;\n  }\n  isPixelInRange(pixel) {\n    if (!_exists(this.rowTop) || !_exists(this.rowHeight)) {\n      return false;\n    }\n    return pixel >= this.rowTop && pixel < this.rowTop + this.rowHeight;\n  }\n  updateIfDifferent(key, value, eventName) {\n    if (this[key] === value) {\n      return;\n    }\n    this[key] = value;\n    this.dispatchRowEvent(eventName);\n  }\n  setFirstChild(firstChild) {\n    this.updateIfDifferent(\"firstChild\", firstChild, \"firstChildChanged\");\n  }\n  setLastChild(lastChild) {\n    this.updateIfDifferent(\"lastChild\", lastChild, \"lastChildChanged\");\n  }\n  setChildIndex(childIndex) {\n    this.updateIfDifferent(\"childIndex\", childIndex, \"childIndexChanged\");\n  }\n  setRowTop(rowTop) {\n    this.oldRowTop = this.rowTop;\n    if (this.rowTop === rowTop) {\n      return;\n    }\n    this.rowTop = rowTop;\n    this.dispatchRowEvent(\"topChanged\");\n    this.setDisplayed(rowTop !== null);\n  }\n  clearRowTopAndRowIndex() {\n    this.oldRowTop = null;\n    this.setRowTop(null);\n    this.setRowIndex(null);\n  }\n  setDisplayed(displayed) {\n    this.updateIfDifferent(\"displayed\", displayed, \"displayedChanged\");\n  }\n  setDragging(dragging) {\n    this.updateIfDifferent(\"dragging\", dragging, \"draggingChanged\");\n  }\n  setHighlighted(highlighted) {\n    this.updateIfDifferent(\"highlighted\", highlighted, \"rowHighlightChanged\");\n  }\n  setHovered(hovered) {\n    if (this.hovered === hovered) {\n      return;\n    }\n    this.hovered = hovered;\n  }\n  isHovered() {\n    return this.hovered;\n  }\n  setAllChildrenCount(allChildrenCount) {\n    this.updateIfDifferent(\"allChildrenCount\", allChildrenCount, \"allChildrenCountChanged\");\n  }\n  setMaster(master) {\n    if (this.master === master) {\n      return;\n    }\n    if (this.master && !master) {\n      this.expanded = false;\n    }\n    this.master = master;\n    this.dispatchRowEvent(\"masterChanged\");\n  }\n  setGroup(group) {\n    if (this.group === group) {\n      return;\n    }\n    if (this.group && !group) {\n      this.expanded = false;\n    }\n    this.group = group;\n    this.updateHasChildren();\n    this.checkRowSelectable();\n    this.dispatchRowEvent(\"groupChanged\");\n  }\n  /**\n   * Sets the row height.\n   * Call if you want to change the height initially assigned to the row.\n   * After calling, you must call `api.onRowHeightChanged()` so the grid knows it needs to work out the placement of the rows. */\n  setRowHeight(rowHeight, estimated = false) {\n    this.rowHeight = rowHeight;\n    this.rowHeightEstimated = estimated;\n    this.dispatchRowEvent(\"heightChanged\");\n  }\n  setRowAutoHeight(cellHeight, column) {\n    if (!this.__autoHeights) {\n      this.__autoHeights = {};\n    }\n    this.__autoHeights[column.getId()] = cellHeight;\n    if (cellHeight != null) {\n      if (this.checkAutoHeightsDebounced == null) {\n        this.checkAutoHeightsDebounced = _debounce(this.checkAutoHeights.bind(this), 1);\n      }\n      this.checkAutoHeightsDebounced();\n    }\n  }\n  checkAutoHeights() {\n    let notAllPresent = false;\n    let nonePresent = true;\n    let newRowHeight = 0;\n    const autoHeights = this.__autoHeights;\n    if (autoHeights == null) {\n      return;\n    }\n    const displayedAutoHeightCols = this.beans.visibleColsService.getAllAutoHeightCols();\n    displayedAutoHeightCols.forEach((col) => {\n      let cellHeight = autoHeights[col.getId()];\n      if (cellHeight == null) {\n        if (this.beans.columnModel.isColSpanActive()) {\n          let activeColsForRow = [];\n          switch (col.getPinned()) {\n            case \"left\":\n              activeColsForRow = this.beans.visibleColsService.getLeftColsForRow(this);\n              break;\n            case \"right\":\n              activeColsForRow = this.beans.visibleColsService.getRightColsForRow(this);\n              break;\n            case null:\n              activeColsForRow = this.beans.columnViewportService.getColsWithinViewport(this);\n              break;\n          }\n          if (activeColsForRow.includes(col)) {\n            notAllPresent = true;\n            return;\n          }\n          cellHeight = -1;\n        } else {\n          notAllPresent = true;\n          return;\n        }\n      } else {\n        nonePresent = false;\n      }\n      if (cellHeight > newRowHeight) {\n        newRowHeight = cellHeight;\n      }\n    });\n    if (notAllPresent) {\n      return;\n    }\n    if (nonePresent || newRowHeight < 10) {\n      newRowHeight = this.beans.gos.getRowHeightForNode(this).height;\n    }\n    if (newRowHeight == this.rowHeight) {\n      return;\n    }\n    this.setRowHeight(newRowHeight);\n    const rowModel = this.beans.rowModel;\n    if (rowModel.onRowHeightChangedDebounced) {\n      rowModel.onRowHeightChangedDebounced();\n    }\n  }\n  setRowIndex(rowIndex) {\n    this.updateIfDifferent(\"rowIndex\", rowIndex, \"rowIndexChanged\");\n  }\n  setUiLevel(uiLevel) {\n    this.updateIfDifferent(\"uiLevel\", uiLevel, \"uiLevelChanged\");\n  }\n  /**\n   * Set the expanded state of this rowNode. Pass `true` to expand and `false` to collapse.\n   */\n  setExpanded(expanded, e, forceSync) {\n    if (this.expanded === expanded) {\n      return;\n    }\n    this.expanded = expanded;\n    this.dispatchRowEvent(\"expandedChanged\");\n    const event = { ...this.createGlobalRowEvent(\"rowGroupOpened\"), expanded, event: e || null };\n    this.beans.rowNodeEventThrottle.dispatchExpanded(event, forceSync);\n    this.beans.rowRenderer.refreshCells({ rowNodes: [this] });\n  }\n  createGlobalRowEvent(type) {\n    return this.beans.gos.addGridCommonParams({\n      type,\n      node: this,\n      data: this.data,\n      rowIndex: this.rowIndex,\n      rowPinned: this.rowPinned\n    });\n  }\n  /**\n   * Replaces the value on the `rowNode` for the specified column. When complete,\n   * the grid will refresh the rendered cell on the required row only.\n   * **Note**: This method only fires `onCellEditRequest` when the Grid is in **Read Only** mode.\n   *\n   * @param colKey The column where the value should be updated\n   * @param newValue The new value\n   * @param eventSource The source of the event\n   * @returns `true` if the value was changed, otherwise `false`.\n   */\n  setDataValue(colKey, newValue, eventSource) {\n    const getColumnFromKey = () => {\n      if (typeof colKey !== \"string\") {\n        return colKey;\n      }\n      return this.beans.columnModel.getCol(colKey) ?? this.beans.columnModel.getColDefCol(colKey);\n    };\n    const column = getColumnFromKey();\n    const oldValue = this.getValueFromValueService(column);\n    if (this.beans.gos.get(\"readOnlyEdit\")) {\n      this.beans.eventService.dispatchEvent({\n        type: \"cellEditRequest\",\n        event: null,\n        rowIndex: this.rowIndex,\n        rowPinned: this.rowPinned,\n        column,\n        colDef: column.getColDef(),\n        data: this.data,\n        node: this,\n        oldValue,\n        newValue,\n        value: newValue,\n        source: eventSource\n      });\n      return false;\n    }\n    const valueChanged = this.beans.valueService.setValue(this, column, newValue, eventSource);\n    this.dispatchCellChangedEvent(column, newValue, oldValue);\n    this.checkRowSelectable();\n    return valueChanged;\n  }\n  getValueFromValueService(column) {\n    const lockedClosedGroup = this.leafGroup && this.beans.columnModel.isPivotMode();\n    const isOpenGroup = this.group && this.expanded && !this.footer && !lockedClosedGroup;\n    let includeFooter = false;\n    const groupIncludeFooterOpt = this.beans.gos.get(\"groupTotalRow\") ?? this.beans.gos.get(\"groupIncludeFooter\");\n    if (typeof groupIncludeFooterOpt !== \"function\") {\n      includeFooter = !!groupIncludeFooterOpt;\n    } else {\n      const groupIncludeFooterCb = this.beans.gos.getCallback(\"groupTotalRow\") ?? this.beans.gos.getCallback(\"groupIncludeFooter\");\n      includeFooter = !!groupIncludeFooterCb({ node: this });\n    }\n    const groupAlwaysShowAggData = this.beans.gos.get(\"groupSuppressBlankHeader\");\n    const ignoreAggData = isOpenGroup && includeFooter && !groupAlwaysShowAggData;\n    const value = this.beans.valueService.getValue(column, this, false, ignoreAggData);\n    return value;\n  }\n  setGroupValue(colKey, newValue) {\n    const column = this.beans.columnModel.getCol(colKey);\n    if (_missing(this.groupData)) {\n      this.groupData = {};\n    }\n    const columnId = column.getColId();\n    const oldValue = this.groupData[columnId];\n    if (oldValue === newValue) {\n      return;\n    }\n    this.groupData[columnId] = newValue;\n    this.dispatchCellChangedEvent(column, newValue, oldValue);\n  }\n  // sets the data for an aggregation\n  setAggData(newAggData) {\n    const oldAggData = this.aggData;\n    this.aggData = newAggData;\n    if (this.localEventService) {\n      const eventFunc = (colId) => {\n        const value = this.aggData ? this.aggData[colId] : void 0;\n        const oldValue = oldAggData ? oldAggData[colId] : void 0;\n        if (value === oldValue) {\n          return;\n        }\n        const column = this.beans.columnModel.getCol(colId);\n        if (!column) {\n          return;\n        }\n        this.dispatchCellChangedEvent(column, value, oldValue);\n      };\n      for (const key in this.aggData) {\n        eventFunc(key);\n      }\n      for (const key in newAggData) {\n        if (key in this.aggData) {\n          continue;\n        }\n        eventFunc(key);\n      }\n    }\n  }\n  updateHasChildren() {\n    let newValue = this.group && !this.footer || this.childrenAfterGroup && this.childrenAfterGroup.length > 0;\n    const isSsrm = this.beans.gos.isRowModelType(\"serverSide\");\n    if (isSsrm) {\n      const isTreeData = this.beans.gos.get(\"treeData\");\n      const isGroupFunc = this.beans.gos.get(\"isServerSideGroup\");\n      newValue = !this.stub && !this.footer && (isTreeData ? !!isGroupFunc && isGroupFunc(this.data) : !!this.group);\n    }\n    if (newValue !== this.__hasChildren) {\n      this.__hasChildren = !!newValue;\n      this.dispatchRowEvent(\"hasChildrenChanged\");\n    }\n  }\n  hasChildren() {\n    if (this.__hasChildren == null) {\n      this.updateHasChildren();\n    }\n    return this.__hasChildren;\n  }\n  isEmptyRowGroupNode() {\n    return (this.group && _missingOrEmpty(this.childrenAfterGroup)) ?? false;\n  }\n  dispatchCellChangedEvent(column, newValue, oldValue) {\n    const cellChangedEvent = {\n      type: \"cellChanged\",\n      node: this,\n      column,\n      newValue,\n      oldValue\n    };\n    this.localEventService?.dispatchEvent(cellChangedEvent);\n  }\n  /**\n   * The first time `quickFilter` runs, the grid creates a one-off string representation of the row.\n   * This string is then used for the quick filter instead of hitting each column separately.\n   * When you edit, using grid editing, this string gets cleared down.\n   * However if you edit without using grid editing, you will need to clear this string down for the row to be updated with the new values.\n   * Otherwise new values will not work with the `quickFilter`. */\n  resetQuickFilterAggregateText() {\n    this.quickFilterAggregateText = null;\n  }\n  /** Returns:\n   * - `true` if the node can be expanded, i.e it is a group or master row.\n   * - `false` if the node cannot be expanded\n   */\n  isExpandable() {\n    if (this.footer) {\n      return false;\n    }\n    if (this.beans.columnModel.isPivotMode()) {\n      return this.hasChildren() && !this.leafGroup;\n    }\n    return this.hasChildren() || !!this.master;\n  }\n  /** Returns:\n   * - `true` if node is selected,\n   * - `false` if the node isn't selected\n   * - `undefined` if it's partially selected (group where not all children are selected). */\n  isSelected() {\n    if (this.footer) {\n      return this.sibling.isSelected();\n    }\n    return this.selected;\n  }\n  /** Perform a depth-first search of this node and its children. */\n  depthFirstSearch(callback) {\n    if (this.childrenAfterGroup) {\n      this.childrenAfterGroup.forEach((child) => child.depthFirstSearch(callback));\n    }\n    callback(this);\n  }\n  // + selectionController.calculatedSelectedForAllGroupNodes()\n  calculateSelectedFromChildren() {\n    let atLeastOneSelected = false;\n    let atLeastOneDeSelected = false;\n    let atLeastOneMixed = false;\n    if (!this.childrenAfterGroup?.length) {\n      return this.selectable ? this.selected : null;\n    }\n    for (let i = 0; i < this.childrenAfterGroup.length; i++) {\n      const child = this.childrenAfterGroup[i];\n      let childState = child.isSelected();\n      if (!child.selectable) {\n        const selectable = child.calculateSelectedFromChildren();\n        if (selectable === null) {\n          continue;\n        }\n        childState = selectable;\n      }\n      switch (childState) {\n        case true:\n          atLeastOneSelected = true;\n          break;\n        case false:\n          atLeastOneDeSelected = true;\n          break;\n        default:\n          atLeastOneMixed = true;\n          break;\n      }\n    }\n    if (atLeastOneMixed || atLeastOneSelected && atLeastOneDeSelected) {\n      return void 0;\n    }\n    if (atLeastOneSelected) {\n      return true;\n    }\n    if (atLeastOneDeSelected) {\n      return false;\n    }\n    if (!this.selectable) {\n      return null;\n    }\n    return this.selected;\n  }\n  setSelectedInitialValue(selected) {\n    this.selected = selected;\n  }\n  dispatchRowEvent(type) {\n    const event = {\n      type,\n      node: this\n    };\n    this.localEventService?.dispatchEvent(event);\n  }\n  selectThisNode(newValue, e, source = \"api\") {\n    const selectionNotAllowed = !this.selectable && newValue;\n    const selectionNotChanged = this.selected === newValue;\n    if (selectionNotAllowed || selectionNotChanged) {\n      return false;\n    }\n    this.selected = newValue;\n    this.dispatchRowEvent(\"rowSelected\");\n    const sibling = this.sibling;\n    if (sibling && sibling.footer && sibling.localEventService) {\n      sibling.dispatchRowEvent(\"rowSelected\");\n    }\n    this.beans.eventService.dispatchEvent({\n      ...this.createGlobalRowEvent(\"rowSelected\"),\n      event: e || null,\n      source\n    });\n    return true;\n  }\n  /**\n   * Select (or deselect) the node.\n   * @param newValue -`true` for selection, `false` for deselection.\n   * @param clearSelection - If selecting, then passing `true` will select the node exclusively (i.e. NOT do multi select). If doing deselection, `clearSelection` has no impact.\n   * @param source - Source property that will appear in the `selectionChanged` event.\n   */\n  setSelected(newValue, clearSelection = false, source = \"api\") {\n    if (typeof source === \"boolean\") {\n      _warnOnce(\n        \"since version v30, rowNode.setSelected() property `suppressFinishActions` has been removed, please use `gridApi.setNodesSelected()` for bulk actions, and the event `source` property for ignoring events instead.\"\n      );\n      return;\n    }\n    this.setSelectedParams({\n      newValue,\n      clearSelection,\n      rangeSelect: false,\n      source\n    });\n  }\n  // this is for internal use only. To make calling code more readable, this is the same method as setSelected except it takes names parameters\n  setSelectedParams(params) {\n    if (this.rowPinned) {\n      _warnOnce(\"cannot select pinned rows\");\n      return 0;\n    }\n    if (this.id === void 0) {\n      _warnOnce(\"cannot select node until id for node is known\");\n      return 0;\n    }\n    return this.beans.selectionService.setNodesSelected({ ...params, nodes: [this.footer ? this.sibling : this] });\n  }\n  /**\n   * Returns:\n   * - `true` if node is either pinned to the `top` or `bottom`\n   * - `false` if the node isn't pinned\n   */\n  isRowPinned() {\n    return this.rowPinned === \"top\" || this.rowPinned === \"bottom\";\n  }\n  isParentOfNode(potentialParent) {\n    let parentNode = this.parent;\n    while (parentNode) {\n      if (parentNode === potentialParent) {\n        return true;\n      }\n      parentNode = parentNode.parent;\n    }\n    return false;\n  }\n  /** Add an event listener. */\n  addEventListener(eventType, userListener) {\n    if (!this.localEventService) {\n      this.localEventService = new LocalEventService();\n    }\n    if (this.beans.frameworkOverrides.shouldWrapOutgoing && !this.frameworkEventListenerService) {\n      this.localEventService.setFrameworkOverrides(this.beans.frameworkOverrides);\n      this.frameworkEventListenerService = new FrameworkEventListenerService(this.beans.frameworkOverrides);\n    }\n    const listener = this.frameworkEventListenerService?.wrap(userListener) ?? userListener;\n    this.localEventService.addEventListener(eventType, listener);\n  }\n  /** Remove event listener. */\n  removeEventListener(eventType, userListener) {\n    if (!this.localEventService) {\n      return;\n    }\n    const listener = this.frameworkEventListenerService?.unwrap(userListener) ?? userListener;\n    this.localEventService.removeEventListener(eventType, listener);\n    if (this.localEventService.noRegisteredListenersExist()) {\n      this.localEventService = null;\n    }\n  }\n  onMouseEnter() {\n    this.dispatchRowEvent(\"mouseEnter\");\n  }\n  onMouseLeave() {\n    this.dispatchRowEvent(\"mouseLeave\");\n  }\n  getFirstChildOfFirstChild(rowGroupColumn) {\n    let currentRowNode = this;\n    let isCandidate = true;\n    let foundFirstChildPath = false;\n    let nodeToSwapIn = null;\n    while (isCandidate && !foundFirstChildPath) {\n      const parentRowNode = currentRowNode.parent;\n      const firstChild = _exists(parentRowNode) && currentRowNode.firstChild;\n      if (firstChild) {\n        if (parentRowNode.rowGroupColumn === rowGroupColumn) {\n          foundFirstChildPath = true;\n          nodeToSwapIn = parentRowNode;\n        }\n      } else {\n        isCandidate = false;\n      }\n      currentRowNode = parentRowNode;\n    }\n    return foundFirstChildPath ? nodeToSwapIn : null;\n  }\n  /**\n   * Returns:\n   * - `true` if the node is a full width cell\n   * - `false` if the node is not a full width cell\n   */\n  isFullWidthCell() {\n    if (this.detail) {\n      return true;\n    }\n    const isFullWidthCellFunc = this.beans.gos.getCallback(\"isFullWidthRow\");\n    return isFullWidthCellFunc ? isFullWidthCellFunc({ rowNode: this }) : false;\n  }\n  /**\n   * Returns the route of the row node. If the Row Node is a group, it returns the route to that Row Node.\n   * If the Row Node is not a group, it returns `undefined`.\n   */\n  getRoute() {\n    if (this.key == null) {\n      return;\n    }\n    const res = [];\n    let pointer = this;\n    while (pointer && pointer.key != null) {\n      res.push(pointer.key);\n      pointer = pointer.parent;\n    }\n    return res.reverse();\n  }\n  createFooter() {\n    if (this.sibling) {\n      return;\n    }\n    const footerNode = new _RowNode(this.beans);\n    Object.keys(this).forEach((key) => {\n      if (IGNORED_SIBLING_PROPERTIES.has(key)) {\n        return;\n      }\n      footerNode[key] = this[key];\n    });\n    footerNode.footer = true;\n    footerNode.setRowTop(null);\n    footerNode.setRowIndex(null);\n    footerNode.oldRowTop = null;\n    footerNode.id = \"rowGroupFooter_\" + this.id;\n    footerNode.sibling = this;\n    this.sibling = footerNode;\n  }\n  // Only used by SSRM. In CSRM this is never used as footers should always be present for\n  // the purpose of exporting collapsed groups. In SSRM it is not possible to export collapsed\n  // groups anyway, so can destroy footers.\n  destroyFooter() {\n    if (!this.sibling) {\n      return;\n    }\n    this.sibling.setRowTop(null);\n    this.sibling.setRowIndex(null);\n    this.sibling = void 0;\n  }\n};\n_RowNode.ID_PREFIX_ROW_GROUP = \"row-group-\";\n_RowNode.ID_PREFIX_TOP_PINNED = \"t-\";\n_RowNode.ID_PREFIX_BOTTOM_PINNED = \"b-\";\n_RowNode.OBJECT_ID_SEQUENCE = 0;\nvar RowNode = _RowNode;\n\n// community-modules/core/src/filter/filterManager.ts\nvar FilterManager = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"filterManager\";\n    // when we're waiting for cell data types to be inferred, we need to defer filter model updates\n    this.advancedFilterModelUpdateQueue = [];\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.dataTypeService = beans.dataTypeService;\n    this.quickFilterService = beans.quickFilterService;\n    this.advancedFilterService = beans.advancedFilterService;\n    this.columnFilterService = beans.columnFilterService;\n  }\n  postConstruct() {\n    const refreshFiltersForAggregations = this.refreshFiltersForAggregations.bind(this);\n    const updateAdvancedFilterColumns = this.updateAdvancedFilterColumns.bind(this);\n    this.addManagedEventListeners({\n      columnValueChanged: refreshFiltersForAggregations,\n      columnPivotChanged: refreshFiltersForAggregations,\n      columnPivotModeChanged: refreshFiltersForAggregations,\n      newColumnsLoaded: updateAdvancedFilterColumns,\n      columnVisible: updateAdvancedFilterColumns,\n      advancedFilterEnabledChanged: ({ enabled }) => this.onAdvancedFilterEnabledChanged(enabled),\n      dataTypesInferred: this.processFilterModelUpdateQueue.bind(this)\n    });\n    this.externalFilterPresent = this.isExternalFilterPresentCallback();\n    this.addManagedPropertyListeners([\"isExternalFilterPresent\", \"doesExternalFilterPass\"], () => {\n      this.onFilterChanged({ source: \"api\" });\n    });\n    this.updateAggFiltering();\n    this.addManagedPropertyListener(\"groupAggFiltering\", () => {\n      this.updateAggFiltering();\n      this.onFilterChanged();\n    });\n    this.addManagedPropertyListener(\n      \"advancedFilterModel\",\n      (event) => this.setAdvancedFilterModel(event.currentValue)\n    );\n    if (this.quickFilterService) {\n      this.addManagedListeners(this.quickFilterService, {\n        quickFilterChanged: () => this.onFilterChanged({ source: \"quickFilter\" })\n      });\n    }\n  }\n  isExternalFilterPresentCallback() {\n    const isFilterPresent = this.gos.getCallback(\"isExternalFilterPresent\");\n    if (typeof isFilterPresent === \"function\") {\n      return isFilterPresent({});\n    }\n    return false;\n  }\n  doesExternalFilterPass(node) {\n    const doesFilterPass = this.gos.get(\"doesExternalFilterPass\");\n    if (typeof doesFilterPass === \"function\") {\n      return doesFilterPass(node);\n    }\n    return false;\n  }\n  setFilterModel(model, source = \"api\") {\n    if (this.isAdvancedFilterEnabled()) {\n      this.warnAdvancedFilters();\n      return;\n    }\n    this.columnFilterService?.setFilterModel(model, source);\n  }\n  getFilterModel() {\n    return this.columnFilterService?.getFilterModel() ?? {};\n  }\n  isColumnFilterPresent() {\n    return !!this.columnFilterService?.isColumnFilterPresent();\n  }\n  isAggregateFilterPresent() {\n    return !!this.columnFilterService?.isAggregateFilterPresent();\n  }\n  isExternalFilterPresent() {\n    return this.externalFilterPresent;\n  }\n  isChildFilterPresent() {\n    return this.isColumnFilterPresent() || this.isQuickFilterPresent() || this.isExternalFilterPresent() || this.isAdvancedFilterPresent();\n  }\n  isAdvancedFilterPresent() {\n    return this.isAdvancedFilterEnabled() && this.advancedFilterService.isFilterPresent();\n  }\n  onAdvancedFilterEnabledChanged(enabled) {\n    if (enabled) {\n      if (this.columnFilterService?.disableColumnFilters()) {\n        this.onFilterChanged({ source: \"advancedFilter\" });\n      }\n    } else {\n      if (this.advancedFilterService?.isFilterPresent()) {\n        this.advancedFilterService.setModel(null);\n        this.onFilterChanged({ source: \"advancedFilter\" });\n      }\n    }\n  }\n  isAdvancedFilterEnabled() {\n    return !!this.advancedFilterService?.isEnabled();\n  }\n  isAdvancedFilterHeaderActive() {\n    return this.isAdvancedFilterEnabled() && this.advancedFilterService.isHeaderActive();\n  }\n  isAnyFilterPresent() {\n    return this.isQuickFilterPresent() || this.isColumnFilterPresent() || this.isAggregateFilterPresent() || this.isExternalFilterPresent() || this.isAdvancedFilterPresent();\n  }\n  resetQuickFilterCache() {\n    this.quickFilterService?.resetQuickFilterCache();\n  }\n  refreshFiltersForAggregations() {\n    const isAggFiltering = this.gos.getGroupAggFiltering();\n    if (isAggFiltering) {\n      this.onFilterChanged();\n    }\n  }\n  onFilterChanged(params = {}) {\n    const { source, additionalEventAttributes, columns = [] } = params;\n    this.externalFilterPresent = this.isExternalFilterPresentCallback();\n    (this.columnFilterService ? this.columnFilterService.updateBeforeFilterChanged(params) : AgPromise.resolve()).then(() => {\n      const filterChangedEvent = {\n        source,\n        type: \"filterChanged\",\n        columns\n      };\n      if (additionalEventAttributes) {\n        _mergeDeep(filterChangedEvent, additionalEventAttributes);\n      }\n      this.eventService.dispatchEvent(filterChangedEvent);\n      this.columnFilterService?.updateAfterFilterChanged();\n    });\n  }\n  isSuppressFlashingCellsBecauseFiltering() {\n    return !!this.columnFilterService?.isSuppressFlashingCellsBecauseFiltering();\n  }\n  isQuickFilterPresent() {\n    return !!this.quickFilterService?.isQuickFilterPresent();\n  }\n  updateAggFiltering() {\n    this.aggFiltering = !!this.gos.getGroupAggFiltering();\n  }\n  isAggregateQuickFilterPresent() {\n    return this.isQuickFilterPresent() && this.shouldApplyQuickFilterAfterAgg();\n  }\n  isNonAggregateQuickFilterPresent() {\n    return this.isQuickFilterPresent() && !this.shouldApplyQuickFilterAfterAgg();\n  }\n  shouldApplyQuickFilterAfterAgg() {\n    return (this.aggFiltering || this.columnModel.isPivotMode()) && !this.gos.get(\"applyQuickFilterBeforePivotOrAgg\");\n  }\n  doesRowPassOtherFilters(filterToSkip, node) {\n    return this.doesRowPassFilter({ rowNode: node, filterInstanceToSkip: filterToSkip });\n  }\n  doesRowPassAggregateFilters(params) {\n    if (this.isAggregateQuickFilterPresent() && !this.quickFilterService.doesRowPassQuickFilter(params.rowNode)) {\n      return false;\n    }\n    if (this.isAggregateFilterPresent() && !this.columnFilterService.doAggregateFiltersPass(params.rowNode, params.filterInstanceToSkip)) {\n      return false;\n    }\n    return true;\n  }\n  doesRowPassFilter(params) {\n    if (this.isNonAggregateQuickFilterPresent() && !this.quickFilterService.doesRowPassQuickFilter(params.rowNode)) {\n      return false;\n    }\n    if (this.isExternalFilterPresent() && !this.doesExternalFilterPass(params.rowNode)) {\n      return false;\n    }\n    if (this.isColumnFilterPresent() && !this.columnFilterService.doColumnFiltersPass(params.rowNode, params.filterInstanceToSkip)) {\n      return false;\n    }\n    if (this.isAdvancedFilterPresent() && !this.advancedFilterService.doesFilterPass(params.rowNode)) {\n      return false;\n    }\n    return true;\n  }\n  isFilterActive(column) {\n    return !!this.columnFilterService?.isFilterActive(column);\n  }\n  getOrCreateFilterWrapper(column) {\n    return this.columnFilterService?.getOrCreateFilterWrapper(column) ?? null;\n  }\n  getDefaultFloatingFilter(column) {\n    return this.columnFilterService.getDefaultFloatingFilter(column);\n  }\n  createFilterParams(column, colDef) {\n    return this.columnFilterService.createFilterParams(column, colDef);\n  }\n  // for group filters, can change dynamically whether they are allowed or not\n  isFilterAllowed(column) {\n    if (this.isAdvancedFilterEnabled()) {\n      return false;\n    }\n    return !!this.columnFilterService?.isFilterAllowed(column);\n  }\n  getFloatingFilterCompDetails(column, showParentFilter) {\n    return this.columnFilterService?.getFloatingFilterCompDetails(column, showParentFilter);\n  }\n  getCurrentFloatingFilterParentModel(column) {\n    return this.columnFilterService?.getCurrentFloatingFilterParentModel(column);\n  }\n  // destroys the filter, so it no longer takes part\n  destroyFilter(column, source = \"api\") {\n    this.columnFilterService?.destroyFilter(column, source);\n  }\n  areFilterCompsDifferent(oldCompDetails, newCompDetails) {\n    return !!this.columnFilterService?.areFilterCompsDifferent(oldCompDetails, newCompDetails);\n  }\n  getAdvancedFilterModel() {\n    return this.isAdvancedFilterEnabled() ? this.advancedFilterService.getModel() : null;\n  }\n  setAdvancedFilterModel(expression) {\n    if (!this.isAdvancedFilterEnabled()) {\n      return;\n    }\n    if (this.dataTypeService?.isPendingInference()) {\n      this.advancedFilterModelUpdateQueue.push(expression);\n      return;\n    }\n    this.advancedFilterService.setModel(expression ?? null);\n    this.onFilterChanged({ source: \"advancedFilter\" });\n  }\n  toggleAdvancedFilterBuilder(show, source) {\n    if (!this.isAdvancedFilterEnabled()) {\n      return;\n    }\n    this.advancedFilterService.getCtrl().toggleFilterBuilder({ source, force: show });\n  }\n  updateAdvancedFilterColumns() {\n    if (!this.isAdvancedFilterEnabled()) {\n      return;\n    }\n    if (this.advancedFilterService.updateValidity()) {\n      this.onFilterChanged({ source: \"advancedFilter\" });\n    }\n  }\n  hasFloatingFilters() {\n    if (this.isAdvancedFilterEnabled()) {\n      return false;\n    }\n    return !!this.columnFilterService?.hasFloatingFilters();\n  }\n  getFilterInstance(key, callback) {\n    if (this.isAdvancedFilterEnabled()) {\n      this.warnAdvancedFilters();\n      return void 0;\n    }\n    return this.columnFilterService?.getFilterInstance(key, callback);\n  }\n  getColumnFilterInstance(key) {\n    if (this.isAdvancedFilterEnabled()) {\n      this.warnAdvancedFilters();\n      return Promise.resolve(void 0);\n    }\n    return this.columnFilterService?.getColumnFilterInstance(key) ?? Promise.resolve(void 0);\n  }\n  warnAdvancedFilters() {\n    _warnOnce(\"Column Filter API methods have been disabled as Advanced Filters are enabled.\");\n  }\n  setupAdvancedFilterHeaderComp(eCompToInsertBefore) {\n    this.advancedFilterService?.getCtrl().setupHeaderComp(eCompToInsertBefore);\n  }\n  getHeaderRowCount() {\n    return this.isAdvancedFilterHeaderActive() ? 1 : 0;\n  }\n  getHeaderHeight() {\n    return this.isAdvancedFilterHeaderActive() ? this.advancedFilterService.getCtrl().getHeaderHeight() : 0;\n  }\n  processFilterModelUpdateQueue() {\n    this.advancedFilterModelUpdateQueue.forEach((model) => this.setAdvancedFilterModel(model));\n    this.advancedFilterModelUpdateQueue = [];\n  }\n  getColumnFilterModel(key) {\n    return this.columnFilterService?.getColumnFilterModel(key);\n  }\n  setColumnFilterModel(key, model) {\n    if (this.isAdvancedFilterEnabled()) {\n      this.warnAdvancedFilters();\n      return Promise.resolve();\n    }\n    return this.columnFilterService?.setColumnFilterModel(key, model) ?? Promise.resolve();\n  }\n};\n\n// community-modules/core/src/filter/filterWrapperComp.ts\nvar FilterWrapperComp = class extends Component {\n  constructor(column, source) {\n    super(\n      /* html */\n      `<div class=\"ag-filter\"></div>`\n    );\n    this.column = column;\n    this.source = source;\n    this.filterWrapper = null;\n  }\n  wireBeans(beans) {\n    this.filterManager = beans.filterManager;\n    this.columnModel = beans.columnModel;\n  }\n  postConstruct() {\n    this.createFilter(true);\n    this.addManagedEventListeners({ filterDestroyed: this.onFilterDestroyed.bind(this) });\n  }\n  hasFilter() {\n    return !!this.filterWrapper;\n  }\n  getFilter() {\n    return this.filterWrapper?.filterPromise ?? null;\n  }\n  afterInit() {\n    return this.filterWrapper?.filterPromise?.then(() => {\n    }) ?? AgPromise.resolve();\n  }\n  afterGuiAttached(params) {\n    this.filterWrapper?.filterPromise?.then((filter) => {\n      filter?.afterGuiAttached?.(params);\n    });\n  }\n  afterGuiDetached() {\n    this.filterWrapper?.filterPromise?.then((filter) => {\n      filter?.afterGuiDetached?.();\n    });\n  }\n  createFilter(init) {\n    const { column, source } = this;\n    this.filterWrapper = this.filterManager?.getOrCreateFilterWrapper(column) ?? null;\n    if (!this.filterWrapper?.filterPromise) {\n      return;\n    }\n    this.filterWrapper.filterPromise.then((filter) => {\n      const guiFromFilter = filter.getGui();\n      if (!_exists(guiFromFilter)) {\n        _warnOnce(`getGui method from filter returned ${guiFromFilter}; it should be a DOM element.`);\n      }\n      this.appendChild(guiFromFilter);\n      if (init) {\n        this.eventService.dispatchEvent({\n          type: \"filterOpened\",\n          column,\n          source,\n          eGui: this.getGui()\n        });\n      }\n    });\n  }\n  onFilterDestroyed(event) {\n    if ((event.source === \"api\" || event.source === \"paramsUpdated\") && event.column.getId() === this.column.getId() && this.columnModel.getColDefCol(this.column)) {\n      _clearElement(this.getGui());\n      this.createFilter();\n    }\n  }\n  destroy() {\n    this.filterWrapper = null;\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/rendering/features/positionableFeature.ts\nvar RESIZE_CONTAINER_STYLE = \"ag-resizer-wrapper\";\nvar makeDiv = (dataRefPrefix, classSuffix) => `<div data-ref=\"${dataRefPrefix}Resizer\" class=\"ag-resizer ag-resizer-${classSuffix}\"></div>`;\nvar RESIZE_TEMPLATE = (\n  /* html */\n  `<div class=\"${RESIZE_CONTAINER_STYLE}\">\n        ${makeDiv(\"eTopLeft\", \"topLeft\")}\n        ${makeDiv(\"eTop\", \"top\")}\n        ${makeDiv(\"eTopRight\", \"topRight\")}\n        ${makeDiv(\"eRight\", \"right\")}\n        ${makeDiv(\"eBottomRight\", \"bottomRight\")}\n        ${makeDiv(\"eBottom\", \"bottom\")}\n        ${makeDiv(\"eBottomLeft\", \"bottomLeft\")}\n        ${makeDiv(\"eLeft\", \"left\")}\n    </div>`\n);\nvar PositionableFeature = class extends BeanStub {\n  constructor(element, config) {\n    super();\n    this.element = element;\n    this.dragStartPosition = {\n      x: 0,\n      y: 0\n    };\n    this.position = {\n      x: 0,\n      y: 0\n    };\n    this.lastSize = {\n      width: -1,\n      height: -1\n    };\n    this.positioned = false;\n    this.resizersAdded = false;\n    this.resizeListeners = [];\n    this.boundaryEl = null;\n    this.isResizing = false;\n    this.isMoving = false;\n    this.resizable = {};\n    this.movable = false;\n    this.currentResizer = null;\n    this.config = Object.assign({}, { popup: false }, config);\n  }\n  wireBeans(beans) {\n    this.popupService = beans.popupService;\n    this.resizeObserverService = beans.resizeObserverService;\n    this.dragService = beans.dragService;\n  }\n  center() {\n    const { clientHeight, clientWidth } = this.offsetParent;\n    const x = clientWidth / 2 - this.getWidth() / 2;\n    const y = clientHeight / 2 - this.getHeight() / 2;\n    this.offsetElement(x, y);\n  }\n  initialisePosition() {\n    if (this.positioned) {\n      return;\n    }\n    const { centered, forcePopupParentAsOffsetParent, minWidth, width, minHeight, height, x, y } = this.config;\n    if (!this.offsetParent) {\n      this.setOffsetParent();\n    }\n    let computedMinHeight = 0;\n    let computedMinWidth = 0;\n    const isElementVisible = _isVisible(this.element);\n    if (isElementVisible) {\n      const boundaryEl = this.findBoundaryElement();\n      const offsetParentComputedStyles = window.getComputedStyle(boundaryEl);\n      if (offsetParentComputedStyles.minWidth != null) {\n        const paddingWidth = boundaryEl.offsetWidth - this.element.offsetWidth;\n        computedMinWidth = parseInt(offsetParentComputedStyles.minWidth, 10) - paddingWidth;\n      }\n      if (offsetParentComputedStyles.minHeight != null) {\n        const paddingHeight = boundaryEl.offsetHeight - this.element.offsetHeight;\n        computedMinHeight = parseInt(offsetParentComputedStyles.minHeight, 10) - paddingHeight;\n      }\n    }\n    this.minHeight = minHeight || computedMinHeight;\n    this.minWidth = minWidth || computedMinWidth;\n    if (width) {\n      this.setWidth(width);\n    }\n    if (height) {\n      this.setHeight(height);\n    }\n    if (!width || !height) {\n      this.refreshSize();\n    }\n    if (centered) {\n      this.center();\n    } else if (x || y) {\n      this.offsetElement(x, y);\n    } else if (isElementVisible && forcePopupParentAsOffsetParent) {\n      let boundaryEl = this.boundaryEl;\n      let initialisedDuringPositioning = true;\n      if (!boundaryEl) {\n        boundaryEl = this.findBoundaryElement();\n        initialisedDuringPositioning = false;\n      }\n      if (boundaryEl) {\n        const top = parseFloat(boundaryEl.style.top);\n        const left = parseFloat(boundaryEl.style.left);\n        if (initialisedDuringPositioning) {\n          this.offsetElement(isNaN(left) ? 0 : left, isNaN(top) ? 0 : top);\n        } else {\n          this.setPosition(left, top);\n        }\n      }\n    }\n    this.positioned = !!this.offsetParent;\n  }\n  isPositioned() {\n    return this.positioned;\n  }\n  getPosition() {\n    return this.position;\n  }\n  setMovable(movable, moveElement) {\n    if (!this.config.popup || movable === this.movable) {\n      return;\n    }\n    this.movable = movable;\n    const params = this.moveElementDragListener || {\n      eElement: moveElement,\n      onDragStart: this.onMoveStart.bind(this),\n      onDragging: this.onMove.bind(this),\n      onDragStop: this.onMoveEnd.bind(this)\n    };\n    if (movable) {\n      this.dragService.addDragSource(params);\n      this.moveElementDragListener = params;\n    } else {\n      this.dragService.removeDragSource(params);\n      this.moveElementDragListener = void 0;\n    }\n  }\n  setResizable(resizable) {\n    this.clearResizeListeners();\n    if (resizable) {\n      this.addResizers();\n    } else {\n      this.removeResizers();\n    }\n    if (typeof resizable === \"boolean\") {\n      if (resizable === false) {\n        return;\n      }\n      resizable = {\n        topLeft: resizable,\n        top: resizable,\n        topRight: resizable,\n        right: resizable,\n        bottomRight: resizable,\n        bottom: resizable,\n        bottomLeft: resizable,\n        left: resizable\n      };\n    }\n    Object.keys(resizable).forEach((side) => {\n      const resizableStructure = resizable;\n      const isSideResizable = !!resizableStructure[side];\n      const resizerEl = this.getResizerElement(side);\n      const params = {\n        dragStartPixels: 0,\n        eElement: resizerEl,\n        onDragStart: (e) => this.onResizeStart(e, side),\n        onDragging: this.onResize.bind(this),\n        onDragStop: (e) => this.onResizeEnd(e, side)\n      };\n      if (isSideResizable || !this.isAlive() && !isSideResizable) {\n        if (isSideResizable) {\n          this.dragService.addDragSource(params);\n          this.resizeListeners.push(params);\n          resizerEl.style.pointerEvents = \"all\";\n        } else {\n          resizerEl.style.pointerEvents = \"none\";\n        }\n        this.resizable[side] = isSideResizable;\n      }\n    });\n  }\n  removeSizeFromEl() {\n    this.element.style.removeProperty(\"height\");\n    this.element.style.removeProperty(\"width\");\n    this.element.style.removeProperty(\"flex\");\n  }\n  restoreLastSize() {\n    this.element.style.flex = \"0 0 auto\";\n    const { height, width } = this.lastSize;\n    if (width !== -1) {\n      this.element.style.width = `${width}px`;\n    }\n    if (height !== -1) {\n      this.element.style.height = `${height}px`;\n    }\n  }\n  getHeight() {\n    return this.element.offsetHeight;\n  }\n  setHeight(height) {\n    const { popup } = this.config;\n    const eGui = this.element;\n    let isPercent = false;\n    if (typeof height === \"string\" && height.indexOf(\"%\") !== -1) {\n      _setFixedHeight(eGui, height);\n      height = _getAbsoluteHeight(eGui);\n      isPercent = true;\n    } else {\n      height = Math.max(this.minHeight, height);\n      if (this.positioned) {\n        const availableHeight = this.getAvailableHeight();\n        if (availableHeight && height > availableHeight) {\n          height = availableHeight;\n        }\n      }\n    }\n    if (this.getHeight() === height) {\n      return;\n    }\n    if (!isPercent) {\n      if (popup) {\n        _setFixedHeight(eGui, height);\n      } else {\n        eGui.style.height = `${height}px`;\n        eGui.style.flex = \"0 0 auto\";\n        this.lastSize.height = typeof height === \"number\" ? height : parseFloat(height);\n      }\n    } else {\n      eGui.style.maxHeight = \"unset\";\n      eGui.style.minHeight = \"unset\";\n    }\n  }\n  getAvailableHeight() {\n    const { popup, forcePopupParentAsOffsetParent } = this.config;\n    if (!this.positioned) {\n      this.initialisePosition();\n    }\n    const { clientHeight } = this.offsetParent;\n    if (!clientHeight) {\n      return null;\n    }\n    const elRect = this.element.getBoundingClientRect();\n    const offsetParentRect = this.offsetParent.getBoundingClientRect();\n    const yPosition = popup ? this.position.y : elRect.top;\n    const parentTop = popup ? 0 : offsetParentRect.top;\n    let additionalHeight = 0;\n    if (forcePopupParentAsOffsetParent) {\n      const parentEl = this.element.parentElement;\n      if (parentEl) {\n        const { bottom } = parentEl.getBoundingClientRect();\n        additionalHeight = bottom - elRect.bottom;\n      }\n    }\n    const availableHeight = clientHeight + parentTop - yPosition - additionalHeight;\n    return availableHeight;\n  }\n  getWidth() {\n    return this.element.offsetWidth;\n  }\n  setWidth(width) {\n    const eGui = this.element;\n    const { popup } = this.config;\n    let isPercent = false;\n    if (typeof width === \"string\" && width.indexOf(\"%\") !== -1) {\n      _setFixedWidth(eGui, width);\n      width = _getAbsoluteWidth(eGui);\n      isPercent = true;\n    } else if (this.positioned) {\n      width = Math.max(this.minWidth, width);\n      const { clientWidth } = this.offsetParent;\n      const xPosition = popup ? this.position.x : this.element.getBoundingClientRect().left;\n      if (clientWidth && width + xPosition > clientWidth) {\n        width = clientWidth - xPosition;\n      }\n    }\n    if (this.getWidth() === width) {\n      return;\n    }\n    if (!isPercent) {\n      if (this.config.popup) {\n        _setFixedWidth(eGui, width);\n      } else {\n        eGui.style.width = `${width}px`;\n        eGui.style.flex = \" unset\";\n        this.lastSize.width = typeof width === \"number\" ? width : parseFloat(width);\n      }\n    } else {\n      eGui.style.maxWidth = \"unset\";\n      eGui.style.minWidth = \"unset\";\n    }\n  }\n  offsetElement(x = 0, y = 0) {\n    const { forcePopupParentAsOffsetParent } = this.config;\n    const ePopup = forcePopupParentAsOffsetParent ? this.boundaryEl : this.element;\n    if (!ePopup) {\n      return;\n    }\n    this.popupService.positionPopup({\n      ePopup,\n      keepWithinBounds: true,\n      skipObserver: this.movable || this.isResizable(),\n      updatePosition: () => ({ x, y })\n    });\n    this.setPosition(parseFloat(ePopup.style.left), parseFloat(ePopup.style.top));\n  }\n  constrainSizeToAvailableHeight(constrain) {\n    if (!this.config.forcePopupParentAsOffsetParent) {\n      return;\n    }\n    const applyMaxHeightToElement = () => {\n      const availableHeight = this.getAvailableHeight();\n      this.element.style.setProperty(\"max-height\", `${availableHeight}px`);\n    };\n    if (constrain) {\n      this.resizeObserverSubscriber = this.resizeObserverService.observeResize(\n        this.popupService.getPopupParent(),\n        applyMaxHeightToElement\n      );\n    } else {\n      this.element.style.removeProperty(\"max-height\");\n      if (this.resizeObserverSubscriber) {\n        this.resizeObserverSubscriber();\n        this.resizeObserverSubscriber = void 0;\n      }\n    }\n  }\n  setPosition(x, y) {\n    this.position.x = x;\n    this.position.y = y;\n  }\n  updateDragStartPosition(x, y) {\n    this.dragStartPosition = { x, y };\n  }\n  calculateMouseMovement(params) {\n    const { e, isLeft, isTop, anywhereWithin, topBuffer } = params;\n    const xDiff = e.clientX - this.dragStartPosition.x;\n    const yDiff = e.clientY - this.dragStartPosition.y;\n    const movementX = this.shouldSkipX(e, !!isLeft, !!anywhereWithin, xDiff) ? 0 : xDiff;\n    const movementY = this.shouldSkipY(e, !!isTop, topBuffer, yDiff) ? 0 : yDiff;\n    return { movementX, movementY };\n  }\n  shouldSkipX(e, isLeft, anywhereWithin, diff) {\n    const elRect = this.element.getBoundingClientRect();\n    const parentRect = this.offsetParent.getBoundingClientRect();\n    const boundaryElRect = this.boundaryEl.getBoundingClientRect();\n    const xPosition = this.config.popup ? this.position.x : elRect.left;\n    let skipX = xPosition <= 0 && parentRect.left >= e.clientX || parentRect.right <= e.clientX && parentRect.right <= boundaryElRect.right;\n    if (skipX) {\n      return true;\n    }\n    if (isLeft) {\n      skipX = // skip if we are moving to the left and the cursor\n      // is positioned to the right of the left side anchor\n      diff < 0 && e.clientX > xPosition + parentRect.left || // skip if we are moving to the right and the cursor\n      // is positioned to the left of the dialog\n      diff > 0 && e.clientX < xPosition + parentRect.left;\n    } else {\n      if (anywhereWithin) {\n        skipX = diff < 0 && e.clientX > boundaryElRect.right || diff > 0 && e.clientX < xPosition + parentRect.left;\n      } else {\n        skipX = // if the movement is bound to the right side of the dialog\n        // we skip if we are moving to the left and the cursor\n        // is to the right of the dialog\n        diff < 0 && e.clientX > boundaryElRect.right || // or skip if we are moving to the right and the cursor\n        // is to the left of the right side anchor\n        diff > 0 && e.clientX < boundaryElRect.right;\n      }\n    }\n    return skipX;\n  }\n  shouldSkipY(e, isTop, topBuffer = 0, diff) {\n    const elRect = this.element.getBoundingClientRect();\n    const parentRect = this.offsetParent.getBoundingClientRect();\n    const boundaryElRect = this.boundaryEl.getBoundingClientRect();\n    const yPosition = this.config.popup ? this.position.y : elRect.top;\n    let skipY = yPosition <= 0 && parentRect.top >= e.clientY || parentRect.bottom <= e.clientY && parentRect.bottom <= boundaryElRect.bottom;\n    if (skipY) {\n      return true;\n    }\n    if (isTop) {\n      skipY = // skip if we are moving to towards top and the cursor is\n      // below the top anchor + topBuffer\n      // note: topBuffer is used when moving the dialog using the title bar\n      diff < 0 && e.clientY > yPosition + parentRect.top + topBuffer || // skip if we are moving to the bottom and the cursor is\n      // above the top anchor\n      diff > 0 && e.clientY < yPosition + parentRect.top;\n    } else {\n      skipY = // skip if we are moving towards the top and the cursor\n      // is below the bottom anchor\n      diff < 0 && e.clientY > boundaryElRect.bottom || // skip if we are moving towards the bottom and the cursor\n      // is above the bottom anchor\n      diff > 0 && e.clientY < boundaryElRect.bottom;\n    }\n    return skipY;\n  }\n  createResizeMap() {\n    const eGui = this.element;\n    this.resizerMap = {\n      topLeft: { element: eGui.querySelector(\"[data-ref=eTopLeftResizer]\") },\n      top: { element: eGui.querySelector(\"[data-ref=eTopResizer]\") },\n      topRight: { element: eGui.querySelector(\"[data-ref=eTopRightResizer]\") },\n      right: { element: eGui.querySelector(\"[data-ref=eRightResizer]\") },\n      bottomRight: { element: eGui.querySelector(\"[data-ref=eBottomRightResizer]\") },\n      bottom: { element: eGui.querySelector(\"[data-ref=eBottomResizer]\") },\n      bottomLeft: { element: eGui.querySelector(\"[data-ref=eBottomLeftResizer]\") },\n      left: { element: eGui.querySelector(\"[data-ref=eLeftResizer]\") }\n    };\n  }\n  addResizers() {\n    if (this.resizersAdded) {\n      return;\n    }\n    const eGui = this.element;\n    if (!eGui) {\n      return;\n    }\n    const parser = new DOMParser();\n    const resizers = parser.parseFromString(RESIZE_TEMPLATE, \"text/html\").body;\n    eGui.appendChild(resizers.firstChild);\n    this.createResizeMap();\n    this.resizersAdded = true;\n  }\n  removeResizers() {\n    this.resizerMap = void 0;\n    const resizerEl = this.element.querySelector(`.${RESIZE_CONTAINER_STYLE}`);\n    if (resizerEl) {\n      this.element.removeChild(resizerEl);\n    }\n    this.resizersAdded = false;\n  }\n  getResizerElement(side) {\n    return this.resizerMap[side].element;\n  }\n  onResizeStart(e, side) {\n    this.boundaryEl = this.findBoundaryElement();\n    if (!this.positioned) {\n      this.initialisePosition();\n    }\n    this.currentResizer = {\n      isTop: !!side.match(/top/i),\n      isRight: !!side.match(/right/i),\n      isBottom: !!side.match(/bottom/i),\n      isLeft: !!side.match(/left/i)\n    };\n    this.element.classList.add(\"ag-resizing\");\n    this.resizerMap[side].element.classList.add(\"ag-active\");\n    const { popup, forcePopupParentAsOffsetParent } = this.config;\n    if (!popup && !forcePopupParentAsOffsetParent) {\n      this.applySizeToSiblings(this.currentResizer.isBottom || this.currentResizer.isTop);\n    }\n    this.isResizing = true;\n    this.updateDragStartPosition(e.clientX, e.clientY);\n  }\n  getSiblings() {\n    const element = this.element;\n    const parent = element.parentElement;\n    if (!parent) {\n      return null;\n    }\n    return Array.prototype.slice.call(parent.children).filter((el) => !el.classList.contains(\"ag-hidden\"));\n  }\n  getMinSizeOfSiblings() {\n    const siblings = this.getSiblings() || [];\n    let height = 0;\n    let width = 0;\n    for (let i = 0; i < siblings.length; i++) {\n      const currentEl = siblings[i];\n      const isFlex = !!currentEl.style.flex && currentEl.style.flex !== \"0 0 auto\";\n      if (currentEl === this.element) {\n        continue;\n      }\n      let nextHeight = this.minHeight || 0;\n      let nextWidth = this.minWidth || 0;\n      if (isFlex) {\n        const computedStyle = window.getComputedStyle(currentEl);\n        if (computedStyle.minHeight) {\n          nextHeight = parseInt(computedStyle.minHeight, 10);\n        }\n        if (computedStyle.minWidth) {\n          nextWidth = parseInt(computedStyle.minWidth, 10);\n        }\n      } else {\n        nextHeight = currentEl.offsetHeight;\n        nextWidth = currentEl.offsetWidth;\n      }\n      height += nextHeight;\n      width += nextWidth;\n    }\n    return { height, width };\n  }\n  applySizeToSiblings(vertical) {\n    let containerToFlex = null;\n    const siblings = this.getSiblings();\n    if (!siblings) {\n      return;\n    }\n    for (let i = 0; i < siblings.length; i++) {\n      const el = siblings[i];\n      if (el === containerToFlex) {\n        continue;\n      }\n      if (vertical) {\n        el.style.height = `${el.offsetHeight}px`;\n      } else {\n        el.style.width = `${el.offsetWidth}px`;\n      }\n      el.style.flex = \"0 0 auto\";\n      if (el === this.element) {\n        containerToFlex = siblings[i + 1];\n      }\n    }\n    if (containerToFlex) {\n      containerToFlex.style.removeProperty(\"height\");\n      containerToFlex.style.removeProperty(\"min-height\");\n      containerToFlex.style.removeProperty(\"max-height\");\n      containerToFlex.style.flex = \"1 1 auto\";\n    }\n  }\n  isResizable() {\n    return Object.values(this.resizable).some((value) => value);\n  }\n  onResize(e) {\n    if (!this.isResizing || !this.currentResizer) {\n      return;\n    }\n    const { popup, forcePopupParentAsOffsetParent } = this.config;\n    const { isTop, isRight, isBottom, isLeft } = this.currentResizer;\n    const isHorizontal = isRight || isLeft;\n    const isVertical = isBottom || isTop;\n    const { movementX, movementY } = this.calculateMouseMovement({ e, isLeft, isTop });\n    const xPosition = this.position.x;\n    const yPosition = this.position.y;\n    let offsetLeft = 0;\n    let offsetTop = 0;\n    if (isHorizontal && movementX) {\n      const direction = isLeft ? -1 : 1;\n      const oldWidth = this.getWidth();\n      const newWidth = oldWidth + movementX * direction;\n      let skipWidth = false;\n      if (isLeft) {\n        offsetLeft = oldWidth - newWidth;\n        if (xPosition + offsetLeft <= 0 || newWidth <= this.minWidth) {\n          skipWidth = true;\n          offsetLeft = 0;\n        }\n      }\n      if (!skipWidth) {\n        this.setWidth(newWidth);\n      }\n    }\n    if (isVertical && movementY) {\n      const direction = isTop ? -1 : 1;\n      const oldHeight = this.getHeight();\n      const newHeight = oldHeight + movementY * direction;\n      let skipHeight = false;\n      if (isTop) {\n        offsetTop = oldHeight - newHeight;\n        if (yPosition + offsetTop <= 0 || newHeight <= this.minHeight) {\n          skipHeight = true;\n          offsetTop = 0;\n        }\n      } else {\n        if (!this.config.popup && !this.config.forcePopupParentAsOffsetParent && oldHeight < newHeight && this.getMinSizeOfSiblings().height + newHeight > this.element.parentElement.offsetHeight) {\n          skipHeight = true;\n        }\n      }\n      if (!skipHeight) {\n        this.setHeight(newHeight);\n      }\n    }\n    this.updateDragStartPosition(e.clientX, e.clientY);\n    if ((popup || forcePopupParentAsOffsetParent) && offsetLeft || offsetTop) {\n      this.offsetElement(xPosition + offsetLeft, yPosition + offsetTop);\n    }\n  }\n  onResizeEnd(e, side) {\n    this.isResizing = false;\n    this.currentResizer = null;\n    this.boundaryEl = null;\n    this.element.classList.remove(\"ag-resizing\");\n    this.resizerMap[side].element.classList.remove(\"ag-active\");\n    this.dispatchLocalEvent({ type: \"resize\" });\n  }\n  refreshSize() {\n    const eGui = this.element;\n    if (this.config.popup) {\n      if (!this.config.width) {\n        this.setWidth(eGui.offsetWidth);\n      }\n      if (!this.config.height) {\n        this.setHeight(eGui.offsetHeight);\n      }\n    }\n  }\n  onMoveStart(e) {\n    this.boundaryEl = this.findBoundaryElement();\n    if (!this.positioned) {\n      this.initialisePosition();\n    }\n    this.isMoving = true;\n    this.element.classList.add(\"ag-moving\");\n    this.updateDragStartPosition(e.clientX, e.clientY);\n  }\n  onMove(e) {\n    if (!this.isMoving) {\n      return;\n    }\n    const { x, y } = this.position;\n    let topBuffer;\n    if (this.config.calculateTopBuffer) {\n      topBuffer = this.config.calculateTopBuffer();\n    }\n    const { movementX, movementY } = this.calculateMouseMovement({\n      e,\n      isTop: true,\n      anywhereWithin: true,\n      topBuffer\n    });\n    this.offsetElement(x + movementX, y + movementY);\n    this.updateDragStartPosition(e.clientX, e.clientY);\n  }\n  onMoveEnd() {\n    this.isMoving = false;\n    this.boundaryEl = null;\n    this.element.classList.remove(\"ag-moving\");\n  }\n  setOffsetParent() {\n    if (this.config.forcePopupParentAsOffsetParent) {\n      this.offsetParent = this.popupService.getPopupParent();\n    } else {\n      this.offsetParent = this.element.offsetParent;\n    }\n  }\n  findBoundaryElement() {\n    let el = this.element;\n    while (el) {\n      if (window.getComputedStyle(el).position !== \"static\") {\n        return el;\n      }\n      el = el.parentElement;\n    }\n    return this.element;\n  }\n  clearResizeListeners() {\n    while (this.resizeListeners.length) {\n      const params = this.resizeListeners.pop();\n      this.dragService.removeDragSource(params);\n    }\n  }\n  destroy() {\n    super.destroy();\n    if (this.moveElementDragListener) {\n      this.dragService.removeDragSource(this.moveElementDragListener);\n    }\n    this.constrainSizeToAvailableHeight(false);\n    this.clearResizeListeners();\n    this.removeResizers();\n  }\n};\n\n// community-modules/core/src/widgets/managedFocusFeature.ts\nvar _ManagedFocusFeature = class _ManagedFocusFeature extends BeanStub {\n  constructor(eFocusableElement, callbacks = {}) {\n    super();\n    this.eFocusableElement = eFocusableElement;\n    this.callbacks = callbacks;\n    this.callbacks = {\n      shouldStopEventPropagation: () => false,\n      onTabKeyDown: (e) => {\n        if (e.defaultPrevented) {\n          return;\n        }\n        const nextRoot = this.focusService.findNextFocusableElement(this.eFocusableElement, false, e.shiftKey);\n        if (!nextRoot) {\n          return;\n        }\n        nextRoot.focus();\n        e.preventDefault();\n      },\n      ...callbacks\n    };\n  }\n  wireBeans(beans) {\n    this.focusService = beans.focusService;\n  }\n  postConstruct() {\n    this.eFocusableElement.classList.add(_ManagedFocusFeature.FOCUS_MANAGED_CLASS);\n    this.addKeyDownListeners(this.eFocusableElement);\n    if (this.callbacks.onFocusIn) {\n      this.addManagedElementListeners(this.eFocusableElement, { focusin: this.callbacks.onFocusIn });\n    }\n    if (this.callbacks.onFocusOut) {\n      this.addManagedElementListeners(this.eFocusableElement, { focusout: this.callbacks.onFocusOut });\n    }\n  }\n  addKeyDownListeners(eGui) {\n    this.addManagedElementListeners(eGui, {\n      keydown: (e) => {\n        if (e.defaultPrevented || _isStopPropagationForAgGrid(e)) {\n          return;\n        }\n        if (this.callbacks.shouldStopEventPropagation(e)) {\n          _stopPropagationForAgGrid(e);\n          return;\n        }\n        if (e.key === KeyCode.TAB) {\n          this.callbacks.onTabKeyDown(e);\n        } else if (this.callbacks.handleKeyDown) {\n          this.callbacks.handleKeyDown(e);\n        }\n      }\n    });\n  }\n};\n_ManagedFocusFeature.FOCUS_MANAGED_CLASS = \"ag-focus-managed\";\nvar ManagedFocusFeature = _ManagedFocusFeature;\n\n// community-modules/core/src/filter/filterLocaleText.ts\nvar FILTER_LOCALE_TEXT = {\n  applyFilter: \"Apply\",\n  clearFilter: \"Clear\",\n  resetFilter: \"Reset\",\n  cancelFilter: \"Cancel\",\n  textFilter: \"Text Filter\",\n  numberFilter: \"Number Filter\",\n  dateFilter: \"Date Filter\",\n  setFilter: \"Set Filter\",\n  filterOoo: \"Filter...\",\n  empty: \"Choose one\",\n  equals: \"Equals\",\n  notEqual: \"Does not equal\",\n  lessThan: \"Less than\",\n  greaterThan: \"Greater than\",\n  inRange: \"Between\",\n  inRangeStart: \"From\",\n  inRangeEnd: \"To\",\n  lessThanOrEqual: \"Less than or equal to\",\n  greaterThanOrEqual: \"Greater than or equal to\",\n  contains: \"Contains\",\n  notContains: \"Does not contain\",\n  startsWith: \"Begins with\",\n  endsWith: \"Ends with\",\n  blank: \"Blank\",\n  notBlank: \"Not blank\",\n  before: \"Before\",\n  after: \"After\",\n  andCondition: \"AND\",\n  orCondition: \"OR\",\n  dateFormatOoo: \"yyyy-mm-dd\"\n};\n\n// community-modules/core/src/filter/floating/provided/providedFilterUtils.ts\nfunction getDebounceMs(params, debounceDefault) {\n  if (isUseApplyButton(params)) {\n    if (params.debounceMs != null) {\n      _warnOnce(\"debounceMs is ignored when apply button is present\");\n    }\n    return 0;\n  }\n  return params.debounceMs != null ? params.debounceMs : debounceDefault;\n}\nfunction isUseApplyButton(params) {\n  return !!params.buttons && params.buttons.indexOf(\"apply\") >= 0;\n}\n\n// community-modules/core/src/filter/provided/providedFilter.ts\nvar ProvidedFilter = class extends Component {\n  constructor(filterNameKey) {\n    super();\n    this.filterNameKey = filterNameKey;\n    this.applyActive = false;\n    this.hidePopup = null;\n    this.debouncePending = false;\n    // after the user hits 'apply' the model gets copied to here. this is then the model that we use for\n    // all filtering. so if user changes UI but doesn't hit apply, then the UI will be out of sync with this model.\n    // this is what we want, as the UI should only become the 'active' filter once it's applied. when apply is\n    // inactive, this model will be in sync (following the debounce ms). if the UI is not a valid filter\n    // (eg the value is missing so nothing to filter on, or for set filter all checkboxes are checked so filter\n    // not active) then this appliedModel will be null/undefined.\n    this.appliedModel = null;\n    this.eFilterBody = RefPlaceholder;\n    this.buttonListeners = [];\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n  }\n  postConstruct() {\n    this.resetTemplate();\n    this.createManagedBean(\n      new ManagedFocusFeature(this.getFocusableElement(), {\n        handleKeyDown: this.handleKeyDown.bind(this)\n      })\n    );\n    this.positionableFeature = new PositionableFeature(this.getPositionableElement(), {\n      forcePopupParentAsOffsetParent: true\n    });\n    this.createBean(this.positionableFeature);\n  }\n  // override\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  handleKeyDown(e) {\n  }\n  getFilterTitle() {\n    return this.translate(this.filterNameKey);\n  }\n  isFilterActive() {\n    return !!this.appliedModel;\n  }\n  resetTemplate(paramsMap) {\n    let eGui = this.getGui();\n    if (eGui) {\n      eGui.removeEventListener(\"submit\", this.onFormSubmit);\n    }\n    const templateString = (\n      /* html */\n      `\n            <form class=\"ag-filter-wrapper\">\n                <div class=\"ag-filter-body-wrapper ag-${this.getCssIdentifier()}-body-wrapper\" data-ref=\"eFilterBody\">\n                    ${this.createBodyTemplate()}\n                </div>\n            </form>`\n    );\n    this.setTemplate(templateString, this.getAgComponents(), paramsMap);\n    eGui = this.getGui();\n    if (eGui) {\n      eGui.addEventListener(\"submit\", this.onFormSubmit);\n    }\n  }\n  isReadOnly() {\n    return !!this.providedFilterParams.readOnly;\n  }\n  init(params) {\n    this.setParams(params);\n    this.resetUiToDefaults(true).then(() => {\n      this.updateUiVisibility();\n      this.setupOnBtApplyDebounce();\n    });\n  }\n  setParams(params) {\n    this.providedFilterParams = params;\n    this.applyActive = isUseApplyButton(params);\n    this.resetButtonsPanel(params);\n  }\n  updateParams(params) {\n    this.providedFilterParams = params;\n    this.applyActive = isUseApplyButton(params);\n    this.resetUiToActiveModel(this.getModel(), () => {\n      this.updateUiVisibility();\n      this.setupOnBtApplyDebounce();\n    });\n  }\n  resetButtonsPanel(newParams, oldParams) {\n    const { buttons: oldButtons, readOnly: oldReadOnly } = oldParams ?? {};\n    const { buttons, readOnly } = newParams;\n    if (oldReadOnly === readOnly && _jsonEquals(oldButtons, buttons)) {\n      return;\n    }\n    const hasButtons = buttons && buttons.length > 0 && !this.isReadOnly();\n    if (!this.eButtonsPanel) {\n      if (hasButtons) {\n        this.eButtonsPanel = document.createElement(\"div\");\n        this.eButtonsPanel.classList.add(\"ag-filter-apply-panel\");\n      }\n    } else {\n      _clearElement(this.eButtonsPanel);\n      this.buttonListeners.forEach((destroyFunc) => destroyFunc());\n      this.buttonListeners = [];\n    }\n    if (!hasButtons) {\n      if (this.eButtonsPanel) {\n        _removeFromParent(this.eButtonsPanel);\n      }\n      return;\n    }\n    const fragment = document.createDocumentFragment();\n    const addButton = (type) => {\n      let text;\n      let clickListener;\n      switch (type) {\n        case \"apply\":\n          text = this.translate(\"applyFilter\");\n          clickListener = (e) => this.onBtApply(false, false, e);\n          break;\n        case \"clear\":\n          text = this.translate(\"clearFilter\");\n          clickListener = () => this.onBtClear();\n          break;\n        case \"reset\":\n          text = this.translate(\"resetFilter\");\n          clickListener = () => this.onBtReset();\n          break;\n        case \"cancel\":\n          text = this.translate(\"cancelFilter\");\n          clickListener = (e) => {\n            this.onBtCancel(e);\n          };\n          break;\n        default:\n          _warnOnce(\"Unknown button type specified\");\n          return;\n      }\n      const buttonType = type === \"apply\" ? \"submit\" : \"button\";\n      const button = _loadTemplate(\n        /* html */\n        `<button\n                    type=\"${buttonType}\"\n                    data-ref=\"${type}FilterButton\"\n                    class=\"ag-button ag-standard-button ag-filter-apply-panel-button\"\n                >${text}\n                </button>`\n      );\n      this.buttonListeners.push(...this.addManagedElementListeners(button, { click: clickListener }));\n      fragment.append(button);\n    };\n    buttons.forEach((type) => addButton(type));\n    this.eButtonsPanel.append(fragment);\n    this.getGui().appendChild(this.eButtonsPanel);\n  }\n  // subclasses can override this to provide alternative debounce defaults\n  getDefaultDebounceMs() {\n    return 0;\n  }\n  setupOnBtApplyDebounce() {\n    const debounceMs = getDebounceMs(this.providedFilterParams, this.getDefaultDebounceMs());\n    const debounceFunc = _debounce(this.checkApplyDebounce.bind(this), debounceMs);\n    this.onBtApplyDebounce = () => {\n      this.debouncePending = true;\n      debounceFunc();\n    };\n  }\n  checkApplyDebounce() {\n    if (this.debouncePending) {\n      this.debouncePending = false;\n      this.onBtApply();\n    }\n  }\n  getModel() {\n    return this.appliedModel ? this.appliedModel : null;\n  }\n  setModel(model) {\n    const promise = model != null ? this.setModelIntoUi(model) : this.resetUiToDefaults();\n    return promise.then(() => {\n      this.updateUiVisibility();\n      this.applyModel(\"api\");\n    });\n  }\n  onBtCancel(e) {\n    this.resetUiToActiveModel(this.getModel(), () => {\n      this.handleCancelEnd(e);\n    });\n  }\n  handleCancelEnd(e) {\n    if (this.providedFilterParams.closeOnApply) {\n      this.close(e);\n    }\n  }\n  resetUiToActiveModel(currentModel, afterUiUpdatedFunc) {\n    const afterAppliedFunc = () => {\n      this.onUiChanged(false, \"prevent\");\n      afterUiUpdatedFunc?.();\n    };\n    if (currentModel != null) {\n      this.setModelIntoUi(currentModel).then(afterAppliedFunc);\n    } else {\n      this.resetUiToDefaults().then(afterAppliedFunc);\n    }\n  }\n  onBtClear() {\n    this.resetUiToDefaults().then(() => this.onUiChanged());\n  }\n  onBtReset() {\n    this.onBtClear();\n    this.onBtApply();\n  }\n  /**\n   * Applies changes made in the UI to the filter, and returns true if the model has changed.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  applyModel(source = \"api\") {\n    const newModel = this.getModelFromUi();\n    if (!this.isModelValid(newModel)) {\n      return false;\n    }\n    const previousModel = this.appliedModel;\n    this.appliedModel = newModel;\n    return !this.areModelsEqual(previousModel, newModel);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  isModelValid(model) {\n    return true;\n  }\n  onFormSubmit(e) {\n    e.preventDefault();\n  }\n  onBtApply(afterFloatingFilter = false, afterDataChange = false, e) {\n    if (e) {\n      e.preventDefault();\n    }\n    if (this.applyModel(afterDataChange ? \"rowDataUpdated\" : \"ui\")) {\n      const source = \"columnFilter\";\n      this.providedFilterParams.filterChangedCallback({ afterFloatingFilter, afterDataChange, source });\n    }\n    const { closeOnApply } = this.providedFilterParams;\n    if (closeOnApply && this.applyActive && !afterFloatingFilter && !afterDataChange) {\n      this.close(e);\n    }\n  }\n  onNewRowsLoaded() {\n  }\n  close(e) {\n    if (!this.hidePopup) {\n      return;\n    }\n    const keyboardEvent = e;\n    const key = keyboardEvent && keyboardEvent.key;\n    let params;\n    if (key === \"Enter\" || key === \"Space\") {\n      params = { keyboardEvent };\n    }\n    this.hidePopup(params);\n    this.hidePopup = null;\n  }\n  /**\n   * By default, if the change came from a floating filter it will be applied immediately, otherwise if there is no\n   * apply button it will be applied after a debounce, otherwise it will not be applied at all. This behaviour can\n   * be adjusted by using the apply parameter.\n   */\n  onUiChanged(fromFloatingFilter = false, apply) {\n    this.updateUiVisibility();\n    this.providedFilterParams.filterModifiedCallback();\n    if (this.applyActive && !this.isReadOnly()) {\n      const isValid = this.isModelValid(this.getModelFromUi());\n      const applyFilterButton = this.queryForHtmlElement(`[data-ref=\"applyFilterButton\"]`);\n      if (applyFilterButton) {\n        _setDisabled(applyFilterButton, !isValid);\n      }\n    }\n    if (fromFloatingFilter && !apply || apply === \"immediately\") {\n      this.onBtApply(fromFloatingFilter);\n    } else if (!this.applyActive && !apply || apply === \"debounce\") {\n      this.onBtApplyDebounce();\n    }\n  }\n  afterGuiAttached(params) {\n    if (params) {\n      this.hidePopup = params.hidePopup;\n    }\n    this.refreshFilterResizer(params?.container);\n  }\n  refreshFilterResizer(containerType) {\n    if (!this.positionableFeature || containerType === \"toolPanel\") {\n      return;\n    }\n    const isResizable = containerType === \"floatingFilter\" || containerType === \"columnFilter\";\n    const { positionableFeature, gos } = this;\n    if (isResizable) {\n      positionableFeature.restoreLastSize();\n      positionableFeature.setResizable(\n        gos.get(\"enableRtl\") ? { bottom: true, bottomLeft: true, left: true } : { bottom: true, bottomRight: true, right: true }\n      );\n    } else {\n      this.positionableFeature.removeSizeFromEl();\n      this.positionableFeature.setResizable(false);\n    }\n    this.positionableFeature.constrainSizeToAvailableHeight(true);\n  }\n  afterGuiDetached() {\n    this.checkApplyDebounce();\n    if (this.positionableFeature) {\n      this.positionableFeature.constrainSizeToAvailableHeight(false);\n    }\n  }\n  refresh(newParams) {\n    const oldParams = this.providedFilterParams;\n    this.providedFilterParams = newParams;\n    this.resetButtonsPanel(newParams, oldParams);\n    return true;\n  }\n  destroy() {\n    const eGui = this.getGui();\n    if (eGui) {\n      eGui.removeEventListener(\"submit\", this.onFormSubmit);\n    }\n    this.hidePopup = null;\n    if (this.positionableFeature) {\n      this.positionableFeature = this.destroyBean(this.positionableFeature);\n    }\n    this.appliedModel = null;\n    super.destroy();\n  }\n  translate(key) {\n    const translate = this.localeService.getLocaleTextFunc();\n    return translate(key, FILTER_LOCALE_TEXT[key]);\n  }\n  getCellValue(rowNode) {\n    return this.providedFilterParams.getValue(rowNode);\n  }\n  // override to control positionable feature\n  getPositionableElement() {\n    return this.eFilterBody;\n  }\n};\n\n// community-modules/core/src/widgets/agRadioButton.ts\nvar AgRadioButton = class extends AgCheckbox {\n  constructor(config) {\n    super(config, \"ag-radio-button\", \"radio\");\n  }\n  isSelected() {\n    return this.eInput.checked;\n  }\n  toggle() {\n    if (this.eInput.disabled) {\n      return;\n    }\n    if (!this.isSelected()) {\n      this.setValue(true);\n    }\n  }\n  addInputListeners() {\n    super.addInputListeners();\n    this.addManagedEventListeners({ checkboxChanged: this.onChange.bind(this) });\n  }\n  /**\n   * This ensures that if another radio button in the same named group is selected, we deselect this radio button.\n   * By default the browser does this for you, but we are managing classes ourselves in order to ensure input\n   * elements are styled correctly in IE11, and the DOM 'changed' event is only fired when a button is selected,\n   * not deselected, so we need to use our own event.\n   */\n  onChange(event) {\n    if (event.selected && event.name && this.eInput.name && this.eInput.name === event.name && event.id && this.eInput.id !== event.id) {\n      this.setValue(false, true);\n    }\n  }\n};\n\n// community-modules/core/src/widgets/agList.ts\nvar AgList = class extends Component {\n  constructor(cssIdentifier = \"default\", unFocusable = false) {\n    super(\n      /* html */\n      `<div class=\"ag-list ag-${cssIdentifier}-list\" role=\"listbox\"></div>`\n    );\n    this.cssIdentifier = cssIdentifier;\n    this.unFocusable = unFocusable;\n    this.activeClass = \"ag-active-item\";\n    this.options = [];\n    this.itemEls = [];\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    this.addManagedElementListeners(eGui, { mouseleave: () => this.clearHighlighted() });\n    if (this.unFocusable) {\n      return;\n    }\n    this.addManagedElementListeners(eGui, { keydown: this.handleKeyDown.bind(this) });\n  }\n  handleKeyDown(e) {\n    const key = e.key;\n    switch (key) {\n      case KeyCode.ENTER:\n        if (!this.highlightedEl) {\n          this.setValue(this.getValue());\n        } else {\n          const pos = this.itemEls.indexOf(this.highlightedEl);\n          this.setValueByIndex(pos);\n        }\n        break;\n      case KeyCode.DOWN:\n      case KeyCode.UP:\n        e.preventDefault();\n        this.navigate(key);\n        break;\n      case KeyCode.PAGE_DOWN:\n      case KeyCode.PAGE_UP:\n      case KeyCode.PAGE_HOME:\n      case KeyCode.PAGE_END:\n        e.preventDefault();\n        this.navigateToPage(key);\n        break;\n    }\n  }\n  navigate(key) {\n    const isDown = key === KeyCode.DOWN;\n    let itemToHighlight;\n    if (!this.highlightedEl) {\n      itemToHighlight = this.itemEls[isDown ? 0 : this.itemEls.length - 1];\n    } else {\n      const currentIdx = this.itemEls.indexOf(this.highlightedEl);\n      let nextPos = currentIdx + (isDown ? 1 : -1);\n      nextPos = Math.min(Math.max(nextPos, 0), this.itemEls.length - 1);\n      itemToHighlight = this.itemEls[nextPos];\n    }\n    this.highlightItem(itemToHighlight);\n  }\n  navigateToPage(key) {\n    if (!this.highlightedEl || this.itemEls.length === 0) {\n      return;\n    }\n    const currentIdx = this.itemEls.indexOf(this.highlightedEl);\n    const rowCount = this.options.length - 1;\n    const itemHeight = this.itemEls[0].clientHeight;\n    const pageSize = Math.floor(this.getGui().clientHeight / itemHeight);\n    let newIndex = -1;\n    if (key === KeyCode.PAGE_HOME) {\n      newIndex = 0;\n    } else if (key === KeyCode.PAGE_END) {\n      newIndex = rowCount;\n    } else if (key === KeyCode.PAGE_DOWN) {\n      newIndex = Math.min(currentIdx + pageSize, rowCount);\n    } else if (key === KeyCode.PAGE_UP) {\n      newIndex = Math.max(currentIdx - pageSize, 0);\n    }\n    if (newIndex === -1) {\n      return;\n    }\n    this.highlightItem(this.itemEls[newIndex]);\n  }\n  addOptions(listOptions) {\n    listOptions.forEach((listOption) => this.addOption(listOption));\n    return this;\n  }\n  addOption(listOption) {\n    const { value, text } = listOption;\n    const valueToRender = text || value;\n    this.options.push({ value, text: valueToRender });\n    this.renderOption(value, valueToRender);\n    this.updateIndices();\n    return this;\n  }\n  clearOptions() {\n    this.options = [];\n    this.reset(true);\n    this.itemEls.forEach((itemEl) => {\n      _removeFromParent(itemEl);\n    });\n    this.itemEls = [];\n  }\n  updateIndices() {\n    const options = this.getGui().querySelectorAll(\".ag-list-item\");\n    options.forEach((option, idx) => {\n      _setAriaPosInSet(option, idx + 1);\n      _setAriaSetSize(option, options.length);\n    });\n  }\n  renderOption(value, text) {\n    const eDocument = this.gos.getDocument();\n    const itemEl = eDocument.createElement(\"div\");\n    _setAriaRole(itemEl, \"option\");\n    itemEl.classList.add(\"ag-list-item\", `ag-${this.cssIdentifier}-list-item`);\n    const span = eDocument.createElement(\"span\");\n    itemEl.appendChild(span);\n    span.textContent = text;\n    if (!this.unFocusable) {\n      itemEl.tabIndex = -1;\n    }\n    this.itemEls.push(itemEl);\n    this.addManagedListeners(itemEl, {\n      mouseover: () => this.highlightItem(itemEl),\n      mousedown: (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setValue(value);\n      }\n    });\n    this.createManagedBean(\n      new TooltipFeature({\n        getTooltipValue: () => text,\n        getGui: () => itemEl,\n        getLocation: () => \"UNKNOWN\",\n        // only show tooltips for items where the text cannot be fully displayed\n        shouldDisplayTooltip: () => span.scrollWidth > span.clientWidth\n      })\n    );\n    this.getGui().appendChild(itemEl);\n  }\n  setValue(value, silent) {\n    if (this.value === value) {\n      this.fireItemSelected();\n      return this;\n    }\n    if (value == null) {\n      this.reset(silent);\n      return this;\n    }\n    const idx = this.options.findIndex((option) => option.value === value);\n    if (idx !== -1) {\n      const option = this.options[idx];\n      this.value = option.value;\n      this.displayValue = option.text;\n      this.highlightItem(this.itemEls[idx]);\n      if (!silent) {\n        this.fireChangeEvent();\n      }\n    }\n    return this;\n  }\n  setValueByIndex(idx) {\n    return this.setValue(this.options[idx].value);\n  }\n  getValue() {\n    return this.value;\n  }\n  getDisplayValue() {\n    return this.displayValue;\n  }\n  refreshHighlighted() {\n    this.clearHighlighted();\n    const idx = this.options.findIndex((option) => option.value === this.value);\n    if (idx !== -1) {\n      this.highlightItem(this.itemEls[idx]);\n    }\n  }\n  reset(silent) {\n    this.value = null;\n    this.displayValue = null;\n    this.clearHighlighted();\n    if (!silent) {\n      this.fireChangeEvent();\n    }\n  }\n  highlightItem(el) {\n    if (!_isVisible(el)) {\n      return;\n    }\n    this.clearHighlighted();\n    this.highlightedEl = el;\n    this.highlightedEl.classList.add(this.activeClass);\n    _setAriaSelected(this.highlightedEl, true);\n    const eGui = this.getGui();\n    const { scrollTop, clientHeight } = eGui;\n    const { offsetTop, offsetHeight } = el;\n    if (offsetTop + offsetHeight > scrollTop + clientHeight || offsetTop < scrollTop) {\n      this.highlightedEl.scrollIntoView({ block: \"nearest\" });\n    }\n    if (!this.unFocusable) {\n      this.highlightedEl.focus();\n    }\n  }\n  clearHighlighted() {\n    if (!this.highlightedEl || !_isVisible(this.highlightedEl)) {\n      return;\n    }\n    this.highlightedEl.classList.remove(this.activeClass);\n    _setAriaSelected(this.highlightedEl, false);\n    this.highlightedEl = null;\n  }\n  fireChangeEvent() {\n    this.dispatchLocalEvent({ type: \"fieldValueChanged\" });\n    this.fireItemSelected();\n  }\n  fireItemSelected() {\n    this.dispatchLocalEvent({ type: \"selectedItem\" });\n  }\n};\n\n// community-modules/core/src/widgets/agPickerField.ts\nvar AgPickerField = class extends AgAbstractField {\n  constructor(config) {\n    super(\n      config,\n      config?.template || /* html */\n      `\n            <div class=\"ag-picker-field\" role=\"presentation\">\n                <div data-ref=\"eLabel\"></div>\n                <div data-ref=\"eWrapper\" class=\"ag-wrapper ag-picker-field-wrapper ag-picker-collapsed\">\n                    <div data-ref=\"eDisplayField\" class=\"ag-picker-field-display\"></div>\n                    <div data-ref=\"eIcon\" class=\"ag-picker-field-icon\" aria-hidden=\"true\"></div>\n                </div>\n            </div>`,\n      config?.agComponents || [],\n      config?.className\n    );\n    this.isPickerDisplayed = false;\n    this.skipClick = false;\n    this.pickerGap = 4;\n    this.hideCurrentPicker = null;\n    this.eLabel = RefPlaceholder;\n    this.eWrapper = RefPlaceholder;\n    this.eDisplayField = RefPlaceholder;\n    this.eIcon = RefPlaceholder;\n    this.ariaRole = config?.ariaRole;\n    this.onPickerFocusIn = this.onPickerFocusIn.bind(this);\n    this.onPickerFocusOut = this.onPickerFocusOut.bind(this);\n    if (!config) {\n      return;\n    }\n    const { pickerGap, maxPickerHeight, variableWidth, minPickerWidth, maxPickerWidth } = config;\n    if (pickerGap != null) {\n      this.pickerGap = pickerGap;\n    }\n    this.variableWidth = !!variableWidth;\n    if (maxPickerHeight != null) {\n      this.setPickerMaxHeight(maxPickerHeight);\n    }\n    if (minPickerWidth != null) {\n      this.setPickerMinWidth(minPickerWidth);\n    }\n    if (maxPickerWidth != null) {\n      this.setPickerMaxWidth(maxPickerWidth);\n    }\n  }\n  wireBeans(beans) {\n    this.popupService = beans.popupService;\n  }\n  postConstruct() {\n    super.postConstruct();\n    this.setupAria();\n    const displayId = `ag-${this.getCompId()}-display`;\n    this.eDisplayField.setAttribute(\"id\", displayId);\n    const ariaEl = this.getAriaElement();\n    this.addManagedElementListeners(ariaEl, { keydown: this.onKeyDown.bind(this) });\n    this.addManagedElementListeners(this.eLabel, { mousedown: this.onLabelOrWrapperMouseDown.bind(this) });\n    this.addManagedElementListeners(this.eWrapper, { mousedown: this.onLabelOrWrapperMouseDown.bind(this) });\n    const { pickerIcon, inputWidth } = this.config;\n    if (pickerIcon) {\n      const icon = _createIconNoSpan(pickerIcon, this.gos);\n      if (icon) {\n        this.eIcon.appendChild(icon);\n      }\n    }\n    if (inputWidth != null) {\n      this.setInputWidth(inputWidth);\n    }\n  }\n  setupAria() {\n    const ariaEl = this.getAriaElement();\n    ariaEl.setAttribute(\"tabindex\", this.gos.get(\"tabIndex\").toString());\n    _setAriaExpanded(ariaEl, false);\n    if (this.ariaRole) {\n      _setAriaRole(ariaEl, this.ariaRole);\n    }\n  }\n  onLabelOrWrapperMouseDown(e) {\n    if (e) {\n      const focusableEl = this.getFocusableElement();\n      if (focusableEl !== this.eWrapper && e?.target === focusableEl) {\n        return;\n      }\n      e.preventDefault();\n      this.getFocusableElement().focus();\n    }\n    if (this.skipClick) {\n      this.skipClick = false;\n      return;\n    }\n    if (this.isDisabled()) {\n      return;\n    }\n    if (this.isPickerDisplayed) {\n      this.hidePicker();\n    } else {\n      this.showPicker();\n    }\n  }\n  onKeyDown(e) {\n    switch (e.key) {\n      case KeyCode.UP:\n      case KeyCode.DOWN:\n      case KeyCode.ENTER:\n      case KeyCode.SPACE:\n        e.preventDefault();\n        this.onLabelOrWrapperMouseDown();\n        break;\n      case KeyCode.ESCAPE:\n        if (this.isPickerDisplayed) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (this.hideCurrentPicker) {\n            this.hideCurrentPicker();\n          }\n        }\n        break;\n    }\n  }\n  showPicker() {\n    this.isPickerDisplayed = true;\n    if (!this.pickerComponent) {\n      this.pickerComponent = this.createPickerComponent();\n    }\n    const pickerGui = this.pickerComponent.getGui();\n    pickerGui.addEventListener(\"focusin\", this.onPickerFocusIn);\n    pickerGui.addEventListener(\"focusout\", this.onPickerFocusOut);\n    this.hideCurrentPicker = this.renderAndPositionPicker();\n    this.toggleExpandedStyles(true);\n  }\n  renderAndPositionPicker() {\n    const ePicker = this.pickerComponent.getGui();\n    if (!this.gos.get(\"suppressScrollWhenPopupsAreOpen\")) {\n      [this.destroyMouseWheelFunc] = this.addManagedEventListeners({\n        bodyScroll: () => {\n          this.hidePicker();\n        }\n      });\n    }\n    const translate = this.localeService.getLocaleTextFunc();\n    const { pickerAriaLabelKey, pickerAriaLabelValue, modalPicker = true } = this.config;\n    const popupParams = {\n      modal: modalPicker,\n      eChild: ePicker,\n      closeOnEsc: true,\n      closedCallback: () => {\n        const shouldRestoreFocus = this.gos.isNothingFocused();\n        this.beforeHidePicker();\n        if (shouldRestoreFocus && this.isAlive()) {\n          this.getFocusableElement().focus();\n        }\n      },\n      ariaLabel: translate(pickerAriaLabelKey, pickerAriaLabelValue),\n      anchorToElement: this.eWrapper\n    };\n    ePicker.style.position = \"absolute\";\n    const addPopupRes = this.popupService.addPopup(popupParams);\n    const { maxPickerHeight, minPickerWidth, maxPickerWidth, variableWidth } = this;\n    if (variableWidth) {\n      if (minPickerWidth) {\n        ePicker.style.minWidth = minPickerWidth;\n      }\n      ePicker.style.width = _formatSize(_getAbsoluteWidth(this.eWrapper));\n      if (maxPickerWidth) {\n        ePicker.style.maxWidth = maxPickerWidth;\n      }\n    } else {\n      _setElementWidth(ePicker, maxPickerWidth ?? _getAbsoluteWidth(this.eWrapper));\n    }\n    const maxHeight = maxPickerHeight ?? `${_getInnerHeight(this.popupService.getPopupParent())}px`;\n    ePicker.style.setProperty(\"max-height\", maxHeight);\n    this.alignPickerToComponent();\n    return addPopupRes.hideFunc;\n  }\n  alignPickerToComponent() {\n    if (!this.pickerComponent) {\n      return;\n    }\n    const { pickerType } = this.config;\n    const { pickerGap } = this;\n    const alignSide = this.gos.get(\"enableRtl\") ? \"right\" : \"left\";\n    this.popupService.positionPopupByComponent({\n      type: pickerType,\n      eventSource: this.eWrapper,\n      ePopup: this.pickerComponent.getGui(),\n      position: \"under\",\n      alignSide,\n      keepWithinBounds: true,\n      nudgeY: pickerGap\n    });\n  }\n  beforeHidePicker() {\n    if (this.destroyMouseWheelFunc) {\n      this.destroyMouseWheelFunc();\n      this.destroyMouseWheelFunc = void 0;\n    }\n    this.toggleExpandedStyles(false);\n    const pickerGui = this.pickerComponent.getGui();\n    pickerGui.removeEventListener(\"focusin\", this.onPickerFocusIn);\n    pickerGui.removeEventListener(\"focusout\", this.onPickerFocusOut);\n    this.isPickerDisplayed = false;\n    this.pickerComponent = void 0;\n    this.hideCurrentPicker = null;\n  }\n  toggleExpandedStyles(expanded) {\n    if (!this.isAlive()) {\n      return;\n    }\n    const ariaEl = this.getAriaElement();\n    _setAriaExpanded(ariaEl, expanded);\n    this.eWrapper.classList.toggle(\"ag-picker-expanded\", expanded);\n    this.eWrapper.classList.toggle(\"ag-picker-collapsed\", !expanded);\n  }\n  onPickerFocusIn() {\n    this.togglePickerHasFocus(true);\n  }\n  onPickerFocusOut(e) {\n    if (!this.pickerComponent?.getGui().contains(e.relatedTarget)) {\n      this.togglePickerHasFocus(false);\n    }\n  }\n  togglePickerHasFocus(focused) {\n    if (!this.pickerComponent) {\n      return;\n    }\n    this.eWrapper.classList.toggle(\"ag-picker-has-focus\", focused);\n  }\n  hidePicker() {\n    if (this.hideCurrentPicker) {\n      this.hideCurrentPicker();\n    }\n  }\n  setInputWidth(width) {\n    _setElementWidth(this.eWrapper, width);\n    return this;\n  }\n  getFocusableElement() {\n    return this.eWrapper;\n  }\n  setPickerGap(gap) {\n    this.pickerGap = gap;\n    return this;\n  }\n  setPickerMinWidth(width) {\n    if (typeof width === \"number\") {\n      width = `${width}px`;\n    }\n    this.minPickerWidth = width == null ? void 0 : width;\n    return this;\n  }\n  setPickerMaxWidth(width) {\n    if (typeof width === \"number\") {\n      width = `${width}px`;\n    }\n    this.maxPickerWidth = width == null ? void 0 : width;\n    return this;\n  }\n  setPickerMaxHeight(height) {\n    if (typeof height === \"number\") {\n      height = `${height}px`;\n    }\n    this.maxPickerHeight = height == null ? void 0 : height;\n    return this;\n  }\n  destroy() {\n    this.hidePicker();\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/widgets/agSelect.ts\nvar AgSelect = class extends AgPickerField {\n  constructor(config) {\n    super({\n      pickerAriaLabelKey: \"ariaLabelSelectField\",\n      pickerAriaLabelValue: \"Select Field\",\n      pickerType: \"ag-list\",\n      className: \"ag-select\",\n      pickerIcon: \"smallDown\",\n      ariaRole: \"combobox\",\n      ...config\n    });\n  }\n  postConstruct() {\n    super.postConstruct();\n    this.createListComponent();\n    this.eWrapper.tabIndex = this.gos.get(\"tabIndex\");\n    const { options, value, placeholder } = this.config;\n    if (options != null) {\n      this.addOptions(options);\n    }\n    if (value != null) {\n      this.setValue(value, true);\n    }\n    if (placeholder && value == null) {\n      this.eDisplayField.textContent = placeholder;\n    }\n    this.addManagedElementListeners(this.eWrapper, { focusout: this.onWrapperFocusOut.bind(this) });\n  }\n  onWrapperFocusOut(e) {\n    if (!this.eWrapper.contains(e.relatedTarget)) {\n      this.hidePicker();\n    }\n  }\n  createListComponent() {\n    this.listComponent = this.createBean(new AgList(\"select\", true));\n    this.listComponent.setParentComponent(this);\n    const eListAriaEl = this.listComponent.getAriaElement();\n    const listId = `ag-select-list-${this.listComponent.getCompId()}`;\n    eListAriaEl.setAttribute(\"id\", listId);\n    _setAriaControls(this.getAriaElement(), eListAriaEl);\n    this.listComponent.addManagedListeners(this.listComponent, {\n      selectedItem: () => {\n        this.hidePicker();\n        this.dispatchLocalEvent({ type: \"selectedItem\" });\n      }\n    });\n    this.listComponent.addManagedListeners(this.listComponent, {\n      fieldValueChanged: () => {\n        if (!this.listComponent) {\n          return;\n        }\n        this.setValue(this.listComponent.getValue(), false, true);\n        this.hidePicker();\n      }\n    });\n  }\n  createPickerComponent() {\n    return this.listComponent;\n  }\n  onKeyDown(e) {\n    const { key } = e;\n    if (key === KeyCode.TAB) {\n      this.hidePicker();\n    }\n    switch (key) {\n      case KeyCode.ENTER:\n      case KeyCode.UP:\n      case KeyCode.DOWN:\n      case KeyCode.PAGE_UP:\n      case KeyCode.PAGE_DOWN:\n      case KeyCode.PAGE_HOME:\n      case KeyCode.PAGE_END:\n        e.preventDefault();\n        if (this.isPickerDisplayed) {\n          this.listComponent?.handleKeyDown(e);\n        } else {\n          super.onKeyDown(e);\n        }\n        break;\n      case KeyCode.ESCAPE:\n        super.onKeyDown(e);\n        break;\n      case KeyCode.SPACE:\n        if (this.isPickerDisplayed) {\n          e.preventDefault();\n        } else {\n          super.onKeyDown(e);\n        }\n        break;\n    }\n  }\n  showPicker() {\n    if (!this.listComponent) {\n      return;\n    }\n    super.showPicker();\n    this.listComponent.refreshHighlighted();\n  }\n  addOptions(options) {\n    options.forEach((option) => this.addOption(option));\n    return this;\n  }\n  addOption(option) {\n    this.listComponent.addOption(option);\n    return this;\n  }\n  clearOptions() {\n    this.listComponent?.clearOptions();\n    return this;\n  }\n  setValue(value, silent, fromPicker) {\n    if (this.value === value || !this.listComponent) {\n      return this;\n    }\n    if (!fromPicker) {\n      this.listComponent.setValue(value, true);\n    }\n    const newValue = this.listComponent.getValue();\n    if (newValue === this.getValue()) {\n      return this;\n    }\n    let displayValue = this.listComponent.getDisplayValue();\n    if (displayValue == null && this.config.placeholder) {\n      displayValue = this.config.placeholder;\n    }\n    this.eDisplayField.textContent = displayValue;\n    this.setTooltip({\n      newTooltipText: displayValue ?? null,\n      shouldDisplayTooltip: () => this.eDisplayField.scrollWidth > this.eDisplayField.clientWidth\n    });\n    return super.setValue(value, silent);\n  }\n  destroy() {\n    if (this.listComponent) {\n      this.listComponent = this.destroyBean(this.listComponent);\n    }\n    super.destroy();\n  }\n};\nvar AgSelectSelector = {\n  selector: \"AG-SELECT\",\n  component: AgSelect\n};\n\n// community-modules/core/src/filter/provided/optionsFactory.ts\nvar OptionsFactory = class {\n  constructor() {\n    this.customFilterOptions = {};\n  }\n  init(params, defaultOptions) {\n    this.filterOptions = params.filterOptions || defaultOptions;\n    this.mapCustomOptions();\n    this.selectDefaultItem(params);\n  }\n  getFilterOptions() {\n    return this.filterOptions;\n  }\n  mapCustomOptions() {\n    if (!this.filterOptions) {\n      return;\n    }\n    this.filterOptions.forEach((filterOption) => {\n      if (typeof filterOption === \"string\") {\n        return;\n      }\n      const requiredProperties = [[\"displayKey\"], [\"displayName\"], [\"predicate\", \"test\"]];\n      const propertyCheck = (keys) => {\n        if (!keys.some((key) => filterOption[key] != null)) {\n          _warnOnce(`ignoring FilterOptionDef as it doesn't contain one of '${keys}'`);\n          return false;\n        }\n        return true;\n      };\n      if (!requiredProperties.every(propertyCheck)) {\n        this.filterOptions = this.filterOptions.filter((v) => v === filterOption) || [];\n        return;\n      }\n      this.customFilterOptions[filterOption.displayKey] = filterOption;\n    });\n  }\n  selectDefaultItem(params) {\n    if (params.defaultOption) {\n      this.defaultOption = params.defaultOption;\n    } else if (this.filterOptions.length >= 1) {\n      const firstFilterOption = this.filterOptions[0];\n      if (typeof firstFilterOption === \"string\") {\n        this.defaultOption = firstFilterOption;\n      } else if (firstFilterOption.displayKey) {\n        this.defaultOption = firstFilterOption.displayKey;\n      } else {\n        _warnOnce(`invalid FilterOptionDef supplied as it doesn't contain a 'displayKey'`);\n      }\n    } else {\n      _warnOnce(\"no filter options for filter\");\n    }\n  }\n  getDefaultOption() {\n    return this.defaultOption;\n  }\n  getCustomOption(name) {\n    return this.customFilterOptions[name];\n  }\n};\n\n// community-modules/core/src/filter/provided/simpleFilter.ts\nvar SimpleFilter = class extends ProvidedFilter {\n  constructor() {\n    super(...arguments);\n    this.eTypes = [];\n    this.eJoinOperatorPanels = [];\n    this.eJoinOperatorsAnd = [];\n    this.eJoinOperatorsOr = [];\n    this.eConditionBodies = [];\n    this.listener = () => this.onUiChanged();\n    this.lastUiCompletePosition = null;\n    this.joinOperatorId = 0;\n  }\n  getNumberOfInputs(type) {\n    const customOpts = this.optionsFactory.getCustomOption(type);\n    if (customOpts) {\n      const { numberOfInputs } = customOpts;\n      return numberOfInputs != null ? numberOfInputs : 1;\n    }\n    const zeroInputTypes = [\"empty\", \"notBlank\", \"blank\"];\n    if (type && zeroInputTypes.indexOf(type) >= 0) {\n      return 0;\n    } else if (type === \"inRange\") {\n      return 2;\n    }\n    return 1;\n  }\n  // floating filter calls this when user applies filter from floating filter\n  onFloatingFilterChanged(type, value) {\n    this.setTypeFromFloatingFilter(type);\n    this.setValueFromFloatingFilter(value);\n    this.onUiChanged(true);\n  }\n  setTypeFromFloatingFilter(type) {\n    this.eTypes.forEach((eType, position) => {\n      if (position === 0) {\n        eType.setValue(type, true);\n      } else {\n        eType.setValue(this.optionsFactory.getDefaultOption(), true);\n      }\n    });\n  }\n  getModelFromUi() {\n    const conditions = this.getUiCompleteConditions();\n    if (conditions.length === 0) {\n      return null;\n    }\n    if (this.maxNumConditions > 1 && conditions.length > 1) {\n      return {\n        filterType: this.getFilterType(),\n        operator: this.getJoinOperator(),\n        conditions\n      };\n    }\n    return conditions[0];\n  }\n  getConditionTypes() {\n    return this.eTypes.map((eType) => eType.getValue());\n  }\n  getConditionType(position) {\n    return this.eTypes[position].getValue();\n  }\n  getJoinOperator() {\n    if (this.eJoinOperatorsOr.length === 0) {\n      return this.defaultJoinOperator;\n    }\n    return this.eJoinOperatorsOr[0].getValue() === true ? \"OR\" : \"AND\";\n  }\n  areModelsEqual(a, b) {\n    if (!a && !b) {\n      return true;\n    }\n    if (!a && b || a && !b) {\n      return false;\n    }\n    const aIsSimple = !a.operator;\n    const bIsSimple = !b.operator;\n    const oneSimpleOneCombined = !aIsSimple && bIsSimple || aIsSimple && !bIsSimple;\n    if (oneSimpleOneCombined) {\n      return false;\n    }\n    let res;\n    if (aIsSimple) {\n      const aSimple = a;\n      const bSimple = b;\n      res = this.areSimpleModelsEqual(aSimple, bSimple);\n    } else {\n      const aCombined = a;\n      const bCombined = b;\n      res = aCombined.operator === bCombined.operator && _areEqual(\n        aCombined.conditions,\n        bCombined.conditions,\n        (aModel, bModel) => this.areSimpleModelsEqual(aModel, bModel)\n      );\n    }\n    return res;\n  }\n  shouldRefresh(newParams) {\n    const model = this.getModel();\n    const conditions = model ? model.conditions ?? [model] : null;\n    const newOptionsList = newParams.filterOptions?.map((option) => typeof option === \"string\" ? option : option.displayKey) ?? this.getDefaultFilterOptions();\n    const allConditionsExistInNewOptionsList = !conditions || conditions.every((condition) => newOptionsList.find((option) => option === condition.type) !== void 0);\n    if (!allConditionsExistInNewOptionsList) {\n      return false;\n    }\n    if (typeof newParams.maxNumConditions === \"number\" && conditions && conditions.length > newParams.maxNumConditions) {\n      return false;\n    }\n    return true;\n  }\n  refresh(newParams) {\n    if (!this.shouldRefresh(newParams)) {\n      return false;\n    }\n    const parentRefreshed = super.refresh(newParams);\n    if (!parentRefreshed) {\n      return false;\n    }\n    this.setParams(newParams);\n    this.removeConditionsAndOperators(0);\n    this.createOption();\n    this.setModel(this.getModel());\n    return true;\n  }\n  setModelIntoUi(model) {\n    const isCombined = model.operator;\n    if (isCombined) {\n      const combinedModel = model;\n      let conditions = combinedModel.conditions;\n      if (conditions == null) {\n        conditions = [];\n        _warnOnce(`Filter model is missing 'conditions'`);\n      }\n      const numConditions = this.validateAndUpdateConditions(conditions);\n      const numPrevConditions = this.getNumConditions();\n      if (numConditions < numPrevConditions) {\n        this.removeConditionsAndOperators(numConditions);\n      } else if (numConditions > numPrevConditions) {\n        for (let i = numPrevConditions; i < numConditions; i++) {\n          this.createJoinOperatorPanel();\n          this.createOption();\n        }\n      }\n      const orChecked = combinedModel.operator === \"OR\";\n      this.eJoinOperatorsAnd.forEach((eJoinOperatorAnd) => eJoinOperatorAnd.setValue(!orChecked, true));\n      this.eJoinOperatorsOr.forEach((eJoinOperatorOr) => eJoinOperatorOr.setValue(orChecked, true));\n      conditions.forEach((condition, position) => {\n        this.eTypes[position].setValue(condition.type, true);\n        this.setConditionIntoUi(condition, position);\n      });\n    } else {\n      const simpleModel = model;\n      if (this.getNumConditions() > 1) {\n        this.removeConditionsAndOperators(1);\n      }\n      this.eTypes[0].setValue(simpleModel.type, true);\n      this.setConditionIntoUi(simpleModel, 0);\n    }\n    this.lastUiCompletePosition = this.getNumConditions() - 1;\n    this.createMissingConditionsAndOperators();\n    this.onUiChanged();\n    return AgPromise.resolve();\n  }\n  validateAndUpdateConditions(conditions) {\n    let numConditions = conditions.length;\n    if (numConditions > this.maxNumConditions) {\n      conditions.splice(this.maxNumConditions);\n      _warnOnce(\n        'Filter Model contains more conditions than \"filterParams.maxNumConditions\". Additional conditions have been ignored.'\n      );\n      numConditions = this.maxNumConditions;\n    }\n    return numConditions;\n  }\n  doesFilterPass(params) {\n    const model = this.getModel();\n    if (model == null) {\n      return true;\n    }\n    const { operator } = model;\n    const models = [];\n    if (operator) {\n      const combinedModel = model;\n      models.push(...combinedModel.conditions ?? []);\n    } else {\n      models.push(model);\n    }\n    const combineFunction = operator && operator === \"OR\" ? \"some\" : \"every\";\n    return models[combineFunction]((m) => this.individualConditionPasses(params, m));\n  }\n  setParams(params) {\n    super.setParams(params);\n    this.setNumConditions(params);\n    this.defaultJoinOperator = this.getDefaultJoinOperator(params.defaultJoinOperator);\n    this.filterPlaceholder = params.filterPlaceholder;\n    this.optionsFactory = new OptionsFactory();\n    this.optionsFactory.init(params, this.getDefaultFilterOptions());\n    this.createFilterListOptions();\n    this.createOption();\n    this.createMissingConditionsAndOperators();\n    if (this.isReadOnly()) {\n      this.eFilterBody.setAttribute(\"tabindex\", \"-1\");\n    }\n  }\n  setNumConditions(params) {\n    this.maxNumConditions = params.maxNumConditions ?? 2;\n    if (this.maxNumConditions < 1) {\n      _warnOnce('\"filterParams.maxNumConditions\" must be greater than or equal to zero.');\n      this.maxNumConditions = 1;\n    }\n    this.numAlwaysVisibleConditions = params.numAlwaysVisibleConditions ?? 1;\n    if (this.numAlwaysVisibleConditions < 1) {\n      _warnOnce('\"filterParams.numAlwaysVisibleConditions\" must be greater than or equal to zero.');\n      this.numAlwaysVisibleConditions = 1;\n    }\n    if (this.numAlwaysVisibleConditions > this.maxNumConditions) {\n      _warnOnce(\n        '\"filterParams.numAlwaysVisibleConditions\" cannot be greater than \"filterParams.maxNumConditions\".'\n      );\n      this.numAlwaysVisibleConditions = this.maxNumConditions;\n    }\n  }\n  createOption() {\n    const eType = this.createManagedBean(new AgSelect());\n    this.eTypes.push(eType);\n    eType.addCssClass(\"ag-filter-select\");\n    this.eFilterBody.appendChild(eType.getGui());\n    const eConditionBody = this.createValueElement();\n    this.eConditionBodies.push(eConditionBody);\n    this.eFilterBody.appendChild(eConditionBody);\n    this.putOptionsIntoDropdown(eType);\n    this.resetType(eType);\n    const position = this.getNumConditions() - 1;\n    this.forEachPositionInput(position, (element) => this.resetInput(element));\n    this.addChangedListeners(eType, position);\n  }\n  createJoinOperatorPanel() {\n    const eJoinOperatorPanel = document.createElement(\"div\");\n    this.eJoinOperatorPanels.push(eJoinOperatorPanel);\n    eJoinOperatorPanel.classList.add(\"ag-filter-condition\");\n    const eJoinOperatorAnd = this.createJoinOperator(this.eJoinOperatorsAnd, eJoinOperatorPanel, \"and\");\n    const eJoinOperatorOr = this.createJoinOperator(this.eJoinOperatorsOr, eJoinOperatorPanel, \"or\");\n    this.eFilterBody.appendChild(eJoinOperatorPanel);\n    const index = this.eJoinOperatorPanels.length - 1;\n    const uniqueGroupId = this.joinOperatorId++;\n    this.resetJoinOperatorAnd(eJoinOperatorAnd, index, uniqueGroupId);\n    this.resetJoinOperatorOr(eJoinOperatorOr, index, uniqueGroupId);\n    if (!this.isReadOnly()) {\n      eJoinOperatorAnd.onValueChange(this.listener);\n      eJoinOperatorOr.onValueChange(this.listener);\n    }\n  }\n  createJoinOperator(eJoinOperators, eJoinOperatorPanel, andOr) {\n    const eJoinOperator = this.createManagedBean(new AgRadioButton());\n    eJoinOperators.push(eJoinOperator);\n    eJoinOperator.addCssClass(\"ag-filter-condition-operator\");\n    eJoinOperator.addCssClass(`ag-filter-condition-operator-${andOr}`);\n    eJoinOperatorPanel.appendChild(eJoinOperator.getGui());\n    return eJoinOperator;\n  }\n  getDefaultJoinOperator(defaultJoinOperator) {\n    return defaultJoinOperator === \"AND\" || defaultJoinOperator === \"OR\" ? defaultJoinOperator : \"AND\";\n  }\n  createFilterListOptions() {\n    const filterOptions = this.optionsFactory.getFilterOptions();\n    this.filterListOptions = filterOptions.map(\n      (option) => typeof option === \"string\" ? this.createBoilerplateListOption(option) : this.createCustomListOption(option)\n    );\n  }\n  putOptionsIntoDropdown(eType) {\n    this.filterListOptions.forEach((listOption) => {\n      eType.addOption(listOption);\n    });\n    eType.setDisabled(this.filterListOptions.length <= 1);\n  }\n  createBoilerplateListOption(option) {\n    return { value: option, text: this.translate(option) };\n  }\n  createCustomListOption(option) {\n    const { displayKey } = option;\n    const customOption = this.optionsFactory.getCustomOption(option.displayKey);\n    return {\n      value: displayKey,\n      text: customOption ? this.localeService.getLocaleTextFunc()(customOption.displayKey, customOption.displayName) : this.translate(displayKey)\n    };\n  }\n  createBodyTemplate() {\n    return \"\";\n  }\n  getAgComponents() {\n    return [];\n  }\n  getCssIdentifier() {\n    return \"simple-filter\";\n  }\n  updateUiVisibility() {\n    const joinOperator = this.getJoinOperator();\n    this.updateNumConditions();\n    this.updateConditionStatusesAndValues(this.lastUiCompletePosition, joinOperator);\n  }\n  updateNumConditions() {\n    let lastUiCompletePosition = -1;\n    let areAllConditionsUiComplete = true;\n    for (let position = 0; position < this.getNumConditions(); position++) {\n      if (this.isConditionUiComplete(position)) {\n        lastUiCompletePosition = position;\n      } else {\n        areAllConditionsUiComplete = false;\n      }\n    }\n    if (this.shouldAddNewConditionAtEnd(areAllConditionsUiComplete)) {\n      this.createJoinOperatorPanel();\n      this.createOption();\n    } else {\n      const activePosition = this.lastUiCompletePosition ?? this.getNumConditions() - 2;\n      if (lastUiCompletePosition < activePosition) {\n        this.removeConditionsAndOperators(activePosition + 1);\n        const removeStartPosition = lastUiCompletePosition + 1;\n        const numConditionsToRemove = activePosition - removeStartPosition;\n        if (numConditionsToRemove > 0) {\n          this.removeConditionsAndOperators(removeStartPosition, numConditionsToRemove);\n        }\n        this.createMissingConditionsAndOperators();\n      }\n    }\n    this.lastUiCompletePosition = lastUiCompletePosition;\n  }\n  updateConditionStatusesAndValues(lastUiCompletePosition, joinOperator) {\n    this.eTypes.forEach((eType, position) => {\n      const disabled = this.isConditionDisabled(position, lastUiCompletePosition);\n      eType.setDisabled(disabled || this.filterListOptions.length <= 1);\n      if (position === 1) {\n        _setDisabled(this.eJoinOperatorPanels[0], disabled);\n        this.eJoinOperatorsAnd[0].setDisabled(disabled);\n        this.eJoinOperatorsOr[0].setDisabled(disabled);\n      }\n    });\n    this.eConditionBodies.forEach((element, index) => {\n      _setDisplayed(element, this.isConditionBodyVisible(index));\n    });\n    const orChecked = (joinOperator ?? this.getJoinOperator()) === \"OR\";\n    this.eJoinOperatorsAnd.forEach((eJoinOperatorAnd) => {\n      eJoinOperatorAnd.setValue(!orChecked, true);\n    });\n    this.eJoinOperatorsOr.forEach((eJoinOperatorOr) => {\n      eJoinOperatorOr.setValue(orChecked, true);\n    });\n    this.forEachInput((element, index, position, numberOfInputs) => {\n      this.setElementDisplayed(element, index < numberOfInputs);\n      this.setElementDisabled(element, this.isConditionDisabled(position, lastUiCompletePosition));\n    });\n    this.resetPlaceholder();\n  }\n  shouldAddNewConditionAtEnd(areAllConditionsUiComplete) {\n    return areAllConditionsUiComplete && this.getNumConditions() < this.maxNumConditions && !this.isReadOnly();\n  }\n  removeConditionsAndOperators(startPosition, deleteCount) {\n    if (startPosition >= this.getNumConditions()) {\n      return;\n    }\n    this.removeComponents(this.eTypes, startPosition, deleteCount);\n    this.removeElements(this.eConditionBodies, startPosition, deleteCount);\n    this.removeValueElements(startPosition, deleteCount);\n    const joinOperatorIndex = Math.max(startPosition - 1, 0);\n    this.removeElements(this.eJoinOperatorPanels, joinOperatorIndex, deleteCount);\n    this.removeComponents(this.eJoinOperatorsAnd, joinOperatorIndex, deleteCount);\n    this.removeComponents(this.eJoinOperatorsOr, joinOperatorIndex, deleteCount);\n  }\n  removeElements(elements, startPosition, deleteCount) {\n    const removedElements = this.removeItems(elements, startPosition, deleteCount);\n    removedElements.forEach((element) => _removeFromParent(element));\n  }\n  removeComponents(components, startPosition, deleteCount) {\n    const removedComponents = this.removeItems(components, startPosition, deleteCount);\n    removedComponents.forEach((comp) => {\n      _removeFromParent(comp.getGui());\n      this.destroyBean(comp);\n    });\n  }\n  removeItems(items, startPosition, deleteCount) {\n    return deleteCount == null ? items.splice(startPosition) : items.splice(startPosition, deleteCount);\n  }\n  afterGuiAttached(params) {\n    super.afterGuiAttached(params);\n    this.resetPlaceholder();\n    if (!params?.suppressFocus) {\n      if (this.isReadOnly()) {\n        this.eFilterBody.focus();\n      } else {\n        const firstInput = this.getInputs(0)[0];\n        if (!firstInput) {\n          return;\n        }\n        if (firstInput instanceof AgAbstractInputField) {\n          firstInput.getInputElement().focus();\n        }\n      }\n    }\n  }\n  afterGuiDetached() {\n    super.afterGuiDetached();\n    const appliedModel = this.getModel();\n    this.resetUiToActiveModel(appliedModel);\n    let lastUiCompletePosition = -1;\n    let updatedLastUiCompletePosition = -1;\n    let conditionsRemoved = false;\n    const joinOperator = this.getJoinOperator();\n    for (let position = this.getNumConditions() - 1; position >= 0; position--) {\n      if (this.isConditionUiComplete(position)) {\n        if (lastUiCompletePosition === -1) {\n          lastUiCompletePosition = position;\n          updatedLastUiCompletePosition = position;\n        }\n      } else {\n        const shouldRemovePositionAtEnd = position >= this.numAlwaysVisibleConditions && !this.isConditionUiComplete(position - 1);\n        const positionBeforeLastUiCompletePosition = position < lastUiCompletePosition;\n        if (shouldRemovePositionAtEnd || positionBeforeLastUiCompletePosition) {\n          this.removeConditionsAndOperators(position, 1);\n          conditionsRemoved = true;\n          if (positionBeforeLastUiCompletePosition) {\n            updatedLastUiCompletePosition--;\n          }\n        }\n      }\n    }\n    let shouldUpdateConditionStatusesAndValues = false;\n    if (this.getNumConditions() < this.numAlwaysVisibleConditions) {\n      this.createMissingConditionsAndOperators();\n      shouldUpdateConditionStatusesAndValues = true;\n    }\n    if (this.shouldAddNewConditionAtEnd(updatedLastUiCompletePosition === this.getNumConditions() - 1)) {\n      this.createJoinOperatorPanel();\n      this.createOption();\n      shouldUpdateConditionStatusesAndValues = true;\n    }\n    if (shouldUpdateConditionStatusesAndValues) {\n      this.updateConditionStatusesAndValues(updatedLastUiCompletePosition, joinOperator);\n    }\n    if (conditionsRemoved) {\n      this.updateJoinOperatorsDisabled();\n    }\n    this.lastUiCompletePosition = updatedLastUiCompletePosition;\n  }\n  getPlaceholderText(defaultPlaceholder, position) {\n    let placeholder = this.translate(defaultPlaceholder);\n    if (_isFunction(this.filterPlaceholder)) {\n      const filterPlaceholderFn = this.filterPlaceholder;\n      const filterOptionKey = this.eTypes[position].getValue();\n      const filterOption = this.translate(filterOptionKey);\n      placeholder = filterPlaceholderFn({\n        filterOptionKey,\n        filterOption,\n        placeholder\n      });\n    } else if (typeof this.filterPlaceholder === \"string\") {\n      placeholder = this.filterPlaceholder;\n    }\n    return placeholder;\n  }\n  // allow sub-classes to reset HTML placeholders after UI update.\n  resetPlaceholder() {\n    const globalTranslate = this.localeService.getLocaleTextFunc();\n    this.forEachInput((element, index, position, numberOfInputs) => {\n      if (!(element instanceof AgAbstractInputField)) {\n        return;\n      }\n      const placeholder = index === 0 && numberOfInputs > 1 ? \"inRangeStart\" : index === 0 ? \"filterOoo\" : \"inRangeEnd\";\n      const ariaLabel = index === 0 && numberOfInputs > 1 ? globalTranslate(\"ariaFilterFromValue\", \"Filter from value\") : index === 0 ? globalTranslate(\"ariaFilterValue\", \"Filter Value\") : globalTranslate(\"ariaFilterToValue\", \"Filter to Value\");\n      element.setInputPlaceholder(this.getPlaceholderText(placeholder, position));\n      element.setInputAriaLabel(ariaLabel);\n    });\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  setElementValue(element, value, fromFloatingFilter) {\n    if (element instanceof AgAbstractInputField) {\n      element.setValue(value != null ? String(value) : null, true);\n    }\n  }\n  setElementDisplayed(element, displayed) {\n    if (element instanceof Component) {\n      _setDisplayed(element.getGui(), displayed);\n    }\n  }\n  setElementDisabled(element, disabled) {\n    if (element instanceof Component) {\n      _setDisabled(element.getGui(), disabled);\n    }\n  }\n  attachElementOnChange(element, listener) {\n    if (element instanceof AgAbstractInputField) {\n      element.onValueChange(listener);\n    }\n  }\n  forEachInput(cb) {\n    this.getConditionTypes().forEach((type, position) => {\n      this.forEachPositionTypeInput(position, type, cb);\n    });\n  }\n  forEachPositionInput(position, cb) {\n    const type = this.getConditionType(position);\n    this.forEachPositionTypeInput(position, type, cb);\n  }\n  forEachPositionTypeInput(position, type, cb) {\n    const numberOfInputs = this.getNumberOfInputs(type);\n    const inputs = this.getInputs(position);\n    for (let index = 0; index < inputs.length; index++) {\n      const input = inputs[index];\n      if (input != null) {\n        cb(input, index, position, numberOfInputs);\n      }\n    }\n  }\n  isConditionDisabled(position, lastUiCompletePosition) {\n    if (this.isReadOnly()) {\n      return true;\n    }\n    if (position === 0) {\n      return false;\n    }\n    return position > lastUiCompletePosition + 1;\n  }\n  isConditionBodyVisible(position) {\n    const type = this.getConditionType(position);\n    const numberOfInputs = this.getNumberOfInputs(type);\n    return numberOfInputs > 0;\n  }\n  // returns true if the UI represents a working filter, eg all parts are filled out.\n  // eg if text filter and textfield blank then returns false.\n  isConditionUiComplete(position) {\n    if (position >= this.getNumConditions()) {\n      return false;\n    }\n    const type = this.getConditionType(position);\n    if (type === \"empty\") {\n      return false;\n    }\n    if (this.getValues(position).some((v) => v == null)) {\n      return false;\n    }\n    return true;\n  }\n  getNumConditions() {\n    return this.eTypes.length;\n  }\n  getUiCompleteConditions() {\n    const conditions = [];\n    for (let position = 0; position < this.getNumConditions(); position++) {\n      if (this.isConditionUiComplete(position)) {\n        conditions.push(this.createCondition(position));\n      }\n    }\n    return conditions;\n  }\n  createMissingConditionsAndOperators() {\n    if (this.isReadOnly()) {\n      return;\n    }\n    for (let i = this.getNumConditions(); i < this.numAlwaysVisibleConditions; i++) {\n      this.createJoinOperatorPanel();\n      this.createOption();\n    }\n  }\n  resetUiToDefaults(silent) {\n    this.removeConditionsAndOperators(this.isReadOnly() ? 1 : this.numAlwaysVisibleConditions);\n    this.eTypes.forEach((eType) => this.resetType(eType));\n    this.eJoinOperatorsAnd.forEach(\n      (eJoinOperatorAnd, index) => this.resetJoinOperatorAnd(eJoinOperatorAnd, index, this.joinOperatorId + index)\n    );\n    this.eJoinOperatorsOr.forEach(\n      (eJoinOperatorOr, index) => this.resetJoinOperatorOr(eJoinOperatorOr, index, this.joinOperatorId + index)\n    );\n    this.joinOperatorId++;\n    this.forEachInput((element) => this.resetInput(element));\n    this.resetPlaceholder();\n    this.createMissingConditionsAndOperators();\n    this.lastUiCompletePosition = null;\n    if (!silent) {\n      this.onUiChanged();\n    }\n    return AgPromise.resolve();\n  }\n  resetType(eType) {\n    const translate = this.localeService.getLocaleTextFunc();\n    const filteringLabel = translate(\"ariaFilteringOperator\", \"Filtering operator\");\n    eType.setValue(this.optionsFactory.getDefaultOption(), true).setAriaLabel(filteringLabel).setDisabled(this.isReadOnly() || this.filterListOptions.length <= 1);\n  }\n  resetJoinOperatorAnd(eJoinOperatorAnd, index, uniqueGroupId) {\n    this.resetJoinOperator(\n      eJoinOperatorAnd,\n      index,\n      this.isDefaultOperator(\"AND\"),\n      this.translate(\"andCondition\"),\n      uniqueGroupId\n    );\n  }\n  resetJoinOperatorOr(eJoinOperatorOr, index, uniqueGroupId) {\n    this.resetJoinOperator(\n      eJoinOperatorOr,\n      index,\n      this.isDefaultOperator(\"OR\"),\n      this.translate(\"orCondition\"),\n      uniqueGroupId\n    );\n  }\n  resetJoinOperator(eJoinOperator, index, value, label, uniqueGroupId) {\n    this.updateJoinOperatorDisabled(\n      eJoinOperator.setValue(value, true).setName(`ag-simple-filter-and-or-${this.getCompId()}-${uniqueGroupId}`).setLabel(label),\n      index\n    );\n  }\n  updateJoinOperatorsDisabled() {\n    this.eJoinOperatorsAnd.forEach((eJoinOperator, index) => this.updateJoinOperatorDisabled(eJoinOperator, index));\n    this.eJoinOperatorsOr.forEach((eJoinOperator, index) => this.updateJoinOperatorDisabled(eJoinOperator, index));\n  }\n  updateJoinOperatorDisabled(eJoinOperator, index) {\n    eJoinOperator.setDisabled(this.isReadOnly() || index > 0);\n  }\n  resetInput(element) {\n    this.setElementValue(element, null);\n    this.setElementDisabled(element, this.isReadOnly());\n  }\n  // puts model values into the UI\n  setConditionIntoUi(model, position) {\n    const values = this.mapValuesFromModel(model);\n    this.forEachInput((element, index, elPosition) => {\n      if (elPosition !== position) {\n        return;\n      }\n      this.setElementValue(element, values[index] != null ? values[index] : null);\n    });\n  }\n  // after floating filter changes, this sets the 'value' section. this is implemented by the base class\n  // (as that's where value is controlled), the 'type' part from the floating filter is dealt with in this class.\n  setValueFromFloatingFilter(value) {\n    this.forEachInput((element, index, position) => {\n      this.setElementValue(element, index === 0 && position === 0 ? value : null, true);\n    });\n  }\n  isDefaultOperator(operator) {\n    return operator === this.defaultJoinOperator;\n  }\n  addChangedListeners(eType, position) {\n    if (this.isReadOnly()) {\n      return;\n    }\n    eType.onValueChange(this.listener);\n    this.forEachPositionInput(position, (element) => {\n      this.attachElementOnChange(element, this.listener);\n    });\n  }\n  /** returns true if the row passes the said condition */\n  individualConditionPasses(params, filterModel) {\n    const cellValue = this.getCellValue(params.node);\n    const values = this.mapValuesFromModel(filterModel);\n    const customFilterOption = this.optionsFactory.getCustomOption(filterModel.type);\n    const customFilterResult = this.evaluateCustomFilter(customFilterOption, values, cellValue);\n    if (customFilterResult != null) {\n      return customFilterResult;\n    }\n    if (cellValue == null) {\n      return this.evaluateNullValue(filterModel.type);\n    }\n    return this.evaluateNonNullValue(values, cellValue, filterModel, params);\n  }\n  evaluateCustomFilter(customFilterOption, values, cellValue) {\n    if (customFilterOption == null) {\n      return;\n    }\n    const { predicate } = customFilterOption;\n    if (predicate != null && !values.some((v) => v == null)) {\n      return predicate(values, cellValue);\n    }\n    return;\n  }\n  isBlank(cellValue) {\n    return cellValue == null || typeof cellValue === \"string\" && cellValue.trim().length === 0;\n  }\n  hasInvalidInputs() {\n    return false;\n  }\n};\n\n// community-modules/core/src/filter/provided/scalarFilter.ts\nvar ScalarFilter = class extends SimpleFilter {\n  setParams(params) {\n    super.setParams(params);\n    this.scalarFilterParams = params;\n  }\n  evaluateNullValue(filterType) {\n    switch (filterType) {\n      case \"equals\":\n      case \"notEqual\":\n        if (this.scalarFilterParams.includeBlanksInEquals) {\n          return true;\n        }\n        break;\n      case \"greaterThan\":\n      case \"greaterThanOrEqual\":\n        if (this.scalarFilterParams.includeBlanksInGreaterThan) {\n          return true;\n        }\n        break;\n      case \"lessThan\":\n      case \"lessThanOrEqual\":\n        if (this.scalarFilterParams.includeBlanksInLessThan) {\n          return true;\n        }\n        break;\n      case \"inRange\":\n        if (this.scalarFilterParams.includeBlanksInRange) {\n          return true;\n        }\n        break;\n      case \"blank\":\n        return true;\n      case \"notBlank\":\n        return false;\n    }\n    return false;\n  }\n  evaluateNonNullValue(values, cellValue, filterModel) {\n    const comparator = this.comparator();\n    const compareResult = values[0] != null ? comparator(values[0], cellValue) : 0;\n    switch (filterModel.type) {\n      case \"equals\":\n        return compareResult === 0;\n      case \"notEqual\":\n        return compareResult !== 0;\n      case \"greaterThan\":\n        return compareResult > 0;\n      case \"greaterThanOrEqual\":\n        return compareResult >= 0;\n      case \"lessThan\":\n        return compareResult < 0;\n      case \"lessThanOrEqual\":\n        return compareResult <= 0;\n      case \"inRange\": {\n        const compareToResult = comparator(values[1], cellValue);\n        return this.scalarFilterParams.inRangeInclusive ? compareResult >= 0 && compareToResult <= 0 : compareResult > 0 && compareToResult < 0;\n      }\n      case \"blank\":\n        return this.isBlank(cellValue);\n      case \"notBlank\":\n        return !this.isBlank(cellValue);\n      default:\n        _warnOnce(\n          'Unexpected type of filter \"' + filterModel.type + '\", it looks like the filter was configured with incorrect Filter Options'\n        );\n        return true;\n    }\n  }\n};\n\n// community-modules/core/src/utils/keyboard.ts\nvar A_KEYCODE = 65;\nvar C_KEYCODE = 67;\nvar V_KEYCODE = 86;\nvar D_KEYCODE = 68;\nvar Z_KEYCODE = 90;\nvar Y_KEYCODE = 89;\nfunction _isEventFromPrintableCharacter(event) {\n  if (event.altKey || event.ctrlKey || event.metaKey) {\n    return false;\n  }\n  const printableCharacter = event.key?.length === 1;\n  return printableCharacter;\n}\nfunction _isUserSuppressingKeyboardEvent(gos, keyboardEvent, rowNode, column, editing) {\n  const colDefFunc = column ? column.getColDef().suppressKeyboardEvent : void 0;\n  if (!colDefFunc) {\n    return false;\n  }\n  const params = gos.addGridCommonParams({\n    event: keyboardEvent,\n    editing,\n    column,\n    node: rowNode,\n    data: rowNode.data,\n    colDef: column.getColDef()\n  });\n  if (colDefFunc) {\n    const colDefFuncResult = colDefFunc(params);\n    if (colDefFuncResult) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction _isUserSuppressingHeaderKeyboardEvent(gos, keyboardEvent, headerRowIndex, column) {\n  const colDef = column.getDefinition();\n  const colDefFunc = colDef && colDef.suppressHeaderKeyboardEvent;\n  if (!_exists(colDefFunc)) {\n    return false;\n  }\n  const params = gos.addGridCommonParams({\n    colDef,\n    column,\n    headerRowIndex,\n    event: keyboardEvent\n  });\n  return !!colDefFunc(params);\n}\nfunction _normaliseQwertyAzerty(keyboardEvent) {\n  const { keyCode } = keyboardEvent;\n  let code;\n  switch (keyCode) {\n    case A_KEYCODE:\n      code = KeyCode.A;\n      break;\n    case C_KEYCODE:\n      code = KeyCode.C;\n      break;\n    case V_KEYCODE:\n      code = KeyCode.V;\n      break;\n    case D_KEYCODE:\n      code = KeyCode.D;\n      break;\n    case Z_KEYCODE:\n      code = KeyCode.Z;\n      break;\n    case Y_KEYCODE:\n      code = KeyCode.Y;\n      break;\n    default:\n      code = keyboardEvent.code;\n  }\n  return code;\n}\nfunction _isDeleteKey(key, alwaysReturnFalseOnBackspace = false) {\n  if (key === KeyCode.DELETE) {\n    return true;\n  }\n  if (!alwaysReturnFalseOnBackspace && key === KeyCode.BACKSPACE) {\n    return _isMacOsUserAgent();\n  }\n  return false;\n}\n\n// community-modules/core/src/widgets/agInputTextField.ts\nvar AgInputTextField = class extends AgAbstractInputField {\n  constructor(config, className = \"ag-text-field\", inputType = \"text\") {\n    super(config, className, inputType);\n  }\n  postConstruct() {\n    super.postConstruct();\n    if (this.config.allowedCharPattern) {\n      this.preventDisallowedCharacters();\n    }\n  }\n  setValue(value, silent) {\n    if (this.eInput.value !== value) {\n      this.eInput.value = _exists(value) ? value : \"\";\n    }\n    return super.setValue(value, silent);\n  }\n  /** Used to set an initial value into the input without necessarily setting `this.value` or triggering events (e.g. to set an invalid value) */\n  setStartValue(value) {\n    this.setValue(value, true);\n  }\n  preventDisallowedCharacters() {\n    const pattern = new RegExp(`[${this.config.allowedCharPattern}]`);\n    const preventCharacters = (event) => {\n      if (!_isEventFromPrintableCharacter(event)) {\n        return;\n      }\n      if (event.key && !pattern.test(event.key)) {\n        event.preventDefault();\n      }\n    };\n    this.addManagedListeners(this.eInput, {\n      keydown: preventCharacters,\n      paste: (e) => {\n        const text = e.clipboardData?.getData(\"text\");\n        if (text && text.split(\"\").some((c) => !pattern.test(c))) {\n          e.preventDefault();\n        }\n      }\n    });\n  }\n};\nvar AgInputTextFieldSelector = {\n  selector: \"AG-INPUT-TEXT-FIELD\",\n  component: AgInputTextField\n};\n\n// community-modules/core/src/widgets/agInputNumberField.ts\nvar AgInputNumberField = class extends AgInputTextField {\n  constructor(config) {\n    super(config, \"ag-number-field\", \"number\");\n  }\n  postConstruct() {\n    super.postConstruct();\n    this.addManagedListeners(this.eInput, {\n      blur: () => {\n        const floatedValue = parseFloat(this.eInput.value);\n        const value = isNaN(floatedValue) ? \"\" : this.normalizeValue(floatedValue.toString());\n        if (this.value !== value) {\n          this.setValue(value);\n        }\n      },\n      wheel: this.onWheel.bind(this)\n    });\n    this.eInput.step = \"any\";\n    const { precision, min, max, step } = this.config;\n    if (typeof precision === \"number\")\n      this.setPrecision(precision);\n    if (typeof min === \"number\")\n      this.setMin(min);\n    if (typeof max === \"number\")\n      this.setMax(max);\n    if (typeof step === \"number\")\n      this.setStep(step);\n  }\n  onWheel(e) {\n    if (this.gos.getActiveDomElement() === this.eInput) {\n      e.preventDefault();\n    }\n  }\n  normalizeValue(value) {\n    if (value === \"\") {\n      return \"\";\n    }\n    if (this.precision != null) {\n      value = this.adjustPrecision(value);\n    }\n    const val = parseFloat(value);\n    if (this.min != null && val < this.min) {\n      value = this.min.toString();\n    } else if (this.max != null && val > this.max) {\n      value = this.max.toString();\n    }\n    return value;\n  }\n  adjustPrecision(value, isScientificNotation) {\n    if (this.precision == null) {\n      return value;\n    }\n    if (isScientificNotation) {\n      const floatString = parseFloat(value).toFixed(this.precision);\n      return parseFloat(floatString).toString();\n    }\n    const parts = String(value).split(\".\");\n    if (parts.length > 1) {\n      if (parts[1].length <= this.precision) {\n        return value;\n      } else if (this.precision > 0) {\n        return `${parts[0]}.${parts[1].slice(0, this.precision)}`;\n      }\n    }\n    return parts[0];\n  }\n  setMin(min) {\n    if (this.min === min) {\n      return this;\n    }\n    this.min = min;\n    _addOrRemoveAttribute(this.eInput, \"min\", min);\n    return this;\n  }\n  setMax(max) {\n    if (this.max === max) {\n      return this;\n    }\n    this.max = max;\n    _addOrRemoveAttribute(this.eInput, \"max\", max);\n    return this;\n  }\n  setPrecision(precision) {\n    this.precision = precision;\n    return this;\n  }\n  setStep(step) {\n    if (this.step === step) {\n      return this;\n    }\n    this.step = step;\n    _addOrRemoveAttribute(this.eInput, \"step\", step);\n    return this;\n  }\n  setValue(value, silent) {\n    return this.setValueOrInputValue(\n      (v) => super.setValue(v, silent),\n      () => this,\n      value\n    );\n  }\n  setStartValue(value) {\n    return this.setValueOrInputValue(\n      (v) => super.setValue(v, true),\n      (v) => {\n        this.eInput.value = v;\n      },\n      value\n    );\n  }\n  setValueOrInputValue(setValueFunc, setInputValueOnlyFunc, value) {\n    if (_exists(value)) {\n      let setInputValueOnly = this.isScientificNotation(value);\n      if (setInputValueOnly && this.eInput.validity.valid) {\n        return setValueFunc(value);\n      }\n      if (!setInputValueOnly) {\n        value = this.adjustPrecision(value);\n        const normalizedValue = this.normalizeValue(value);\n        setInputValueOnly = value != normalizedValue;\n      }\n      if (setInputValueOnly) {\n        return setInputValueOnlyFunc(value);\n      }\n    }\n    return setValueFunc(value);\n  }\n  getValue() {\n    if (!this.eInput.validity.valid) {\n      return void 0;\n    }\n    const inputValue = this.eInput.value;\n    if (this.isScientificNotation(inputValue)) {\n      return this.adjustPrecision(inputValue, true);\n    }\n    return super.getValue();\n  }\n  isScientificNotation(value) {\n    return typeof value === \"string\" && value.includes(\"e\");\n  }\n};\nvar AgInputNumberFieldSelector = {\n  selector: \"AG-INPUT-NUMBER-FIELD\",\n  component: AgInputNumberField\n};\n\n// community-modules/core/src/filter/provided/number/numberFilterConstants.ts\nvar DEFAULT_NUMBER_FILTER_OPTIONS = [\n  \"equals\",\n  \"notEqual\",\n  \"greaterThan\",\n  \"greaterThanOrEqual\",\n  \"lessThan\",\n  \"lessThanOrEqual\",\n  \"inRange\",\n  \"blank\",\n  \"notBlank\"\n];\n\n// community-modules/core/src/filter/provided/simpleFilterModelFormatter.ts\nvar SimpleFilterModelFormatter = class {\n  constructor(localeService, optionsFactory, valueFormatter) {\n    this.localeService = localeService;\n    this.optionsFactory = optionsFactory;\n    this.valueFormatter = valueFormatter;\n  }\n  // used by:\n  // 1) NumberFloatingFilter & TextFloatingFilter: Always, for both when editable and read only.\n  // 2) DateFloatingFilter: Only when read only (as we show text rather than a date picker when read only)\n  getModelAsString(model) {\n    if (!model) {\n      return null;\n    }\n    const isCombined = model.operator != null;\n    const translate = this.localeService.getLocaleTextFunc();\n    if (isCombined) {\n      const combinedModel = model;\n      const conditions = combinedModel.conditions ?? [];\n      const customOptions = conditions.map((condition) => this.getModelAsString(condition));\n      const joinOperatorTranslateKey = combinedModel.operator === \"AND\" ? \"andCondition\" : \"orCondition\";\n      return customOptions.join(\n        ` ${translate(joinOperatorTranslateKey, FILTER_LOCALE_TEXT[joinOperatorTranslateKey])} `\n      );\n    } else if (model.type === \"blank\" || model.type === \"notBlank\") {\n      return translate(model.type, model.type);\n    } else {\n      const condition = model;\n      const customOption = this.optionsFactory.getCustomOption(condition.type);\n      const { displayKey, displayName, numberOfInputs } = customOption || {};\n      if (displayKey && displayName && numberOfInputs === 0) {\n        translate(displayKey, displayName);\n        return displayName;\n      }\n      return this.conditionToString(condition, customOption);\n    }\n  }\n  updateParams(params) {\n    this.optionsFactory = params.optionsFactory;\n  }\n  formatValue(value) {\n    return this.valueFormatter ? this.valueFormatter(value ?? null) ?? \"\" : String(value);\n  }\n};\n\n// community-modules/core/src/filter/provided/number/numberFilterModelFormatter.ts\nvar NumberFilterModelFormatter = class extends SimpleFilterModelFormatter {\n  conditionToString(condition, options) {\n    const { numberOfInputs } = options || {};\n    const isRange = condition.type == \"inRange\" || numberOfInputs === 2;\n    if (isRange) {\n      return `${this.formatValue(condition.filter)}-${this.formatValue(condition.filterTo)}`;\n    }\n    if (condition.filter != null) {\n      return this.formatValue(condition.filter);\n    }\n    return `${condition.type}`;\n  }\n};\n\n// community-modules/core/src/filter/provided/number/numberFilterUtils.ts\nfunction getAllowedCharPattern(filterParams) {\n  const { allowedCharPattern } = filterParams ?? {};\n  return allowedCharPattern ?? null;\n}\n\n// community-modules/core/src/filter/provided/number/numberFilter.ts\nvar NumberFilter = class extends ScalarFilter {\n  constructor() {\n    super(\"numberFilter\");\n    this.eValuesFrom = [];\n    this.eValuesTo = [];\n  }\n  refresh(params) {\n    if (this.numberFilterParams.allowedCharPattern !== params.allowedCharPattern) {\n      return false;\n    }\n    return super.refresh(params);\n  }\n  mapValuesFromModel(filterModel) {\n    const { filter, filterTo, type } = filterModel || {};\n    return [this.processValue(filter), this.processValue(filterTo)].slice(0, this.getNumberOfInputs(type));\n  }\n  getDefaultDebounceMs() {\n    return 500;\n  }\n  comparator() {\n    return (left, right) => {\n      if (left === right) {\n        return 0;\n      }\n      return left < right ? 1 : -1;\n    };\n  }\n  setParams(params) {\n    this.numberFilterParams = params;\n    super.setParams(params);\n    this.filterModelFormatter = new NumberFilterModelFormatter(\n      this.localeService,\n      this.optionsFactory,\n      this.numberFilterParams.numberFormatter\n    );\n  }\n  getDefaultFilterOptions() {\n    return DEFAULT_NUMBER_FILTER_OPTIONS;\n  }\n  setElementValue(element, value, fromFloatingFilter) {\n    const valueToSet = !fromFloatingFilter && this.numberFilterParams.numberFormatter ? this.numberFilterParams.numberFormatter(value ?? null) : value;\n    super.setElementValue(element, valueToSet);\n  }\n  createValueElement() {\n    const allowedCharPattern = getAllowedCharPattern(this.numberFilterParams);\n    const eCondition = document.createElement(\"div\");\n    eCondition.classList.add(\"ag-filter-body\");\n    _setAriaRole(eCondition, \"presentation\");\n    this.createFromToElement(eCondition, this.eValuesFrom, \"from\", allowedCharPattern);\n    this.createFromToElement(eCondition, this.eValuesTo, \"to\", allowedCharPattern);\n    return eCondition;\n  }\n  createFromToElement(eCondition, eValues, fromTo, allowedCharPattern) {\n    const eValue = this.createManagedBean(\n      allowedCharPattern ? new AgInputTextField({ allowedCharPattern }) : new AgInputNumberField()\n    );\n    eValue.addCssClass(`ag-filter-${fromTo}`);\n    eValue.addCssClass(\"ag-filter-filter\");\n    eValues.push(eValue);\n    eCondition.appendChild(eValue.getGui());\n  }\n  removeValueElements(startPosition, deleteCount) {\n    this.removeComponents(this.eValuesFrom, startPosition, deleteCount);\n    this.removeComponents(this.eValuesTo, startPosition, deleteCount);\n  }\n  getValues(position) {\n    const result = [];\n    this.forEachPositionInput(position, (element, index, _elPosition, numberOfInputs) => {\n      if (index < numberOfInputs) {\n        result.push(this.processValue(this.stringToFloat(element.getValue())));\n      }\n    });\n    return result;\n  }\n  areSimpleModelsEqual(aSimple, bSimple) {\n    return aSimple.filter === bSimple.filter && aSimple.filterTo === bSimple.filterTo && aSimple.type === bSimple.type;\n  }\n  getFilterType() {\n    return \"number\";\n  }\n  processValue(value) {\n    if (value == null) {\n      return null;\n    }\n    return isNaN(value) ? null : value;\n  }\n  stringToFloat(value) {\n    if (typeof value === \"number\") {\n      return value;\n    }\n    let filterText = _makeNull(value);\n    if (filterText != null && filterText.trim() === \"\") {\n      filterText = null;\n    }\n    if (this.numberFilterParams.numberParser) {\n      return this.numberFilterParams.numberParser(filterText);\n    }\n    return filterText == null || filterText.trim() === \"-\" ? null : parseFloat(filterText);\n  }\n  createCondition(position) {\n    const type = this.getConditionType(position);\n    const model = {\n      filterType: this.getFilterType(),\n      type\n    };\n    const values = this.getValues(position);\n    if (values.length > 0) {\n      model.filter = values[0];\n    }\n    if (values.length > 1) {\n      model.filterTo = values[1];\n    }\n    return model;\n  }\n  getInputs(position) {\n    if (position >= this.eValuesFrom.length) {\n      return [null, null];\n    }\n    return [this.eValuesFrom[position], this.eValuesTo[position]];\n  }\n  getModelAsString(model) {\n    return this.filterModelFormatter.getModelAsString(model) ?? \"\";\n  }\n  hasInvalidInputs() {\n    let invalidInputs = false;\n    this.forEachInput((element) => {\n      if (!element.getInputElement().validity.valid) {\n        invalidInputs = true;\n        return;\n      }\n    });\n    return invalidInputs;\n  }\n};\n\n// community-modules/core/src/filter/provided/text/textFilterConstants.ts\nvar DEFAULT_TEXT_FILTER_OPTIONS = [\n  \"contains\",\n  \"notContains\",\n  \"equals\",\n  \"notEqual\",\n  \"startsWith\",\n  \"endsWith\",\n  \"blank\",\n  \"notBlank\"\n];\n\n// community-modules/core/src/filter/provided/text/textFilterModelFormatter.ts\nvar TextFilterModelFormatter = class extends SimpleFilterModelFormatter {\n  conditionToString(condition, options) {\n    const { numberOfInputs } = options || {};\n    const isRange = condition.type == \"inRange\" || numberOfInputs === 2;\n    if (isRange) {\n      return `${condition.filter}-${condition.filterTo}`;\n    }\n    if (condition.filter != null) {\n      return `${condition.filter}`;\n    }\n    return `${condition.type}`;\n  }\n};\n\n// community-modules/core/src/filter/provided/text/textFilterUtils.ts\nfunction trimInputForFilter(value) {\n  const trimmedInput = value && value.trim();\n  return trimmedInput === \"\" ? value : trimmedInput;\n}\n\n// community-modules/core/src/filter/provided/text/textFilter.ts\nvar TextFilter = class extends SimpleFilter {\n  constructor() {\n    super(\"textFilter\");\n    this.defaultFormatter = (from) => from;\n    this.defaultLowercaseFormatter = (from) => from == null ? null : from.toString().toLowerCase();\n    this.defaultMatcher = ({ filterOption, value, filterText }) => {\n      if (filterText == null) {\n        return false;\n      }\n      switch (filterOption) {\n        case \"contains\":\n          return value.indexOf(filterText) >= 0;\n        case \"notContains\":\n          return value.indexOf(filterText) < 0;\n        case \"equals\":\n          return value === filterText;\n        case \"notEqual\":\n          return value != filterText;\n        case \"startsWith\":\n          return value.indexOf(filterText) === 0;\n        case \"endsWith\": {\n          const index = value.lastIndexOf(filterText);\n          return index >= 0 && index === value.length - filterText.length;\n        }\n        default:\n          return false;\n      }\n    };\n    this.eValuesFrom = [];\n    this.eValuesTo = [];\n  }\n  getDefaultDebounceMs() {\n    return 500;\n  }\n  setParams(params) {\n    this.textFilterParams = params;\n    super.setParams(params);\n    this.matcher = this.getTextMatcher();\n    this.formatter = this.textFilterParams.textFormatter || (this.textFilterParams.caseSensitive ? this.defaultFormatter : this.defaultLowercaseFormatter);\n    this.filterModelFormatter = new TextFilterModelFormatter(this.localeService, this.optionsFactory);\n  }\n  getTextMatcher() {\n    const legacyComparator = this.textFilterParams.textCustomComparator;\n    if (legacyComparator) {\n      _warnOnce(\"textCustomComparator is deprecated, use textMatcher instead.\");\n      return ({ filterOption, value, filterText }) => legacyComparator(filterOption, value, filterText);\n    }\n    return this.textFilterParams.textMatcher || this.defaultMatcher;\n  }\n  createCondition(position) {\n    const type = this.getConditionType(position);\n    const model = {\n      filterType: this.getFilterType(),\n      type\n    };\n    const values = this.getValuesWithSideEffects(position, true);\n    if (values.length > 0) {\n      model.filter = values[0];\n    }\n    if (values.length > 1) {\n      model.filterTo = values[1];\n    }\n    return model;\n  }\n  getFilterType() {\n    return \"text\";\n  }\n  areSimpleModelsEqual(aSimple, bSimple) {\n    return aSimple.filter === bSimple.filter && aSimple.filterTo === bSimple.filterTo && aSimple.type === bSimple.type;\n  }\n  getInputs(position) {\n    if (position >= this.eValuesFrom.length) {\n      return [null, null];\n    }\n    return [this.eValuesFrom[position], this.eValuesTo[position]];\n  }\n  getValues(position) {\n    return this.getValuesWithSideEffects(position, false);\n  }\n  getValuesWithSideEffects(position, applySideEffects) {\n    const result = [];\n    this.forEachPositionInput(position, (element, index, _elPosition, numberOfInputs) => {\n      if (index < numberOfInputs) {\n        let value = _makeNull(element.getValue());\n        if (applySideEffects && this.textFilterParams.trimInput) {\n          value = trimInputForFilter(value) ?? null;\n          element.setValue(value, true);\n        }\n        result.push(value);\n      }\n    });\n    return result;\n  }\n  getDefaultFilterOptions() {\n    return DEFAULT_TEXT_FILTER_OPTIONS;\n  }\n  createValueElement() {\n    const eCondition = document.createElement(\"div\");\n    eCondition.classList.add(\"ag-filter-body\");\n    _setAriaRole(eCondition, \"presentation\");\n    this.createFromToElement(eCondition, this.eValuesFrom, \"from\");\n    this.createFromToElement(eCondition, this.eValuesTo, \"to\");\n    return eCondition;\n  }\n  createFromToElement(eCondition, eValues, fromTo) {\n    const eValue = this.createManagedBean(new AgInputTextField());\n    eValue.addCssClass(`ag-filter-${fromTo}`);\n    eValue.addCssClass(\"ag-filter-filter\");\n    eValues.push(eValue);\n    eCondition.appendChild(eValue.getGui());\n  }\n  removeValueElements(startPosition, deleteCount) {\n    this.removeComponents(this.eValuesFrom, startPosition, deleteCount);\n    this.removeComponents(this.eValuesTo, startPosition, deleteCount);\n  }\n  mapValuesFromModel(filterModel) {\n    const { filter, filterTo, type } = filterModel || {};\n    return [filter || null, filterTo || null].slice(0, this.getNumberOfInputs(type));\n  }\n  evaluateNullValue(filterType) {\n    const filterTypesAllowNulls = [\"notEqual\", \"notContains\", \"blank\"];\n    return filterType ? filterTypesAllowNulls.indexOf(filterType) >= 0 : false;\n  }\n  evaluateNonNullValue(values, cellValue, filterModel, params) {\n    const formattedValues = values.map((v) => this.formatter(v)) || [];\n    const cellValueFormatted = this.formatter(cellValue);\n    const { api, colDef, column, context, textFormatter } = this.textFilterParams;\n    if (filterModel.type === \"blank\") {\n      return this.isBlank(cellValue);\n    } else if (filterModel.type === \"notBlank\") {\n      return !this.isBlank(cellValue);\n    }\n    const matcherParams = {\n      api,\n      colDef,\n      column,\n      context,\n      node: params.node,\n      data: params.data,\n      filterOption: filterModel.type,\n      value: cellValueFormatted,\n      textFormatter\n    };\n    return formattedValues.some((v) => this.matcher({ ...matcherParams, filterText: v }));\n  }\n  getModelAsString(model) {\n    return this.filterModelFormatter.getModelAsString(model) ?? \"\";\n  }\n};\n\n// community-modules/core/src/utils/number.ts\nfunction toNumber(value) {\n  if (typeof value === \"number\") {\n    return value;\n  }\n  if (typeof value === \"string\") {\n    const parsed = parseInt(value);\n    if (isNaN(parsed)) {\n      return void 0;\n    }\n    return parsed;\n  }\n  return void 0;\n}\nfunction toConstrainedNum(min, max = Number.MAX_VALUE) {\n  return (value) => {\n    const num = toNumber(value);\n    if (num == null || num < min || num > max) {\n      return void 0;\n    }\n    return num;\n  };\n}\nfunction _padStartWidthZeros(value, totalStringSize) {\n  return value.toString().padStart(totalStringSize, \"0\");\n}\nfunction _createArrayOfNumbers(first, last) {\n  const result = [];\n  for (let i = first; i <= last; i++) {\n    result.push(i);\n  }\n  return result;\n}\nfunction _formatNumberTwoDecimalPlacesAndCommas(value, thousandSeparator, decimalSeparator) {\n  if (typeof value !== \"number\") {\n    return \"\";\n  }\n  return _formatNumberCommas(Math.round(value * 100) / 100, thousandSeparator, decimalSeparator);\n}\nfunction _formatNumberCommas(value, thousandSeparator, decimalSeparator) {\n  if (typeof value !== \"number\") {\n    return \"\";\n  }\n  return value.toString().replace(\".\", decimalSeparator).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, `$1${thousandSeparator}`);\n}\n\n// community-modules/core/src/utils/date.ts\nfunction _serialiseDate(date, includeTime = true, separator = \"-\") {\n  if (!date) {\n    return null;\n  }\n  let serialised = [date.getFullYear(), date.getMonth() + 1, date.getDate()].map((part) => _padStartWidthZeros(part, 2)).join(separator);\n  if (includeTime) {\n    serialised += \" \" + [date.getHours(), date.getMinutes(), date.getSeconds()].map((part) => _padStartWidthZeros(part, 2)).join(\":\");\n  }\n  return serialised;\n}\nvar calculateOrdinal = (value) => {\n  if (value > 3 && value < 21) {\n    return \"th\";\n  }\n  const remainder = value % 10;\n  switch (remainder) {\n    case 1:\n      return \"st\";\n    case 2:\n      return \"nd\";\n    case 3:\n      return \"rd\";\n  }\n  return \"th\";\n};\nfunction _dateToFormattedString(date, format = \"YYYY-MM-DD\") {\n  const fullYear = _padStartWidthZeros(date.getFullYear(), 4);\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ];\n  const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  const replace = {\n    YYYY: () => fullYear.slice(fullYear.length - 4, fullYear.length),\n    YY: () => fullYear.slice(fullYear.length - 2, fullYear.length),\n    Y: () => `${date.getFullYear()}`,\n    MMMM: () => months[date.getMonth()],\n    MMM: () => months[date.getMonth()].slice(0, 3),\n    MM: () => _padStartWidthZeros(date.getMonth() + 1, 2),\n    Mo: () => `${date.getMonth() + 1}${calculateOrdinal(date.getMonth() + 1)}`,\n    M: () => `${date.getMonth() + 1}`,\n    Do: () => `${date.getDate()}${calculateOrdinal(date.getDate())}`,\n    DD: () => _padStartWidthZeros(date.getDate(), 2),\n    D: () => `${date.getDate()}`,\n    dddd: () => days[date.getDay()],\n    ddd: () => days[date.getDay()].slice(0, 3),\n    dd: () => days[date.getDay()].slice(0, 2),\n    do: () => `${date.getDay()}${calculateOrdinal(date.getDay())}`,\n    d: () => `${date.getDay()}`\n  };\n  const regexp = new RegExp(Object.keys(replace).join(\"|\"), \"g\");\n  return format.replace(regexp, (match) => {\n    if (match in replace) {\n      return replace[match]();\n    }\n    return match;\n  });\n}\nfunction _parseDateTimeFromString(value) {\n  if (!value) {\n    return null;\n  }\n  const [dateStr, timeStr] = value.split(\" \");\n  if (!dateStr) {\n    return null;\n  }\n  const fields = dateStr.split(\"-\").map((f) => parseInt(f, 10));\n  if (fields.filter((f) => !isNaN(f)).length !== 3) {\n    return null;\n  }\n  const [year, month, day] = fields;\n  const date = new Date(year, month - 1, day);\n  if (date.getFullYear() !== year || date.getMonth() !== month - 1 || date.getDate() !== day) {\n    return null;\n  }\n  if (!timeStr || timeStr === \"00:00:00\") {\n    return date;\n  }\n  const [hours, minutes, seconds] = timeStr.split(\":\").map((part) => parseInt(part, 10));\n  if (hours >= 0 && hours < 24) {\n    date.setHours(hours);\n  }\n  if (minutes >= 0 && minutes < 60) {\n    date.setMinutes(minutes);\n  }\n  if (seconds >= 0 && seconds < 60) {\n    date.setSeconds(seconds);\n  }\n  return date;\n}\n\n// community-modules/core/src/filter/provided/date/dateCompWrapper.ts\nvar DateCompWrapper = class {\n  constructor(context, userComponentFactory, dateComponentParams, eParent, onReady) {\n    this.alive = true;\n    this.context = context;\n    this.eParent = eParent;\n    const compDetails = userComponentFactory.getDateCompDetails(dateComponentParams);\n    const promise = compDetails.newAgStackInstance();\n    promise.then((dateComp) => {\n      if (!this.alive) {\n        context.destroyBean(dateComp);\n        return;\n      }\n      this.dateComp = dateComp;\n      if (!dateComp) {\n        return;\n      }\n      eParent.appendChild(dateComp.getGui());\n      if (dateComp.afterGuiAttached) {\n        dateComp.afterGuiAttached();\n      }\n      if (this.tempValue) {\n        dateComp.setDate(this.tempValue);\n      }\n      if (this.disabled != null) {\n        this.setDateCompDisabled(this.disabled);\n      }\n      onReady?.(this);\n    });\n  }\n  destroy() {\n    this.alive = false;\n    this.dateComp = this.context.destroyBean(this.dateComp);\n  }\n  getDate() {\n    return this.dateComp ? this.dateComp.getDate() : this.tempValue;\n  }\n  setDate(value) {\n    if (this.dateComp) {\n      this.dateComp.setDate(value);\n    } else {\n      this.tempValue = value;\n    }\n  }\n  setDisabled(disabled) {\n    if (this.dateComp) {\n      this.setDateCompDisabled(disabled);\n    } else {\n      this.disabled = disabled;\n    }\n  }\n  setDisplayed(displayed) {\n    _setDisplayed(this.eParent, displayed);\n  }\n  setInputPlaceholder(placeholder) {\n    if (this.dateComp && this.dateComp.setInputPlaceholder) {\n      this.dateComp.setInputPlaceholder(placeholder);\n    }\n  }\n  setInputAriaLabel(label) {\n    if (this.dateComp && this.dateComp.setInputAriaLabel) {\n      this.dateComp.setInputAriaLabel(label);\n    }\n  }\n  afterGuiAttached(params) {\n    if (this.dateComp && typeof this.dateComp.afterGuiAttached === \"function\") {\n      this.dateComp.afterGuiAttached(params);\n    }\n  }\n  updateParams(params) {\n    let hasRefreshed = false;\n    if (this.dateComp?.refresh && typeof this.dateComp.refresh === \"function\") {\n      const result = this.dateComp.refresh(params);\n      if (result !== null) {\n        hasRefreshed = true;\n      }\n    }\n    if (!hasRefreshed && this.dateComp?.onParamsUpdated && typeof this.dateComp.onParamsUpdated === \"function\") {\n      const result = this.dateComp.onParamsUpdated(params);\n      if (result !== null) {\n        _warnOnce(`Custom date component method 'onParamsUpdated' is deprecated. Use 'refresh' instead.`);\n      }\n    }\n  }\n  setDateCompDisabled(disabled) {\n    if (this.dateComp == null) {\n      return;\n    }\n    if (this.dateComp.setDisabled == null) {\n      return;\n    }\n    this.dateComp.setDisabled(disabled);\n  }\n};\n\n// community-modules/core/src/filter/provided/date/dateFilterConstants.ts\nvar DEFAULT_DATE_FILTER_OPTIONS = [\n  \"equals\",\n  \"notEqual\",\n  \"lessThan\",\n  \"greaterThan\",\n  \"inRange\",\n  \"blank\",\n  \"notBlank\"\n];\n\n// community-modules/core/src/filter/provided/date/dateFilterModelFormatter.ts\nvar DateFilterModelFormatter = class extends SimpleFilterModelFormatter {\n  constructor(dateFilterParams, localeService, optionsFactory) {\n    super(localeService, optionsFactory);\n    this.dateFilterParams = dateFilterParams;\n  }\n  conditionToString(condition, options) {\n    const { type } = condition;\n    const { numberOfInputs } = options || {};\n    const isRange = type == \"inRange\" || numberOfInputs === 2;\n    const dateFrom = _parseDateTimeFromString(condition.dateFrom);\n    const dateTo = _parseDateTimeFromString(condition.dateTo);\n    const format = this.dateFilterParams.inRangeFloatingFilterDateFormat;\n    if (isRange) {\n      const formattedFrom = dateFrom !== null ? _dateToFormattedString(dateFrom, format) : \"null\";\n      const formattedTo = dateTo !== null ? _dateToFormattedString(dateTo, format) : \"null\";\n      return `${formattedFrom}-${formattedTo}`;\n    }\n    if (dateFrom != null) {\n      return _dateToFormattedString(dateFrom, format);\n    }\n    return `${type}`;\n  }\n  updateParams(params) {\n    super.updateParams(params);\n    this.dateFilterParams = params.dateFilterParams;\n  }\n};\n\n// community-modules/core/src/filter/provided/date/dateFilter.ts\nvar DEFAULT_MIN_YEAR = 1e3;\nvar DEFAULT_MAX_YEAR = Infinity;\nvar DateFilter = class extends ScalarFilter {\n  constructor() {\n    super(\"dateFilter\");\n    this.eConditionPanelsFrom = [];\n    this.eConditionPanelsTo = [];\n    this.dateConditionFromComps = [];\n    this.dateConditionToComps = [];\n    this.minValidYear = DEFAULT_MIN_YEAR;\n    this.maxValidYear = DEFAULT_MAX_YEAR;\n    this.minValidDate = null;\n    this.maxValidDate = null;\n  }\n  wireBeans(beans) {\n    super.wireBeans(beans);\n    this.context = beans.context;\n    this.userComponentFactory = beans.userComponentFactory;\n  }\n  afterGuiAttached(params) {\n    super.afterGuiAttached(params);\n    this.dateConditionFromComps[0].afterGuiAttached(params);\n  }\n  mapValuesFromModel(filterModel) {\n    const { dateFrom, dateTo, type } = filterModel || {};\n    return [\n      dateFrom && _parseDateTimeFromString(dateFrom) || null,\n      dateTo && _parseDateTimeFromString(dateTo) || null\n    ].slice(0, this.getNumberOfInputs(type));\n  }\n  comparator() {\n    return this.dateFilterParams.comparator ? this.dateFilterParams.comparator : this.defaultComparator.bind(this);\n  }\n  defaultComparator(filterDate, cellValue) {\n    const cellAsDate = cellValue;\n    if (cellValue == null || cellAsDate < filterDate) {\n      return -1;\n    }\n    if (cellAsDate > filterDate) {\n      return 1;\n    }\n    return 0;\n  }\n  setParams(params) {\n    this.dateFilterParams = params;\n    super.setParams(params);\n    const yearParser = (param, fallback) => {\n      if (params[param] != null) {\n        if (!isNaN(params[param])) {\n          return params[param] == null ? fallback : Number(params[param]);\n        } else {\n          _warnOnce(`DateFilter ${param} is not a number`);\n        }\n      }\n      return fallback;\n    };\n    this.minValidYear = yearParser(\"minValidYear\", DEFAULT_MIN_YEAR);\n    this.maxValidYear = yearParser(\"maxValidYear\", DEFAULT_MAX_YEAR);\n    if (this.minValidYear > this.maxValidYear) {\n      _warnOnce(`DateFilter minValidYear should be <= maxValidYear`);\n    }\n    if (params.minValidDate) {\n      this.minValidDate = params.minValidDate instanceof Date ? params.minValidDate : _parseDateTimeFromString(params.minValidDate);\n    } else {\n      this.minValidDate = null;\n    }\n    if (params.maxValidDate) {\n      this.maxValidDate = params.maxValidDate instanceof Date ? params.maxValidDate : _parseDateTimeFromString(params.maxValidDate);\n    } else {\n      this.maxValidDate = null;\n    }\n    if (this.minValidDate && this.maxValidDate && this.minValidDate > this.maxValidDate) {\n      _warnOnce(`DateFilter minValidDate should be <= maxValidDate`);\n    }\n    this.filterModelFormatter = new DateFilterModelFormatter(\n      this.dateFilterParams,\n      this.localeService,\n      this.optionsFactory\n    );\n  }\n  createDateCompWrapper(element) {\n    const dateCompWrapper = new DateCompWrapper(\n      this.context,\n      this.userComponentFactory,\n      {\n        onDateChanged: () => this.onUiChanged(),\n        filterParams: this.dateFilterParams\n      },\n      element\n    );\n    this.addDestroyFunc(() => dateCompWrapper.destroy());\n    return dateCompWrapper;\n  }\n  setElementValue(element, value) {\n    element.setDate(value);\n  }\n  setElementDisplayed(element, displayed) {\n    element.setDisplayed(displayed);\n  }\n  setElementDisabled(element, disabled) {\n    element.setDisabled(disabled);\n  }\n  getDefaultFilterOptions() {\n    return DEFAULT_DATE_FILTER_OPTIONS;\n  }\n  createValueElement() {\n    const eDocument = this.gos.getDocument();\n    const eCondition = eDocument.createElement(\"div\");\n    eCondition.classList.add(\"ag-filter-body\");\n    this.createFromToElement(eCondition, this.eConditionPanelsFrom, this.dateConditionFromComps, \"from\");\n    this.createFromToElement(eCondition, this.eConditionPanelsTo, this.dateConditionToComps, \"to\");\n    return eCondition;\n  }\n  createFromToElement(eCondition, eConditionPanels, dateConditionComps, fromTo) {\n    const eDocument = this.gos.getDocument();\n    const eConditionPanel = eDocument.createElement(\"div\");\n    eConditionPanel.classList.add(`ag-filter-${fromTo}`);\n    eConditionPanel.classList.add(`ag-filter-date-${fromTo}`);\n    eConditionPanels.push(eConditionPanel);\n    eCondition.appendChild(eConditionPanel);\n    dateConditionComps.push(this.createDateCompWrapper(eConditionPanel));\n  }\n  removeValueElements(startPosition, deleteCount) {\n    this.removeDateComps(this.dateConditionFromComps, startPosition, deleteCount);\n    this.removeDateComps(this.dateConditionToComps, startPosition, deleteCount);\n    this.removeItems(this.eConditionPanelsFrom, startPosition, deleteCount);\n    this.removeItems(this.eConditionPanelsTo, startPosition, deleteCount);\n  }\n  removeDateComps(components, startPosition, deleteCount) {\n    const removedComponents = this.removeItems(components, startPosition, deleteCount);\n    removedComponents.forEach((comp) => comp.destroy());\n  }\n  isValidDateValue(value) {\n    if (value === null) {\n      return false;\n    }\n    if (this.minValidDate) {\n      if (value < this.minValidDate) {\n        return false;\n      }\n    } else {\n      if (value.getUTCFullYear() < this.minValidYear) {\n        return false;\n      }\n    }\n    if (this.maxValidDate) {\n      if (value > this.maxValidDate) {\n        return false;\n      }\n    } else {\n      if (value.getUTCFullYear() > this.maxValidYear) {\n        return false;\n      }\n    }\n    return true;\n  }\n  isConditionUiComplete(position) {\n    if (!super.isConditionUiComplete(position)) {\n      return false;\n    }\n    let valid = true;\n    this.forEachInput((element, index, elPosition, numberOfInputs) => {\n      if (elPosition !== position || !valid || index >= numberOfInputs) {\n        return;\n      }\n      valid = valid && this.isValidDateValue(element.getDate());\n    });\n    return valid;\n  }\n  areSimpleModelsEqual(aSimple, bSimple) {\n    return aSimple.dateFrom === bSimple.dateFrom && aSimple.dateTo === bSimple.dateTo && aSimple.type === bSimple.type;\n  }\n  getFilterType() {\n    return \"date\";\n  }\n  createCondition(position) {\n    const type = this.getConditionType(position);\n    const model = {};\n    const values = this.getValues(position);\n    if (values.length > 0) {\n      model.dateFrom = _serialiseDate(values[0]);\n    }\n    if (values.length > 1) {\n      model.dateTo = _serialiseDate(values[1]);\n    }\n    return {\n      dateFrom: null,\n      dateTo: null,\n      filterType: this.getFilterType(),\n      type,\n      ...model\n    };\n  }\n  resetPlaceholder() {\n    const globalTranslate = this.localeService.getLocaleTextFunc();\n    const placeholder = this.translate(\"dateFormatOoo\");\n    const ariaLabel = globalTranslate(\"ariaFilterValue\", \"Filter Value\");\n    this.forEachInput((element) => {\n      element.setInputPlaceholder(placeholder);\n      element.setInputAriaLabel(ariaLabel);\n    });\n  }\n  getInputs(position) {\n    if (position >= this.dateConditionFromComps.length) {\n      return [null, null];\n    }\n    return [this.dateConditionFromComps[position], this.dateConditionToComps[position]];\n  }\n  getValues(position) {\n    const result = [];\n    this.forEachPositionInput(position, (element, index, _elPosition, numberOfInputs) => {\n      if (index < numberOfInputs) {\n        result.push(element.getDate());\n      }\n    });\n    return result;\n  }\n  translate(key) {\n    if (key === \"lessThan\") {\n      return super.translate(\"before\");\n    }\n    if (key === \"greaterThan\") {\n      return super.translate(\"after\");\n    }\n    return super.translate(key);\n  }\n  getModelAsString(model) {\n    return this.filterModelFormatter.getModelAsString(model) ?? \"\";\n  }\n};\n\n// community-modules/core/src/rendering/features/setLeftFeature.ts\nvar SetLeftFeature = class extends BeanStub {\n  constructor(columnOrGroup, eCell, beans, colsSpanning) {\n    super();\n    this.columnOrGroup = columnOrGroup;\n    this.columnOrGroup = columnOrGroup;\n    this.eCell = eCell;\n    this.ariaEl = this.eCell.querySelector(\"[role=columnheader]\") || this.eCell;\n    this.colsSpanning = colsSpanning;\n    this.beans = beans;\n  }\n  setColsSpanning(colsSpanning) {\n    this.colsSpanning = colsSpanning;\n    this.onLeftChanged();\n  }\n  getColumnOrGroup() {\n    if (this.beans.gos.get(\"enableRtl\") && this.colsSpanning) {\n      return _last(this.colsSpanning);\n    }\n    return this.columnOrGroup;\n  }\n  postConstruct() {\n    const onLeftChanged = this.onLeftChanged.bind(this);\n    this.addManagedListeners(this.columnOrGroup, { leftChanged: onLeftChanged });\n    this.setLeftFirstTime();\n    this.addManagedEventListeners({ displayedColumnsWidthChanged: onLeftChanged });\n    this.addManagedPropertyListener(\"domLayout\", onLeftChanged);\n  }\n  setLeftFirstTime() {\n    const suppressMoveAnimation = this.beans.gos.get(\"suppressColumnMoveAnimation\");\n    const oldLeftExists = _exists(this.columnOrGroup.getOldLeft());\n    const animateColumnMove = this.beans.columnAnimationService.isActive() && oldLeftExists && !suppressMoveAnimation;\n    if (animateColumnMove) {\n      this.animateInLeft();\n    } else {\n      this.onLeftChanged();\n    }\n  }\n  animateInLeft() {\n    const colOrGroup = this.getColumnOrGroup();\n    const left = colOrGroup.getLeft();\n    const oldLeft = colOrGroup.getOldLeft();\n    const oldActualLeft = this.modifyLeftForPrintLayout(colOrGroup, oldLeft);\n    const actualLeft = this.modifyLeftForPrintLayout(colOrGroup, left);\n    this.setLeft(oldActualLeft);\n    this.actualLeft = actualLeft;\n    this.beans.columnAnimationService.executeNextVMTurn(() => {\n      if (this.actualLeft === actualLeft) {\n        this.setLeft(actualLeft);\n      }\n    });\n  }\n  onLeftChanged() {\n    const colOrGroup = this.getColumnOrGroup();\n    const left = colOrGroup.getLeft();\n    this.actualLeft = this.modifyLeftForPrintLayout(colOrGroup, left);\n    this.setLeft(this.actualLeft);\n  }\n  modifyLeftForPrintLayout(colOrGroup, leftPosition) {\n    const printLayout = this.beans.gos.isDomLayout(\"print\");\n    if (!printLayout) {\n      return leftPosition;\n    }\n    if (colOrGroup.getPinned() === \"left\") {\n      return leftPosition;\n    }\n    const leftWidth = this.beans.visibleColsService.getColsLeftWidth();\n    if (colOrGroup.getPinned() === \"right\") {\n      const bodyWidth = this.beans.visibleColsService.getBodyContainerWidth();\n      return leftWidth + bodyWidth + leftPosition;\n    }\n    return leftWidth + leftPosition;\n  }\n  setLeft(value) {\n    if (_exists(value)) {\n      this.eCell.style.left = `${value}px`;\n    }\n    if (isColumnGroup(this.columnOrGroup)) {\n      const children = this.columnOrGroup.getLeafColumns();\n      if (!children.length) {\n        return;\n      }\n      if (children.length > 1) {\n        _setAriaColSpan(this.ariaEl, children.length);\n      }\n    }\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/cssClassApplier.ts\nvar CSS_FIRST_COLUMN = \"ag-column-first\";\nvar CSS_LAST_COLUMN = \"ag-column-last\";\nfunction _getHeaderClassesFromColDef(abstractColDef, gos, column, columnGroup) {\n  if (_missing(abstractColDef)) {\n    return [];\n  }\n  return getColumnClassesFromCollDef(abstractColDef.headerClass, abstractColDef, gos, column, columnGroup);\n}\nfunction _getToolPanelClassesFromColDef(abstractColDef, gos, column, columnGroup) {\n  if (_missing(abstractColDef)) {\n    return [];\n  }\n  return getColumnClassesFromCollDef(abstractColDef.toolPanelClass, abstractColDef, gos, column, columnGroup);\n}\nfunction refreshFirstAndLastStyles(comp, column, presentedColsService) {\n  comp.addOrRemoveCssClass(CSS_FIRST_COLUMN, presentedColsService.isColAtEdge(column, \"first\"));\n  comp.addOrRemoveCssClass(CSS_LAST_COLUMN, presentedColsService.isColAtEdge(column, \"last\"));\n}\nfunction getClassParams(abstractColDef, gos, column, columnGroup) {\n  return gos.addGridCommonParams({\n    // bad naming, as colDef here can be a group or a column,\n    // however most people won't appreciate the difference,\n    // so keeping it as colDef to avoid confusion.\n    colDef: abstractColDef,\n    column,\n    columnGroup\n  });\n}\nfunction getColumnClassesFromCollDef(classesOrFunc, abstractColDef, gos, column, columnGroup) {\n  if (_missing(classesOrFunc)) {\n    return [];\n  }\n  let classToUse;\n  if (typeof classesOrFunc === \"function\") {\n    const params = getClassParams(abstractColDef, gos, column, columnGroup);\n    classToUse = classesOrFunc(params);\n  } else {\n    classToUse = classesOrFunc;\n  }\n  if (typeof classToUse === \"string\") {\n    return [classToUse];\n  }\n  if (Array.isArray(classToUse)) {\n    return [...classToUse];\n  }\n  return [];\n}\n\n// community-modules/core/src/headerRendering/cells/abstractCell/abstractHeaderCellCtrl.ts\nvar instanceIdSequence2 = 0;\nvar _AbstractHeaderCellCtrl = class _AbstractHeaderCellCtrl extends BeanStub {\n  constructor(columnGroupChild, beans, parentRowCtrl) {\n    super();\n    this.resizeToggleTimeout = 0;\n    this.resizeMultiplier = 1;\n    this.resizeFeature = null;\n    this.lastFocusEvent = null;\n    this.dragSource = null;\n    this.columnGroupChild = columnGroupChild;\n    this.parentRowCtrl = parentRowCtrl;\n    this.beans = beans;\n    this.instanceId = columnGroupChild.getUniqueId() + \"-\" + instanceIdSequence2++;\n  }\n  wireBeans(beans) {\n    this.pinnedWidthService = beans.pinnedWidthService;\n    this.focusService = beans.focusService;\n    this.userComponentFactory = beans.userComponentFactory;\n    this.ctrlsService = beans.ctrlsService;\n    this.dragAndDropService = beans.dragAndDropService;\n    this.menuService = beans.menuService;\n  }\n  postConstruct() {\n    const refreshTabIndex = this.refreshTabIndex.bind(this);\n    this.addManagedPropertyListeners([\"suppressHeaderFocus\"], refreshTabIndex);\n    this.addManagedEventListeners({\n      overlayExclusiveChanged: refreshTabIndex\n    });\n  }\n  shouldStopEventPropagation(e) {\n    const { headerRowIndex, column } = this.focusService.getFocusedHeader();\n    return _isUserSuppressingHeaderKeyboardEvent(this.gos, e, headerRowIndex, column);\n  }\n  getWrapperHasFocus() {\n    const activeEl = this.gos.getActiveDomElement();\n    return activeEl === this.eGui;\n  }\n  setGui(eGui) {\n    this.eGui = eGui;\n    this.addDomData(eGui);\n    this.addManagedListeners(this.beans.eventService, {\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this)\n    });\n    this.addManagedElementListeners(this.eGui, {\n      focus: this.onGuiFocus.bind(this)\n    });\n    this.onDisplayedColumnsChanged();\n    this.refreshTabIndex();\n  }\n  onGuiFocus() {\n    this.eventService.dispatchEvent({\n      type: \"headerFocused\",\n      column: this.column\n    });\n  }\n  setupAutoHeight(params) {\n    const { wrapperElement, checkMeasuringCallback } = params;\n    const { animationFrameService, resizeObserverService, columnModel, gos } = this.beans;\n    const measureHeight = (timesCalled) => {\n      if (!this.isAlive()) {\n        return;\n      }\n      const { paddingTop, paddingBottom, borderBottomWidth, borderTopWidth } = _getElementSize(this.getGui());\n      const extraHeight = paddingTop + paddingBottom + borderBottomWidth + borderTopWidth;\n      const wrapperHeight = wrapperElement.offsetHeight;\n      const autoHeight = wrapperHeight + extraHeight;\n      if (timesCalled < 5) {\n        const doc = gos.getDocument();\n        const notYetInDom = !doc || !doc.contains(wrapperElement);\n        const possiblyNoContentYet = autoHeight == 0;\n        if (notYetInDom || possiblyNoContentYet) {\n          animationFrameService.requestAnimationFrame(() => measureHeight(timesCalled + 1));\n          return;\n        }\n      }\n      columnModel.setColHeaderHeight(this.column, autoHeight);\n    };\n    let isMeasuring = false;\n    let stopResizeObserver;\n    const checkMeasuring = () => {\n      const newValue = this.column.isAutoHeaderHeight();\n      if (newValue && !isMeasuring) {\n        startMeasuring();\n      }\n      if (!newValue && isMeasuring) {\n        stopMeasuring();\n      }\n    };\n    const startMeasuring = () => {\n      isMeasuring = true;\n      measureHeight(0);\n      this.comp.addOrRemoveCssClass(\"ag-header-cell-auto-height\", true);\n      stopResizeObserver = resizeObserverService.observeResize(wrapperElement, () => measureHeight(0));\n    };\n    const stopMeasuring = () => {\n      isMeasuring = false;\n      if (stopResizeObserver) {\n        stopResizeObserver();\n      }\n      this.comp.addOrRemoveCssClass(\"ag-header-cell-auto-height\", false);\n      stopResizeObserver = void 0;\n    };\n    checkMeasuring();\n    this.addDestroyFunc(() => stopMeasuring());\n    this.addManagedListeners(this.column, { widthChanged: () => isMeasuring && measureHeight(0) });\n    this.addManagedEventListeners({\n      sortChanged: () => {\n        if (isMeasuring) {\n          window.setTimeout(() => measureHeight(0));\n        }\n      }\n    });\n    if (checkMeasuringCallback) {\n      checkMeasuringCallback(checkMeasuring);\n    }\n  }\n  onDisplayedColumnsChanged() {\n    const { comp, column, beans, eGui } = this;\n    if (!comp || !column || !eGui) {\n      return;\n    }\n    refreshFirstAndLastStyles(comp, column, beans.visibleColsService);\n    _setAriaColIndex(eGui, beans.visibleColsService.getAriaColIndex(column));\n  }\n  addResizeAndMoveKeyboardListeners(eGui) {\n    if (!this.resizeFeature) {\n      return;\n    }\n    this.addManagedListeners(eGui, {\n      keydown: this.onGuiKeyDown.bind(this),\n      keyup: this.onGuiKeyUp.bind(this)\n    });\n  }\n  refreshTabIndex() {\n    const suppressHeaderFocus = this.focusService.isHeaderFocusSuppressed();\n    if (this.eGui) {\n      _addOrRemoveAttribute(this.eGui, \"tabindex\", suppressHeaderFocus ? null : \"-1\");\n    }\n  }\n  onGuiKeyDown(e) {\n    const activeEl = this.gos.getActiveDomElement();\n    const isLeftOrRight = e.key === KeyCode.LEFT || e.key === KeyCode.RIGHT;\n    if (this.isResizing) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n    if (\n      // if elements within the header are focused, we don't process the event\n      activeEl !== this.eGui || // if shiftKey and altKey are not pressed, it's cell navigation so we don't process the event\n      !e.shiftKey && !e.altKey\n    ) {\n      return;\n    }\n    if (this.isResizing || isLeftOrRight) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n    if (!isLeftOrRight) {\n      return;\n    }\n    const isLeft = e.key === KeyCode.LEFT !== this.gos.get(\"enableRtl\");\n    const direction = HorizontalDirection[isLeft ? \"Left\" : \"Right\"];\n    if (e.altKey) {\n      this.isResizing = true;\n      this.resizeMultiplier += 1;\n      const diff = this.getViewportAdjustedResizeDiff(e);\n      this.resizeHeader(diff, e.shiftKey);\n      this.resizeFeature?.toggleColumnResizing(true);\n    } else {\n      this.moveHeader(direction);\n    }\n  }\n  getViewportAdjustedResizeDiff(e) {\n    let diff = this.getResizeDiff(e);\n    const pinned = this.column.getPinned();\n    if (pinned) {\n      const leftWidth = this.pinnedWidthService.getPinnedLeftWidth();\n      const rightWidth = this.pinnedWidthService.getPinnedRightWidth();\n      const bodyWidth = _getInnerWidth(this.ctrlsService.getGridBodyCtrl().getBodyViewportElement()) - 50;\n      if (leftWidth + rightWidth + diff > bodyWidth) {\n        if (bodyWidth > leftWidth + rightWidth) {\n          diff = bodyWidth - leftWidth - rightWidth;\n        } else {\n          return 0;\n        }\n      }\n    }\n    return diff;\n  }\n  getResizeDiff(e) {\n    let isLeft = e.key === KeyCode.LEFT !== this.gos.get(\"enableRtl\");\n    const pinned = this.column.getPinned();\n    const isRtl = this.gos.get(\"enableRtl\");\n    if (pinned) {\n      if (isRtl !== (pinned === \"right\")) {\n        isLeft = !isLeft;\n      }\n    }\n    return (isLeft ? -1 : 1) * this.resizeMultiplier;\n  }\n  onGuiKeyUp() {\n    if (!this.isResizing) {\n      return;\n    }\n    if (this.resizeToggleTimeout) {\n      window.clearTimeout(this.resizeToggleTimeout);\n      this.resizeToggleTimeout = 0;\n    }\n    this.isResizing = false;\n    this.resizeMultiplier = 1;\n    this.resizeToggleTimeout = window.setTimeout(() => {\n      this.resizeFeature?.toggleColumnResizing(false);\n    }, 150);\n  }\n  handleKeyDown(e) {\n    const wrapperHasFocus = this.getWrapperHasFocus();\n    switch (e.key) {\n      case KeyCode.PAGE_DOWN:\n      case KeyCode.PAGE_UP:\n      case KeyCode.PAGE_HOME:\n      case KeyCode.PAGE_END:\n        if (wrapperHasFocus) {\n          e.preventDefault();\n        }\n    }\n  }\n  addDomData(eGui) {\n    const key = _AbstractHeaderCellCtrl.DOM_DATA_KEY_HEADER_CTRL;\n    this.gos.setDomData(eGui, key, this);\n    this.addDestroyFunc(() => this.gos.setDomData(eGui, key, null));\n  }\n  getGui() {\n    return this.eGui;\n  }\n  focus(event) {\n    if (!this.eGui) {\n      return false;\n    }\n    this.lastFocusEvent = event || null;\n    this.eGui.focus();\n    return true;\n  }\n  getRowIndex() {\n    return this.parentRowCtrl.getRowIndex();\n  }\n  getParentRowCtrl() {\n    return this.parentRowCtrl;\n  }\n  getPinned() {\n    return this.parentRowCtrl.getPinned();\n  }\n  getInstanceId() {\n    return this.instanceId;\n  }\n  getColumnGroupChild() {\n    return this.columnGroupChild;\n  }\n  removeDragSource() {\n    if (this.dragSource) {\n      this.dragAndDropService.removeDragSource(this.dragSource);\n      this.dragSource = null;\n    }\n  }\n  handleContextMenuMouseEvent(mouseEvent, touchEvent, column) {\n    const event = mouseEvent ?? touchEvent;\n    if (this.gos.get(\"preventDefaultOnContextMenu\")) {\n      event.preventDefault();\n    }\n    const columnToUse = isColumn(column) ? column : void 0;\n    if (this.menuService.isHeaderContextMenuEnabled(columnToUse)) {\n      this.menuService.showHeaderContextMenu(columnToUse, mouseEvent, touchEvent);\n    }\n    this.dispatchColumnMouseEvent(\"columnHeaderContextMenu\", column);\n  }\n  dispatchColumnMouseEvent(eventType, column) {\n    this.eventService.dispatchEvent({\n      type: eventType,\n      column\n    });\n  }\n  destroy() {\n    super.destroy();\n    this.removeDragSource();\n    this.comp = null;\n    this.column = null;\n    this.resizeFeature = null;\n    this.lastFocusEvent = null;\n    this.columnGroupChild = null;\n    this.parentRowCtrl = null;\n    this.eGui = null;\n  }\n};\n_AbstractHeaderCellCtrl.DOM_DATA_KEY_HEADER_CTRL = \"headerCtrl\";\nvar AbstractHeaderCellCtrl = _AbstractHeaderCellCtrl;\n\n// community-modules/core/src/headerRendering/cells/hoverFeature.ts\nvar HoverFeature = class extends BeanStub {\n  wireBeans(beans) {\n    this.columnHoverService = beans.columnHoverService;\n  }\n  constructor(columns, element) {\n    super();\n    this.columns = columns;\n    this.element = element;\n  }\n  postConstruct() {\n    if (this.gos.get(\"columnHoverHighlight\")) {\n      this.addMouseHoverListeners();\n    }\n  }\n  addMouseHoverListeners() {\n    this.addManagedListeners(this.element, {\n      mouseout: this.onMouseOut.bind(this),\n      mouseover: this.onMouseOver.bind(this)\n    });\n  }\n  onMouseOut() {\n    this.columnHoverService.clearMouseOver();\n  }\n  onMouseOver() {\n    this.columnHoverService.setMouseOver(this.columns);\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/floatingFilter/headerFilterCellCtrl.ts\nvar HeaderFilterCellCtrl = class extends AbstractHeaderCellCtrl {\n  constructor(column, beans, parentRowCtrl) {\n    super(column, beans, parentRowCtrl);\n    this.iconCreated = false;\n    this.column = column;\n  }\n  setComp(comp, eGui, eButtonShowMainFilter, eFloatingFilterBody) {\n    this.comp = comp;\n    this.eButtonShowMainFilter = eButtonShowMainFilter;\n    this.eFloatingFilterBody = eFloatingFilterBody;\n    this.setGui(eGui);\n    this.setupActive();\n    this.setupWidth();\n    this.setupLeft();\n    this.setupHover();\n    this.setupFocus();\n    this.setupAria();\n    this.setupFilterButton();\n    this.setupUserComp();\n    this.setupSyncWithFilter();\n    this.setupUi();\n    this.addManagedElementListeners(this.eButtonShowMainFilter, { click: this.showParentFilter.bind(this) });\n    this.setupFilterChangedListener();\n    this.addManagedListeners(this.column, { colDefChanged: this.onColDefChanged.bind(this) });\n  }\n  // empty abstract method\n  resizeHeader() {\n  }\n  // empty abstract method\n  moveHeader() {\n  }\n  setupActive() {\n    const colDef = this.column.getColDef();\n    const filterExists = !!colDef.filter;\n    const floatingFilterExists = !!colDef.floatingFilter;\n    this.active = filterExists && floatingFilterExists;\n  }\n  setupUi() {\n    this.comp.setButtonWrapperDisplayed(!this.suppressFilterButton && this.active);\n    this.comp.addOrRemoveBodyCssClass(\"ag-floating-filter-full-body\", this.suppressFilterButton);\n    this.comp.addOrRemoveBodyCssClass(\"ag-floating-filter-body\", !this.suppressFilterButton);\n    if (!this.active || this.iconCreated) {\n      return;\n    }\n    const eMenuIcon = _createIconNoSpan(\"filter\", this.gos, this.column);\n    if (eMenuIcon) {\n      this.iconCreated = true;\n      this.eButtonShowMainFilter.appendChild(eMenuIcon);\n    }\n  }\n  setupFocus() {\n    this.createManagedBean(\n      new ManagedFocusFeature(this.eGui, {\n        shouldStopEventPropagation: this.shouldStopEventPropagation.bind(this),\n        onTabKeyDown: this.onTabKeyDown.bind(this),\n        handleKeyDown: this.handleKeyDown.bind(this),\n        onFocusIn: this.onFocusIn.bind(this)\n      })\n    );\n  }\n  setupAria() {\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    _setAriaLabel(this.eButtonShowMainFilter, localeTextFunc(\"ariaFilterMenuOpen\", \"Open Filter Menu\"));\n  }\n  onTabKeyDown(e) {\n    const activeEl = this.gos.getActiveDomElement();\n    const wrapperHasFocus = activeEl === this.eGui;\n    if (wrapperHasFocus) {\n      return;\n    }\n    const nextFocusableEl = this.focusService.findNextFocusableElement(this.eGui, null, e.shiftKey);\n    if (nextFocusableEl) {\n      this.beans.headerNavigationService.scrollToColumn(this.column);\n      e.preventDefault();\n      nextFocusableEl.focus();\n      return;\n    }\n    const nextFocusableColumn = this.findNextColumnWithFloatingFilter(e.shiftKey);\n    if (!nextFocusableColumn) {\n      return;\n    }\n    if (this.focusService.focusHeaderPosition({\n      headerPosition: {\n        headerRowIndex: this.getParentRowCtrl().getRowIndex(),\n        column: nextFocusableColumn\n      },\n      event: e\n    })) {\n      e.preventDefault();\n    }\n  }\n  findNextColumnWithFloatingFilter(backwards) {\n    const presentedColsService = this.beans.visibleColsService;\n    let nextCol = this.column;\n    do {\n      nextCol = backwards ? presentedColsService.getColBefore(nextCol) : presentedColsService.getColAfter(nextCol);\n      if (!nextCol) {\n        break;\n      }\n    } while (!nextCol.getColDef().filter || !nextCol.getColDef().floatingFilter);\n    return nextCol;\n  }\n  handleKeyDown(e) {\n    super.handleKeyDown(e);\n    const wrapperHasFocus = this.getWrapperHasFocus();\n    switch (e.key) {\n      case KeyCode.UP:\n      case KeyCode.DOWN:\n        if (!wrapperHasFocus) {\n          e.preventDefault();\n        }\n      case KeyCode.LEFT:\n      case KeyCode.RIGHT:\n        if (wrapperHasFocus) {\n          return;\n        }\n        e.stopPropagation();\n      case KeyCode.ENTER:\n        if (wrapperHasFocus) {\n          if (this.focusService.focusInto(this.eGui)) {\n            e.preventDefault();\n          }\n        }\n        break;\n      case KeyCode.ESCAPE:\n        if (!wrapperHasFocus) {\n          this.eGui.focus();\n        }\n    }\n  }\n  onFocusIn(e) {\n    const isRelatedWithin = this.eGui.contains(e.relatedTarget);\n    if (isRelatedWithin) {\n      return;\n    }\n    const notFromHeaderWrapper = !!e.relatedTarget && !e.relatedTarget.classList.contains(\"ag-floating-filter\");\n    const fromWithinHeader = !!e.relatedTarget && _isElementChildOfClass(e.relatedTarget, \"ag-floating-filter\");\n    if (notFromHeaderWrapper && fromWithinHeader && e.target === this.eGui) {\n      const lastFocusEvent = this.lastFocusEvent;\n      const fromTab = !!(lastFocusEvent && lastFocusEvent.key === KeyCode.TAB);\n      if (lastFocusEvent && fromTab) {\n        const shouldFocusLast = lastFocusEvent.shiftKey;\n        this.focusService.focusInto(this.eGui, shouldFocusLast);\n      }\n    }\n    const rowIndex = this.getRowIndex();\n    this.beans.focusService.setFocusedHeader(rowIndex, this.column);\n  }\n  setupHover() {\n    this.createManagedBean(new HoverFeature([this.column], this.eGui));\n    const listener = () => {\n      if (!this.gos.get(\"columnHoverHighlight\")) {\n        return;\n      }\n      const hovered = this.beans.columnHoverService.isHovered(this.column);\n      this.comp.addOrRemoveCssClass(\"ag-column-hover\", hovered);\n    };\n    this.addManagedEventListeners({ columnHoverChanged: listener });\n    listener();\n  }\n  setupLeft() {\n    const setLeftFeature = new SetLeftFeature(this.column, this.eGui, this.beans);\n    this.createManagedBean(setLeftFeature);\n  }\n  setupFilterButton() {\n    this.suppressFilterButton = !this.menuService.isFloatingFilterButtonEnabled(this.column);\n    this.highlightFilterButtonWhenActive = !this.menuService.isLegacyMenuEnabled();\n  }\n  setupUserComp() {\n    if (!this.active) {\n      return;\n    }\n    const compDetails = this.beans.filterManager?.getFloatingFilterCompDetails(\n      this.column,\n      () => this.showParentFilter()\n    );\n    if (compDetails) {\n      this.setCompDetails(compDetails);\n    }\n  }\n  setCompDetails(compDetails) {\n    this.userCompDetails = compDetails;\n    this.comp.setCompDetails(compDetails);\n  }\n  showParentFilter() {\n    const eventSource = this.suppressFilterButton ? this.eFloatingFilterBody : this.eButtonShowMainFilter;\n    this.menuService.showFilterMenu({\n      column: this.column,\n      buttonElement: eventSource,\n      containerType: \"floatingFilter\",\n      positionBy: \"button\"\n    });\n  }\n  setupSyncWithFilter() {\n    if (!this.active) {\n      return;\n    }\n    const { filterManager } = this.beans;\n    const syncWithFilter = (event) => {\n      if (event?.source === \"filterDestroyed\" && !this.isAlive()) {\n        return;\n      }\n      const compPromise = this.comp.getFloatingFilterComp();\n      if (!compPromise) {\n        return;\n      }\n      compPromise.then((comp) => {\n        if (comp) {\n          const parentModel = filterManager?.getCurrentFloatingFilterParentModel(this.column);\n          const filterChangedEvent = event ? {\n            // event can have additional params like `afterDataChange` which need to be passed through\n            ...event,\n            columns: event.columns ?? [],\n            source: event.source === \"api\" ? \"api\" : \"columnFilter\"\n          } : null;\n          comp.onParentModelChanged(parentModel, filterChangedEvent);\n        }\n      });\n    };\n    [this.destroySyncListener] = this.addManagedListeners(this.column, { filterChanged: syncWithFilter });\n    if (filterManager?.isFilterActive(this.column)) {\n      syncWithFilter(null);\n    }\n  }\n  setupWidth() {\n    const listener = () => {\n      const width = `${this.column.getActualWidth()}px`;\n      this.comp.setWidth(width);\n    };\n    this.addManagedListeners(this.column, { widthChanged: listener });\n    listener();\n  }\n  setupFilterChangedListener() {\n    if (this.active) {\n      [this.destroyFilterChangedListener] = this.addManagedListeners(this.column, {\n        filterChanged: this.updateFilterButton.bind(this)\n      });\n      this.updateFilterButton();\n    }\n  }\n  updateFilterButton() {\n    if (!this.suppressFilterButton && this.comp) {\n      const isFilterAllowed = !!this.beans.filterManager?.isFilterAllowed(this.column);\n      this.comp.setButtonWrapperDisplayed(isFilterAllowed);\n      if (this.highlightFilterButtonWhenActive && isFilterAllowed) {\n        this.eButtonShowMainFilter.classList.toggle(\"ag-filter-active\", this.column.isFilterActive());\n      }\n    }\n  }\n  onColDefChanged() {\n    const wasActive = this.active;\n    this.setupActive();\n    const becomeActive = !wasActive && this.active;\n    if (wasActive && !this.active) {\n      this.destroySyncListener();\n      this.destroyFilterChangedListener();\n    }\n    const newCompDetails = this.active ? this.beans.filterManager?.getFloatingFilterCompDetails(this.column, () => this.showParentFilter()) : null;\n    const compPromise = this.comp.getFloatingFilterComp();\n    if (!compPromise || !newCompDetails) {\n      this.updateCompDetails(newCompDetails, becomeActive);\n    } else {\n      compPromise.then((compInstance) => {\n        if (!compInstance || this.beans.filterManager?.areFilterCompsDifferent(this.userCompDetails ?? null, newCompDetails)) {\n          this.updateCompDetails(newCompDetails, becomeActive);\n        } else {\n          this.updateFloatingFilterParams(newCompDetails);\n        }\n      });\n    }\n  }\n  updateCompDetails(compDetails, becomeActive) {\n    if (!this.isAlive()) {\n      return;\n    }\n    this.setCompDetails(compDetails);\n    this.setupFilterButton();\n    this.setupUi();\n    if (becomeActive) {\n      this.setupSyncWithFilter();\n      this.setupFilterChangedListener();\n    }\n  }\n  updateFloatingFilterParams(userCompDetails) {\n    if (!userCompDetails) {\n      return;\n    }\n    const params = userCompDetails.params;\n    this.comp.getFloatingFilterComp()?.then((floatingFilter) => {\n      let hasRefreshed = false;\n      if (floatingFilter?.refresh && typeof floatingFilter.refresh === \"function\") {\n        const result = floatingFilter.refresh(params);\n        if (result !== null) {\n          hasRefreshed = true;\n        }\n      }\n      if (!hasRefreshed && floatingFilter?.onParamsUpdated && typeof floatingFilter.onParamsUpdated === \"function\") {\n        const result = floatingFilter.onParamsUpdated(params);\n        if (result !== null) {\n          _warnOnce(`Custom floating filter method 'onParamsUpdated' is deprecated. Use 'refresh' instead.`);\n        }\n      }\n    });\n  }\n  destroy() {\n    super.destroy();\n    this.eButtonShowMainFilter = null;\n    this.eFloatingFilterBody = null;\n    this.userCompDetails = null;\n    this.destroySyncListener = null;\n    this.destroyFilterChangedListener = null;\n  }\n};\n\n// community-modules/core/src/interfaces/iModule.ts\nfunction _defineModule(definition) {\n  return definition;\n}\n\n// community-modules/core/src/version.ts\nvar VERSION = \"32.1.0\";\n\n// community-modules/core/src/filter/columnFilterApi.ts\nfunction isColumnFilterPresent(beans) {\n  return !!beans.filterManager?.isColumnFilterPresent() || !!beans.filterManager?.isAggregateFilterPresent();\n}\nfunction getFilterInstance(beans, key, callback) {\n  return beans.filterManager?.getFilterInstance(key, callback);\n}\nfunction getColumnFilterInstance(beans, key) {\n  return beans.filterManager?.getColumnFilterInstance(key) ?? Promise.resolve(void 0);\n}\nfunction destroyFilter(beans, key) {\n  const column = beans.columnModel.getColDefCol(key);\n  if (column) {\n    return beans.filterManager?.destroyFilter(column, \"api\");\n  }\n}\nfunction setFilterModel(beans, model) {\n  beans.frameworkOverrides.wrapIncoming(() => beans.filterManager?.setFilterModel(model));\n}\nfunction getFilterModel(beans) {\n  return beans.filterManager?.getFilterModel() ?? {};\n}\nfunction getColumnFilterModel(beans, column) {\n  return beans.filterManager?.getColumnFilterModel(column) ?? null;\n}\nfunction setColumnFilterModel(beans, column, model) {\n  return beans.filterManager?.setColumnFilterModel(column, model) ?? Promise.resolve();\n}\nfunction showColumnFilter(beans, colKey) {\n  const column = beans.columnModel.getCol(colKey);\n  if (!column) {\n    _errorOnce(`column '${colKey}' not found`);\n    return;\n  }\n  beans.menuService.showFilterMenu({\n    column,\n    containerType: \"columnFilter\",\n    positionBy: \"auto\"\n  });\n}\n\n// community-modules/core/src/filter/floating/floatingFilterMapper.ts\nfunction getDefaultFloatingFilterType(frameworkOverrides, def, getFromDefault) {\n  if (def == null) {\n    return null;\n  }\n  let defaultFloatingFilterType = null;\n  const { compName, jsComp, fwComp } = UserComponentFactory.getCompKeys(frameworkOverrides, def, FilterComponent);\n  if (compName) {\n    const floatingFilterTypeMap = {\n      set: \"agSetColumnFloatingFilter\",\n      agSetColumnFilter: \"agSetColumnFloatingFilter\",\n      multi: \"agMultiColumnFloatingFilter\",\n      agMultiColumnFilter: \"agMultiColumnFloatingFilter\",\n      group: \"agGroupColumnFloatingFilter\",\n      agGroupColumnFilter: \"agGroupColumnFloatingFilter\",\n      number: \"agNumberColumnFloatingFilter\",\n      agNumberColumnFilter: \"agNumberColumnFloatingFilter\",\n      date: \"agDateColumnFloatingFilter\",\n      agDateColumnFilter: \"agDateColumnFloatingFilter\",\n      text: \"agTextColumnFloatingFilter\",\n      agTextColumnFilter: \"agTextColumnFloatingFilter\"\n    };\n    defaultFloatingFilterType = floatingFilterTypeMap[compName];\n  } else {\n    const usingDefaultFilter = jsComp == null && fwComp == null && def.filter === true;\n    if (usingDefaultFilter) {\n      defaultFloatingFilterType = getFromDefault();\n    }\n  }\n  return defaultFloatingFilterType;\n}\n\n// community-modules/core/src/filter/columnFilterService.ts\nvar ColumnFilterService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnFilterService\";\n    this.allColumnFilters = /* @__PURE__ */ new Map();\n    this.allColumnListeners = /* @__PURE__ */ new Map();\n    this.activeAggregateFilters = [];\n    this.activeColumnFilters = [];\n    // this is true when the grid is processing the filter change. this is used by the cell comps, so that they\n    // don't flash when data changes due to filter changes. there is no need to flash when filter changes as the\n    // user is in control, so doesn't make sense to show flashing changes. for example, go to main demo where\n    // this feature is turned off (hack code to always return false for isSuppressFlashingCellsBecauseFiltering(), put in)\n    // 100,000 rows and group by country. then do some filtering. all the cells flash, which is silly.\n    this.processingFilterChange = false;\n    // when we're waiting for cell data types to be inferred, we need to defer filter model updates\n    this.filterModelUpdateQueue = [];\n    this.columnFilterModelUpdateQueue = [];\n  }\n  wireBeans(beans) {\n    this.valueService = beans.valueService;\n    this.columnModel = beans.columnModel;\n    this.rowModel = beans.rowModel;\n    this.userComponentFactory = beans.userComponentFactory;\n    this.rowRenderer = beans.rowRenderer;\n    this.dataTypeService = beans.dataTypeService;\n    this.filterManager = beans.filterManager;\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      gridColumnsChanged: this.onColumnsChanged.bind(this),\n      rowDataUpdated: () => this.onNewRowsLoaded(\"rowDataUpdated\"),\n      dataTypesInferred: this.processFilterModelUpdateQueue.bind(this)\n    });\n    this.initialFilterModel = {\n      ...this.gos.get(\"initialState\")?.filter?.filterModel ?? {}\n    };\n  }\n  setFilterModel(model, source = \"api\") {\n    if (this.dataTypeService?.isPendingInference()) {\n      this.filterModelUpdateQueue.push({ model, source });\n      return;\n    }\n    const allPromises = [];\n    const previousModel = this.getFilterModel(true);\n    if (model) {\n      const modelKeys = new Set(Object.keys(model));\n      this.allColumnFilters.forEach((filterWrapper, colId) => {\n        const newModel = model[colId];\n        allPromises.push(this.setModelOnFilterWrapper(filterWrapper.filterPromise, newModel));\n        modelKeys.delete(colId);\n      });\n      modelKeys.forEach((colId) => {\n        const column = this.columnModel.getColDefCol(colId) || this.columnModel.getCol(colId);\n        if (!column) {\n          _warnOnce(\"setFilterModel() - no column found for colId: \" + colId);\n          return;\n        }\n        if (!column.isFilterAllowed()) {\n          _warnOnce(\"setFilterModel() - unable to fully apply model, filtering disabled for colId: \" + colId);\n          return;\n        }\n        const filterWrapper = this.getOrCreateFilterWrapper(column);\n        if (!filterWrapper) {\n          _warnOnce(\n            \"setFilterModel() - unable to fully apply model, unable to create filter for colId: \" + colId\n          );\n          return;\n        }\n        allPromises.push(this.setModelOnFilterWrapper(filterWrapper.filterPromise, model[colId]));\n      });\n    } else {\n      this.allColumnFilters.forEach((filterWrapper) => {\n        allPromises.push(this.setModelOnFilterWrapper(filterWrapper.filterPromise, null));\n      });\n    }\n    AgPromise.all(allPromises).then(() => {\n      const currentModel = this.getFilterModel(true);\n      const columns = [];\n      this.allColumnFilters.forEach((filterWrapper, colId) => {\n        const before = previousModel ? previousModel[colId] : null;\n        const after = currentModel ? currentModel[colId] : null;\n        if (!_jsonEquals(before, after)) {\n          columns.push(filterWrapper.column);\n        }\n      });\n      if (columns.length > 0) {\n        this.filterManager?.onFilterChanged({ columns, source });\n      }\n    });\n  }\n  setModelOnFilterWrapper(filterPromise, newModel) {\n    return new AgPromise((resolve) => {\n      filterPromise.then((filter) => {\n        if (typeof filter.setModel !== \"function\") {\n          _warnOnce(\"filter missing setModel method, which is needed for setFilterModel\");\n          resolve();\n        }\n        (filter.setModel(newModel) || AgPromise.resolve()).then(() => resolve());\n      });\n    });\n  }\n  getFilterModel(excludeInitialState) {\n    const result = {};\n    const { allColumnFilters, initialFilterModel } = this;\n    allColumnFilters.forEach((filterWrapper, key) => {\n      const model = this.getModelFromFilterWrapper(filterWrapper);\n      if (_exists(model)) {\n        result[key] = model;\n      }\n    });\n    if (!excludeInitialState) {\n      Object.entries(initialFilterModel).forEach(([colId, model]) => {\n        if (_exists(model) && !allColumnFilters.has(colId) && this.columnModel.getCol(colId)?.isFilterAllowed()) {\n          result[colId] = model;\n        }\n      });\n    }\n    return result;\n  }\n  getModelFromFilterWrapper(filterWrapper) {\n    const { filter } = filterWrapper;\n    if (filter) {\n      if (typeof filter.getModel !== \"function\") {\n        _warnOnce(\"filter API missing getModel method, which is needed for getFilterModel\");\n        return null;\n      }\n      return filter.getModel();\n    } else {\n      return this.getModelFromInitialState(filterWrapper.column);\n    }\n  }\n  getModelFromInitialState(column) {\n    return this.initialFilterModel[column.getColId()] ?? null;\n  }\n  isColumnFilterPresent() {\n    return this.activeColumnFilters.length > 0;\n  }\n  isAggregateFilterPresent() {\n    return !!this.activeAggregateFilters.length;\n  }\n  disableColumnFilters() {\n    if (this.allColumnFilters.size) {\n      this.allColumnFilters.forEach(\n        (filterWrapper) => this.disposeFilterWrapper(filterWrapper, \"advancedFilterEnabled\")\n      );\n      return true;\n    }\n    return false;\n  }\n  doAggregateFiltersPass(node, filterToSkip) {\n    return this.doColumnFiltersPass(node, filterToSkip, true);\n  }\n  updateActiveFilters() {\n    const isFilterActive = (filter) => {\n      if (!filter) {\n        return false;\n      }\n      if (!filter.isFilterActive) {\n        _warnOnce(\"Filter is missing isFilterActive() method\");\n        return false;\n      }\n      return filter.isFilterActive();\n    };\n    const groupFilterEnabled = !!this.gos.getGroupAggFiltering();\n    const isAggFilter = (column) => {\n      const isSecondary = !column.isPrimary();\n      if (isSecondary) {\n        return true;\n      }\n      const isShowingPrimaryColumns = !this.columnModel.isPivotActive();\n      const isValueActive = column.isValueActive();\n      if (!isValueActive || !isShowingPrimaryColumns) {\n        return false;\n      }\n      if (this.columnModel.isPivotMode()) {\n        return true;\n      }\n      return groupFilterEnabled;\n    };\n    const activeAggregateFilters = [];\n    const activeColumnFilters = [];\n    return this.forEachColumnFilter((filter, filterWrapper) => {\n      const filterActive = isFilterActive(filter);\n      if (filterActive) {\n        if (isAggFilter(filterWrapper.column)) {\n          activeAggregateFilters.push(filter);\n        } else {\n          activeColumnFilters.push(filter);\n        }\n      }\n    }).then(() => {\n      this.activeAggregateFilters = activeAggregateFilters;\n      this.activeColumnFilters = activeColumnFilters;\n    });\n  }\n  updateFilterFlagInColumns(source, additionalEventAttributes) {\n    return this.forEachColumnFilter(\n      (filter, filterWrapper) => filterWrapper.column.setFilterActive(filter.isFilterActive(), source, additionalEventAttributes)\n    );\n  }\n  forEachColumnFilter(callback) {\n    return AgPromise.all(\n      Array.from(this.allColumnFilters.values()).map(\n        (filterWrapper) => filterWrapper.filterPromise.then((filter) => callback(filter, filterWrapper))\n      )\n    );\n  }\n  doColumnFiltersPass(node, filterToSkip, targetAggregates) {\n    const { data, aggData } = node;\n    const targetedFilters = targetAggregates ? this.activeAggregateFilters : this.activeColumnFilters;\n    const targetedData = targetAggregates ? aggData : data;\n    for (let i = 0; i < targetedFilters.length; i++) {\n      const filter = targetedFilters[i];\n      if (filter == null || filter === filterToSkip) {\n        continue;\n      }\n      if (typeof filter.doesFilterPass !== \"function\") {\n        throw new Error(\"Filter is missing method doesFilterPass\");\n      }\n      if (!filter.doesFilterPass({ node, data: targetedData })) {\n        return false;\n      }\n    }\n    return true;\n  }\n  // sometimes (especially in React) the filter can call onFilterChanged when we are in the middle\n  // of a render cycle. this would be bad, so we wait for render cycle to complete when this happens.\n  // this happens in react when we change React State in the grid (eg setting RowCtrl's in RowContainer)\n  // which results in React State getting applied in the main application, triggering a useEffect() to\n  // be kicked off adn then the application calling the grid's API. in AG-6554, the custom filter was\n  // getting it's useEffect() triggered in this way.\n  callOnFilterChangedOutsideRenderCycle(params) {\n    const action = () => this.filterManager?.onFilterChanged(params);\n    if (this.rowRenderer.isRefreshInProgress()) {\n      setTimeout(action, 0);\n    } else {\n      action();\n    }\n  }\n  updateBeforeFilterChanged(params = {}) {\n    const { filterInstance, additionalEventAttributes } = params;\n    this.updateDependentFilters();\n    return this.updateActiveFilters().then(\n      () => this.updateFilterFlagInColumns(\"filterChanged\", additionalEventAttributes).then(() => {\n        this.allColumnFilters.forEach((filterWrapper) => {\n          if (!filterWrapper.filterPromise) {\n            return;\n          }\n          filterWrapper.filterPromise.then((filter) => {\n            if (filter && filter !== filterInstance && filter.onAnyFilterChanged) {\n              filter.onAnyFilterChanged();\n            }\n          });\n        });\n        this.processingFilterChange = true;\n      })\n    );\n  }\n  updateAfterFilterChanged() {\n    this.processingFilterChange = false;\n  }\n  isSuppressFlashingCellsBecauseFiltering() {\n    const allowShowChangeAfterFilter = this.gos.get(\"allowShowChangeAfterFilter\") ?? false;\n    return !allowShowChangeAfterFilter && this.processingFilterChange;\n  }\n  onNewRowsLoaded(source) {\n    this.forEachColumnFilter((filter) => {\n      if (filter.onNewRowsLoaded) {\n        filter.onNewRowsLoaded();\n      }\n    }).then(() => this.updateFilterFlagInColumns(source, { afterDataChange: true })).then(() => this.updateActiveFilters());\n  }\n  createValueGetter(column) {\n    return ({ node }) => this.valueService.getValue(column, node, true);\n  }\n  createGetValue(filterColumn) {\n    return (rowNode, column) => {\n      const columnToUse = column ? this.columnModel.getCol(column) : filterColumn;\n      return columnToUse ? this.valueService.getValue(columnToUse, rowNode, true) : void 0;\n    };\n  }\n  isFilterActive(column) {\n    const { filter } = this.cachedFilter(column) ?? {};\n    if (filter) {\n      return filter.isFilterActive();\n    }\n    return this.getModelFromInitialState(column) != null;\n  }\n  getOrCreateFilterWrapper(column) {\n    if (!column.isFilterAllowed()) {\n      return null;\n    }\n    let filterWrapper = this.cachedFilter(column);\n    if (!filterWrapper) {\n      filterWrapper = this.createFilterWrapper(column);\n      this.setColumnFilterWrapper(column, filterWrapper);\n    }\n    return filterWrapper;\n  }\n  cachedFilter(column) {\n    return this.allColumnFilters.get(column.getColId());\n  }\n  getDefaultFilter(column) {\n    let defaultFilter;\n    if (ModuleRegistry.__isRegistered(\"@ag-grid-enterprise/set-filter\" /* SetFilterModule */, this.gridId)) {\n      defaultFilter = \"agSetColumnFilter\";\n    } else {\n      const cellDataType = this.dataTypeService?.getBaseDataType(column);\n      if (cellDataType === \"number\") {\n        defaultFilter = \"agNumberColumnFilter\";\n      } else if (cellDataType === \"date\" || cellDataType === \"dateString\") {\n        defaultFilter = \"agDateColumnFilter\";\n      } else {\n        defaultFilter = \"agTextColumnFilter\";\n      }\n    }\n    return defaultFilter;\n  }\n  getDefaultFloatingFilter(column) {\n    let defaultFloatingFilterType;\n    if (ModuleRegistry.__isRegistered(\"@ag-grid-enterprise/set-filter\" /* SetFilterModule */, this.gridId)) {\n      defaultFloatingFilterType = \"agSetColumnFloatingFilter\";\n    } else {\n      const cellDataType = this.dataTypeService?.getBaseDataType(column);\n      if (cellDataType === \"number\") {\n        defaultFloatingFilterType = \"agNumberColumnFloatingFilter\";\n      } else if (cellDataType === \"date\" || cellDataType === \"dateString\") {\n        defaultFloatingFilterType = \"agDateColumnFloatingFilter\";\n      } else {\n        defaultFloatingFilterType = \"agTextColumnFloatingFilter\";\n      }\n    }\n    return defaultFloatingFilterType;\n  }\n  createFilterInstance(column, filterWrapper) {\n    const defaultFilter = this.getDefaultFilter(column);\n    const colDef = column.getColDef();\n    let filterInstance;\n    const params = {\n      ...this.createFilterParams(column, colDef),\n      filterModifiedCallback: () => this.filterModifiedCallbackFactory(filterInstance, column)(),\n      filterChangedCallback: (additionalEventAttributes) => this.filterChangedCallbackFactory(filterInstance, column)(additionalEventAttributes),\n      doesRowPassOtherFilter: (node) => this.filterManager ? this.filterManager.doesRowPassOtherFilters(filterInstance, node) : true\n    };\n    const compDetails = this.userComponentFactory.getFilterDetails(colDef, params, defaultFilter);\n    if (!compDetails) {\n      return { filterPromise: null, compDetails: null };\n    }\n    return {\n      filterPromise: () => {\n        const filterPromise = compDetails.newAgStackInstance();\n        if (filterPromise != null) {\n          filterPromise.then((r) => {\n            filterInstance = r;\n            if (filterWrapper) {\n              filterWrapper.filter = r;\n            }\n          });\n        }\n        return filterPromise;\n      },\n      compDetails\n    };\n  }\n  createFilterParams(column, colDef) {\n    const params = this.gos.addGridCommonParams({\n      column,\n      colDef: _cloneObject(colDef),\n      rowModel: this.rowModel,\n      filterChangedCallback: () => {\n      },\n      filterModifiedCallback: () => {\n      },\n      valueGetter: this.createValueGetter(column),\n      getValue: this.createGetValue(column),\n      doesRowPassOtherFilter: () => true\n    });\n    return params;\n  }\n  createFilterWrapper(column) {\n    const filterWrapper = {\n      column,\n      filterPromise: null,\n      compiledElement: null,\n      compDetails: null\n    };\n    const { filterPromise, compDetails } = this.createFilterInstance(column, filterWrapper);\n    filterWrapper.filterPromise = filterPromise?.() ?? null;\n    filterWrapper.compDetails = compDetails;\n    return filterWrapper;\n  }\n  onColumnsChanged() {\n    const columns = [];\n    this.allColumnFilters.forEach((wrapper, colId) => {\n      let currentColumn;\n      if (wrapper.column.isPrimary()) {\n        currentColumn = this.columnModel.getColDefCol(colId);\n      } else {\n        currentColumn = this.columnModel.getCol(colId);\n      }\n      if (currentColumn && currentColumn === wrapper.column) {\n        return;\n      }\n      columns.push(wrapper.column);\n      this.disposeFilterWrapper(wrapper, \"columnChanged\");\n      this.disposeColumnListener(colId);\n    });\n    const allFiltersAreGroupFilters = columns.every(\n      (column) => column.getColDef().filter === \"agGroupColumnFilter\"\n    );\n    if (columns.length > 0 && !allFiltersAreGroupFilters) {\n      this.filterManager?.onFilterChanged({ columns, source: \"api\" });\n    } else {\n      this.updateDependentFilters();\n    }\n  }\n  updateDependentFilters() {\n    const groupColumns = this.columnModel.getAutoCols();\n    groupColumns?.forEach((groupColumn) => {\n      if (groupColumn.getColDef().filter === \"agGroupColumnFilter\") {\n        this.getOrCreateFilterWrapper(groupColumn);\n      }\n    });\n  }\n  // for group filters, can change dynamically whether they are allowed or not\n  isFilterAllowed(column) {\n    const isFilterAllowed = column.isFilterAllowed();\n    if (!isFilterAllowed) {\n      return false;\n    }\n    const { filter } = this.allColumnFilters.get(column.getColId()) ?? {};\n    if (filter) {\n      return typeof filter?.isFilterAllowed === \"function\" ? filter.isFilterAllowed() : true;\n    }\n    return true;\n  }\n  getFloatingFilterCompDetails(column, showParentFilter) {\n    const parentFilterInstance = (callback) => {\n      const filterComponent = this.getOrCreateFilterWrapper(column)?.filterPromise;\n      if (filterComponent == null) {\n        return;\n      }\n      filterComponent.then((instance) => {\n        callback(_unwrapUserComp(instance));\n      });\n    };\n    const colDef = column.getColDef();\n    const filterParams = {\n      ...this.createFilterParams(column, colDef),\n      filterChangedCallback: () => parentFilterInstance(\n        (filterInstance) => this.filterChangedCallbackFactory(filterInstance, column)()\n      )\n    };\n    const finalFilterParams = this.userComponentFactory.mergeParamsWithApplicationProvidedParams(\n      colDef,\n      FilterComponent,\n      filterParams\n    );\n    let defaultFloatingFilterType = getDefaultFloatingFilterType(\n      this.frameworkOverrides,\n      colDef,\n      () => this.getDefaultFloatingFilter(column)\n    );\n    if (defaultFloatingFilterType == null) {\n      defaultFloatingFilterType = \"agReadOnlyFloatingFilter\";\n    }\n    const params = {\n      column,\n      filterParams: finalFilterParams,\n      currentParentModel: () => this.getCurrentFloatingFilterParentModel(column),\n      parentFilterInstance,\n      showParentFilter,\n      suppressFilterButton: false\n      // This one might be overridden from the colDef\n    };\n    return this.userComponentFactory.getFloatingFilterCompDetails(colDef, params, defaultFloatingFilterType);\n  }\n  getCurrentFloatingFilterParentModel(column) {\n    return this.getModelFromFilterWrapper(this.cachedFilter(column) ?? { column });\n  }\n  // destroys the filter, so it no longer takes part\n  destroyFilter(column, source = \"api\") {\n    const colId = column.getColId();\n    const filterWrapper = this.allColumnFilters.get(colId);\n    this.disposeColumnListener(colId);\n    delete this.initialFilterModel[colId];\n    if (filterWrapper) {\n      this.disposeFilterWrapper(filterWrapper, source);\n      this.filterManager?.onFilterChanged({\n        columns: [column],\n        source: \"api\"\n      });\n    }\n  }\n  disposeColumnListener(colId) {\n    const columnListener = this.allColumnListeners.get(colId);\n    if (columnListener) {\n      this.allColumnListeners.delete(colId);\n      columnListener();\n    }\n  }\n  disposeFilterWrapper(filterWrapper, source) {\n    filterWrapper.filterPromise.then((filter) => {\n      this.destroyBean(filter);\n      filterWrapper.column.setFilterActive(false, \"filterDestroyed\");\n      this.allColumnFilters.delete(filterWrapper.column.getColId());\n      this.eventService.dispatchEvent({\n        type: \"filterDestroyed\",\n        source,\n        column: filterWrapper.column\n      });\n    });\n  }\n  filterModifiedCallbackFactory(filter, column) {\n    return () => {\n      this.eventService.dispatchEvent({\n        type: \"filterModified\",\n        column,\n        filterInstance: filter\n      });\n    };\n  }\n  filterChangedCallbackFactory(filter, column) {\n    return (additionalEventAttributes) => {\n      const source = additionalEventAttributes?.source ?? \"columnFilter\";\n      const params = {\n        filter,\n        additionalEventAttributes,\n        columns: [column],\n        source\n      };\n      this.callOnFilterChangedOutsideRenderCycle(params);\n    };\n  }\n  checkDestroyFilter(colId) {\n    const filterWrapper = this.allColumnFilters.get(colId);\n    if (!filterWrapper) {\n      return;\n    }\n    const column = filterWrapper.column;\n    const { compDetails } = column.isFilterAllowed() ? this.createFilterInstance(column) : { compDetails: null };\n    if (this.areFilterCompsDifferent(filterWrapper.compDetails, compDetails)) {\n      this.destroyFilter(column, \"paramsUpdated\");\n      return;\n    }\n    const newFilterParams = column.getColDef().filterParams;\n    if (!filterWrapper.filterPromise) {\n      this.destroyFilter(column, \"paramsUpdated\");\n      return;\n    }\n    filterWrapper.filterPromise.then((filter) => {\n      const shouldRefreshFilter = filter?.refresh ? filter.refresh({\n        ...this.createFilterParams(column, column.getColDef()),\n        filterModifiedCallback: this.filterModifiedCallbackFactory(filter, column),\n        filterChangedCallback: this.filterChangedCallbackFactory(filter, column),\n        doesRowPassOtherFilter: (node) => this.filterManager ? this.filterManager.doesRowPassOtherFilters(filter, node) : true,\n        ...newFilterParams\n      }) : true;\n      if (shouldRefreshFilter === false) {\n        this.destroyFilter(column, \"paramsUpdated\");\n      }\n    });\n  }\n  setColumnFilterWrapper(column, filterWrapper) {\n    const colId = column.getColId();\n    this.allColumnFilters.set(colId, filterWrapper);\n    this.allColumnListeners.set(\n      colId,\n      this.addManagedListeners(column, { colDefChanged: () => this.checkDestroyFilter(colId) })[0]\n    );\n  }\n  areFilterCompsDifferent(oldCompDetails, newCompDetails) {\n    if (!newCompDetails || !oldCompDetails) {\n      return true;\n    }\n    const { componentClass: oldComponentClass } = oldCompDetails;\n    const { componentClass: newComponentClass } = newCompDetails;\n    const isSameComponentClass = oldComponentClass === newComponentClass || // react hooks returns new wrappers, so check nested render method\n    oldComponentClass?.render && newComponentClass?.render && oldComponentClass.render === newComponentClass.render;\n    return !isSameComponentClass;\n  }\n  hasFloatingFilters() {\n    const gridColumns = this.columnModel.getCols();\n    return gridColumns.some((col) => col.getColDef().floatingFilter);\n  }\n  getFilterInstance(key, callback) {\n    if (!callback) {\n      return void 0;\n    }\n    this.getFilterInstanceImpl(key).then((filter) => {\n      const unwrapped = _unwrapUserComp(filter);\n      callback(unwrapped);\n    });\n    return void 0;\n  }\n  getColumnFilterInstance(key) {\n    return new Promise((resolve) => {\n      this.getFilterInstanceImpl(key).then((filter) => {\n        resolve(_unwrapUserComp(filter));\n      });\n    });\n  }\n  getFilterInstanceImpl(key) {\n    const column = this.columnModel.getColDefCol(key);\n    if (!column) {\n      return AgPromise.resolve(void 0);\n    }\n    const filterPromise = this.getOrCreateFilterWrapper(column)?.filterPromise;\n    return filterPromise ?? AgPromise.resolve(null);\n  }\n  processFilterModelUpdateQueue() {\n    this.filterModelUpdateQueue.forEach(({ model, source }) => this.setFilterModel(model, source));\n    this.filterModelUpdateQueue = [];\n    this.columnFilterModelUpdateQueue.forEach(({ key, model, resolve }) => {\n      this.setColumnFilterModel(key, model).then(() => resolve());\n    });\n    this.columnFilterModelUpdateQueue = [];\n  }\n  getColumnFilterModel(key) {\n    const filterWrapper = this.getFilterWrapper(key);\n    return filterWrapper ? this.getModelFromFilterWrapper(filterWrapper) : null;\n  }\n  setColumnFilterModel(key, model) {\n    if (this.dataTypeService?.isPendingInference()) {\n      let resolve = () => {\n      };\n      const promise = new Promise((res) => {\n        resolve = res;\n      });\n      this.columnFilterModelUpdateQueue.push({ key, model, resolve });\n      return promise;\n    }\n    const column = this.columnModel.getColDefCol(key);\n    const filterWrapper = column ? this.getOrCreateFilterWrapper(column) : null;\n    const convertPromise = (promise) => {\n      return new Promise((resolve) => {\n        promise.then((result) => resolve(result));\n      });\n    };\n    return filterWrapper ? convertPromise(this.setModelOnFilterWrapper(filterWrapper.filterPromise, model)) : Promise.resolve();\n  }\n  getFilterWrapper(key) {\n    const column = this.columnModel.getColDefCol(key);\n    return column ? this.cachedFilter(column) ?? null : null;\n  }\n  destroy() {\n    super.destroy();\n    this.allColumnFilters.forEach((filterWrapper) => this.disposeFilterWrapper(filterWrapper, \"gridDestroyed\"));\n    this.allColumnListeners.clear();\n  }\n};\n\n// community-modules/core/src/filter/filterApi.ts\nfunction isAnyFilterPresent(beans) {\n  return !!beans.filterManager?.isAnyFilterPresent();\n}\nfunction onFilterChanged(beans, source = \"api\") {\n  beans.filterManager?.onFilterChanged({ source });\n}\n\n// community-modules/core/src/filter/floating/provided/readOnlyFloatingFilter.ts\nvar ReadOnlyFloatingFilter = class extends Component {\n  constructor() {\n    super(\n      /* html */\n      `\n            <div class=\"ag-floating-filter-input\" role=\"presentation\">\n                <ag-input-text-field data-ref=\"eFloatingFilterText\"></ag-input-text-field>\n            </div>`,\n      [AgInputTextFieldSelector]\n    );\n    this.eFloatingFilterText = RefPlaceholder;\n  }\n  wireBeans(beans) {\n    this.columnNameService = beans.columnNameService;\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n  init(params) {\n    this.params = params;\n    const displayName = this.columnNameService.getDisplayNameForColumn(params.column, \"header\", true);\n    const translate = this.localeService.getLocaleTextFunc();\n    this.eFloatingFilterText.setDisabled(true).setInputAriaLabel(`${displayName} ${translate(\"ariaFilterInput\", \"Filter Input\")}`);\n  }\n  onParentModelChanged(parentModel) {\n    if (parentModel == null) {\n      this.eFloatingFilterText.setValue(\"\");\n      return;\n    }\n    this.params.parentFilterInstance((filterInstance) => {\n      if (filterInstance.getModelAsString) {\n        const modelAsString = filterInstance.getModelAsString(parentModel);\n        this.eFloatingFilterText.setValue(modelAsString);\n      }\n    });\n  }\n  onParamsUpdated(params) {\n    this.refresh(params);\n  }\n  refresh(params) {\n    this.init(params);\n  }\n};\n\n// community-modules/core/src/filter/floating/provided/simpleFloatingFilter.ts\nvar SimpleFloatingFilter = class extends Component {\n  wireBeans(beans) {\n    this.columnNameService = beans.columnNameService;\n  }\n  getDefaultDebounceMs() {\n    return 0;\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n  isEventFromFloatingFilter(event) {\n    return event && event.afterFloatingFilter;\n  }\n  isEventFromDataChange(event) {\n    return event?.afterDataChange;\n  }\n  getLastType() {\n    return this.lastType;\n  }\n  isReadOnly() {\n    return this.readOnly;\n  }\n  setLastTypeFromModel(model) {\n    if (!model) {\n      this.lastType = this.optionsFactory.getDefaultOption();\n      return;\n    }\n    const isCombined = model.operator;\n    let condition;\n    if (isCombined) {\n      const combinedModel = model;\n      condition = combinedModel.conditions[0];\n    } else {\n      condition = model;\n    }\n    this.lastType = condition.type;\n  }\n  canWeEditAfterModelFromParentFilter(model) {\n    if (!model) {\n      return this.isTypeEditable(this.lastType);\n    }\n    const isCombined = model.operator;\n    if (isCombined) {\n      return false;\n    }\n    const simpleModel = model;\n    return this.isTypeEditable(simpleModel.type);\n  }\n  init(params) {\n    this.setSimpleParams(params, false);\n  }\n  setSimpleParams(params, update = true) {\n    this.optionsFactory = new OptionsFactory();\n    this.optionsFactory.init(params.filterParams, this.getDefaultFilterOptions());\n    if (!update) {\n      this.lastType = this.optionsFactory.getDefaultOption();\n    }\n    this.readOnly = !!params.filterParams.readOnly;\n    const editable = this.isTypeEditable(this.optionsFactory.getDefaultOption());\n    this.setEditable(editable);\n  }\n  onParamsUpdated(params) {\n    this.refresh(params);\n  }\n  refresh(params) {\n    this.setSimpleParams(params);\n  }\n  doesFilterHaveSingleInput(filterType) {\n    const customFilterOption = this.optionsFactory.getCustomOption(filterType);\n    const { numberOfInputs } = customFilterOption || {};\n    return numberOfInputs == null || numberOfInputs == 1;\n  }\n  isTypeEditable(type) {\n    const uneditableTypes = [\"inRange\", \"empty\", \"blank\", \"notBlank\"];\n    return !!type && !this.isReadOnly() && this.doesFilterHaveSingleInput(type) && uneditableTypes.indexOf(type) < 0;\n  }\n  getAriaLabel(params) {\n    const displayName = this.columnNameService.getDisplayNameForColumn(params.column, \"header\", true);\n    const translate = this.localeService.getLocaleTextFunc();\n    return `${displayName} ${translate(\"ariaFilterInput\", \"Filter Input\")}`;\n  }\n};\n\n// community-modules/core/src/filter/provided/date/dateFloatingFilter.ts\nvar DateFloatingFilter = class extends SimpleFloatingFilter {\n  constructor() {\n    super(\n      /* html */\n      `\n            <div class=\"ag-floating-filter-input\" role=\"presentation\">\n                <ag-input-text-field data-ref=\"eReadOnlyText\"></ag-input-text-field>\n                <div data-ref=\"eDateWrapper\" style=\"display: flex;\"></div>\n            </div>`,\n      [AgInputTextFieldSelector]\n    );\n    this.eReadOnlyText = RefPlaceholder;\n    this.eDateWrapper = RefPlaceholder;\n  }\n  wireBeans(beans) {\n    super.wireBeans(beans);\n    this.context = beans.context;\n    this.userComponentFactory = beans.userComponentFactory;\n  }\n  getDefaultFilterOptions() {\n    return DEFAULT_DATE_FILTER_OPTIONS;\n  }\n  init(params) {\n    super.init(params);\n    this.params = params;\n    this.filterParams = params.filterParams;\n    this.createDateComponent();\n    this.filterModelFormatter = new DateFilterModelFormatter(\n      this.filterParams,\n      this.localeService,\n      this.optionsFactory\n    );\n    const translate = this.localeService.getLocaleTextFunc();\n    this.eReadOnlyText.setDisabled(true).setInputAriaLabel(translate(\"ariaDateFilterInput\", \"Date Filter Input\"));\n  }\n  onParamsUpdated(params) {\n    this.refresh(params);\n  }\n  refresh(params) {\n    super.refresh(params);\n    this.params = params;\n    this.filterParams = params.filterParams;\n    this.updateDateComponent();\n    this.filterModelFormatter.updateParams({\n      optionsFactory: this.optionsFactory,\n      dateFilterParams: this.filterParams\n    });\n    this.updateCompOnModelChange(params.currentParentModel());\n  }\n  updateCompOnModelChange(model) {\n    const allowEditing = !this.isReadOnly() && this.canWeEditAfterModelFromParentFilter(model);\n    this.setEditable(allowEditing);\n    if (allowEditing) {\n      if (model) {\n        const dateModel = model;\n        this.dateComp.setDate(_parseDateTimeFromString(dateModel.dateFrom));\n      } else {\n        this.dateComp.setDate(null);\n      }\n      this.eReadOnlyText.setValue(\"\");\n    } else {\n      this.eReadOnlyText.setValue(this.filterModelFormatter.getModelAsString(model));\n      this.dateComp.setDate(null);\n    }\n  }\n  setEditable(editable) {\n    _setDisplayed(this.eDateWrapper, editable);\n    _setDisplayed(this.eReadOnlyText.getGui(), !editable);\n  }\n  onParentModelChanged(model, event) {\n    if (this.isEventFromFloatingFilter(event) || this.isEventFromDataChange(event)) {\n      return;\n    }\n    super.setLastTypeFromModel(model);\n    this.updateCompOnModelChange(model);\n  }\n  onDateChanged() {\n    const filterValueDate = this.dateComp.getDate();\n    const filterValueText = _serialiseDate(filterValueDate);\n    this.params.parentFilterInstance((filterInstance) => {\n      if (filterInstance) {\n        const date = _parseDateTimeFromString(filterValueText);\n        filterInstance.onFloatingFilterChanged(this.getLastType() || null, date);\n      }\n    });\n  }\n  getDateComponentParams() {\n    const debounceMs = getDebounceMs(this.params.filterParams, this.getDefaultDebounceMs());\n    return {\n      onDateChanged: _debounce(this.onDateChanged.bind(this), debounceMs),\n      filterParams: this.params.column.getColDef().filterParams\n    };\n  }\n  createDateComponent() {\n    this.dateComp = new DateCompWrapper(\n      this.context,\n      this.userComponentFactory,\n      this.getDateComponentParams(),\n      this.eDateWrapper,\n      (dateComp) => {\n        dateComp.setInputAriaLabel(this.getAriaLabel(this.params));\n      }\n    );\n    this.addDestroyFunc(() => this.dateComp.destroy());\n  }\n  updateDateComponent() {\n    const params = this.gos.addGridCommonParams(this.getDateComponentParams());\n    this.dateComp.updateParams(params);\n  }\n  getFilterModelFormatter() {\n    return this.filterModelFormatter;\n  }\n};\n\n// community-modules/core/src/filter/provided/date/defaultDateComponent.ts\nvar DefaultDateComponent = class extends Component {\n  constructor() {\n    super(\n      /* html */\n      `\n            <div class=\"ag-filter-filter\">\n                <ag-input-text-field class=\"ag-date-filter\" data-ref=\"eDateInput\"></ag-input-text-field>\n            </div>`,\n      [AgInputTextFieldSelector]\n    );\n    this.eDateInput = RefPlaceholder;\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n  init(params) {\n    this.params = params;\n    this.setParams(params);\n    const inputElement = this.eDateInput.getInputElement();\n    this.addManagedListeners(inputElement, {\n      // ensures that the input element is focussed when a clear button is clicked,\n      // unless using safari as there is no clear button and focus does not work properly\n      mouseDown: () => {\n        if (this.eDateInput.isDisabled() || this.usingSafariDatePicker) {\n          return;\n        }\n        inputElement.focus();\n      },\n      input: (e) => {\n        if (e.target !== this.gos.getActiveDomElement()) {\n          return;\n        }\n        if (this.eDateInput.isDisabled()) {\n          return;\n        }\n        this.params.onDateChanged();\n      }\n    });\n  }\n  setParams(params) {\n    const inputElement = this.eDateInput.getInputElement();\n    const shouldUseBrowserDatePicker = this.shouldUseBrowserDatePicker(params);\n    this.usingSafariDatePicker = shouldUseBrowserDatePicker && _isBrowserSafari();\n    inputElement.type = shouldUseBrowserDatePicker ? \"date\" : \"text\";\n    const { minValidYear, maxValidYear, minValidDate, maxValidDate } = params.filterParams || {};\n    if (minValidDate && minValidYear) {\n      _warnOnce(\n        \"DateFilter should not have both minValidDate and minValidYear parameters set at the same time! minValidYear will be ignored.\"\n      );\n    }\n    if (maxValidDate && maxValidYear) {\n      _warnOnce(\n        \"DateFilter should not have both maxValidDate and maxValidYear parameters set at the same time! maxValidYear will be ignored.\"\n      );\n    }\n    if (minValidDate && maxValidDate) {\n      const [parsedMinValidDate, parsedMaxValidDate] = [minValidDate, maxValidDate].map(\n        (v) => v instanceof Date ? v : _parseDateTimeFromString(v)\n      );\n      if (parsedMinValidDate && parsedMaxValidDate && parsedMinValidDate.getTime() > parsedMaxValidDate.getTime()) {\n        _warnOnce(\n          \"DateFilter parameter minValidDate should always be lower than or equal to parameter maxValidDate.\"\n        );\n      }\n    }\n    if (minValidDate) {\n      if (minValidDate instanceof Date) {\n        inputElement.min = _dateToFormattedString(minValidDate);\n      } else {\n        inputElement.min = minValidDate;\n      }\n    } else {\n      if (minValidYear) {\n        inputElement.min = `${minValidYear}-01-01`;\n      }\n    }\n    if (maxValidDate) {\n      if (maxValidDate instanceof Date) {\n        inputElement.max = _dateToFormattedString(maxValidDate);\n      } else {\n        inputElement.max = maxValidDate;\n      }\n    } else {\n      if (maxValidYear) {\n        inputElement.max = `${maxValidYear}-12-31`;\n      }\n    }\n  }\n  onParamsUpdated(params) {\n    this.refresh(params);\n  }\n  refresh(params) {\n    this.params = params;\n    this.setParams(params);\n  }\n  getDate() {\n    return _parseDateTimeFromString(this.eDateInput.getValue());\n  }\n  setDate(date) {\n    this.eDateInput.setValue(_serialiseDate(date, false));\n  }\n  setInputPlaceholder(placeholder) {\n    this.eDateInput.setInputPlaceholder(placeholder);\n  }\n  setInputAriaLabel(ariaLabel) {\n    this.eDateInput.setAriaLabel(ariaLabel);\n  }\n  setDisabled(disabled) {\n    this.eDateInput.setDisabled(disabled);\n  }\n  afterGuiAttached(params) {\n    if (!params || !params.suppressFocus) {\n      this.eDateInput.getInputElement().focus();\n    }\n  }\n  shouldUseBrowserDatePicker(params) {\n    if (params.filterParams && params.filterParams.browserDatePicker != null) {\n      return params.filterParams.browserDatePicker;\n    }\n    return _isBrowserChrome() || _isBrowserFirefox() || _isBrowserSafari() && _getSafariVersion() >= 14.1;\n  }\n};\n\n// community-modules/core/src/filter/floating/provided/floatingFilterTextInputService.ts\nvar FloatingFilterTextInputService = class extends BeanStub {\n  constructor(params) {\n    super();\n    this.params = params;\n    this.eFloatingFilterTextInput = RefPlaceholder;\n    this.valueChangedListener = () => {\n    };\n  }\n  setupGui(parentElement) {\n    this.eFloatingFilterTextInput = this.createManagedBean(new AgInputTextField(this.params?.config));\n    const eInput = this.eFloatingFilterTextInput.getGui();\n    parentElement.appendChild(eInput);\n    const listener = (e) => this.valueChangedListener(e);\n    this.addManagedListeners(eInput, {\n      input: listener,\n      keydown: listener\n    });\n  }\n  setEditable(editable) {\n    this.eFloatingFilterTextInput.setDisabled(!editable);\n  }\n  setAutoComplete(autoComplete) {\n    this.eFloatingFilterTextInput.setAutoComplete(autoComplete);\n  }\n  getValue() {\n    return this.eFloatingFilterTextInput.getValue();\n  }\n  setValue(value, silent) {\n    this.eFloatingFilterTextInput.setValue(value, silent);\n  }\n  setValueChangedListener(listener) {\n    this.valueChangedListener = listener;\n  }\n  setParams(params) {\n    this.setAriaLabel(params.ariaLabel);\n    if (params.autoComplete !== void 0) {\n      this.setAutoComplete(params.autoComplete);\n    }\n  }\n  setAriaLabel(ariaLabel) {\n    this.eFloatingFilterTextInput.setInputAriaLabel(ariaLabel);\n  }\n};\n\n// community-modules/core/src/filter/floating/provided/textInputFloatingFilter.ts\nvar TextInputFloatingFilter = class extends SimpleFloatingFilter {\n  constructor() {\n    super(...arguments);\n    this.eFloatingFilterInputContainer = RefPlaceholder;\n  }\n  postConstruct() {\n    this.setTemplate(\n      /* html */\n      `\n            <div class=\"ag-floating-filter-input\" role=\"presentation\" data-ref=\"eFloatingFilterInputContainer\"></div>\n        `\n    );\n  }\n  getDefaultDebounceMs() {\n    return 500;\n  }\n  onParentModelChanged(model, event) {\n    if (this.isEventFromFloatingFilter(event) || this.isEventFromDataChange(event)) {\n      return;\n    }\n    this.setLastTypeFromModel(model);\n    this.setEditable(this.canWeEditAfterModelFromParentFilter(model));\n    this.floatingFilterInputService.setValue(this.getFilterModelFormatter().getModelAsString(model));\n  }\n  init(params) {\n    this.setupFloatingFilterInputService(params);\n    super.init(params);\n    this.setTextInputParams(params);\n  }\n  setupFloatingFilterInputService(params) {\n    this.floatingFilterInputService = this.createFloatingFilterInputService(params);\n    this.floatingFilterInputService.setupGui(this.eFloatingFilterInputContainer);\n  }\n  setTextInputParams(params) {\n    this.params = params;\n    const autoComplete = params.browserAutoComplete ?? false;\n    this.floatingFilterInputService.setParams({\n      ariaLabel: this.getAriaLabel(params),\n      autoComplete\n    });\n    this.applyActive = isUseApplyButton(this.params.filterParams);\n    if (!this.isReadOnly()) {\n      const debounceMs = getDebounceMs(this.params.filterParams, this.getDefaultDebounceMs());\n      const toDebounce = _debounce(\n        this.syncUpWithParentFilter.bind(this),\n        debounceMs\n      );\n      this.floatingFilterInputService.setValueChangedListener(toDebounce);\n    }\n  }\n  onParamsUpdated(params) {\n    this.refresh(params);\n  }\n  refresh(params) {\n    super.refresh(params);\n    this.setTextInputParams(params);\n  }\n  recreateFloatingFilterInputService(params) {\n    const value = this.floatingFilterInputService.getValue();\n    _clearElement(this.eFloatingFilterInputContainer);\n    this.destroyBean(this.floatingFilterInputService);\n    this.setupFloatingFilterInputService(params);\n    this.floatingFilterInputService.setValue(value, true);\n  }\n  syncUpWithParentFilter(e) {\n    const isEnterKey = e.key === KeyCode.ENTER;\n    if (this.applyActive && !isEnterKey) {\n      return;\n    }\n    let value = this.floatingFilterInputService.getValue();\n    if (this.params.filterParams.trimInput) {\n      value = trimInputForFilter(value);\n      this.floatingFilterInputService.setValue(value, true);\n    }\n    this.params.parentFilterInstance((filterInstance) => {\n      if (filterInstance) {\n        filterInstance.onFloatingFilterChanged(this.getLastType() || null, value || null);\n      }\n    });\n  }\n  setEditable(editable) {\n    this.floatingFilterInputService.setEditable(editable);\n  }\n};\n\n// community-modules/core/src/filter/provided/number/numberFloatingFilter.ts\nvar FloatingFilterNumberInputService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.valueChangedListener = () => {\n    };\n    this.numberInputActive = true;\n  }\n  setupGui(parentElement) {\n    this.eFloatingFilterNumberInput = this.createManagedBean(new AgInputNumberField());\n    this.eFloatingFilterTextInput = this.createManagedBean(new AgInputTextField());\n    this.eFloatingFilterTextInput.setDisabled(true);\n    const eNumberInput = this.eFloatingFilterNumberInput.getGui();\n    const eTextInput = this.eFloatingFilterTextInput.getGui();\n    parentElement.appendChild(eNumberInput);\n    parentElement.appendChild(eTextInput);\n    this.setupListeners(eNumberInput, (e) => this.valueChangedListener(e));\n    this.setupListeners(eTextInput, (e) => this.valueChangedListener(e));\n  }\n  setEditable(editable) {\n    this.numberInputActive = editable;\n    this.eFloatingFilterNumberInput.setDisplayed(this.numberInputActive);\n    this.eFloatingFilterTextInput.setDisplayed(!this.numberInputActive);\n  }\n  setAutoComplete(autoComplete) {\n    this.eFloatingFilterNumberInput.setAutoComplete(autoComplete);\n    this.eFloatingFilterTextInput.setAutoComplete(autoComplete);\n  }\n  getValue() {\n    return this.getActiveInputElement().getValue();\n  }\n  setValue(value, silent) {\n    this.getActiveInputElement().setValue(value, silent);\n  }\n  getActiveInputElement() {\n    return this.numberInputActive ? this.eFloatingFilterNumberInput : this.eFloatingFilterTextInput;\n  }\n  setValueChangedListener(listener) {\n    this.valueChangedListener = listener;\n  }\n  setupListeners(element, listener) {\n    this.addManagedListeners(element, {\n      input: listener,\n      keydown: listener\n    });\n  }\n  setParams(params) {\n    this.setAriaLabel(params.ariaLabel);\n    if (params.autoComplete !== void 0) {\n      this.setAutoComplete(params.autoComplete);\n    }\n  }\n  setAriaLabel(ariaLabel) {\n    this.eFloatingFilterNumberInput.setInputAriaLabel(ariaLabel);\n    this.eFloatingFilterTextInput.setInputAriaLabel(ariaLabel);\n  }\n};\nvar NumberFloatingFilter = class extends TextInputFloatingFilter {\n  init(params) {\n    super.init(params);\n    this.filterModelFormatter = new NumberFilterModelFormatter(\n      this.localeService,\n      this.optionsFactory,\n      params.filterParams?.numberFormatter\n    );\n  }\n  onParamsUpdated(params) {\n    this.refresh(params);\n  }\n  refresh(params) {\n    const allowedCharPattern = getAllowedCharPattern(params.filterParams);\n    if (allowedCharPattern !== this.allowedCharPattern) {\n      this.recreateFloatingFilterInputService(params);\n    }\n    super.refresh(params);\n    this.filterModelFormatter.updateParams({ optionsFactory: this.optionsFactory });\n  }\n  getDefaultFilterOptions() {\n    return DEFAULT_NUMBER_FILTER_OPTIONS;\n  }\n  getFilterModelFormatter() {\n    return this.filterModelFormatter;\n  }\n  createFloatingFilterInputService(params) {\n    this.allowedCharPattern = getAllowedCharPattern(params.filterParams);\n    if (this.allowedCharPattern) {\n      return this.createManagedBean(\n        new FloatingFilterTextInputService({\n          config: { allowedCharPattern: this.allowedCharPattern }\n        })\n      );\n    }\n    return this.createManagedBean(new FloatingFilterNumberInputService());\n  }\n};\n\n// community-modules/core/src/filter/provided/text/textFloatingFilter.ts\nvar TextFloatingFilter = class extends TextInputFloatingFilter {\n  init(params) {\n    super.init(params);\n    this.filterModelFormatter = new TextFilterModelFormatter(this.localeService, this.optionsFactory);\n  }\n  onParamsUpdated(params) {\n    this.refresh(params);\n  }\n  refresh(params) {\n    super.refresh(params);\n    this.filterModelFormatter.updateParams({ optionsFactory: this.optionsFactory });\n  }\n  getDefaultFilterOptions() {\n    return DEFAULT_TEXT_FILTER_OPTIONS;\n  }\n  getFilterModelFormatter() {\n    return this.filterModelFormatter;\n  }\n  createFloatingFilterInputService() {\n    return this.createManagedBean(new FloatingFilterTextInputService());\n  }\n};\n\n// community-modules/core/src/filter/quickFilterApi.ts\nfunction isQuickFilterPresent(beans) {\n  return !!beans.filterManager?.isQuickFilterPresent();\n}\nfunction getQuickFilter(beans) {\n  return beans.gos.get(\"quickFilterText\");\n}\nfunction resetQuickFilter(beans) {\n  beans.filterManager?.resetQuickFilterCache();\n}\n\n// community-modules/core/src/filter/quickFilterService.ts\nvar QuickFilterService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"quickFilterService\";\n    this.quickFilter = null;\n    this.quickFilterParts = null;\n  }\n  wireBeans(beans) {\n    this.valueService = beans.valueService;\n    this.columnModel = beans.columnModel;\n    this.rowModel = beans.rowModel;\n    this.pivotResultColsService = beans.pivotResultColsService;\n  }\n  postConstruct() {\n    const resetListener = this.resetQuickFilterCache.bind(this);\n    this.addManagedEventListeners({\n      columnPivotModeChanged: resetListener,\n      newColumnsLoaded: resetListener,\n      columnRowGroupChanged: resetListener,\n      columnVisible: () => {\n        if (!this.gos.get(\"includeHiddenColumnsInQuickFilter\")) {\n          this.resetQuickFilterCache();\n        }\n      }\n    });\n    this.addManagedPropertyListener(\"quickFilterText\", (e) => this.setQuickFilter(e.currentValue));\n    this.addManagedPropertyListeners(\n      [\"includeHiddenColumnsInQuickFilter\", \"applyQuickFilterBeforePivotOrAgg\"],\n      () => this.onQuickFilterColumnConfigChanged()\n    );\n    this.quickFilter = this.parseQuickFilter(this.gos.get(\"quickFilterText\"));\n    this.parser = this.gos.get(\"quickFilterParser\");\n    this.matcher = this.gos.get(\"quickFilterMatcher\");\n    this.setQuickFilterParts();\n    this.addManagedPropertyListeners(\n      [\"quickFilterMatcher\", \"quickFilterParser\"],\n      () => this.setQuickFilterParserAndMatcher()\n    );\n  }\n  // if we are using autoGroupCols, then they should be included for quick filter. this covers the\n  // following scenarios:\n  // a) user provides 'field' into autoGroupCol of normal grid, so now because a valid col to filter leafs on\n  // b) using tree data and user depends on autoGroupCol for first col, and we also want to filter on this\n  //    (tree data is a bit different, as parent rows can be filtered on, unlike row grouping)\n  refreshQuickFilterCols() {\n    const pivotMode = this.columnModel.isPivotMode();\n    const groupAutoCols = this.columnModel.getAutoCols();\n    const providedCols = this.columnModel.getColDefCols();\n    let columnsForQuickFilter = (pivotMode && !this.gos.get(\"applyQuickFilterBeforePivotOrAgg\") ? this.pivotResultColsService.getPivotResultCols()?.list : providedCols) ?? [];\n    if (groupAutoCols) {\n      columnsForQuickFilter = columnsForQuickFilter.concat(groupAutoCols);\n    }\n    this.colsForQuickFilter = this.gos.get(\"includeHiddenColumnsInQuickFilter\") ? columnsForQuickFilter : columnsForQuickFilter.filter((col) => col.isVisible() || col.isRowGroupActive());\n  }\n  isQuickFilterPresent() {\n    return this.quickFilter !== null;\n  }\n  doesRowPassQuickFilter(node) {\n    const usingCache = this.gos.get(\"cacheQuickFilter\");\n    if (this.matcher) {\n      return this.doesRowPassQuickFilterMatcher(usingCache, node);\n    }\n    return this.quickFilterParts.every(\n      (part) => usingCache ? this.doesRowPassQuickFilterCache(node, part) : this.doesRowPassQuickFilterNoCache(node, part)\n    );\n  }\n  resetQuickFilterCache() {\n    this.rowModel.forEachNode((node) => node.quickFilterAggregateText = null);\n  }\n  setQuickFilterParts() {\n    const { quickFilter, parser } = this;\n    if (quickFilter) {\n      this.quickFilterParts = parser ? parser(quickFilter) : quickFilter.split(\" \");\n    } else {\n      this.quickFilterParts = null;\n    }\n  }\n  parseQuickFilter(newFilter) {\n    if (!_exists(newFilter)) {\n      return null;\n    }\n    if (!this.gos.isRowModelType(\"clientSide\")) {\n      _warnOnce(\"Quick filtering only works with the Client-Side Row Model\");\n      return null;\n    }\n    return newFilter.toUpperCase();\n  }\n  setQuickFilter(newFilter) {\n    if (newFilter != null && typeof newFilter !== \"string\") {\n      _warnOnce(`Grid option quickFilterText only supports string inputs, received: ${typeof newFilter}`);\n      return;\n    }\n    const parsedFilter = this.parseQuickFilter(newFilter);\n    if (this.quickFilter !== parsedFilter) {\n      this.quickFilter = parsedFilter;\n      this.setQuickFilterParts();\n      this.dispatchLocalEvent({ type: \"quickFilterChanged\" });\n    }\n  }\n  setQuickFilterParserAndMatcher() {\n    const parser = this.gos.get(\"quickFilterParser\");\n    const matcher = this.gos.get(\"quickFilterMatcher\");\n    const hasChanged = parser !== this.parser || matcher !== this.matcher;\n    this.parser = parser;\n    this.matcher = matcher;\n    if (hasChanged) {\n      this.setQuickFilterParts();\n      this.dispatchLocalEvent({ type: \"quickFilterChanged\" });\n    }\n  }\n  onQuickFilterColumnConfigChanged() {\n    this.refreshQuickFilterCols();\n    this.resetQuickFilterCache();\n    if (this.isQuickFilterPresent()) {\n      this.dispatchLocalEvent({ type: \"quickFilterChanged\" });\n    }\n  }\n  doesRowPassQuickFilterNoCache(node, filterPart) {\n    return this.colsForQuickFilter.some((column) => {\n      const part = this.getQuickFilterTextForColumn(column, node);\n      return _exists(part) && part.indexOf(filterPart) >= 0;\n    });\n  }\n  doesRowPassQuickFilterCache(node, filterPart) {\n    this.checkGenerateQuickFilterAggregateText(node);\n    return node.quickFilterAggregateText.indexOf(filterPart) >= 0;\n  }\n  doesRowPassQuickFilterMatcher(usingCache, node) {\n    let quickFilterAggregateText;\n    if (usingCache) {\n      this.checkGenerateQuickFilterAggregateText(node);\n      quickFilterAggregateText = node.quickFilterAggregateText;\n    } else {\n      quickFilterAggregateText = this.getQuickFilterAggregateText(node);\n    }\n    const { quickFilterParts, matcher } = this;\n    return matcher(quickFilterParts, quickFilterAggregateText);\n  }\n  checkGenerateQuickFilterAggregateText(node) {\n    if (!node.quickFilterAggregateText) {\n      node.quickFilterAggregateText = this.getQuickFilterAggregateText(node);\n    }\n  }\n  getQuickFilterTextForColumn(column, node) {\n    let value = this.valueService.getValue(column, node, true);\n    const colDef = column.getColDef();\n    if (colDef.getQuickFilterText) {\n      const params = this.gos.addGridCommonParams({\n        value,\n        node,\n        data: node.data,\n        column,\n        colDef\n      });\n      value = colDef.getQuickFilterText(params);\n    }\n    return _exists(value) ? value.toString().toUpperCase() : null;\n  }\n  getQuickFilterAggregateText(node) {\n    const stringParts = [];\n    this.colsForQuickFilter.forEach((column) => {\n      const part = this.getQuickFilterTextForColumn(column, node);\n      if (_exists(part)) {\n        stringParts.push(part);\n      }\n    });\n    return stringParts.join(\"\\n\");\n  }\n};\n\n// community-modules/core/src/filter/filterModule.ts\nvar FilterCoreModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/filter-core\",\n  beans: [FilterManager]\n});\nvar FilterApiModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/filter-api\",\n  apiFunctions: {\n    isAnyFilterPresent,\n    onFilterChanged\n  },\n  dependantModules: [FilterCoreModule]\n});\nvar ColumnFilterModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/column-filter\",\n  beans: [ColumnFilterService],\n  dependantModules: [FilterCoreModule]\n});\nvar ColumnFilterApiModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/column-filter-api\",\n  apiFunctions: {\n    isColumnFilterPresent,\n    getFilterInstance,\n    getColumnFilterInstance,\n    destroyFilter,\n    setFilterModel,\n    getFilterModel,\n    getColumnFilterModel,\n    setColumnFilterModel,\n    showColumnFilter\n  },\n  dependantModules: [ColumnFilterModule, FilterApiModule]\n});\nvar FloatingFilterCoreModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/floating-filter-core\",\n  controllers: [{ name: \"headerFilterCell\", classImp: HeaderFilterCellCtrl }],\n  dependantModules: [ColumnFilterModule]\n});\nvar FloatingFilterModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/floating-filter\",\n  dependantModules: [FloatingFilterCoreModule, ColumnFilterModule]\n});\nvar ReadOnlyFloatingFilterModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/read-only-floating-filter\",\n  userComponents: [{ name: \"agReadOnlyFloatingFilter\", classImp: ReadOnlyFloatingFilter }],\n  dependantModules: [FloatingFilterCoreModule]\n});\nvar SimpleFilterModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/simple-filter\",\n  dependantModules: [ColumnFilterModule],\n  userComponents: [\n    { name: \"agTextColumnFilter\", classImp: TextFilter },\n    { name: \"agNumberColumnFilter\", classImp: NumberFilter },\n    { name: \"agDateColumnFilter\", classImp: DateFilter },\n    { name: \"agDateInput\", classImp: DefaultDateComponent }\n  ]\n});\nvar SimpleFloatingFilterModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/simple-floating-filter\",\n  dependantModules: [SimpleFilterModule, FloatingFilterCoreModule],\n  userComponents: [\n    { name: \"agTextColumnFloatingFilter\", classImp: TextFloatingFilter },\n    { name: \"agNumberColumnFloatingFilter\", classImp: NumberFloatingFilter },\n    { name: \"agDateColumnFloatingFilter\", classImp: DateFloatingFilter }\n  ]\n});\nvar QuickFilterCoreModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/quick-filter-core\",\n  beans: [QuickFilterService],\n  dependantModules: [FilterCoreModule]\n});\nvar QuickFilterApiModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/quick-filter-api\",\n  apiFunctions: {\n    isQuickFilterPresent,\n    getQuickFilter,\n    resetQuickFilter\n  },\n  dependantModules: [QuickFilterCoreModule]\n});\nvar QuickFilterModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/quick-filter\",\n  dependantModules: [QuickFilterCoreModule, QuickFilterApiModule]\n});\nvar FilterModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/filter\",\n  dependantModules: [\n    SimpleFloatingFilterModule,\n    ReadOnlyFloatingFilterModule,\n    QuickFilterModule,\n    ColumnFilterApiModule\n  ]\n});\n\n// community-modules/core/src/headerRendering/cells/abstractCell/abstractHeaderCellComp.ts\nvar AbstractHeaderCellComp = class extends Component {\n  constructor(template, ctrl) {\n    super(template);\n    this.ctrl = ctrl;\n  }\n  getCtrl() {\n    return this.ctrl;\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/floatingFilter/headerFilterCellComp.ts\nvar HeaderFilterCellComp = class extends AbstractHeaderCellComp {\n  constructor(ctrl) {\n    super(\n      /* html */\n      `<div class=\"ag-header-cell ag-floating-filter\" role=\"gridcell\">\n            <div data-ref=\"eFloatingFilterBody\" role=\"presentation\"></div>\n            <div class=\"ag-floating-filter-button ag-hidden\" data-ref=\"eButtonWrapper\" role=\"presentation\">\n                <button type=\"button\" class=\"ag-button ag-floating-filter-button-button\" data-ref=\"eButtonShowMainFilter\" tabindex=\"-1\"></button>\n            </div>\n        </div>`,\n      ctrl\n    );\n    this.eFloatingFilterBody = RefPlaceholder;\n    this.eButtonWrapper = RefPlaceholder;\n    this.eButtonShowMainFilter = RefPlaceholder;\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    const compProxy = {\n      addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n      addOrRemoveBodyCssClass: (cssClassName, on) => this.eFloatingFilterBody.classList.toggle(cssClassName, on),\n      setButtonWrapperDisplayed: (displayed) => _setDisplayed(this.eButtonWrapper, displayed),\n      setCompDetails: (compDetails) => this.setCompDetails(compDetails),\n      getFloatingFilterComp: () => this.compPromise,\n      setWidth: (width) => eGui.style.width = width,\n      setMenuIcon: (eIcon) => this.eButtonShowMainFilter.appendChild(eIcon)\n    };\n    this.ctrl.setComp(compProxy, eGui, this.eButtonShowMainFilter, this.eFloatingFilterBody);\n  }\n  setCompDetails(compDetails) {\n    if (!compDetails) {\n      this.destroyFloatingFilterComp();\n      this.compPromise = null;\n      return;\n    }\n    this.compPromise = compDetails.newAgStackInstance();\n    this.compPromise.then((comp) => this.afterCompCreated(comp));\n  }\n  destroy() {\n    this.destroyFloatingFilterComp();\n    super.destroy();\n  }\n  destroyFloatingFilterComp() {\n    if (this.floatingFilterComp) {\n      this.eFloatingFilterBody.removeChild(this.floatingFilterComp.getGui());\n      this.floatingFilterComp = this.destroyBean(this.floatingFilterComp);\n    }\n  }\n  afterCompCreated(comp) {\n    if (!comp) {\n      return;\n    }\n    if (!this.isAlive()) {\n      this.destroyBean(comp);\n      return;\n    }\n    this.destroyFloatingFilterComp();\n    this.floatingFilterComp = comp;\n    this.eFloatingFilterBody.appendChild(comp.getGui());\n    if (comp.afterGuiAttached) {\n      comp.afterGuiAttached();\n    }\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/column/headerCellComp.ts\nvar HeaderCellComp = class extends AbstractHeaderCellComp {\n  constructor(ctrl) {\n    super(\n      /* html */\n      `<div class=\"ag-header-cell\" role=\"columnheader\">\n            <div data-ref=\"eResize\" class=\"ag-header-cell-resize\" role=\"presentation\"></div>\n            <div data-ref=\"eHeaderCompWrapper\" class=\"ag-header-cell-comp-wrapper\" role=\"presentation\"></div>\n        </div>`,\n      ctrl\n    );\n    this.eResize = RefPlaceholder;\n    this.eHeaderCompWrapper = RefPlaceholder;\n    this.headerCompVersion = 0;\n    this.column = ctrl.getColumnGroupChild();\n    this.pinned = ctrl.getPinned();\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    const setAttribute = (name, value) => {\n      if (value != null && value != \"\") {\n        eGui.setAttribute(name, value);\n      } else {\n        eGui.removeAttribute(name);\n      }\n    };\n    setAttribute(\"col-id\", this.column.getColId());\n    const compProxy = {\n      setWidth: (width) => eGui.style.width = width,\n      addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n      setAriaSort: (sort) => sort ? _setAriaSort(eGui, sort) : _removeAriaSort(eGui),\n      setUserCompDetails: (compDetails) => this.setUserCompDetails(compDetails),\n      getUserCompInstance: () => this.headerComp\n    };\n    this.ctrl.setComp(compProxy, this.getGui(), this.eResize, this.eHeaderCompWrapper);\n    const selectAllGui = this.ctrl.getSelectAllGui();\n    this.eResize.insertAdjacentElement(\"afterend\", selectAllGui);\n  }\n  destroy() {\n    this.destroyHeaderComp();\n    super.destroy();\n  }\n  destroyHeaderComp() {\n    if (this.headerComp) {\n      this.eHeaderCompWrapper.removeChild(this.headerCompGui);\n      this.headerComp = this.destroyBean(this.headerComp);\n      this.headerCompGui = void 0;\n    }\n  }\n  setUserCompDetails(compDetails) {\n    this.headerCompVersion++;\n    const versionCopy = this.headerCompVersion;\n    compDetails.newAgStackInstance().then((comp) => this.afterCompCreated(versionCopy, comp));\n  }\n  afterCompCreated(version, headerComp) {\n    if (version != this.headerCompVersion || !this.isAlive()) {\n      this.destroyBean(headerComp);\n      return;\n    }\n    this.destroyHeaderComp();\n    this.headerComp = headerComp;\n    this.headerCompGui = headerComp.getGui();\n    this.eHeaderCompWrapper.appendChild(this.headerCompGui);\n    this.ctrl.setDragSource(this.getGui());\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/columnGroup/headerGroupCellComp.ts\nvar HeaderGroupCellComp = class extends AbstractHeaderCellComp {\n  constructor(ctrl) {\n    super(\n      /* html */\n      `<div class=\"ag-header-group-cell\" role=\"columnheader\">\n            <div data-ref=\"eHeaderCompWrapper\" class=\"ag-header-cell-comp-wrapper\" role=\"presentation\"></div>\n            <div data-ref=\"eResize\" class=\"ag-header-cell-resize\" role=\"presentation\"></div>\n        </div>`,\n      ctrl\n    );\n    this.eResize = RefPlaceholder;\n    this.eHeaderCompWrapper = RefPlaceholder;\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    const setAttribute = (key, value) => value != void 0 ? eGui.setAttribute(key, value) : eGui.removeAttribute(key);\n    eGui.setAttribute(\"col-id\", this.ctrl.getColId());\n    const compProxy = {\n      addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n      setResizableDisplayed: (displayed) => _setDisplayed(this.eResize, displayed),\n      setWidth: (width) => eGui.style.width = width,\n      setAriaExpanded: (expanded) => setAttribute(\"aria-expanded\", expanded),\n      setUserCompDetails: (details) => this.setUserCompDetails(details),\n      getUserCompInstance: () => this.headerGroupComp\n    };\n    this.ctrl.setComp(compProxy, eGui, this.eResize, this.eHeaderCompWrapper);\n  }\n  setUserCompDetails(details) {\n    details.newAgStackInstance().then((comp) => this.afterHeaderCompCreated(comp));\n  }\n  afterHeaderCompCreated(headerGroupComp) {\n    const destroyFunc = () => this.destroyBean(headerGroupComp);\n    if (!this.isAlive()) {\n      destroyFunc();\n      return;\n    }\n    const eGui = this.getGui();\n    const eHeaderGroupGui = headerGroupComp.getGui();\n    this.eHeaderCompWrapper.appendChild(eHeaderGroupGui);\n    this.addDestroyFunc(destroyFunc);\n    this.headerGroupComp = headerGroupComp;\n    this.ctrl.setDragSource(eGui);\n  }\n};\n\n// community-modules/core/src/headerRendering/row/headerRowComp.ts\nvar HeaderRowType = /* @__PURE__ */ ((HeaderRowType2) => {\n  HeaderRowType2[\"COLUMN_GROUP\"] = \"group\";\n  HeaderRowType2[\"COLUMN\"] = \"column\";\n  HeaderRowType2[\"FLOATING_FILTER\"] = \"filter\";\n  return HeaderRowType2;\n})(HeaderRowType || {});\nvar HeaderRowComp = class extends Component {\n  constructor(ctrl) {\n    super();\n    this.headerComps = {};\n    this.ctrl = ctrl;\n    this.setTemplate(\n      /* html */\n      `<div class=\"${this.ctrl.getHeaderRowClass()}\" role=\"row\"></div>`\n    );\n  }\n  postConstruct() {\n    _setAriaRowIndex(this.getGui(), this.ctrl.getAriaRowIndex());\n    const compProxy = {\n      setHeight: (height) => this.getGui().style.height = height,\n      setTop: (top) => this.getGui().style.top = top,\n      setHeaderCtrls: (ctrls, forceOrder) => this.setHeaderCtrls(ctrls, forceOrder),\n      setWidth: (width) => this.getGui().style.width = width\n    };\n    this.ctrl.setComp(compProxy);\n  }\n  destroy() {\n    this.setHeaderCtrls([], false);\n    super.destroy();\n  }\n  setHeaderCtrls(ctrls, forceOrder) {\n    if (!this.isAlive()) {\n      return;\n    }\n    const oldComps = this.headerComps;\n    this.headerComps = {};\n    ctrls.forEach((ctrl) => {\n      const id = ctrl.getInstanceId();\n      let comp = oldComps[id];\n      delete oldComps[id];\n      if (comp == null) {\n        comp = this.createHeaderComp(ctrl);\n        this.getGui().appendChild(comp.getGui());\n      }\n      this.headerComps[id] = comp;\n    });\n    _iterateObject(oldComps, (id, comp) => {\n      this.getGui().removeChild(comp.getGui());\n      this.destroyBean(comp);\n    });\n    if (forceOrder) {\n      const comps = _getAllValuesInObject(this.headerComps);\n      comps.sort(\n        (a, b) => {\n          const leftA = a.getCtrl().getColumnGroupChild().getLeft();\n          const leftB = b.getCtrl().getColumnGroupChild().getLeft();\n          return leftA - leftB;\n        }\n      );\n      const elementsInOrder = comps.map((c) => c.getGui());\n      _setDomChildOrder(this.getGui(), elementsInOrder);\n    }\n  }\n  createHeaderComp(headerCtrl) {\n    let result;\n    switch (this.ctrl.getType()) {\n      case \"group\" /* COLUMN_GROUP */:\n        result = new HeaderGroupCellComp(headerCtrl);\n        break;\n      case \"filter\" /* FLOATING_FILTER */:\n        result = new HeaderFilterCellComp(headerCtrl);\n        break;\n      default:\n        result = new HeaderCellComp(headerCtrl);\n        break;\n    }\n    this.createBean(result);\n    result.setParentComponent(this);\n    return result;\n  }\n};\n\n// community-modules/core/src/headerRendering/common/headerNavigationService.ts\nvar HeaderNavigationDirection = /* @__PURE__ */ ((HeaderNavigationDirection2) => {\n  HeaderNavigationDirection2[HeaderNavigationDirection2[\"UP\"] = 0] = \"UP\";\n  HeaderNavigationDirection2[HeaderNavigationDirection2[\"DOWN\"] = 1] = \"DOWN\";\n  HeaderNavigationDirection2[HeaderNavigationDirection2[\"LEFT\"] = 2] = \"LEFT\";\n  HeaderNavigationDirection2[HeaderNavigationDirection2[\"RIGHT\"] = 3] = \"RIGHT\";\n  return HeaderNavigationDirection2;\n})(HeaderNavigationDirection || {});\nvar HeaderNavigationService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"headerNavigationService\";\n    this.currentHeaderRowWithoutSpan = -1;\n  }\n  wireBeans(beans) {\n    this.focusService = beans.focusService;\n    this.headerPositionUtils = beans.headerPositionUtils;\n    this.ctrlsService = beans.ctrlsService;\n    this.columnModel = beans.columnModel;\n    this.visibleColService = beans.visibleColsService;\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady((p) => {\n      this.gridBodyCon = p.gridBodyCtrl;\n    });\n    const eDocument = this.gos.getDocument();\n    this.addManagedElementListeners(eDocument, { mousedown: () => this.setCurrentHeaderRowWithoutSpan(-1) });\n  }\n  getHeaderRowCount() {\n    const centerHeaderContainer = this.ctrlsService.getHeaderRowContainerCtrl();\n    return centerHeaderContainer ? centerHeaderContainer.getRowCount() : 0;\n  }\n  getHeaderPositionForColumn(colKey, floatingFilter) {\n    let column;\n    if (typeof colKey === \"string\") {\n      column = this.columnModel.getCol(colKey);\n      if (!column) {\n        column = this.visibleColService.getColumnGroup(colKey);\n      }\n    } else {\n      column = colKey;\n    }\n    if (!column) {\n      return null;\n    }\n    const centerHeaderContainer = this.ctrlsService.getHeaderRowContainerCtrl();\n    const allCtrls = centerHeaderContainer?.getAllCtrls();\n    const isFloatingFilterVisible = _last(allCtrls || []).getType() === \"filter\" /* FLOATING_FILTER */;\n    const headerRowCount = this.getHeaderRowCount() - 1;\n    let row = -1;\n    let col = column;\n    while (col) {\n      row++;\n      col = col.getParent();\n    }\n    let headerRowIndex = row;\n    if (floatingFilter && isFloatingFilterVisible && headerRowIndex === headerRowCount - 1) {\n      headerRowIndex++;\n    }\n    return headerRowIndex === -1 ? null : {\n      headerRowIndex,\n      column\n    };\n  }\n  /*\n   * This method navigates grid header vertically\n   * @return {boolean} true to preventDefault on the event that caused this navigation.\n   */\n  navigateVertically(direction, fromHeader, event) {\n    if (!fromHeader) {\n      fromHeader = this.focusService.getFocusedHeader();\n    }\n    if (!fromHeader) {\n      return false;\n    }\n    const { headerRowIndex } = fromHeader;\n    const column = fromHeader.column;\n    const rowLen = this.getHeaderRowCount();\n    const isUp = direction === 0 /* UP */;\n    let {\n      headerRowIndex: nextRow,\n      column: nextFocusColumn,\n      // eslint-disable-next-line prefer-const\n      headerRowIndexWithoutSpan\n    } = isUp ? this.headerPositionUtils.getColumnVisibleParent(column, headerRowIndex) : this.headerPositionUtils.getColumnVisibleChild(column, headerRowIndex);\n    let skipColumn = false;\n    if (nextRow < 0) {\n      nextRow = 0;\n      nextFocusColumn = column;\n      skipColumn = true;\n    }\n    if (nextRow >= rowLen) {\n      nextRow = -1;\n      this.setCurrentHeaderRowWithoutSpan(-1);\n    } else if (headerRowIndexWithoutSpan !== void 0) {\n      this.currentHeaderRowWithoutSpan = headerRowIndexWithoutSpan;\n    }\n    if (!skipColumn && !nextFocusColumn) {\n      return false;\n    }\n    return this.focusService.focusHeaderPosition({\n      headerPosition: { headerRowIndex: nextRow, column: nextFocusColumn },\n      allowUserOverride: true,\n      event\n    });\n  }\n  setCurrentHeaderRowWithoutSpan(row) {\n    this.currentHeaderRowWithoutSpan = row;\n  }\n  /*\n   * This method navigates grid header horizontally\n   * @return {boolean} true to preventDefault on the event that caused this navigation.\n   */\n  navigateHorizontally(direction, fromTab = false, event) {\n    const focusedHeader = this.focusService.getFocusedHeader();\n    const isLeft = direction === 2 /* LEFT */;\n    const isRtl = this.gos.get(\"enableRtl\");\n    let nextHeader;\n    let normalisedDirection;\n    if (this.currentHeaderRowWithoutSpan !== -1) {\n      focusedHeader.headerRowIndex = this.currentHeaderRowWithoutSpan;\n    } else {\n      this.currentHeaderRowWithoutSpan = focusedHeader.headerRowIndex;\n    }\n    if (isLeft !== isRtl) {\n      normalisedDirection = \"Before\";\n      nextHeader = this.headerPositionUtils.findHeader(focusedHeader, normalisedDirection);\n    } else {\n      normalisedDirection = \"After\";\n      nextHeader = this.headerPositionUtils.findHeader(focusedHeader, normalisedDirection);\n    }\n    if (nextHeader || !fromTab) {\n      return this.focusService.focusHeaderPosition({\n        headerPosition: nextHeader,\n        direction: normalisedDirection,\n        fromTab,\n        allowUserOverride: true,\n        event\n      });\n    } else if (fromTab) {\n      const userFunc = this.gos.getCallback(\"tabToNextHeader\");\n      if (userFunc) {\n        return this.focusService.focusHeaderPositionFromUserFunc({\n          userFunc,\n          headerPosition: nextHeader,\n          direction: normalisedDirection\n        });\n      }\n    }\n    return this.focusNextHeaderRow(focusedHeader, normalisedDirection, event);\n  }\n  focusNextHeaderRow(focusedHeader, direction, event) {\n    const currentIndex = focusedHeader.headerRowIndex;\n    let nextPosition = null;\n    let nextRowIndex;\n    if (direction === \"Before\") {\n      if (currentIndex > 0) {\n        nextRowIndex = currentIndex - 1;\n        this.currentHeaderRowWithoutSpan -= 1;\n        nextPosition = this.headerPositionUtils.findColAtEdgeForHeaderRow(nextRowIndex, \"end\");\n      }\n    } else {\n      nextRowIndex = currentIndex + 1;\n      if (this.currentHeaderRowWithoutSpan < this.getHeaderRowCount()) {\n        this.currentHeaderRowWithoutSpan += 1;\n      } else {\n        this.setCurrentHeaderRowWithoutSpan(-1);\n      }\n      nextPosition = this.headerPositionUtils.findColAtEdgeForHeaderRow(nextRowIndex, \"start\");\n    }\n    if (!nextPosition) {\n      return false;\n    }\n    const { column, headerRowIndex } = this.headerPositionUtils.getHeaderIndexToFocus(\n      nextPosition.column,\n      nextPosition?.headerRowIndex\n    );\n    return this.focusService.focusHeaderPosition({\n      headerPosition: { column, headerRowIndex },\n      direction,\n      fromTab: true,\n      allowUserOverride: true,\n      event\n    });\n  }\n  scrollToColumn(column, direction = \"After\") {\n    if (column.getPinned()) {\n      return;\n    }\n    let columnToScrollTo;\n    if (isColumnGroup(column)) {\n      const columns = column.getDisplayedLeafColumns();\n      columnToScrollTo = direction === \"Before\" ? _last(columns) : columns[0];\n    } else {\n      columnToScrollTo = column;\n    }\n    this.gridBodyCon.getScrollFeature().ensureColumnVisible(columnToScrollTo);\n  }\n};\n\n// community-modules/core/src/headerRendering/gridHeaderCtrl.ts\nvar GridHeaderCtrl = class extends BeanStub {\n  wireBeans(beans) {\n    this.animationFrameService = beans.animationFrameService;\n    this.headerNavigationService = beans.headerNavigationService;\n    this.focusService = beans.focusService;\n    this.columnModel = beans.columnModel;\n    this.visibleColsService = beans.visibleColsService;\n    this.ctrlsService = beans.ctrlsService;\n    this.filterManager = beans.filterManager;\n    this.menuService = beans.menuService;\n  }\n  setComp(comp, eGui, eFocusableElement) {\n    this.comp = comp;\n    this.eGui = eGui;\n    this.createManagedBean(\n      new ManagedFocusFeature(eFocusableElement, {\n        onTabKeyDown: this.onTabKeyDown.bind(this),\n        handleKeyDown: this.handleKeyDown.bind(this),\n        onFocusOut: this.onFocusOut.bind(this)\n      })\n    );\n    this.addManagedEventListeners({\n      columnPivotModeChanged: this.onPivotModeChanged.bind(this),\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this)\n    });\n    this.onPivotModeChanged();\n    this.setupHeaderHeight();\n    const listener = this.onHeaderContextMenu.bind(this);\n    this.addManagedElementListeners(this.eGui, { contextmenu: listener });\n    this.mockContextMenuForIPad(listener);\n    this.ctrlsService.register(\"gridHeaderCtrl\", this);\n  }\n  setupHeaderHeight() {\n    const listener = this.setHeaderHeight.bind(this);\n    listener();\n    this.addManagedPropertyListeners(\n      [\n        \"headerHeight\",\n        \"pivotHeaderHeight\",\n        \"groupHeaderHeight\",\n        \"pivotGroupHeaderHeight\",\n        \"floatingFiltersHeight\"\n      ],\n      listener\n    );\n    this.addManagedEventListeners({\n      displayedColumnsChanged: listener,\n      columnHeaderHeightChanged: listener,\n      // add this to the animation frame to avoid a feedback loop\n      columnGroupHeaderHeightChanged: () => this.animationFrameService.requestAnimationFrame(() => listener()),\n      gridStylesChanged: listener,\n      advancedFilterEnabledChanged: listener\n    });\n  }\n  getHeaderHeight() {\n    return this.headerHeight;\n  }\n  setHeaderHeight() {\n    const { columnModel } = this;\n    let totalHeaderHeight = 0;\n    const groupHeight = this.columnModel.getGroupRowsHeight().reduce((prev, curr) => prev + curr, 0);\n    const headerHeight = this.columnModel.getColumnHeaderRowHeight();\n    if (this.filterManager?.hasFloatingFilters()) {\n      totalHeaderHeight += columnModel.getFloatingFiltersHeight();\n    }\n    totalHeaderHeight += groupHeight;\n    totalHeaderHeight += headerHeight;\n    if (this.headerHeight === totalHeaderHeight) {\n      return;\n    }\n    this.headerHeight = totalHeaderHeight;\n    const px = `${totalHeaderHeight + 1}px`;\n    this.comp.setHeightAndMinHeight(px);\n    this.eventService.dispatchEvent({\n      type: \"headerHeightChanged\"\n    });\n  }\n  onPivotModeChanged() {\n    const pivotMode = this.columnModel.isPivotMode();\n    this.comp.addOrRemoveCssClass(\"ag-pivot-on\", pivotMode);\n    this.comp.addOrRemoveCssClass(\"ag-pivot-off\", !pivotMode);\n  }\n  onDisplayedColumnsChanged() {\n    const columns = this.visibleColsService.getAllCols();\n    const shouldAllowOverflow = columns.some((col) => col.isSpanHeaderHeight());\n    this.comp.addOrRemoveCssClass(\"ag-header-allow-overflow\", shouldAllowOverflow);\n  }\n  onTabKeyDown(e) {\n    const isRtl = this.gos.get(\"enableRtl\");\n    const backwards = e.shiftKey;\n    const direction = backwards !== isRtl ? 2 /* LEFT */ : 3 /* RIGHT */;\n    if (this.headerNavigationService.navigateHorizontally(direction, true, e) || !backwards && this.focusService.focusOverlay(false) || this.focusService.focusNextGridCoreContainer(backwards)) {\n      e.preventDefault();\n    }\n  }\n  handleKeyDown(e) {\n    let direction = null;\n    switch (e.key) {\n      case KeyCode.LEFT:\n        direction = 2 /* LEFT */;\n      case KeyCode.RIGHT: {\n        if (!_exists(direction)) {\n          direction = 3 /* RIGHT */;\n        }\n        if (this.headerNavigationService.navigateHorizontally(direction, false, e)) {\n          e.preventDefault();\n        }\n        break;\n      }\n      case KeyCode.UP:\n        direction = 0 /* UP */;\n      case KeyCode.DOWN: {\n        if (!_exists(direction)) {\n          direction = 1 /* DOWN */;\n        }\n        if (this.headerNavigationService.navigateVertically(direction, null, e)) {\n          e.preventDefault();\n        }\n        break;\n      }\n      default:\n        return;\n    }\n  }\n  onFocusOut(e) {\n    const { relatedTarget } = e;\n    if (!relatedTarget && this.eGui.contains(this.gos.getActiveDomElement())) {\n      return;\n    }\n    if (!this.eGui.contains(relatedTarget)) {\n      this.focusService.clearFocusedHeader();\n    }\n  }\n  onHeaderContextMenu(mouseEvent, touch, touchEvent) {\n    if (!mouseEvent && !touchEvent || !this.menuService.isHeaderContextMenuEnabled()) {\n      return;\n    }\n    const { target } = mouseEvent ?? touch;\n    if (target === this.eGui || target === this.ctrlsService.getHeaderRowContainerCtrl()?.getViewportElement()) {\n      this.menuService.showHeaderContextMenu(void 0, mouseEvent, touchEvent);\n    }\n  }\n  mockContextMenuForIPad(listener) {\n    if (!_isIOSUserAgent()) {\n      return;\n    }\n    const touchListener = new TouchListener(this.eGui);\n    const longTapListener = (event) => {\n      listener(void 0, event.touchStart, event.touchEvent);\n    };\n    this.addManagedListeners(touchListener, { longTap: longTapListener });\n    this.addDestroyFunc(() => touchListener.destroy());\n  }\n};\n\n// community-modules/core/src/gridBodyComp/centerWidthFeature.ts\nvar CenterWidthFeature = class extends BeanStub {\n  constructor(callback, addSpacer = false) {\n    super();\n    this.callback = callback;\n    this.addSpacer = addSpacer;\n  }\n  wireBeans(beans) {\n    this.visibleColsService = beans.visibleColsService;\n    this.scrollVisibleService = beans.scrollVisibleService;\n  }\n  postConstruct() {\n    const listener = this.setWidth.bind(this);\n    this.addManagedPropertyListener(\"domLayout\", listener);\n    this.addManagedEventListeners({\n      columnContainerWidthChanged: listener,\n      displayedColumnsChanged: listener,\n      leftPinnedWidthChanged: listener\n    });\n    if (this.addSpacer) {\n      this.addManagedEventListeners({\n        rightPinnedWidthChanged: listener,\n        scrollVisibilityChanged: listener,\n        scrollbarWidthChanged: listener\n      });\n    }\n    this.setWidth();\n  }\n  setWidth() {\n    const printLayout = this.gos.isDomLayout(\"print\");\n    const centerWidth = this.visibleColsService.getBodyContainerWidth();\n    const leftWidth = this.visibleColsService.getColsLeftWidth();\n    const rightWidth = this.visibleColsService.getDisplayedColumnsRightWidth();\n    let totalWidth;\n    if (printLayout) {\n      totalWidth = centerWidth + leftWidth + rightWidth;\n    } else {\n      totalWidth = centerWidth;\n      if (this.addSpacer) {\n        const relevantWidth = this.gos.get(\"enableRtl\") ? leftWidth : rightWidth;\n        if (relevantWidth === 0 && this.scrollVisibleService.isVerticalScrollShowing()) {\n          totalWidth += this.gos.getScrollbarWidth();\n        }\n      }\n    }\n    this.callback(totalWidth);\n  }\n};\n\n// community-modules/core/src/headerRendering/columnDrag/bodyDropPivotTarget.ts\nvar BodyDropPivotTarget = class extends BeanStub {\n  constructor(pinned) {\n    super();\n    this.columnsToAggregate = [];\n    this.columnsToGroup = [];\n    this.columnsToPivot = [];\n    this.pinned = pinned;\n  }\n  wireBeans(beans) {\n    this.funcColsService = beans.funcColsService;\n  }\n  /** Callback for when drag enters */\n  onDragEnter(draggingEvent) {\n    this.clearColumnsList();\n    if (this.gos.get(\"functionsReadOnly\")) {\n      return;\n    }\n    const dragColumns = draggingEvent.dragItem.columns;\n    if (!dragColumns) {\n      return;\n    }\n    dragColumns.forEach((column) => {\n      if (!column.isPrimary()) {\n        return;\n      }\n      if (column.isAnyFunctionActive()) {\n        return;\n      }\n      if (column.isAllowValue()) {\n        this.columnsToAggregate.push(column);\n      } else if (column.isAllowRowGroup()) {\n        this.columnsToGroup.push(column);\n      } else if (column.isAllowPivot()) {\n        this.columnsToPivot.push(column);\n      }\n    });\n  }\n  getIconName() {\n    const totalColumns = this.columnsToAggregate.length + this.columnsToGroup.length + this.columnsToPivot.length;\n    if (totalColumns > 0) {\n      return this.pinned ? \"pinned\" : \"move\";\n    }\n    return null;\n  }\n  /** Callback for when drag leaves */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onDragLeave(draggingEvent) {\n    this.clearColumnsList();\n  }\n  clearColumnsList() {\n    this.columnsToAggregate.length = 0;\n    this.columnsToGroup.length = 0;\n    this.columnsToPivot.length = 0;\n  }\n  /** Callback for when dragging */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onDragging(draggingEvent) {\n  }\n  /** Callback for when drag stops */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onDragStop(draggingEvent) {\n    if (this.columnsToAggregate.length > 0) {\n      this.funcColsService.addValueColumns(this.columnsToAggregate, \"toolPanelDragAndDrop\");\n    }\n    if (this.columnsToGroup.length > 0) {\n      this.funcColsService.addRowGroupColumns(this.columnsToGroup, \"toolPanelDragAndDrop\");\n    }\n    if (this.columnsToPivot.length > 0) {\n      this.funcColsService.addPivotColumns(this.columnsToPivot, \"toolPanelDragAndDrop\");\n    }\n  }\n};\n\n// community-modules/core/src/headerRendering/columnMoveHelper.ts\nfunction attemptMoveColumns(params) {\n  const {\n    isFromHeader,\n    hDirection,\n    xPosition,\n    fromEnter,\n    fakeEvent,\n    pinned,\n    gos,\n    columnModel,\n    columnMoveService,\n    presentedColsService\n  } = params;\n  const draggingLeft = hDirection === 0 /* Left */;\n  const draggingRight = hDirection === 1 /* Right */;\n  let { allMovingColumns } = params;\n  if (isFromHeader) {\n    const newCols = [];\n    allMovingColumns.forEach((col) => {\n      let movingGroup = null;\n      let parent = col.getParent();\n      while (parent != null && parent.getDisplayedLeafColumns().length === 1) {\n        movingGroup = parent;\n        parent = parent.getParent();\n      }\n      if (movingGroup != null) {\n        const isMarryChildren = !!movingGroup.getColGroupDef()?.marryChildren;\n        const columnsToMove = isMarryChildren ? (\n          // when marry children is true, we also have to move hidden\n          // columns within the group, so grab them from the `providedColumnGroup`\n          movingGroup.getProvidedColumnGroup().getLeafColumns()\n        ) : movingGroup.getLeafColumns();\n        columnsToMove.forEach((newCol) => {\n          if (!newCols.includes(newCol)) {\n            newCols.push(newCol);\n          }\n        });\n      } else if (!newCols.includes(col)) {\n        newCols.push(col);\n      }\n    });\n    allMovingColumns = newCols;\n  }\n  const allMovingColumnsOrdered = allMovingColumns.slice();\n  columnModel.sortColsLikeCols(allMovingColumnsOrdered);\n  const validMoves = calculateValidMoves({\n    movingCols: allMovingColumnsOrdered,\n    draggingRight,\n    xPosition,\n    pinned,\n    gos,\n    columnModel,\n    presentedColsService\n  });\n  const oldIndex = calculateOldIndex(allMovingColumnsOrdered, columnModel);\n  if (validMoves.length === 0) {\n    return;\n  }\n  const firstValidMove = validMoves[0];\n  let constrainDirection = oldIndex !== null && !fromEnter;\n  if (isFromHeader) {\n    constrainDirection = oldIndex !== null;\n  }\n  if (constrainDirection && !fakeEvent) {\n    if (draggingLeft && firstValidMove >= oldIndex) {\n      return;\n    }\n    if (draggingRight && firstValidMove <= oldIndex) {\n      return;\n    }\n  }\n  const displayedCols = presentedColsService.getAllCols();\n  const potentialMoves = [];\n  let targetOrder = null;\n  for (let i = 0; i < validMoves.length; i++) {\n    const move = validMoves[i];\n    const order = columnMoveService.getProposedColumnOrder(allMovingColumnsOrdered, move);\n    if (!columnMoveService.doesOrderPassRules(order)) {\n      continue;\n    }\n    const displayedOrder = order.filter((col) => displayedCols.includes(col));\n    if (targetOrder === null) {\n      targetOrder = displayedOrder;\n    } else if (!_areEqual(displayedOrder, targetOrder)) {\n      break;\n    }\n    const fragCount = groupFragCount(order);\n    potentialMoves.push({ move, fragCount });\n  }\n  if (potentialMoves.length === 0) {\n    return;\n  }\n  potentialMoves.sort((a, b) => a.fragCount - b.fragCount);\n  return moveColumns(allMovingColumns, potentialMoves[0].move, \"uiColumnMoved\", false, columnMoveService);\n}\nfunction moveColumns(columns, toIndex, source, finished, columnMoveService) {\n  columnMoveService.moveColumns(columns, toIndex, source, finished);\n  return finished ? null : { columns, toIndex };\n}\nfunction calculateOldIndex(movingCols, columnModel) {\n  const gridCols = columnModel.getCols();\n  const indexes = _sortNumerically(movingCols.map((col) => gridCols.indexOf(col)));\n  const firstIndex = indexes[0];\n  const lastIndex = _last(indexes);\n  const spread = lastIndex - firstIndex;\n  const gapsExist = spread !== indexes.length - 1;\n  return gapsExist ? null : firstIndex;\n}\nfunction groupFragCount(columns) {\n  function parents(col) {\n    const result = [];\n    let parent = col.getOriginalParent();\n    while (parent != null) {\n      result.push(parent);\n      parent = parent.getOriginalParent();\n    }\n    return result;\n  }\n  let count = 0;\n  for (let i = 0; i < columns.length - 1; i++) {\n    let a = parents(columns[i]);\n    let b = parents(columns[i + 1]);\n    [a, b] = a.length > b.length ? [a, b] : [b, a];\n    a.forEach((parent) => {\n      if (b.indexOf(parent) === -1) {\n        count++;\n      }\n    });\n  }\n  return count;\n}\nfunction getDisplayedColumns(presentedColsService, type) {\n  switch (type) {\n    case \"left\":\n      return presentedColsService.getLeftCols();\n    case \"right\":\n      return presentedColsService.getRightCols();\n    default:\n      return presentedColsService.getCenterCols();\n  }\n}\nfunction calculateValidMoves(params) {\n  const { movingCols, draggingRight, xPosition, pinned, gos, columnModel, presentedColsService } = params;\n  const isMoveBlocked = gos.get(\"suppressMovableColumns\") || movingCols.some((col) => col.getColDef().suppressMovable);\n  if (isMoveBlocked) {\n    return [];\n  }\n  const allDisplayedCols = getDisplayedColumns(presentedColsService, pinned);\n  const allGridCols = columnModel.getCols();\n  const movingDisplayedCols = allDisplayedCols.filter((col) => _includes(movingCols, col));\n  const otherDisplayedCols = allDisplayedCols.filter((col) => !_includes(movingCols, col));\n  const otherGridCols = allGridCols.filter((col) => !_includes(movingCols, col));\n  let displayIndex = 0;\n  let availableWidth = xPosition;\n  if (draggingRight) {\n    let widthOfMovingDisplayedCols = 0;\n    movingDisplayedCols.forEach((col) => widthOfMovingDisplayedCols += col.getActualWidth());\n    availableWidth -= widthOfMovingDisplayedCols;\n  }\n  if (availableWidth > 0) {\n    for (let i = 0; i < otherDisplayedCols.length; i++) {\n      const col = otherDisplayedCols[i];\n      availableWidth -= col.getActualWidth();\n      if (availableWidth < 0) {\n        break;\n      }\n      displayIndex++;\n    }\n    if (draggingRight) {\n      displayIndex++;\n    }\n  }\n  let firstValidMove;\n  if (displayIndex > 0) {\n    const leftColumn = otherDisplayedCols[displayIndex - 1];\n    firstValidMove = otherGridCols.indexOf(leftColumn) + 1;\n  } else {\n    firstValidMove = otherGridCols.indexOf(otherDisplayedCols[0]);\n    if (firstValidMove === -1) {\n      firstValidMove = 0;\n    }\n  }\n  const validMoves = [firstValidMove];\n  const numberComparator = (a, b) => a - b;\n  if (draggingRight) {\n    let pointer = firstValidMove + 1;\n    const lastIndex = allGridCols.length - 1;\n    while (pointer <= lastIndex) {\n      validMoves.push(pointer);\n      pointer++;\n    }\n    validMoves.sort(numberComparator);\n  } else {\n    let pointer = firstValidMove;\n    const lastIndex = allGridCols.length - 1;\n    let displacedCol = allGridCols[pointer];\n    while (pointer <= lastIndex && allDisplayedCols.indexOf(displacedCol) < 0) {\n      pointer++;\n      validMoves.push(pointer);\n      displacedCol = allGridCols[pointer];\n    }\n    pointer = firstValidMove - 1;\n    const firstDisplayIndex = 0;\n    while (pointer >= firstDisplayIndex) {\n      validMoves.push(pointer);\n      pointer--;\n    }\n    validMoves.sort(numberComparator).reverse();\n  }\n  return validMoves;\n}\nfunction normaliseX(x, pinned, fromKeyboard, gos, ctrlsService) {\n  const eViewport = ctrlsService.getHeaderRowContainerCtrl(pinned)?.getViewportElement();\n  if (!eViewport) {\n    return 0;\n  }\n  if (fromKeyboard) {\n    x -= eViewport.getBoundingClientRect().left;\n  }\n  if (gos.get(\"enableRtl\")) {\n    const clientWidth = eViewport.clientWidth;\n    x = clientWidth - x;\n  }\n  if (pinned == null) {\n    x += ctrlsService.get(\"center\").getCenterViewportScrollLeft();\n  }\n  return x;\n}\n\n// community-modules/core/src/headerRendering/columnDrag/moveColumnFeature.ts\nvar MoveColumnFeature = class extends BeanStub {\n  constructor(pinned) {\n    super();\n    this.needToMoveLeft = false;\n    this.needToMoveRight = false;\n    this.lastMovedInfo = null;\n    this.pinned = pinned;\n    this.isCenterContainer = !_exists(pinned);\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.visibleColsService = beans.visibleColsService;\n    this.columnMoveService = beans.columnMoveService;\n    this.dragAndDropService = beans.dragAndDropService;\n    this.ctrlsService = beans.ctrlsService;\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady((p) => {\n      this.gridBodyCon = p.gridBodyCtrl;\n    });\n  }\n  getIconName() {\n    const columns = this.lastDraggingEvent.dragItem.columns ?? [];\n    if (this.pinned) {\n      const isAValidCol = columns.some((col) => {\n        return !col.getColDef().lockPinned || col.getPinned() === this.pinned;\n      });\n      return isAValidCol ? \"pinned\" : \"notAllowed\";\n    } else {\n      const isAValidCol = columns.some((col) => {\n        return !col.getColDef().lockPinned || !col.isPinned();\n      });\n      return isAValidCol ? \"move\" : \"notAllowed\";\n    }\n  }\n  onDragEnter(draggingEvent) {\n    const columns = draggingEvent.dragItem.columns;\n    const dragCameFromToolPanel = draggingEvent.dragSource.type === 0 /* ToolPanel */;\n    if (dragCameFromToolPanel) {\n      this.setColumnsVisible(columns, true, \"uiColumnDragged\");\n    } else {\n      const visibleState = draggingEvent.dragItem.visibleState;\n      const visibleColumns = (columns || []).filter((column) => visibleState[column.getId()]);\n      this.setColumnsVisible(visibleColumns, true, \"uiColumnDragged\");\n    }\n    this.setColumnsPinned(columns, this.pinned, \"uiColumnDragged\");\n    this.onDragging(draggingEvent, true, true);\n  }\n  onDragLeave() {\n    this.ensureIntervalCleared();\n    this.lastMovedInfo = null;\n  }\n  setColumnsVisible(columns, visible, source) {\n    if (columns) {\n      const allowedCols = columns.filter((c) => !c.getColDef().lockVisible);\n      this.columnModel.setColsVisible(allowedCols, visible, source);\n    }\n  }\n  setColumnsPinned(columns, pinned, source) {\n    if (columns) {\n      const allowedCols = columns.filter((c) => !c.getColDef().lockPinned);\n      this.columnModel.setColsPinned(allowedCols, pinned, source);\n    }\n  }\n  onDragStop() {\n    this.onDragging(this.lastDraggingEvent, false, true, true);\n    this.ensureIntervalCleared();\n    this.lastMovedInfo = null;\n  }\n  checkCenterForScrolling(xAdjustedForScroll) {\n    if (this.isCenterContainer) {\n      const centerCtrl = this.ctrlsService.get(\"center\");\n      const firstVisiblePixel = centerCtrl.getCenterViewportScrollLeft();\n      const lastVisiblePixel = firstVisiblePixel + centerCtrl.getCenterWidth();\n      if (this.gos.get(\"enableRtl\")) {\n        this.needToMoveRight = xAdjustedForScroll < firstVisiblePixel + 50;\n        this.needToMoveLeft = xAdjustedForScroll > lastVisiblePixel - 50;\n      } else {\n        this.needToMoveLeft = xAdjustedForScroll < firstVisiblePixel + 50;\n        this.needToMoveRight = xAdjustedForScroll > lastVisiblePixel - 50;\n      }\n      if (this.needToMoveLeft || this.needToMoveRight) {\n        this.ensureIntervalStarted();\n      } else {\n        this.ensureIntervalCleared();\n      }\n    }\n  }\n  onDragging(draggingEvent = this.lastDraggingEvent, fromEnter = false, fakeEvent = false, finished = false) {\n    if (finished) {\n      if (this.lastMovedInfo) {\n        const { columns, toIndex } = this.lastMovedInfo;\n        moveColumns(columns, toIndex, \"uiColumnMoved\", true, this.columnMoveService);\n      }\n      return;\n    }\n    this.lastDraggingEvent = draggingEvent;\n    if (_missing(draggingEvent.hDirection)) {\n      return;\n    }\n    const mouseX = normaliseX(draggingEvent.x, this.pinned, false, this.gos, this.ctrlsService);\n    if (!fromEnter) {\n      this.checkCenterForScrolling(mouseX);\n    }\n    const hDirection = this.normaliseDirection(draggingEvent.hDirection);\n    const dragSourceType = draggingEvent.dragSource.type;\n    const allMovingColumns = draggingEvent.dragSource.getDragItem().columns?.filter((col) => {\n      if (col.getColDef().lockPinned) {\n        return col.getPinned() == this.pinned;\n      }\n      return true;\n    }) || [];\n    const lastMovedInfo = attemptMoveColumns({\n      allMovingColumns,\n      isFromHeader: dragSourceType === 1 /* HeaderCell */,\n      hDirection,\n      xPosition: mouseX,\n      pinned: this.pinned,\n      fromEnter,\n      fakeEvent,\n      gos: this.gos,\n      columnModel: this.columnModel,\n      columnMoveService: this.columnMoveService,\n      presentedColsService: this.visibleColsService\n    });\n    if (lastMovedInfo) {\n      this.lastMovedInfo = lastMovedInfo;\n    }\n  }\n  normaliseDirection(hDirection) {\n    if (this.gos.get(\"enableRtl\")) {\n      switch (hDirection) {\n        case 0 /* Left */:\n          return 1 /* Right */;\n        case 1 /* Right */:\n          return 0 /* Left */;\n        default:\n          _errorOnce(`Unknown direction ${hDirection}`);\n      }\n    } else {\n      return hDirection;\n    }\n  }\n  ensureIntervalStarted() {\n    if (!this.movingIntervalId) {\n      this.intervalCount = 0;\n      this.failedMoveAttempts = 0;\n      this.movingIntervalId = window.setInterval(this.moveInterval.bind(this), 100);\n      this.dragAndDropService.setGhostIcon(this.needToMoveLeft ? \"left\" : \"right\", true);\n    }\n  }\n  ensureIntervalCleared() {\n    if (this.movingIntervalId) {\n      window.clearInterval(this.movingIntervalId);\n      this.movingIntervalId = null;\n      this.dragAndDropService.setGhostIcon(this.getIconName());\n    }\n  }\n  moveInterval() {\n    let pixelsToMove;\n    this.intervalCount++;\n    pixelsToMove = 10 + this.intervalCount * 5;\n    if (pixelsToMove > 100) {\n      pixelsToMove = 100;\n    }\n    let pixelsMoved = null;\n    const scrollFeature = this.gridBodyCon.getScrollFeature();\n    if (this.needToMoveLeft) {\n      pixelsMoved = scrollFeature.scrollHorizontally(-pixelsToMove);\n    } else if (this.needToMoveRight) {\n      pixelsMoved = scrollFeature.scrollHorizontally(pixelsToMove);\n    }\n    if (pixelsMoved !== 0) {\n      this.onDragging(this.lastDraggingEvent);\n      this.failedMoveAttempts = 0;\n    } else {\n      this.failedMoveAttempts++;\n      const columns = this.lastDraggingEvent.dragItem.columns;\n      const columnsThatCanPin = columns.filter((c) => !c.getColDef().lockPinned);\n      if (columnsThatCanPin.length > 0) {\n        this.dragAndDropService.setGhostIcon(\"pinned\");\n        if (this.failedMoveAttempts > 7) {\n          const pinType = this.needToMoveLeft ? \"left\" : \"right\";\n          this.setColumnsPinned(columnsThatCanPin, pinType, \"uiColumnDragged\");\n          this.dragAndDropService.nudge();\n        }\n      }\n    }\n  }\n};\n\n// community-modules/core/src/headerRendering/columnDrag/bodyDropTarget.ts\nvar BodyDropTarget = class extends BeanStub {\n  wireBeans(beans) {\n    this.dragAndDropService = beans.dragAndDropService;\n    this.columnModel = beans.columnModel;\n    this.ctrlsService = beans.ctrlsService;\n  }\n  constructor(pinned, eContainer) {\n    super();\n    this.pinned = pinned;\n    this.eContainer = eContainer;\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady((p) => {\n      switch (this.pinned) {\n        case \"left\":\n          this.eSecondaryContainers = [\n            [p.gridBodyCtrl.getBodyViewportElement(), p.left.getContainerElement()],\n            [p.bottomLeft.getContainerElement()],\n            [p.topLeft.getContainerElement()]\n          ];\n          break;\n        case \"right\":\n          this.eSecondaryContainers = [\n            [p.gridBodyCtrl.getBodyViewportElement(), p.right.getContainerElement()],\n            [p.bottomRight.getContainerElement()],\n            [p.topRight.getContainerElement()]\n          ];\n          break;\n        default:\n          this.eSecondaryContainers = [\n            [p.gridBodyCtrl.getBodyViewportElement(), p.center.getViewportElement()],\n            [p.bottomCenter.getViewportElement()],\n            [p.topCenter.getViewportElement()]\n          ];\n          break;\n      }\n    });\n    this.moveColumnFeature = this.createManagedBean(new MoveColumnFeature(this.pinned));\n    this.bodyDropPivotTarget = this.createManagedBean(new BodyDropPivotTarget(this.pinned));\n    this.dragAndDropService.addDropTarget(this);\n  }\n  isInterestedIn(type) {\n    return type === 1 /* HeaderCell */ || type === 0 /* ToolPanel */ && this.gos.get(\"allowDragFromColumnsToolPanel\");\n  }\n  getSecondaryContainers() {\n    return this.eSecondaryContainers;\n  }\n  getContainer() {\n    return this.eContainer;\n  }\n  getIconName() {\n    return this.currentDropListener.getIconName();\n  }\n  // we want to use the bodyPivotTarget if the user is dragging columns in from the toolPanel\n  // and we are in pivot mode, as it has to logic to set pivot/value/group on the columns when\n  // dropped into the grid's body.\n  isDropColumnInPivotMode(draggingEvent) {\n    return this.columnModel.isPivotMode() && draggingEvent.dragSource.type === 0 /* ToolPanel */;\n  }\n  onDragEnter(draggingEvent) {\n    this.currentDropListener = this.isDropColumnInPivotMode(draggingEvent) ? this.bodyDropPivotTarget : this.moveColumnFeature;\n    this.currentDropListener.onDragEnter(draggingEvent);\n  }\n  onDragLeave(params) {\n    this.currentDropListener.onDragLeave(params);\n  }\n  onDragging(params) {\n    this.currentDropListener.onDragging(params);\n  }\n  onDragStop(params) {\n    this.currentDropListener.onDragStop(params);\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/column/resizeFeature.ts\nvar ResizeFeature = class extends BeanStub {\n  wireBeans(beans) {\n    this.horizontalResizeService = beans.horizontalResizeService;\n    this.pinnedWidthService = beans.pinnedWidthService;\n    this.ctrlsService = beans.ctrlsService;\n    this.columnSizeService = beans.columnSizeService;\n    this.columnAutosizeService = beans.columnAutosizeService;\n  }\n  constructor(pinned, column, eResize, comp, ctrl) {\n    super();\n    this.pinned = pinned;\n    this.column = column;\n    this.eResize = eResize;\n    this.comp = comp;\n    this.ctrl = ctrl;\n  }\n  postConstruct() {\n    const destroyResizeFuncs = [];\n    let canResize;\n    let canAutosize;\n    const addResize = () => {\n      _setDisplayed(this.eResize, canResize);\n      if (!canResize) {\n        return;\n      }\n      const finishedWithResizeFunc = this.horizontalResizeService.addResizeBar({\n        eResizeBar: this.eResize,\n        onResizeStart: this.onResizeStart.bind(this),\n        onResizing: this.onResizing.bind(this, false),\n        onResizeEnd: this.onResizing.bind(this, true)\n      });\n      destroyResizeFuncs.push(finishedWithResizeFunc);\n      if (canAutosize) {\n        const skipHeaderOnAutoSize = this.gos.get(\"skipHeaderOnAutoSize\");\n        const autoSizeColListener = () => {\n          this.columnAutosizeService.autoSizeColumn(this.column, \"uiColumnResized\", skipHeaderOnAutoSize);\n        };\n        this.eResize.addEventListener(\"dblclick\", autoSizeColListener);\n        const touchListener = new TouchListener(this.eResize);\n        touchListener.addEventListener(\"doubleTap\", autoSizeColListener);\n        destroyResizeFuncs.push(() => {\n          this.eResize.removeEventListener(\"dblclick\", autoSizeColListener);\n          touchListener.removeEventListener(\"doubleTap\", autoSizeColListener);\n          touchListener.destroy();\n        });\n      }\n    };\n    const removeResize = () => {\n      destroyResizeFuncs.forEach((f) => f());\n      destroyResizeFuncs.length = 0;\n    };\n    const refresh = () => {\n      const resize = this.column.isResizable();\n      const autoSize = !this.gos.get(\"suppressAutoSize\") && !this.column.getColDef().suppressAutoSize;\n      const propertyChange = resize !== canResize || autoSize !== canAutosize;\n      if (propertyChange) {\n        canResize = resize;\n        canAutosize = autoSize;\n        removeResize();\n        addResize();\n      }\n    };\n    refresh();\n    this.addDestroyFunc(removeResize);\n    this.ctrl.addRefreshFunction(refresh);\n  }\n  onResizing(finished, resizeAmount) {\n    const { column: key, lastResizeAmount, resizeStartWidth } = this;\n    const resizeAmountNormalised = this.normaliseResizeAmount(resizeAmount);\n    const newWidth = resizeStartWidth + resizeAmountNormalised;\n    const columnWidths = [{ key, newWidth }];\n    if (this.column.getPinned()) {\n      const leftWidth = this.pinnedWidthService.getPinnedLeftWidth();\n      const rightWidth = this.pinnedWidthService.getPinnedRightWidth();\n      const bodyWidth = _getInnerWidth(this.ctrlsService.getGridBodyCtrl().getBodyViewportElement()) - 50;\n      if (leftWidth + rightWidth + (resizeAmountNormalised - lastResizeAmount) > bodyWidth) {\n        return;\n      }\n    }\n    this.lastResizeAmount = resizeAmountNormalised;\n    this.columnSizeService.setColumnWidths(columnWidths, this.resizeWithShiftKey, finished, \"uiColumnResized\");\n    if (finished) {\n      this.toggleColumnResizing(false);\n    }\n  }\n  onResizeStart(shiftKey) {\n    this.resizeStartWidth = this.column.getActualWidth();\n    this.lastResizeAmount = 0;\n    this.resizeWithShiftKey = shiftKey;\n    this.toggleColumnResizing(true);\n  }\n  toggleColumnResizing(resizing) {\n    this.comp.addOrRemoveCssClass(\"ag-column-resizing\", resizing);\n  }\n  // optionally inverts the drag, depending on pinned and RTL\n  // note - this method is duplicated in RenderedHeaderGroupCell - should refactor out?\n  normaliseResizeAmount(dragChange) {\n    let result = dragChange;\n    const notPinningLeft = this.pinned !== \"left\";\n    const pinningRight = this.pinned === \"right\";\n    if (this.gos.get(\"enableRtl\")) {\n      if (notPinningLeft) {\n        result *= -1;\n      }\n    } else {\n      if (pinningRight) {\n        result *= -1;\n      }\n    }\n    return result;\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/column/selectAllFeature.ts\nvar SelectAllFeature = class extends BeanStub {\n  constructor(column) {\n    super();\n    this.cbSelectAllVisible = false;\n    this.processingEventFromCheckbox = false;\n    this.column = column;\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n    this.selectionService = beans.selectionService;\n  }\n  onSpaceKeyDown(e) {\n    const checkbox = this.cbSelectAll;\n    if (checkbox.isDisplayed() && !checkbox.getGui().contains(this.gos.getActiveDomElement())) {\n      e.preventDefault();\n      checkbox.setValue(!checkbox.getValue());\n    }\n  }\n  getCheckboxGui() {\n    return this.cbSelectAll.getGui();\n  }\n  setComp(ctrl) {\n    this.headerCellCtrl = ctrl;\n    this.cbSelectAll = this.createManagedBean(new AgCheckbox());\n    this.cbSelectAll.addCssClass(\"ag-header-select-all\");\n    _setAriaRole(this.cbSelectAll.getGui(), \"presentation\");\n    this.showOrHideSelectAll();\n    this.addManagedEventListeners({\n      newColumnsLoaded: this.onNewColumnsLoaded.bind(this),\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this),\n      selectionChanged: this.onSelectionChanged.bind(this),\n      paginationChanged: this.onSelectionChanged.bind(this),\n      modelUpdated: this.onModelChanged.bind(this)\n    });\n    this.addManagedListeners(this.cbSelectAll, { fieldValueChanged: this.onCbSelectAll.bind(this) });\n    _setAriaHidden(this.cbSelectAll.getGui(), true);\n    this.cbSelectAll.getInputElement().setAttribute(\"tabindex\", \"-1\");\n    this.refreshSelectAllLabel();\n  }\n  onNewColumnsLoaded() {\n    this.showOrHideSelectAll();\n  }\n  onDisplayedColumnsChanged() {\n    if (!this.isAlive()) {\n      return;\n    }\n    this.showOrHideSelectAll();\n  }\n  showOrHideSelectAll() {\n    this.cbSelectAllVisible = this.isCheckboxSelection();\n    this.cbSelectAll.setDisplayed(this.cbSelectAllVisible, { skipAriaHidden: true });\n    if (this.cbSelectAllVisible) {\n      this.checkRightRowModelType(\"selectAllCheckbox\");\n      this.checkSelectionType(\"selectAllCheckbox\");\n      this.updateStateOfCheckbox();\n    }\n    this.refreshSelectAllLabel();\n  }\n  onModelChanged() {\n    if (!this.cbSelectAllVisible) {\n      return;\n    }\n    this.updateStateOfCheckbox();\n  }\n  onSelectionChanged() {\n    if (!this.cbSelectAllVisible) {\n      return;\n    }\n    this.updateStateOfCheckbox();\n  }\n  updateStateOfCheckbox() {\n    if (this.processingEventFromCheckbox) {\n      return;\n    }\n    this.processingEventFromCheckbox = true;\n    const allSelected = this.selectionService.getSelectAllState(this.isFilteredOnly(), this.isCurrentPageOnly());\n    this.cbSelectAll.setValue(allSelected);\n    const hasNodesToSelect = this.selectionService.hasNodesToSelect(\n      this.isFilteredOnly(),\n      this.isCurrentPageOnly()\n    );\n    this.cbSelectAll.setDisabled(!hasNodesToSelect);\n    this.refreshSelectAllLabel();\n    this.processingEventFromCheckbox = false;\n  }\n  refreshSelectAllLabel() {\n    const translate = this.localeService.getLocaleTextFunc();\n    const checked = this.cbSelectAll.getValue();\n    const ariaStatus = checked ? translate(\"ariaChecked\", \"checked\") : translate(\"ariaUnchecked\", \"unchecked\");\n    const ariaLabel = translate(\"ariaRowSelectAll\", \"Press Space to toggle all rows selection\");\n    if (!this.cbSelectAllVisible) {\n      this.headerCellCtrl.setAriaDescriptionProperty(\"selectAll\", null);\n    } else {\n      this.headerCellCtrl.setAriaDescriptionProperty(\"selectAll\", `${ariaLabel} (${ariaStatus})`);\n    }\n    this.cbSelectAll.setInputAriaLabel(`${ariaLabel} (${ariaStatus})`);\n    this.headerCellCtrl.announceAriaDescription();\n  }\n  checkSelectionType(feature) {\n    const isMultiSelect = this.gos.get(\"rowSelection\") === \"multiple\";\n    if (!isMultiSelect) {\n      _warnOnce(`${feature} is only available if using 'multiple' rowSelection.`);\n      return false;\n    }\n    return true;\n  }\n  checkRightRowModelType(feature) {\n    const rowModelType = this.rowModel.getType();\n    const rowModelMatches = rowModelType === \"clientSide\" || rowModelType === \"serverSide\";\n    if (!rowModelMatches) {\n      _warnOnce(\n        `${feature} is only available if using 'clientSide' or 'serverSide' rowModelType, you are using ${rowModelType}.`\n      );\n      return false;\n    }\n    return true;\n  }\n  onCbSelectAll() {\n    if (this.processingEventFromCheckbox) {\n      return;\n    }\n    if (!this.cbSelectAllVisible) {\n      return;\n    }\n    const value = this.cbSelectAll.getValue();\n    const justFiltered = this.isFilteredOnly();\n    const justCurrentPage = this.isCurrentPageOnly();\n    let source = \"uiSelectAll\";\n    if (justCurrentPage) {\n      source = \"uiSelectAllCurrentPage\";\n    } else if (justFiltered) {\n      source = \"uiSelectAllFiltered\";\n    }\n    const params = {\n      source,\n      justFiltered,\n      justCurrentPage\n    };\n    if (value) {\n      this.selectionService.selectAllRowNodes(params);\n    } else {\n      this.selectionService.deselectAllRowNodes(params);\n    }\n  }\n  isCheckboxSelection() {\n    let result = this.column.getColDef().headerCheckboxSelection;\n    if (typeof result === \"function\") {\n      const func = result;\n      const params = this.gos.addGridCommonParams({\n        column: this.column,\n        colDef: this.column.getColDef()\n      });\n      result = func(params);\n    }\n    if (result) {\n      return this.checkRightRowModelType(\"headerCheckboxSelection\") && this.checkSelectionType(\"headerCheckboxSelection\");\n    }\n    return false;\n  }\n  isFilteredOnly() {\n    return !!this.column.getColDef().headerCheckboxSelectionFilteredOnly;\n  }\n  isCurrentPageOnly() {\n    return !!this.column.getColDef().headerCheckboxSelectionCurrentPageOnly;\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/column/headerCellCtrl.ts\nvar HeaderCellCtrl = class extends AbstractHeaderCellCtrl {\n  constructor(column, beans, parentRowCtrl) {\n    super(column, beans, parentRowCtrl);\n    this.refreshFunctions = [];\n    this.userHeaderClasses = /* @__PURE__ */ new Set();\n    this.ariaDescriptionProperties = /* @__PURE__ */ new Map();\n    this.column = column;\n  }\n  setComp(comp, eGui, eResize, eHeaderCompWrapper) {\n    this.comp = comp;\n    this.setGui(eGui);\n    this.updateState();\n    this.setupWidth();\n    this.setupMovingCss();\n    this.setupMenuClass();\n    this.setupSortableClass();\n    this.setupWrapTextClass();\n    this.refreshSpanHeaderHeight();\n    this.setupAutoHeight({\n      wrapperElement: eHeaderCompWrapper,\n      checkMeasuringCallback: (checkMeasuring) => this.addRefreshFunction(checkMeasuring)\n    });\n    this.addColumnHoverListener();\n    this.setupFilterClass();\n    this.setupClassesFromColDef();\n    this.setupTooltip();\n    this.addActiveHeaderMouseListeners();\n    this.setupSelectAll();\n    this.setupUserComp();\n    this.refreshAria();\n    this.resizeFeature = this.createManagedBean(\n      new ResizeFeature(this.getPinned(), this.column, eResize, comp, this)\n    );\n    this.createManagedBean(new HoverFeature([this.column], eGui));\n    this.createManagedBean(new SetLeftFeature(this.column, eGui, this.beans));\n    this.createManagedBean(\n      new ManagedFocusFeature(eGui, {\n        shouldStopEventPropagation: (e) => this.shouldStopEventPropagation(e),\n        onTabKeyDown: () => null,\n        handleKeyDown: this.handleKeyDown.bind(this),\n        onFocusIn: this.onFocusIn.bind(this),\n        onFocusOut: this.onFocusOut.bind(this)\n      })\n    );\n    this.addResizeAndMoveKeyboardListeners(eGui);\n    this.addManagedPropertyListeners(\n      [\"suppressMovableColumns\", \"suppressMenuHide\", \"suppressAggFuncInHeader\"],\n      this.refresh.bind(this)\n    );\n    this.addManagedListeners(this.column, { colDefChanged: this.refresh.bind(this) });\n    this.addManagedEventListeners({\n      columnValueChanged: this.onColumnValueChanged.bind(this),\n      columnRowGroupChanged: this.onColumnRowGroupChanged.bind(this),\n      columnPivotChanged: this.onColumnPivotChanged.bind(this),\n      headerHeightChanged: this.onHeaderHeightChanged.bind(this)\n    });\n  }\n  resizeHeader(delta, shiftKey) {\n    if (!this.column.isResizable()) {\n      return;\n    }\n    const actualWidth = this.column.getActualWidth();\n    const minWidth = this.column.getMinWidth();\n    const maxWidth = this.column.getMaxWidth();\n    const newWidth = Math.min(Math.max(actualWidth + delta, minWidth), maxWidth);\n    this.beans.columnSizeService.setColumnWidths(\n      [{ key: this.column, newWidth }],\n      shiftKey,\n      true,\n      \"uiColumnResized\"\n    );\n  }\n  moveHeader(hDirection) {\n    const { eGui, column, gos, ctrlsService } = this;\n    const pinned = this.getPinned();\n    const left = eGui.getBoundingClientRect().left;\n    const width = column.getActualWidth();\n    const isRtl = gos.get(\"enableRtl\");\n    const isLeft = hDirection === 0 /* Left */ !== isRtl;\n    const xPosition = normaliseX(isLeft ? left - 20 : left + width + 20, pinned, true, gos, ctrlsService);\n    const headerPosition = this.focusService.getFocusedHeader();\n    attemptMoveColumns({\n      allMovingColumns: [column],\n      isFromHeader: true,\n      hDirection,\n      xPosition,\n      pinned,\n      fromEnter: false,\n      fakeEvent: false,\n      gos,\n      columnModel: this.beans.columnModel,\n      columnMoveService: this.beans.columnMoveService,\n      presentedColsService: this.beans.visibleColsService\n    });\n    ctrlsService.getGridBodyCtrl().getScrollFeature().ensureColumnVisible(column, \"auto\");\n    if ((!this.isAlive() || this.beans.gos.get(\"ensureDomOrder\")) && headerPosition) {\n      this.restoreFocus(headerPosition);\n    }\n  }\n  restoreFocus(previousPosition) {\n    this.focusService.focusHeaderPosition({\n      headerPosition: {\n        ...previousPosition,\n        column: this.column\n      }\n    });\n  }\n  setupUserComp() {\n    const compDetails = this.lookupUserCompDetails();\n    this.setCompDetails(compDetails);\n  }\n  setCompDetails(compDetails) {\n    this.userCompDetails = compDetails;\n    this.comp.setUserCompDetails(compDetails);\n  }\n  lookupUserCompDetails() {\n    const params = this.createParams();\n    const colDef = this.column.getColDef();\n    return this.userComponentFactory.getHeaderCompDetails(colDef, params);\n  }\n  createParams() {\n    const params = this.gos.addGridCommonParams({\n      column: this.column,\n      displayName: this.displayName,\n      enableSorting: this.column.isSortable(),\n      enableMenu: this.menuEnabled,\n      enableFilterButton: this.openFilterEnabled && this.menuService.isHeaderFilterButtonEnabled(this.column),\n      enableFilterIcon: !this.openFilterEnabled || this.menuService.isLegacyMenuEnabled(),\n      showColumnMenu: (buttonElement) => {\n        this.menuService.showColumnMenu({\n          column: this.column,\n          buttonElement,\n          positionBy: \"button\"\n        });\n      },\n      showColumnMenuAfterMouseClick: (mouseEvent) => {\n        this.menuService.showColumnMenu({\n          column: this.column,\n          mouseEvent,\n          positionBy: \"mouse\"\n        });\n      },\n      showFilter: (buttonElement) => {\n        this.menuService.showFilterMenu({\n          column: this.column,\n          buttonElement,\n          containerType: \"columnFilter\",\n          positionBy: \"button\"\n        });\n      },\n      progressSort: (multiSort) => {\n        this.beans.sortController.progressSort(this.column, !!multiSort, \"uiColumnSorted\");\n      },\n      setSort: (sort, multiSort) => {\n        this.beans.sortController.setSortForColumn(this.column, sort, !!multiSort, \"uiColumnSorted\");\n      },\n      eGridHeader: this.getGui(),\n      setTooltip: (value, shouldDisplayTooltip) => {\n        this.setupTooltip(value, shouldDisplayTooltip);\n      }\n    });\n    return params;\n  }\n  setupSelectAll() {\n    this.selectAllFeature = this.createManagedBean(new SelectAllFeature(this.column));\n    this.selectAllFeature.setComp(this);\n  }\n  getSelectAllGui() {\n    return this.selectAllFeature.getCheckboxGui();\n  }\n  handleKeyDown(e) {\n    super.handleKeyDown(e);\n    if (e.key === KeyCode.SPACE) {\n      this.selectAllFeature.onSpaceKeyDown(e);\n    }\n    if (e.key === KeyCode.ENTER) {\n      this.onEnterKeyDown(e);\n    }\n    if (e.key === KeyCode.DOWN && e.altKey) {\n      this.showMenuOnKeyPress(e, false);\n    }\n  }\n  onEnterKeyDown(e) {\n    if (e.ctrlKey || e.metaKey) {\n      this.showMenuOnKeyPress(e, true);\n    } else if (this.sortable) {\n      const multiSort = e.shiftKey;\n      this.beans.sortController.progressSort(this.column, multiSort, \"uiColumnSorted\");\n    }\n  }\n  showMenuOnKeyPress(e, isFilterShortcut) {\n    const headerComp = this.comp.getUserCompInstance();\n    if (!headerComp || !(headerComp instanceof HeaderComp)) {\n      return;\n    }\n    if (headerComp.onMenuKeyboardShortcut(isFilterShortcut)) {\n      e.preventDefault();\n    }\n  }\n  onFocusIn(e) {\n    if (!this.getGui().contains(e.relatedTarget)) {\n      const rowIndex = this.getRowIndex();\n      this.focusService.setFocusedHeader(rowIndex, this.column);\n      this.announceAriaDescription();\n    }\n    if (this.focusService.isKeyboardMode()) {\n      this.setActiveHeader(true);\n    }\n  }\n  onFocusOut(e) {\n    if (this.getGui().contains(e.relatedTarget)) {\n      return;\n    }\n    this.setActiveHeader(false);\n  }\n  setupTooltip(value, shouldDisplayTooltip) {\n    if (this.tooltipFeature) {\n      this.tooltipFeature = this.destroyBean(this.tooltipFeature);\n    }\n    const isTooltipWhenTruncated = this.gos.get(\"tooltipShowMode\") === \"whenTruncated\";\n    const eGui = this.eGui;\n    const colDef = this.column.getColDef();\n    if (!shouldDisplayTooltip && isTooltipWhenTruncated && !colDef.headerComponent) {\n      shouldDisplayTooltip = () => {\n        const textEl = eGui.querySelector(\".ag-header-cell-text\");\n        if (!textEl) {\n          return true;\n        }\n        return textEl.scrollWidth > textEl.clientWidth;\n      };\n    }\n    const tooltipCtrl = {\n      getColumn: () => this.column,\n      getColDef: () => this.column.getColDef(),\n      getGui: () => eGui,\n      getLocation: () => \"header\",\n      getTooltipValue: () => {\n        if (value != null) {\n          return value;\n        }\n        const res = this.column.getColDef().headerTooltip;\n        return res;\n      },\n      shouldDisplayTooltip\n    };\n    const tooltipFeature = this.createManagedBean(new TooltipFeature(tooltipCtrl));\n    this.refreshFunctions.push(() => tooltipFeature.refreshToolTip());\n  }\n  setupClassesFromColDef() {\n    const refreshHeaderClasses = () => {\n      const colDef = this.column.getColDef();\n      const classes = _getHeaderClassesFromColDef(colDef, this.gos, this.column, null);\n      const oldClasses = this.userHeaderClasses;\n      this.userHeaderClasses = new Set(classes);\n      classes.forEach((c) => {\n        if (oldClasses.has(c)) {\n          oldClasses.delete(c);\n        } else {\n          this.comp.addOrRemoveCssClass(c, true);\n        }\n      });\n      oldClasses.forEach((c) => this.comp.addOrRemoveCssClass(c, false));\n    };\n    this.refreshFunctions.push(refreshHeaderClasses);\n    refreshHeaderClasses();\n  }\n  setDragSource(eSource) {\n    this.dragSourceElement = eSource;\n    this.removeDragSource();\n    if (!eSource || !this.draggable) {\n      return;\n    }\n    const { column, beans, displayName, dragAndDropService, gos } = this;\n    const { columnModel } = beans;\n    let hideColumnOnExit = !this.gos.get(\"suppressDragLeaveHidesColumns\");\n    const dragSource = this.dragSource = {\n      type: 1 /* HeaderCell */,\n      eElement: eSource,\n      getDefaultIconName: () => hideColumnOnExit ? \"hide\" : \"notAllowed\",\n      getDragItem: () => this.createDragItem(column),\n      dragItemName: displayName,\n      onDragStarted: () => {\n        hideColumnOnExit = !gos.get(\"suppressDragLeaveHidesColumns\");\n        column.setMoving(true, \"uiColumnMoved\");\n      },\n      onDragStopped: () => column.setMoving(false, \"uiColumnMoved\"),\n      onGridEnter: (dragItem) => {\n        if (hideColumnOnExit) {\n          const unlockedColumns = dragItem?.columns?.filter((col) => !col.getColDef().lockVisible) || [];\n          columnModel.setColsVisible(unlockedColumns, true, \"uiColumnMoved\");\n        }\n      },\n      onGridExit: (dragItem) => {\n        if (hideColumnOnExit) {\n          const unlockedColumns = dragItem?.columns?.filter((col) => !col.getColDef().lockVisible) || [];\n          columnModel.setColsVisible(unlockedColumns, false, \"uiColumnMoved\");\n        }\n      }\n    };\n    dragAndDropService.addDragSource(dragSource, true);\n  }\n  createDragItem(column) {\n    const visibleState = {};\n    visibleState[column.getId()] = column.isVisible();\n    return {\n      columns: [column],\n      visibleState\n    };\n  }\n  updateState() {\n    this.menuEnabled = this.menuService.isColumnMenuInHeaderEnabled(this.column);\n    this.openFilterEnabled = this.menuService.isFilterMenuInHeaderEnabled(this.column);\n    this.sortable = this.column.isSortable();\n    this.displayName = this.calculateDisplayName();\n    this.draggable = this.workOutDraggable();\n  }\n  addRefreshFunction(func) {\n    this.refreshFunctions.push(func);\n  }\n  refresh() {\n    this.updateState();\n    this.refreshHeaderComp();\n    this.refreshAria();\n    this.refreshFunctions.forEach((f) => f());\n  }\n  refreshHeaderComp() {\n    const newCompDetails = this.lookupUserCompDetails();\n    const compInstance = this.comp.getUserCompInstance();\n    const attemptRefresh = compInstance != null && this.userCompDetails.componentClass == newCompDetails.componentClass;\n    const headerCompRefreshed = attemptRefresh ? this.attemptHeaderCompRefresh(newCompDetails.params) : false;\n    if (headerCompRefreshed) {\n      this.setDragSource(this.dragSourceElement);\n    } else {\n      this.setCompDetails(newCompDetails);\n    }\n  }\n  attemptHeaderCompRefresh(params) {\n    const headerComp = this.comp.getUserCompInstance();\n    if (!headerComp) {\n      return false;\n    }\n    if (!headerComp.refresh) {\n      return false;\n    }\n    const res = headerComp.refresh(params);\n    return res;\n  }\n  calculateDisplayName() {\n    return this.beans.columnNameService.getDisplayNameForColumn(this.column, \"header\", true);\n  }\n  checkDisplayName() {\n    if (this.displayName !== this.calculateDisplayName()) {\n      this.refresh();\n    }\n  }\n  workOutDraggable() {\n    const colDef = this.column.getColDef();\n    const isSuppressMovableColumns = this.gos.get(\"suppressMovableColumns\");\n    const colCanMove = !isSuppressMovableColumns && !colDef.suppressMovable && !colDef.lockPosition;\n    return !!colCanMove || !!colDef.enableRowGroup || !!colDef.enablePivot;\n  }\n  onColumnRowGroupChanged() {\n    this.checkDisplayName();\n  }\n  onColumnPivotChanged() {\n    this.checkDisplayName();\n  }\n  onColumnValueChanged() {\n    this.checkDisplayName();\n  }\n  setupWidth() {\n    const listener = () => {\n      const columnWidth = this.column.getActualWidth();\n      this.comp.setWidth(`${columnWidth}px`);\n    };\n    this.addManagedListeners(this.column, { widthChanged: listener });\n    listener();\n  }\n  setupMovingCss() {\n    const listener = () => {\n      this.comp.addOrRemoveCssClass(\"ag-header-cell-moving\", this.column.isMoving());\n    };\n    this.addManagedListeners(this.column, { movingChanged: listener });\n    listener();\n  }\n  setupMenuClass() {\n    const listener = () => {\n      this.comp.addOrRemoveCssClass(\"ag-column-menu-visible\", this.column.isMenuVisible());\n    };\n    this.addManagedListeners(this.column, { menuVisibleChanged: listener });\n    listener();\n  }\n  setupSortableClass() {\n    const updateSortableCssClass = () => {\n      this.comp.addOrRemoveCssClass(\"ag-header-cell-sortable\", !!this.sortable);\n    };\n    updateSortableCssClass();\n    this.addRefreshFunction(updateSortableCssClass);\n    this.addManagedEventListeners({ sortChanged: this.refreshAriaSort.bind(this) });\n  }\n  setupFilterClass() {\n    const listener = () => {\n      const isFilterActive = this.column.isFilterActive();\n      this.comp.addOrRemoveCssClass(\"ag-header-cell-filtered\", isFilterActive);\n      this.refreshAria();\n    };\n    this.addManagedListeners(this.column, { filterActiveChanged: listener });\n    listener();\n  }\n  setupWrapTextClass() {\n    const listener = () => {\n      const wrapText = !!this.column.getColDef().wrapHeaderText;\n      this.comp.addOrRemoveCssClass(\"ag-header-cell-wrap-text\", wrapText);\n    };\n    listener();\n    this.addRefreshFunction(listener);\n  }\n  onDisplayedColumnsChanged() {\n    super.onDisplayedColumnsChanged();\n    if (!this.isAlive()) {\n      return;\n    }\n    this.onHeaderHeightChanged();\n  }\n  onHeaderHeightChanged() {\n    this.refreshSpanHeaderHeight();\n  }\n  refreshSpanHeaderHeight() {\n    const { eGui, column, comp, beans } = this;\n    if (!column.isSpanHeaderHeight()) {\n      eGui.style.removeProperty(\"top\");\n      eGui.style.removeProperty(\"height\");\n      comp.addOrRemoveCssClass(\"ag-header-span-height\", false);\n      comp.addOrRemoveCssClass(\"ag-header-span-total\", false);\n      return;\n    }\n    const { numberOfParents, isSpanningTotal } = this.column.getColumnGroupPaddingInfo();\n    comp.addOrRemoveCssClass(\"ag-header-span-height\", numberOfParents > 0);\n    const { columnModel } = beans;\n    const headerHeight = columnModel.getColumnHeaderRowHeight();\n    if (numberOfParents === 0) {\n      comp.addOrRemoveCssClass(\"ag-header-span-total\", false);\n      eGui.style.setProperty(\"top\", `0px`);\n      eGui.style.setProperty(\"height\", `${headerHeight}px`);\n      return;\n    }\n    comp.addOrRemoveCssClass(\"ag-header-span-total\", isSpanningTotal);\n    const groupHeaderHeight = this.beans.columnModel.getGroupRowsHeight();\n    let extraHeight = 0;\n    for (let i = 0; i < numberOfParents; i++) {\n      extraHeight += groupHeaderHeight[groupHeaderHeight.length - 1 - i];\n    }\n    eGui.style.setProperty(\"top\", `${-extraHeight}px`);\n    eGui.style.setProperty(\"height\", `${headerHeight + extraHeight}px`);\n  }\n  refreshAriaSort() {\n    if (this.sortable) {\n      const translate = this.localeService.getLocaleTextFunc();\n      const sort = this.beans.sortController.getDisplaySortForColumn(this.column) || null;\n      this.comp.setAriaSort(_getAriaSortState(sort));\n      this.setAriaDescriptionProperty(\"sort\", translate(\"ariaSortableColumn\", \"Press ENTER to sort\"));\n    } else {\n      this.comp.setAriaSort();\n      this.setAriaDescriptionProperty(\"sort\", null);\n    }\n  }\n  refreshAriaMenu() {\n    if (this.menuEnabled) {\n      const translate = this.localeService.getLocaleTextFunc();\n      this.setAriaDescriptionProperty(\"menu\", translate(\"ariaMenuColumn\", \"Press ALT DOWN to open column menu\"));\n    } else {\n      this.setAriaDescriptionProperty(\"menu\", null);\n    }\n  }\n  refreshAriaFilterButton() {\n    if (this.openFilterEnabled && !this.menuService.isLegacyMenuEnabled()) {\n      const translate = this.localeService.getLocaleTextFunc();\n      this.setAriaDescriptionProperty(\n        \"filterButton\",\n        translate(\"ariaFilterColumn\", \"Press CTRL ENTER to open filter\")\n      );\n    } else {\n      this.setAriaDescriptionProperty(\"filterButton\", null);\n    }\n  }\n  refreshAriaFiltered() {\n    const translate = this.localeService.getLocaleTextFunc();\n    const isFilterActive = this.column.isFilterActive();\n    if (isFilterActive) {\n      this.setAriaDescriptionProperty(\"filter\", translate(\"ariaColumnFiltered\", \"Column Filtered\"));\n    } else {\n      this.setAriaDescriptionProperty(\"filter\", null);\n    }\n  }\n  setAriaDescriptionProperty(property, value) {\n    if (value != null) {\n      this.ariaDescriptionProperties.set(property, value);\n    } else {\n      this.ariaDescriptionProperties.delete(property);\n    }\n  }\n  announceAriaDescription() {\n    if (!this.eGui.contains(this.beans.gos.getActiveDomElement())) {\n      return;\n    }\n    const ariaDescription = Array.from(this.ariaDescriptionProperties.keys()).sort((a, b) => a === \"filter\" ? -1 : b.charCodeAt(0) - a.charCodeAt(0)).map((key) => this.ariaDescriptionProperties.get(key)).join(\". \");\n    this.beans.ariaAnnouncementService.announceValue(ariaDescription, \"columnHeader\");\n  }\n  refreshAria() {\n    this.refreshAriaSort();\n    this.refreshAriaMenu();\n    this.refreshAriaFilterButton();\n    this.refreshAriaFiltered();\n  }\n  addColumnHoverListener() {\n    const listener = () => {\n      if (!this.gos.get(\"columnHoverHighlight\")) {\n        return;\n      }\n      const isHovered = this.beans.columnHoverService.isHovered(this.column);\n      this.comp.addOrRemoveCssClass(\"ag-column-hover\", isHovered);\n    };\n    this.addManagedEventListeners({ columnHoverChanged: listener });\n    listener();\n  }\n  getColId() {\n    return this.column.getColId();\n  }\n  addActiveHeaderMouseListeners() {\n    const listener = (e) => this.handleMouseOverChange(e.type === \"mouseenter\");\n    const clickListener = () => this.dispatchColumnMouseEvent(\"columnHeaderClicked\", this.column);\n    const contextMenuListener = (event) => this.handleContextMenuMouseEvent(event, void 0, this.column);\n    this.addManagedListeners(this.getGui(), {\n      mouseenter: listener,\n      mouseleave: listener,\n      click: clickListener,\n      contextmenu: contextMenuListener\n    });\n  }\n  handleMouseOverChange(isMouseOver) {\n    this.setActiveHeader(isMouseOver);\n    this.eventService.dispatchEvent({\n      type: isMouseOver ? \"columnHeaderMouseOver\" : \"columnHeaderMouseLeave\",\n      column: this.column\n    });\n  }\n  setActiveHeader(active) {\n    this.comp.addOrRemoveCssClass(\"ag-header-active\", active);\n  }\n  getAnchorElementForMenu(isFilter) {\n    const headerComp = this.comp.getUserCompInstance();\n    if (headerComp instanceof HeaderComp) {\n      return headerComp.getAnchorElementForMenu(isFilter);\n    }\n    return this.getGui();\n  }\n  destroy() {\n    super.destroy();\n    this.refreshFunctions = null;\n    this.selectAllFeature = null;\n    this.dragSourceElement = null;\n    this.userCompDetails = null;\n    this.userHeaderClasses = null;\n    this.ariaDescriptionProperties = null;\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/columnGroup/groupResizeFeature.ts\nvar GroupResizeFeature = class extends BeanStub {\n  wireBeans(beans) {\n    this.horizontalResizeService = beans.horizontalResizeService;\n    this.autoWidthCalculator = beans.autoWidthCalculator;\n    this.visibleColsService = beans.visibleColsService;\n    this.columnSizeService = beans.columnSizeService;\n    this.columnAutosizeService = beans.columnAutosizeService;\n  }\n  constructor(comp, eResize, pinned, columnGroup) {\n    super();\n    this.eResize = eResize;\n    this.comp = comp;\n    this.pinned = pinned;\n    this.columnGroup = columnGroup;\n  }\n  postConstruct() {\n    if (!this.columnGroup.isResizable()) {\n      this.comp.setResizableDisplayed(false);\n      return;\n    }\n    const finishedWithResizeFunc = this.horizontalResizeService.addResizeBar({\n      eResizeBar: this.eResize,\n      onResizeStart: this.onResizeStart.bind(this),\n      onResizing: this.onResizing.bind(this, false),\n      onResizeEnd: this.onResizing.bind(this, true)\n    });\n    this.addDestroyFunc(finishedWithResizeFunc);\n    if (!this.gos.get(\"suppressAutoSize\")) {\n      const skipHeaderOnAutoSize = this.gos.get(\"skipHeaderOnAutoSize\");\n      this.eResize.addEventListener(\"dblclick\", () => {\n        const keys = [];\n        const leafCols = this.columnGroup.getDisplayedLeafColumns();\n        leafCols.forEach((column) => {\n          if (!column.getColDef().suppressAutoSize) {\n            keys.push(column.getColId());\n          }\n        });\n        if (keys.length > 0) {\n          this.columnAutosizeService.autoSizeCols({\n            colKeys: keys,\n            skipHeader: skipHeaderOnAutoSize,\n            stopAtGroup: this.columnGroup,\n            source: \"uiColumnResized\"\n          });\n        }\n        this.resizeLeafColumnsToFit(\"uiColumnResized\");\n      });\n    }\n  }\n  onResizeStart(shiftKey) {\n    const initialValues = this.getInitialValues(shiftKey);\n    this.storeLocalValues(initialValues);\n    this.toggleColumnResizing(true);\n  }\n  onResizing(finished, resizeAmount, source = \"uiColumnResized\") {\n    const resizeAmountNormalised = this.normaliseDragChange(resizeAmount);\n    const width = this.resizeStartWidth + resizeAmountNormalised;\n    this.resizeColumnsFromLocalValues(width, source, finished);\n  }\n  getInitialValues(shiftKey) {\n    const columnsToResize = this.getColumnsToResize();\n    const resizeStartWidth = this.getInitialSizeOfColumns(columnsToResize);\n    const resizeRatios = this.getSizeRatiosOfColumns(columnsToResize, resizeStartWidth);\n    const columnSizeAndRatios = {\n      columnsToResize,\n      resizeStartWidth,\n      resizeRatios\n    };\n    let groupAfter = null;\n    if (shiftKey) {\n      groupAfter = this.visibleColsService.getGroupAtDirection(this.columnGroup, \"After\");\n    }\n    if (groupAfter) {\n      const takeFromLeafCols = groupAfter.getDisplayedLeafColumns();\n      const groupAfterColumns = columnSizeAndRatios.groupAfterColumns = takeFromLeafCols.filter(\n        (col) => col.isResizable()\n      );\n      const groupAfterStartWidth = columnSizeAndRatios.groupAfterStartWidth = this.getInitialSizeOfColumns(groupAfterColumns);\n      columnSizeAndRatios.groupAfterRatios = this.getSizeRatiosOfColumns(groupAfterColumns, groupAfterStartWidth);\n    } else {\n      columnSizeAndRatios.groupAfterColumns = void 0;\n      columnSizeAndRatios.groupAfterStartWidth = void 0;\n      columnSizeAndRatios.groupAfterRatios = void 0;\n    }\n    return columnSizeAndRatios;\n  }\n  storeLocalValues(initialValues) {\n    const {\n      columnsToResize,\n      resizeStartWidth,\n      resizeRatios,\n      groupAfterColumns,\n      groupAfterStartWidth,\n      groupAfterRatios\n    } = initialValues;\n    this.resizeCols = columnsToResize;\n    this.resizeStartWidth = resizeStartWidth;\n    this.resizeRatios = resizeRatios;\n    this.resizeTakeFromCols = groupAfterColumns;\n    this.resizeTakeFromStartWidth = groupAfterStartWidth;\n    this.resizeTakeFromRatios = groupAfterRatios;\n  }\n  clearLocalValues() {\n    this.resizeCols = void 0;\n    this.resizeRatios = void 0;\n    this.resizeTakeFromCols = void 0;\n    this.resizeTakeFromRatios = void 0;\n  }\n  resizeLeafColumnsToFit(source) {\n    const preferredSize = this.autoWidthCalculator.getPreferredWidthForColumnGroup(this.columnGroup);\n    const initialValues = this.getInitialValues();\n    if (preferredSize > initialValues.resizeStartWidth) {\n      this.resizeColumns(initialValues, preferredSize, source, true);\n    }\n  }\n  resizeColumnsFromLocalValues(totalWidth, source, finished = true) {\n    if (!this.resizeCols || !this.resizeRatios) {\n      return;\n    }\n    const initialValues = {\n      columnsToResize: this.resizeCols,\n      resizeStartWidth: this.resizeStartWidth,\n      resizeRatios: this.resizeRatios,\n      groupAfterColumns: this.resizeTakeFromCols ?? void 0,\n      groupAfterStartWidth: this.resizeTakeFromStartWidth ?? void 0,\n      groupAfterRatios: this.resizeTakeFromRatios ?? void 0\n    };\n    this.resizeColumns(initialValues, totalWidth, source, finished);\n  }\n  resizeColumns(initialValues, totalWidth, source, finished = true) {\n    const {\n      columnsToResize,\n      resizeStartWidth,\n      resizeRatios,\n      groupAfterColumns,\n      groupAfterStartWidth,\n      groupAfterRatios\n    } = initialValues;\n    const resizeSets = [];\n    resizeSets.push({\n      columns: columnsToResize,\n      ratios: resizeRatios,\n      width: totalWidth\n    });\n    if (groupAfterColumns) {\n      const diff = totalWidth - resizeStartWidth;\n      resizeSets.push({\n        columns: groupAfterColumns,\n        ratios: groupAfterRatios,\n        width: groupAfterStartWidth - diff\n      });\n    }\n    this.columnSizeService.resizeColumnSets({\n      resizeSets,\n      finished,\n      source\n    });\n    if (finished) {\n      this.toggleColumnResizing(false);\n    }\n  }\n  toggleColumnResizing(resizing) {\n    this.comp.addOrRemoveCssClass(\"ag-column-resizing\", resizing);\n  }\n  getColumnsToResize() {\n    const leafCols = this.columnGroup.getDisplayedLeafColumns();\n    return leafCols.filter((col) => col.isResizable());\n  }\n  getInitialSizeOfColumns(columns) {\n    return columns.reduce((totalWidth, column) => totalWidth + column.getActualWidth(), 0);\n  }\n  getSizeRatiosOfColumns(columns, initialSizeOfColumns) {\n    return columns.map((column) => column.getActualWidth() / initialSizeOfColumns);\n  }\n  // optionally inverts the drag, depending on pinned and RTL\n  // note - this method is duplicated in RenderedHeaderCell - should refactor out?\n  normaliseDragChange(dragChange) {\n    let result = dragChange;\n    if (this.gos.get(\"enableRtl\")) {\n      if (this.pinned !== \"left\") {\n        result *= -1;\n      }\n    } else if (this.pinned === \"right\") {\n      result *= -1;\n    }\n    return result;\n  }\n  destroy() {\n    super.destroy();\n    this.clearLocalValues();\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/columnGroup/groupWidthFeature.ts\nvar GroupWidthFeature = class extends BeanStub {\n  constructor(comp, columnGroup) {\n    super();\n    // the children can change, we keep destroy functions related to listening to the children here\n    this.removeChildListenersFuncs = [];\n    this.columnGroup = columnGroup;\n    this.comp = comp;\n  }\n  postConstruct() {\n    this.addListenersToChildrenColumns();\n    this.addManagedListeners(this.columnGroup, {\n      displayedChildrenChanged: this.onDisplayedChildrenChanged.bind(this)\n    });\n    this.onWidthChanged();\n    this.addDestroyFunc(this.removeListenersOnChildrenColumns.bind(this));\n  }\n  addListenersToChildrenColumns() {\n    this.removeListenersOnChildrenColumns();\n    const widthChangedListener = this.onWidthChanged.bind(this);\n    this.columnGroup.getLeafColumns().forEach((column) => {\n      column.addEventListener(\"widthChanged\", widthChangedListener);\n      column.addEventListener(\"visibleChanged\", widthChangedListener);\n      this.removeChildListenersFuncs.push(() => {\n        column.removeEventListener(\"widthChanged\", widthChangedListener);\n        column.removeEventListener(\"visibleChanged\", widthChangedListener);\n      });\n    });\n  }\n  removeListenersOnChildrenColumns() {\n    this.removeChildListenersFuncs.forEach((func) => func());\n    this.removeChildListenersFuncs = [];\n  }\n  onDisplayedChildrenChanged() {\n    this.addListenersToChildrenColumns();\n    this.onWidthChanged();\n  }\n  onWidthChanged() {\n    const columnWidth = this.columnGroup.getActualWidth();\n    this.comp.setWidth(`${columnWidth}px`);\n    this.comp.addOrRemoveCssClass(\"ag-hidden\", columnWidth === 0);\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/columnGroup/headerGroupCellCtrl.ts\nvar HeaderGroupCellCtrl = class extends AbstractHeaderCellCtrl {\n  constructor(columnGroup, beans, parentRowCtrl) {\n    super(columnGroup, beans, parentRowCtrl);\n    this.onSuppressColMoveChange = () => {\n      if (!this.isAlive() || this.isSuppressMoving()) {\n        this.removeDragSource();\n      } else {\n        if (!this.dragSource) {\n          const eGui = this.getGui();\n          this.setDragSource(eGui);\n        }\n      }\n    };\n    this.column = columnGroup;\n  }\n  setComp(comp, eGui, eResize, eHeaderCompWrapper) {\n    this.comp = comp;\n    this.setGui(eGui);\n    this.displayName = this.beans.columnNameService.getDisplayNameForColumnGroup(this.column, \"header\");\n    this.addClasses();\n    this.setupMovingCss();\n    this.setupExpandable();\n    this.setupTooltip();\n    this.addDestroyFunc(() => {\n      if (this.tooltipFeature) {\n        this.tooltipFeature = this.destroyBean(this.tooltipFeature);\n      }\n    });\n    this.setupAutoHeight({\n      wrapperElement: eHeaderCompWrapper\n    });\n    this.setupUserComp();\n    this.addHeaderMouseListeners();\n    const pinned = this.getParentRowCtrl().getPinned();\n    const leafCols = this.column.getProvidedColumnGroup().getLeafColumns();\n    this.createManagedBean(new HoverFeature(leafCols, eGui));\n    this.createManagedBean(new SetLeftFeature(this.column, eGui, this.beans));\n    this.createManagedBean(new GroupWidthFeature(comp, this.column));\n    this.resizeFeature = this.createManagedBean(new GroupResizeFeature(comp, eResize, pinned, this.column));\n    this.createManagedBean(\n      new ManagedFocusFeature(eGui, {\n        shouldStopEventPropagation: this.shouldStopEventPropagation.bind(this),\n        onTabKeyDown: () => void 0,\n        handleKeyDown: this.handleKeyDown.bind(this),\n        onFocusIn: this.onFocusIn.bind(this)\n      })\n    );\n    this.addManagedPropertyListener(\"suppressMovableColumns\", this.onSuppressColMoveChange);\n    this.addResizeAndMoveKeyboardListeners(eGui);\n  }\n  getColumn() {\n    return this.column;\n  }\n  resizeHeader(delta, shiftKey) {\n    if (!this.resizeFeature) {\n      return;\n    }\n    const initialValues = this.resizeFeature.getInitialValues(shiftKey);\n    this.resizeFeature.resizeColumns(\n      initialValues,\n      initialValues.resizeStartWidth + delta,\n      \"uiColumnResized\",\n      true\n    );\n  }\n  moveHeader(hDirection) {\n    const { beans, eGui, column, gos, ctrlsService } = this;\n    const isRtl = gos.get(\"enableRtl\");\n    const isLeft = hDirection === 0 /* Left */;\n    const pinned = this.getPinned();\n    const rect = eGui.getBoundingClientRect();\n    const left = rect.left;\n    const width = rect.width;\n    const xPosition = normaliseX(isLeft !== isRtl ? left - 20 : left + width + 20, pinned, true, gos, ctrlsService);\n    const id = column.getGroupId();\n    const headerPosition = this.focusService.getFocusedHeader();\n    attemptMoveColumns({\n      allMovingColumns: this.column.getLeafColumns(),\n      isFromHeader: true,\n      hDirection,\n      xPosition,\n      pinned,\n      fromEnter: false,\n      fakeEvent: false,\n      gos,\n      columnModel: beans.columnModel,\n      columnMoveService: beans.columnMoveService,\n      presentedColsService: beans.visibleColsService\n    });\n    const displayedLeafColumns = column.getDisplayedLeafColumns();\n    const targetColumn = isLeft ? displayedLeafColumns[0] : _last(displayedLeafColumns);\n    this.ctrlsService.getGridBodyCtrl().getScrollFeature().ensureColumnVisible(targetColumn, \"auto\");\n    if ((!this.isAlive() || this.beans.gos.get(\"ensureDomOrder\")) && headerPosition) {\n      this.restoreFocus(id, column, headerPosition);\n    }\n  }\n  restoreFocus(groupId, previousColumnGroup, previousPosition) {\n    const leafCols = previousColumnGroup.getLeafColumns();\n    if (!leafCols.length) {\n      return;\n    }\n    const parent = leafCols[0].getParent();\n    if (!parent) {\n      return;\n    }\n    const newColumnGroup = this.findGroupWidthId(parent, groupId);\n    if (newColumnGroup) {\n      this.focusService.focusHeaderPosition({\n        headerPosition: {\n          ...previousPosition,\n          column: newColumnGroup\n        }\n      });\n    }\n  }\n  findGroupWidthId(columnGroup, id) {\n    while (columnGroup) {\n      if (columnGroup.getGroupId() === id) {\n        return columnGroup;\n      }\n      columnGroup = columnGroup.getParent();\n    }\n    return null;\n  }\n  resizeLeafColumnsToFit(source) {\n    if (!this.resizeFeature) {\n      return;\n    }\n    this.resizeFeature.resizeLeafColumnsToFit(source);\n  }\n  setupUserComp() {\n    const params = this.gos.addGridCommonParams({\n      displayName: this.displayName,\n      columnGroup: this.column,\n      setExpanded: (expanded) => {\n        this.beans.columnModel.setColumnGroupOpened(\n          this.column.getProvidedColumnGroup(),\n          expanded,\n          \"gridInitializing\"\n        );\n      },\n      setTooltip: (value, shouldDisplayTooltip) => {\n        this.setupTooltip(value, shouldDisplayTooltip);\n      }\n    });\n    const compDetails = this.userComponentFactory.getHeaderGroupCompDetails(params);\n    this.comp.setUserCompDetails(compDetails);\n  }\n  addHeaderMouseListeners() {\n    const listener = (e) => this.handleMouseOverChange(e.type === \"mouseenter\");\n    const clickListener = () => this.dispatchColumnMouseEvent(\"columnHeaderClicked\", this.column.getProvidedColumnGroup());\n    const contextMenuListener = (event) => this.handleContextMenuMouseEvent(event, void 0, this.column.getProvidedColumnGroup());\n    this.addManagedListeners(this.getGui(), {\n      mouseenter: listener,\n      mouseleave: listener,\n      click: clickListener,\n      contextmenu: contextMenuListener\n    });\n  }\n  handleMouseOverChange(isMouseOver) {\n    this.eventService.dispatchEvent({\n      type: isMouseOver ? \"columnHeaderMouseOver\" : \"columnHeaderMouseLeave\",\n      column: this.column.getProvidedColumnGroup()\n    });\n  }\n  setupTooltip(value, shouldDisplayTooltip) {\n    if (this.tooltipFeature) {\n      this.tooltipFeature = this.destroyBean(this.tooltipFeature);\n    }\n    const colGroupDef = this.column.getColGroupDef();\n    const isTooltipWhenTruncated = this.gos.get(\"tooltipShowMode\") === \"whenTruncated\";\n    const eGui = this.eGui;\n    if (!shouldDisplayTooltip && isTooltipWhenTruncated && !colGroupDef?.headerGroupComponent) {\n      shouldDisplayTooltip = () => {\n        const textEl = eGui.querySelector(\".ag-header-group-text\");\n        if (!textEl) {\n          return true;\n        }\n        return textEl.scrollWidth > textEl.clientWidth;\n      };\n    }\n    const tooltipCtrl = {\n      getColumn: () => this.column,\n      getGui: () => eGui,\n      getLocation: () => \"headerGroup\",\n      getTooltipValue: () => value ?? (colGroupDef && colGroupDef.headerTooltip),\n      shouldDisplayTooltip\n    };\n    if (colGroupDef) {\n      tooltipCtrl.getColDef = () => colGroupDef;\n    }\n    this.createManagedBean(new TooltipFeature(tooltipCtrl));\n  }\n  setupExpandable() {\n    const providedColGroup = this.column.getProvidedColumnGroup();\n    this.refreshExpanded();\n    const listener = this.refreshExpanded.bind(this);\n    this.addManagedListeners(providedColGroup, {\n      expandedChanged: listener,\n      expandableChanged: listener\n    });\n  }\n  refreshExpanded() {\n    const { column } = this;\n    this.expandable = column.isExpandable();\n    const expanded = column.isExpanded();\n    if (this.expandable) {\n      this.comp.setAriaExpanded(expanded ? \"true\" : \"false\");\n    } else {\n      this.comp.setAriaExpanded(void 0);\n    }\n  }\n  getColId() {\n    return this.column.getUniqueId();\n  }\n  addClasses() {\n    const colGroupDef = this.column.getColGroupDef();\n    const classes = _getHeaderClassesFromColDef(colGroupDef, this.gos, null, this.column);\n    if (this.column.isPadding()) {\n      classes.push(\"ag-header-group-cell-no-group\");\n      const leafCols = this.column.getLeafColumns();\n      if (leafCols.every((col) => col.isSpanHeaderHeight())) {\n        classes.push(\"ag-header-span-height\");\n      }\n    } else {\n      classes.push(\"ag-header-group-cell-with-group\");\n      if (colGroupDef?.wrapHeaderText) {\n        classes.push(\"ag-header-cell-wrap-text\");\n      }\n    }\n    classes.forEach((c) => this.comp.addOrRemoveCssClass(c, true));\n  }\n  setupMovingCss() {\n    const providedColumnGroup = this.column.getProvidedColumnGroup();\n    const leafColumns = providedColumnGroup.getLeafColumns();\n    const listener = () => this.comp.addOrRemoveCssClass(\"ag-header-cell-moving\", this.column.isMoving());\n    leafColumns.forEach((col) => {\n      this.addManagedListeners(col, { movingChanged: listener });\n    });\n    listener();\n  }\n  onFocusIn(e) {\n    if (!this.eGui.contains(e.relatedTarget)) {\n      const rowIndex = this.getRowIndex();\n      this.beans.focusService.setFocusedHeader(rowIndex, this.column);\n    }\n  }\n  handleKeyDown(e) {\n    super.handleKeyDown(e);\n    const wrapperHasFocus = this.getWrapperHasFocus();\n    if (!this.expandable || !wrapperHasFocus) {\n      return;\n    }\n    if (e.key === KeyCode.ENTER) {\n      const column = this.column;\n      const newExpandedValue = !column.isExpanded();\n      this.beans.columnModel.setColumnGroupOpened(\n        column.getProvidedColumnGroup(),\n        newExpandedValue,\n        \"uiColumnExpanded\"\n      );\n    }\n  }\n  // unlike columns, this will only get called once, as we don't react on props on column groups\n  // (we will always destroy and recreate this comp if something changes)\n  setDragSource(eHeaderGroup) {\n    if (!this.isAlive() || this.isSuppressMoving()) {\n      return;\n    }\n    this.removeDragSource();\n    if (!eHeaderGroup) {\n      return;\n    }\n    const { beans, column, displayName, gos, dragAndDropService } = this;\n    const { columnModel } = beans;\n    const allLeafColumns = column.getProvidedColumnGroup().getLeafColumns();\n    let hideColumnOnExit = !gos.get(\"suppressDragLeaveHidesColumns\");\n    const dragSource = this.dragSource = {\n      type: 1 /* HeaderCell */,\n      eElement: eHeaderGroup,\n      getDefaultIconName: () => hideColumnOnExit ? \"hide\" : \"notAllowed\",\n      dragItemName: displayName,\n      // we add in the original group leaf columns, so we move both visible and non-visible items\n      getDragItem: () => this.getDragItemForGroup(column),\n      onDragStarted: () => {\n        hideColumnOnExit = !gos.get(\"suppressDragLeaveHidesColumns\");\n        allLeafColumns.forEach((col) => col.setMoving(true, \"uiColumnDragged\"));\n      },\n      onDragStopped: () => allLeafColumns.forEach((col) => col.setMoving(false, \"uiColumnDragged\")),\n      onGridEnter: (dragItem) => {\n        if (hideColumnOnExit) {\n          const { columns = [], visibleState } = dragItem ?? {};\n          const unlockedColumns = columns.filter(\n            (col) => !col.getColDef().lockVisible && (!visibleState || visibleState[col.getColId()])\n          );\n          columnModel.setColsVisible(unlockedColumns, true, \"uiColumnMoved\");\n        }\n      },\n      onGridExit: (dragItem) => {\n        if (hideColumnOnExit) {\n          const unlockedColumns = dragItem?.columns?.filter((col) => !col.getColDef().lockVisible) || [];\n          columnModel.setColsVisible(unlockedColumns, false, \"uiColumnMoved\");\n        }\n      }\n    };\n    dragAndDropService.addDragSource(dragSource, true);\n  }\n  // when moving the columns, we want to move all the columns (contained within the DragItem) in this group in one go,\n  // and in the order they are currently in the screen.\n  getDragItemForGroup(columnGroup) {\n    const allColumnsOriginalOrder = columnGroup.getProvidedColumnGroup().getLeafColumns();\n    const visibleState = {};\n    allColumnsOriginalOrder.forEach((column) => visibleState[column.getId()] = column.isVisible());\n    const allColumnsCurrentOrder = [];\n    this.beans.visibleColsService.getAllCols().forEach((column) => {\n      if (allColumnsOriginalOrder.indexOf(column) >= 0) {\n        allColumnsCurrentOrder.push(column);\n        _removeFromArray(allColumnsOriginalOrder, column);\n      }\n    });\n    allColumnsOriginalOrder.forEach((column) => allColumnsCurrentOrder.push(column));\n    return {\n      columns: allColumnsCurrentOrder,\n      visibleState\n    };\n  }\n  isSuppressMoving() {\n    let childSuppressesMoving = false;\n    this.column.getLeafColumns().forEach((column) => {\n      if (column.getColDef().suppressMovable || column.getColDef().lockPosition) {\n        childSuppressesMoving = true;\n      }\n    });\n    const result = childSuppressesMoving || this.gos.get(\"suppressMovableColumns\");\n    return result;\n  }\n};\n\n// community-modules/core/src/headerRendering/row/headerRowCtrl.ts\nvar instanceIdSequence3 = 0;\nvar HeaderRowCtrl = class extends BeanStub {\n  constructor(rowIndex, pinned, type) {\n    super();\n    this.instanceId = instanceIdSequence3++;\n    this.rowIndex = rowIndex;\n    this.pinned = pinned;\n    this.type = type;\n    const typeClass = type == \"group\" /* COLUMN_GROUP */ ? `ag-header-row-column-group` : type == \"filter\" /* FLOATING_FILTER */ ? `ag-header-row-column-filter` : `ag-header-row-column`;\n    this.headerRowClass = `ag-header-row ${typeClass}`;\n  }\n  wireBeans(beans) {\n    this.beans = beans;\n  }\n  postConstruct() {\n    this.isPrintLayout = this.gos.isDomLayout(\"print\");\n    this.isEnsureDomOrder = this.gos.get(\"ensureDomOrder\");\n  }\n  getInstanceId() {\n    return this.instanceId;\n  }\n  /** Checks that every header cell that is currently visible has been rendered.\n   * Can only be false under some circumstances when using React\n   */\n  areCellsRendered() {\n    if (!this.comp) {\n      return false;\n    }\n    return this.getHeaderCellCtrls().every((ctrl) => ctrl.getGui() != null);\n  }\n  /**\n   *\n   * @param comp Proxy to the actual component\n   * @param initCompState Should the component be initialised with the current state of the controller. Default: true\n   */\n  setComp(comp, initCompState = true) {\n    this.comp = comp;\n    if (initCompState) {\n      this.onRowHeightChanged();\n      this.onVirtualColumnsChanged();\n    }\n    this.setWidth();\n    this.addEventListeners();\n  }\n  getHeaderRowClass() {\n    return this.headerRowClass;\n  }\n  getAriaRowIndex() {\n    return this.rowIndex + 1;\n  }\n  addEventListeners() {\n    const onHeightChanged = this.onRowHeightChanged.bind(this);\n    this.addManagedEventListeners({\n      columnResized: this.onColumnResized.bind(this),\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this),\n      virtualColumnsChanged: (params) => this.onVirtualColumnsChanged(params.afterScroll),\n      columnGroupHeaderHeightChanged: onHeightChanged,\n      columnHeaderHeightChanged: onHeightChanged,\n      gridStylesChanged: onHeightChanged,\n      advancedFilterEnabledChanged: onHeightChanged\n    });\n    this.addManagedPropertyListener(\"domLayout\", this.onDisplayedColumnsChanged.bind(this));\n    this.addManagedPropertyListener(\"ensureDomOrder\", (e) => this.isEnsureDomOrder = e.currentValue);\n    this.addManagedPropertyListeners(\n      [\n        \"headerHeight\",\n        \"pivotHeaderHeight\",\n        \"groupHeaderHeight\",\n        \"pivotGroupHeaderHeight\",\n        \"floatingFiltersHeight\"\n      ],\n      onHeightChanged\n    );\n  }\n  getHeaderCellCtrl(column) {\n    if (!this.headerCellCtrls) {\n      return;\n    }\n    return _values(this.headerCellCtrls).find((cellCtrl) => cellCtrl.getColumnGroupChild() === column);\n  }\n  onDisplayedColumnsChanged() {\n    this.isPrintLayout = this.gos.isDomLayout(\"print\");\n    this.onVirtualColumnsChanged();\n    this.setWidth();\n    this.onRowHeightChanged();\n  }\n  getType() {\n    return this.type;\n  }\n  onColumnResized() {\n    this.setWidth();\n  }\n  setWidth() {\n    const width = this.getWidthForRow();\n    this.comp.setWidth(`${width}px`);\n  }\n  getWidthForRow() {\n    const { visibleColsService: presentedColsService } = this.beans;\n    if (this.isPrintLayout) {\n      const pinned = this.pinned != null;\n      if (pinned) {\n        return 0;\n      }\n      return presentedColsService.getContainerWidth(\"right\") + presentedColsService.getContainerWidth(\"left\") + presentedColsService.getContainerWidth(null);\n    }\n    return presentedColsService.getContainerWidth(this.pinned);\n  }\n  onRowHeightChanged() {\n    const { topOffset, rowHeight } = this.getTopAndHeight();\n    this.comp.setTop(topOffset + \"px\");\n    this.comp.setHeight(rowHeight + \"px\");\n  }\n  getTopAndHeight() {\n    const { columnModel, filterManager } = this.beans;\n    const sizes = [];\n    const groupHeadersHeight = columnModel.getGroupRowsHeight();\n    const headerHeight = columnModel.getColumnHeaderRowHeight();\n    sizes.push(...groupHeadersHeight);\n    sizes.push(headerHeight);\n    if (filterManager?.hasFloatingFilters()) {\n      sizes.push(columnModel.getFloatingFiltersHeight());\n    }\n    let topOffset = 0;\n    for (let i = 0; i < this.rowIndex; i++) {\n      topOffset += sizes[i];\n    }\n    const rowHeight = sizes[this.rowIndex];\n    return { topOffset, rowHeight };\n  }\n  getPinned() {\n    return this.pinned;\n  }\n  getRowIndex() {\n    return this.rowIndex;\n  }\n  onVirtualColumnsChanged(afterScroll = false) {\n    const ctrlsToDisplay = this.getHeaderCtrls();\n    const forceOrder = this.isEnsureDomOrder || this.isPrintLayout;\n    this.comp.setHeaderCtrls(ctrlsToDisplay, forceOrder, afterScroll);\n  }\n  getHeaderCtrls() {\n    const oldCtrls = this.headerCellCtrls;\n    this.headerCellCtrls = /* @__PURE__ */ new Map();\n    const columns = this.getColumnsInViewport();\n    for (const child of columns) {\n      this.recycleAndCreateHeaderCtrls(child, oldCtrls);\n    }\n    const isFocusedAndDisplayed = (ctrl) => {\n      const { focusService, visibleColsService } = this.beans;\n      const isFocused = focusService.isHeaderWrapperFocused(ctrl);\n      if (!isFocused) {\n        return false;\n      }\n      const isDisplayed = visibleColsService.isVisible(ctrl.getColumnGroupChild());\n      return isDisplayed;\n    };\n    if (oldCtrls) {\n      for (const [id, oldCtrl] of oldCtrls) {\n        const keepCtrl = isFocusedAndDisplayed(oldCtrl);\n        if (keepCtrl) {\n          this.headerCellCtrls.set(id, oldCtrl);\n        } else {\n          this.destroyBean(oldCtrl);\n        }\n      }\n    }\n    return this.getHeaderCellCtrls();\n  }\n  getHeaderCellCtrls() {\n    return Array.from(this.headerCellCtrls?.values() ?? []);\n  }\n  recycleAndCreateHeaderCtrls(headerColumn, oldCtrls) {\n    if (!this.headerCellCtrls) {\n      return;\n    }\n    if (headerColumn.isEmptyGroup()) {\n      return;\n    }\n    const idOfChild = headerColumn.getUniqueId();\n    let headerCtrl;\n    if (oldCtrls) {\n      headerCtrl = oldCtrls.get(idOfChild);\n      oldCtrls.delete(idOfChild);\n    }\n    const forOldColumn = headerCtrl && headerCtrl.getColumnGroupChild() != headerColumn;\n    if (forOldColumn) {\n      this.destroyBean(headerCtrl);\n      headerCtrl = void 0;\n    }\n    if (headerCtrl == null) {\n      switch (this.type) {\n        case \"filter\" /* FLOATING_FILTER */: {\n          headerCtrl = this.createBean(\n            this.beans.ctrlsFactory.getInstance(\n              \"headerFilterCell\",\n              headerColumn,\n              this.beans,\n              this\n            )\n          );\n          break;\n        }\n        case \"group\" /* COLUMN_GROUP */:\n          headerCtrl = this.createBean(\n            new HeaderGroupCellCtrl(headerColumn, this.beans, this)\n          );\n          break;\n        default:\n          headerCtrl = this.createBean(new HeaderCellCtrl(headerColumn, this.beans, this));\n          break;\n      }\n    }\n    this.headerCellCtrls.set(idOfChild, headerCtrl);\n  }\n  getColumnsInViewport() {\n    return this.isPrintLayout ? this.getColumnsInViewportPrintLayout() : this.getColumnsInViewportNormalLayout();\n  }\n  getColumnsInViewportPrintLayout() {\n    if (this.pinned != null) {\n      return [];\n    }\n    let viewportColumns = [];\n    const actualDepth = this.getActualDepth();\n    const { columnViewportService } = this.beans;\n    [\"left\", null, \"right\"].forEach((pinned) => {\n      const items = columnViewportService.getHeadersToRender(pinned, actualDepth);\n      viewportColumns = viewportColumns.concat(items);\n    });\n    return viewportColumns;\n  }\n  getActualDepth() {\n    return this.type == \"filter\" /* FLOATING_FILTER */ ? this.rowIndex - 1 : this.rowIndex;\n  }\n  getColumnsInViewportNormalLayout() {\n    return this.beans.columnViewportService.getHeadersToRender(this.pinned, this.getActualDepth());\n  }\n  findHeaderCellCtrl(column) {\n    if (!this.headerCellCtrls) {\n      return;\n    }\n    const allCtrls = this.getHeaderCellCtrls();\n    const ctrl = allCtrls.find((ctrl2) => ctrl2.getColumnGroupChild() == column);\n    return ctrl;\n  }\n  focusHeader(column, event) {\n    const ctrl = this.findHeaderCellCtrl(column);\n    if (!ctrl) {\n      return false;\n    }\n    const focused = ctrl.focus(event);\n    return focused;\n  }\n  destroy() {\n    if (this.headerCellCtrls) {\n      this.headerCellCtrls.forEach((ctrl) => {\n        this.destroyBean(ctrl);\n      });\n    }\n    this.headerCellCtrls = void 0;\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/headerRendering/rowContainer/headerRowContainerCtrl.ts\nvar HeaderRowContainerCtrl = class extends BeanStub {\n  constructor(pinned) {\n    super();\n    this.hidden = false;\n    this.includeFloatingFilter = false;\n    this.groupsRowCtrls = [];\n    this.pinned = pinned;\n  }\n  wireBeans(beans) {\n    this.ctrlsService = beans.ctrlsService;\n    this.scrollVisibleService = beans.scrollVisibleService;\n    this.pinnedWidthService = beans.pinnedWidthService;\n    this.columnModel = beans.columnModel;\n    this.focusService = beans.focusService;\n    this.filterManager = beans.filterManager;\n  }\n  setComp(comp, eGui) {\n    this.comp = comp;\n    this.eViewport = eGui;\n    this.setupCenterWidth();\n    this.setupPinnedWidth();\n    this.setupDragAndDrop(this.eViewport);\n    const onDisplayedColsChanged = this.onDisplayedColumnsChanged.bind(this);\n    this.addManagedEventListeners({\n      gridColumnsChanged: this.onGridColumnsChanged.bind(this),\n      displayedColumnsChanged: onDisplayedColsChanged,\n      advancedFilterEnabledChanged: onDisplayedColsChanged\n    });\n    this.ctrlsService.registerHeaderContainer(this, this.pinned);\n    if (this.columnModel.isReady()) {\n      this.refresh();\n    }\n  }\n  getAllCtrls() {\n    const res = [...this.groupsRowCtrls];\n    if (this.columnsRowCtrl) {\n      res.push(this.columnsRowCtrl);\n    }\n    if (this.filtersRowCtrl) {\n      res.push(this.filtersRowCtrl);\n    }\n    return res;\n  }\n  refresh(keepColumns = false) {\n    const sequence = new NumberSequence();\n    const focusedHeaderPosition = this.focusService.getFocusHeaderToUseAfterRefresh();\n    const refreshColumnGroups = () => {\n      const groupRowCount = this.columnModel.getHeaderRowCount() - 1;\n      this.groupsRowCtrls = this.destroyBeans(this.groupsRowCtrls);\n      for (let i = 0; i < groupRowCount; i++) {\n        const ctrl = this.createBean(\n          new HeaderRowCtrl(sequence.next(), this.pinned, \"group\" /* COLUMN_GROUP */)\n        );\n        this.groupsRowCtrls.push(ctrl);\n      }\n    };\n    const refreshColumns = () => {\n      const rowIndex = sequence.next();\n      const needNewInstance = !this.hidden && (this.columnsRowCtrl == null || !keepColumns || this.columnsRowCtrl.getRowIndex() !== rowIndex);\n      const shouldDestroyInstance = needNewInstance || this.hidden;\n      if (shouldDestroyInstance) {\n        this.columnsRowCtrl = this.destroyBean(this.columnsRowCtrl);\n      }\n      if (needNewInstance) {\n        this.columnsRowCtrl = this.createBean(new HeaderRowCtrl(rowIndex, this.pinned, \"column\" /* COLUMN */));\n      }\n    };\n    const refreshFilters = () => {\n      this.includeFloatingFilter = !!this.filterManager?.hasFloatingFilters() && !this.hidden;\n      const destroyPreviousComp = () => {\n        this.filtersRowCtrl = this.destroyBean(this.filtersRowCtrl);\n      };\n      if (!this.includeFloatingFilter) {\n        destroyPreviousComp();\n        return;\n      }\n      const rowIndex = sequence.next();\n      if (this.filtersRowCtrl) {\n        const rowIndexMismatch = this.filtersRowCtrl.getRowIndex() !== rowIndex;\n        if (!keepColumns || rowIndexMismatch) {\n          destroyPreviousComp();\n        }\n      }\n      if (!this.filtersRowCtrl) {\n        this.filtersRowCtrl = this.createBean(\n          new HeaderRowCtrl(rowIndex, this.pinned, \"filter\" /* FLOATING_FILTER */)\n        );\n      }\n    };\n    refreshColumnGroups();\n    refreshColumns();\n    refreshFilters();\n    const allCtrls = this.getAllCtrls();\n    this.comp.setCtrls(allCtrls);\n    this.restoreFocusOnHeader(focusedHeaderPosition);\n  }\n  getHeaderCtrlForColumn(column) {\n    if (isColumn(column)) {\n      if (!this.columnsRowCtrl) {\n        return;\n      }\n      return this.columnsRowCtrl.getHeaderCellCtrl(column);\n    }\n    if (this.groupsRowCtrls.length === 0) {\n      return;\n    }\n    for (let i = 0; i < this.groupsRowCtrls.length; i++) {\n      const ctrl = this.groupsRowCtrls[i].getHeaderCellCtrl(column);\n      if (ctrl) {\n        return ctrl;\n      }\n    }\n  }\n  getHtmlElementForColumnHeader(column) {\n    const cellCtrl = this.getHeaderCtrlForColumn(column);\n    if (!cellCtrl) {\n      return null;\n    }\n    return cellCtrl.getGui();\n  }\n  getRowType(rowIndex) {\n    const allCtrls = this.getAllCtrls();\n    const ctrl = allCtrls[rowIndex];\n    return ctrl ? ctrl.getType() : void 0;\n  }\n  focusHeader(rowIndex, column, event) {\n    const allCtrls = this.getAllCtrls();\n    const ctrl = allCtrls[rowIndex];\n    if (!ctrl) {\n      return false;\n    }\n    return ctrl.focusHeader(column, event);\n  }\n  getViewportElement() {\n    return this.eViewport;\n  }\n  getGroupRowCount() {\n    return this.groupsRowCtrls.length;\n  }\n  getGroupRowCtrlAtIndex(index) {\n    return this.groupsRowCtrls[index];\n  }\n  getRowCount() {\n    return this.groupsRowCtrls.length + (this.columnsRowCtrl ? 1 : 0) + (this.filtersRowCtrl ? 1 : 0);\n  }\n  setHorizontalScroll(offset) {\n    this.comp.setViewportScrollLeft(offset);\n  }\n  onScrollCallback(fn) {\n    this.addManagedElementListeners(this.getViewportElement(), { scroll: fn });\n  }\n  destroy() {\n    if (this.filtersRowCtrl) {\n      this.filtersRowCtrl = this.destroyBean(this.filtersRowCtrl);\n    }\n    if (this.columnsRowCtrl) {\n      this.columnsRowCtrl = this.destroyBean(this.columnsRowCtrl);\n    }\n    if (this.groupsRowCtrls && this.groupsRowCtrls.length) {\n      this.groupsRowCtrls = this.destroyBeans(this.groupsRowCtrls);\n    }\n    super.destroy();\n  }\n  setupDragAndDrop(dropContainer) {\n    const bodyDropTarget = new BodyDropTarget(this.pinned, dropContainer);\n    this.createManagedBean(bodyDropTarget);\n  }\n  restoreFocusOnHeader(position) {\n    if (!position) {\n      return;\n    }\n    const { column } = position;\n    if (column.getPinned() != this.pinned) {\n      return;\n    }\n    this.focusService.focusHeaderPosition({ headerPosition: position });\n  }\n  // grid cols have changed - this also means the number of rows in the header can have\n  // changed. so we remove all the old rows and insert new ones for a complete refresh\n  onGridColumnsChanged() {\n    this.refresh(true);\n  }\n  onDisplayedColumnsChanged() {\n    const includeFloatingFilter = this.filterManager?.hasFloatingFilters() && !this.hidden;\n    if (this.includeFloatingFilter !== includeFloatingFilter) {\n      this.refresh(true);\n    }\n  }\n  setupCenterWidth() {\n    if (this.pinned != null) {\n      return;\n    }\n    this.createManagedBean(new CenterWidthFeature((width) => this.comp.setCenterWidth(`${width}px`), true));\n  }\n  setupPinnedWidth() {\n    if (this.pinned == null) {\n      return;\n    }\n    const pinningLeft = this.pinned === \"left\";\n    const pinningRight = this.pinned === \"right\";\n    this.hidden = true;\n    const listener = () => {\n      const width = pinningLeft ? this.pinnedWidthService.getPinnedLeftWidth() : this.pinnedWidthService.getPinnedRightWidth();\n      if (width == null) {\n        return;\n      }\n      const hidden = width == 0;\n      const hiddenChanged = this.hidden !== hidden;\n      const isRtl = this.gos.get(\"enableRtl\");\n      const scrollbarWidth = this.gos.getScrollbarWidth();\n      const addPaddingForScrollbar = this.scrollVisibleService.isVerticalScrollShowing() && (isRtl && pinningLeft || !isRtl && pinningRight);\n      const widthWithPadding = addPaddingForScrollbar ? width + scrollbarWidth : width;\n      this.comp.setPinnedContainerWidth(`${widthWithPadding}px`);\n      this.comp.setDisplayed(!hidden);\n      if (hiddenChanged) {\n        this.hidden = hidden;\n        this.refresh();\n      }\n    };\n    this.addManagedEventListeners({\n      leftPinnedWidthChanged: listener,\n      rightPinnedWidthChanged: listener,\n      scrollVisibilityChanged: listener,\n      scrollbarWidthChanged: listener\n    });\n  }\n};\n\n// community-modules/core/src/headerRendering/rowContainer/headerRowContainerComp.ts\nvar PINNED_LEFT_TEMPLATE = (\n  /* html */\n  `<div class=\"ag-pinned-left-header\" role=\"rowgroup\"></div>`\n);\nvar PINNED_RIGHT_TEMPLATE = (\n  /* html */\n  `<div class=\"ag-pinned-right-header\" role=\"rowgroup\"></div>`\n);\nvar CENTER_TEMPLATE = (\n  /* html */\n  `<div class=\"ag-header-viewport\" role=\"presentation\">\n        <div class=\"ag-header-container\" data-ref=\"eCenterContainer\" role=\"rowgroup\"></div>\n    </div>`\n);\nvar HeaderRowContainerComp = class extends Component {\n  constructor(pinned) {\n    super();\n    this.eCenterContainer = RefPlaceholder;\n    this.headerRowComps = {};\n    this.rowCompsList = [];\n    this.pinned = pinned;\n  }\n  postConstruct() {\n    this.selectAndSetTemplate();\n    const compProxy = {\n      setDisplayed: (displayed) => this.setDisplayed(displayed),\n      setCtrls: (ctrls) => this.setCtrls(ctrls),\n      // only gets called for center section\n      setCenterWidth: (width) => this.eCenterContainer.style.width = width,\n      setViewportScrollLeft: (left) => this.getGui().scrollLeft = left,\n      // only gets called for pinned sections\n      setPinnedContainerWidth: (width) => {\n        const eGui = this.getGui();\n        eGui.style.width = width;\n        eGui.style.maxWidth = width;\n        eGui.style.minWidth = width;\n      }\n    };\n    const ctrl = this.createManagedBean(new HeaderRowContainerCtrl(this.pinned));\n    ctrl.setComp(compProxy, this.getGui());\n  }\n  selectAndSetTemplate() {\n    const pinnedLeft = this.pinned == \"left\";\n    const pinnedRight = this.pinned == \"right\";\n    const template = pinnedLeft ? PINNED_LEFT_TEMPLATE : pinnedRight ? PINNED_RIGHT_TEMPLATE : CENTER_TEMPLATE;\n    this.setTemplate(template);\n    this.eRowContainer = this.eCenterContainer !== RefPlaceholder ? this.eCenterContainer : this.getGui();\n  }\n  destroy() {\n    this.setCtrls([]);\n    super.destroy();\n  }\n  destroyRowComp(rowComp) {\n    this.destroyBean(rowComp);\n    this.eRowContainer.removeChild(rowComp.getGui());\n  }\n  setCtrls(ctrls) {\n    const oldRowComps = this.headerRowComps;\n    this.headerRowComps = {};\n    this.rowCompsList = [];\n    let prevGui;\n    const appendEnsuringDomOrder = (rowComp) => {\n      const eGui = rowComp.getGui();\n      const notAlreadyIn = eGui.parentElement != this.eRowContainer;\n      if (notAlreadyIn) {\n        this.eRowContainer.appendChild(eGui);\n      }\n      if (prevGui) {\n        _ensureDomOrder(this.eRowContainer, eGui, prevGui);\n      }\n      prevGui = eGui;\n    };\n    ctrls.forEach((ctrl) => {\n      const ctrlId = ctrl.getInstanceId();\n      const existingComp = oldRowComps[ctrlId];\n      delete oldRowComps[ctrlId];\n      const rowComp = existingComp ? existingComp : this.createBean(new HeaderRowComp(ctrl));\n      this.headerRowComps[ctrlId] = rowComp;\n      this.rowCompsList.push(rowComp);\n      appendEnsuringDomOrder(rowComp);\n    });\n    _getAllValuesInObject(oldRowComps).forEach((c) => this.destroyRowComp(c));\n  }\n};\n\n// community-modules/core/src/headerRendering/gridHeaderComp.ts\nvar GridHeaderComp = class extends Component {\n  constructor() {\n    super(\n      /* html */\n      `<div class=\"ag-header\" role=\"presentation\"/>`\n    );\n  }\n  postConstruct() {\n    const compProxy = {\n      addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n      setHeightAndMinHeight: (height) => {\n        this.getGui().style.height = height;\n        this.getGui().style.minHeight = height;\n      }\n    };\n    const ctrl = this.createManagedBean(new GridHeaderCtrl());\n    ctrl.setComp(compProxy, this.getGui(), this.getFocusableElement());\n    const addContainer = (container) => {\n      this.createManagedBean(container);\n      this.appendChild(container);\n    };\n    addContainer(new HeaderRowContainerComp(\"left\"));\n    addContainer(new HeaderRowContainerComp(null));\n    addContainer(new HeaderRowContainerComp(\"right\"));\n  }\n};\nvar GridHeaderSelector = {\n  selector: \"AG-HEADER-ROOT\",\n  component: GridHeaderComp\n};\n\n// community-modules/core/src/styling/layoutFeature.ts\nvar LayoutCssClasses = /* @__PURE__ */ ((LayoutCssClasses2) => {\n  LayoutCssClasses2[\"AUTO_HEIGHT\"] = \"ag-layout-auto-height\";\n  LayoutCssClasses2[\"NORMAL\"] = \"ag-layout-normal\";\n  LayoutCssClasses2[\"PRINT\"] = \"ag-layout-print\";\n  return LayoutCssClasses2;\n})(LayoutCssClasses || {});\nvar LayoutFeature = class extends BeanStub {\n  constructor(view) {\n    super();\n    this.view = view;\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(\"domLayout\", this.updateLayoutClasses.bind(this));\n    this.updateLayoutClasses();\n  }\n  updateLayoutClasses() {\n    const domLayout = this.getDomLayout();\n    const params = {\n      autoHeight: domLayout === \"autoHeight\",\n      normal: domLayout === \"normal\",\n      print: domLayout === \"print\"\n    };\n    const cssClass = params.autoHeight ? \"ag-layout-auto-height\" /* AUTO_HEIGHT */ : params.print ? \"ag-layout-print\" /* PRINT */ : \"ag-layout-normal\" /* NORMAL */;\n    this.view.updateLayoutClasses(cssClass, params);\n  }\n  // returns either 'print', 'autoHeight' or 'normal' (normal is the default)\n  getDomLayout() {\n    const domLayout = this.gos.get(\"domLayout\") ?? \"normal\";\n    const validLayouts = [\"normal\", \"print\", \"autoHeight\"];\n    if (validLayouts.indexOf(domLayout) === -1) {\n      _warnOnce(`${domLayout} is not valid for DOM Layout, valid values are 'normal', 'autoHeight', 'print'.`);\n      return \"normal\";\n    }\n    return domLayout;\n  }\n};\n\n// community-modules/core/src/rendering/overlays/overlayWrapperComponent.ts\nvar OverlayWrapperComponent = class extends Component {\n  constructor() {\n    super(\n      /* html */\n      `\n            <div class=\"ag-overlay\" role=\"presentation\">\n                <div class=\"ag-overlay-panel\" role=\"presentation\">\n                    <div class=\"ag-overlay-wrapper\" data-ref=\"eOverlayWrapper\" role=\"presentation\"></div>\n                </div>\n            </div>`\n    );\n    this.eOverlayWrapper = RefPlaceholder;\n    this.activePromise = null;\n    this.activeOverlay = null;\n    this.updateListenerDestroyFunc = null;\n    this.activeOverlayWrapperCssClass = null;\n    this.elToFocusAfter = null;\n  }\n  wireBeans(beans) {\n    this.overlayService = beans.overlayService;\n    this.focusService = beans.focusService;\n    this.visibleColsService = beans.visibleColsService;\n  }\n  handleKeyDown(e) {\n    if (e.key !== KeyCode.TAB || e.defaultPrevented || _isStopPropagationForAgGrid(e)) {\n      return;\n    }\n    const nextEl = this.focusService.findNextFocusableElement(this.eOverlayWrapper, false, e.shiftKey);\n    if (nextEl) {\n      return;\n    }\n    let isFocused = false;\n    if (e.shiftKey) {\n      isFocused = this.focusService.focusGridView(_last(this.visibleColsService.getAllCols()), true, false);\n    } else {\n      isFocused = this.focusService.focusNextGridCoreContainer(false);\n    }\n    if (isFocused) {\n      e.preventDefault();\n    }\n  }\n  updateLayoutClasses(cssClass, params) {\n    const overlayWrapperClassList = this.eOverlayWrapper.classList;\n    overlayWrapperClassList.toggle(\"ag-layout-auto-height\" /* AUTO_HEIGHT */, params.autoHeight);\n    overlayWrapperClassList.toggle(\"ag-layout-normal\" /* NORMAL */, params.normal);\n    overlayWrapperClassList.toggle(\"ag-layout-print\" /* PRINT */, params.print);\n  }\n  postConstruct() {\n    this.createManagedBean(new LayoutFeature(this));\n    this.setDisplayed(false, { skipAriaHidden: true });\n    this.overlayService.registerOverlayWrapperComp(this);\n    this.addManagedElementListeners(this.getFocusableElement(), { keydown: this.handleKeyDown.bind(this) });\n  }\n  setWrapperTypeClass(overlayWrapperCssClass) {\n    const overlayWrapperClassList = this.eOverlayWrapper.classList;\n    if (this.activeOverlayWrapperCssClass) {\n      overlayWrapperClassList.toggle(this.activeOverlayWrapperCssClass, false);\n    }\n    this.activeOverlayWrapperCssClass = overlayWrapperCssClass;\n    overlayWrapperClassList.toggle(overlayWrapperCssClass, true);\n  }\n  showOverlay(overlayComponentPromise, overlayWrapperCssClass, exclusive, gridOption) {\n    this.setWrapperTypeClass(overlayWrapperCssClass);\n    this.destroyActiveOverlay();\n    this.elToFocusAfter = null;\n    this.activePromise = overlayComponentPromise;\n    if (!overlayComponentPromise) {\n      return;\n    }\n    this.setDisplayed(true, { skipAriaHidden: true });\n    if (exclusive && this.focusService.isGridFocused()) {\n      const activeElement = this.gos.getActiveDomElement();\n      if (activeElement && !this.gos.isNothingFocused()) {\n        this.elToFocusAfter = activeElement;\n      }\n    }\n    overlayComponentPromise.then((comp) => {\n      if (this.activePromise !== overlayComponentPromise) {\n        if (this.activeOverlay !== comp) {\n          this.destroyBean(comp);\n          comp = null;\n        }\n        return;\n      }\n      this.activePromise = null;\n      if (!comp) {\n        return;\n      }\n      if (this.activeOverlay !== comp) {\n        this.eOverlayWrapper.appendChild(comp.getGui());\n        this.activeOverlay = comp;\n        if (gridOption) {\n          const component = comp;\n          this.updateListenerDestroyFunc = this.addManagedPropertyListener(gridOption, ({ currentValue }) => {\n            component.refresh?.(this.gos.addGridCommonParams({ ...currentValue ?? {} }));\n          });\n        }\n      }\n      const focusService = this.focusService;\n      if (exclusive && focusService.isGridFocused()) {\n        focusService.focusInto(this.eOverlayWrapper);\n      }\n    });\n  }\n  updateOverlayWrapperPaddingTop(padding) {\n    this.eOverlayWrapper.style.setProperty(\"padding-top\", `${padding}px`);\n  }\n  destroyActiveOverlay() {\n    this.activePromise = null;\n    const activeOverlay = this.activeOverlay;\n    if (!activeOverlay) {\n      return;\n    }\n    let elementToFocus = this.elToFocusAfter;\n    this.activeOverlay = null;\n    this.elToFocusAfter = null;\n    if (elementToFocus && !this.focusService.isGridFocused()) {\n      elementToFocus = null;\n    }\n    const updateListenerDestroyFunc = this.updateListenerDestroyFunc;\n    if (updateListenerDestroyFunc) {\n      updateListenerDestroyFunc();\n      this.updateListenerDestroyFunc = null;\n    }\n    this.destroyBean(activeOverlay);\n    _clearElement(this.eOverlayWrapper);\n    elementToFocus?.focus?.({ preventScroll: true });\n  }\n  hideOverlay() {\n    this.destroyActiveOverlay();\n    this.setDisplayed(false, { skipAriaHidden: true });\n  }\n  destroy() {\n    this.elToFocusAfter = null;\n    this.destroyActiveOverlay();\n    super.destroy();\n  }\n};\nvar OverlayWrapperSelector = {\n  selector: \"AG-OVERLAY-WRAPPER\",\n  component: OverlayWrapperComponent\n};\n\n// community-modules/core/src/gridBodyComp/abstractFakeScrollComp.ts\nvar AbstractFakeScrollComp = class extends Component {\n  constructor(template, direction) {\n    super();\n    this.direction = direction;\n    this.eViewport = RefPlaceholder;\n    this.eContainer = RefPlaceholder;\n    this.hideTimeout = null;\n    this.setTemplate(template);\n  }\n  wireBeans(beans) {\n    this.animationFrameService = beans.animationFrameService;\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      scrollVisibilityChanged: this.onScrollVisibilityChanged.bind(this)\n    });\n    this.onScrollVisibilityChanged();\n    this.addOrRemoveCssClass(\"ag-apple-scrollbar\", _isMacOsUserAgent() || _isIOSUserAgent());\n  }\n  initialiseInvisibleScrollbar() {\n    if (this.invisibleScrollbar !== void 0) {\n      return;\n    }\n    this.invisibleScrollbar = _isInvisibleScrollbar();\n    if (this.invisibleScrollbar) {\n      this.hideAndShowInvisibleScrollAsNeeded();\n      this.addActiveListenerToggles();\n    }\n  }\n  addActiveListenerToggles() {\n    const eGui = this.getGui();\n    const onActivate = () => this.addOrRemoveCssClass(\"ag-scrollbar-active\", true);\n    const onDeactivate = () => this.addOrRemoveCssClass(\"ag-scrollbar-active\", false);\n    this.addManagedListeners(eGui, {\n      mouseenter: onActivate,\n      mousedown: onActivate,\n      touchstart: onActivate,\n      mouseleave: onDeactivate,\n      touchend: onDeactivate\n    });\n  }\n  onScrollVisibilityChanged() {\n    if (this.invisibleScrollbar === void 0) {\n      this.initialiseInvisibleScrollbar();\n    }\n    this.animationFrameService.requestAnimationFrame(() => this.setScrollVisible());\n  }\n  hideAndShowInvisibleScrollAsNeeded() {\n    this.addManagedEventListeners({\n      bodyScroll: (params) => {\n        if (params.direction === this.direction) {\n          if (this.hideTimeout !== null) {\n            window.clearTimeout(this.hideTimeout);\n            this.hideTimeout = null;\n          }\n          this.addOrRemoveCssClass(\"ag-scrollbar-scrolling\", true);\n        }\n      },\n      bodyScrollEnd: () => {\n        this.hideTimeout = window.setTimeout(() => {\n          this.addOrRemoveCssClass(\"ag-scrollbar-scrolling\", false);\n          this.hideTimeout = null;\n        }, 400);\n      }\n    });\n  }\n  attemptSettingScrollPosition(value) {\n    const viewport = this.getViewportElement();\n    _waitUntil(\n      () => _isVisible(viewport),\n      () => this.setScrollPosition(value),\n      100\n    );\n  }\n  getViewportElement() {\n    return this.eViewport;\n  }\n  getContainer() {\n    return this.eContainer;\n  }\n  onScrollCallback(fn) {\n    this.addManagedElementListeners(this.getViewportElement(), { scroll: fn });\n  }\n};\n\n// community-modules/core/src/gridBodyComp/fakeHScrollComp.ts\nvar FakeHScrollComp = class extends AbstractFakeScrollComp {\n  constructor() {\n    super(\n      /* html */\n      `<div class=\"ag-body-horizontal-scroll\" aria-hidden=\"true\">\n            <div class=\"ag-horizontal-left-spacer\" data-ref=\"eLeftSpacer\"></div>\n            <div class=\"ag-body-horizontal-scroll-viewport\" data-ref=\"eViewport\">\n                <div class=\"ag-body-horizontal-scroll-container\" data-ref=\"eContainer\"></div>\n            </div>\n            <div class=\"ag-horizontal-right-spacer\" data-ref=\"eRightSpacer\"></div>\n        </div>`,\n      \"horizontal\"\n    );\n    this.eLeftSpacer = RefPlaceholder;\n    this.eRightSpacer = RefPlaceholder;\n  }\n  wireBeans(beans) {\n    super.wireBeans(beans);\n    this.visibleColsService = beans.visibleColsService;\n    this.pinnedRowModel = beans.pinnedRowModel;\n    this.ctrlsService = beans.ctrlsService;\n    this.scrollVisibleService = beans.scrollVisibleService;\n  }\n  postConstruct() {\n    super.postConstruct();\n    const spacerWidthsListener = this.setFakeHScrollSpacerWidths.bind(this);\n    this.addManagedEventListeners({\n      displayedColumnsChanged: spacerWidthsListener,\n      displayedColumnsWidthChanged: spacerWidthsListener,\n      pinnedRowDataChanged: this.onPinnedRowDataChanged.bind(this)\n    });\n    this.addManagedPropertyListener(\"domLayout\", spacerWidthsListener);\n    this.ctrlsService.register(\"fakeHScrollComp\", this);\n    this.createManagedBean(new CenterWidthFeature((width) => this.eContainer.style.width = `${width}px`));\n    this.addManagedPropertyListeners([\"suppressHorizontalScroll\"], this.onScrollVisibilityChanged.bind(this));\n  }\n  initialiseInvisibleScrollbar() {\n    if (this.invisibleScrollbar !== void 0) {\n      return;\n    }\n    this.enableRtl = this.gos.get(\"enableRtl\");\n    super.initialiseInvisibleScrollbar();\n    if (this.invisibleScrollbar) {\n      this.refreshCompBottom();\n    }\n  }\n  onPinnedRowDataChanged() {\n    this.refreshCompBottom();\n  }\n  refreshCompBottom() {\n    if (!this.invisibleScrollbar) {\n      return;\n    }\n    const bottomPinnedHeight = this.pinnedRowModel.getPinnedBottomTotalHeight();\n    this.getGui().style.bottom = `${bottomPinnedHeight}px`;\n  }\n  onScrollVisibilityChanged() {\n    super.onScrollVisibilityChanged();\n    this.setFakeHScrollSpacerWidths();\n  }\n  setFakeHScrollSpacerWidths() {\n    const vScrollShowing = this.scrollVisibleService.isVerticalScrollShowing();\n    let rightSpacing = this.visibleColsService.getDisplayedColumnsRightWidth();\n    const scrollOnRight = !this.enableRtl && vScrollShowing;\n    const scrollbarWidth = this.gos.getScrollbarWidth();\n    if (scrollOnRight) {\n      rightSpacing += scrollbarWidth;\n    }\n    _setFixedWidth(this.eRightSpacer, rightSpacing);\n    this.eRightSpacer.classList.toggle(\"ag-scroller-corner\", rightSpacing <= scrollbarWidth);\n    let leftSpacing = this.visibleColsService.getColsLeftWidth();\n    const scrollOnLeft = this.enableRtl && vScrollShowing;\n    if (scrollOnLeft) {\n      leftSpacing += scrollbarWidth;\n    }\n    _setFixedWidth(this.eLeftSpacer, leftSpacing);\n    this.eLeftSpacer.classList.toggle(\"ag-scroller-corner\", leftSpacing <= scrollbarWidth);\n  }\n  setScrollVisible() {\n    const hScrollShowing = this.scrollVisibleService.isHorizontalScrollShowing();\n    const invisibleScrollbar2 = this.invisibleScrollbar;\n    const isSuppressHorizontalScroll = this.gos.get(\"suppressHorizontalScroll\");\n    const scrollbarWidth = hScrollShowing ? this.gos.getScrollbarWidth() || 0 : 0;\n    const adjustedScrollbarWidth = scrollbarWidth === 0 && invisibleScrollbar2 ? 16 : scrollbarWidth;\n    const scrollContainerSize = !isSuppressHorizontalScroll ? adjustedScrollbarWidth : 0;\n    this.addOrRemoveCssClass(\"ag-scrollbar-invisible\", invisibleScrollbar2);\n    _setFixedHeight(this.getGui(), scrollContainerSize);\n    _setFixedHeight(this.eViewport, scrollContainerSize);\n    _setFixedHeight(this.eContainer, scrollContainerSize);\n    this.setDisplayed(hScrollShowing, { skipAriaHidden: true });\n  }\n  getScrollPosition() {\n    return _getScrollLeft(this.getViewportElement(), this.enableRtl);\n  }\n  setScrollPosition(value) {\n    if (!_isVisible(this.getViewportElement())) {\n      this.attemptSettingScrollPosition(value);\n    }\n    _setScrollLeft(this.getViewportElement(), value, this.enableRtl);\n  }\n};\nvar FakeHScrollSelector = {\n  selector: \"AG-FAKE-HORIZONTAL-SCROLL\",\n  component: FakeHScrollComp\n};\n\n// community-modules/core/src/gridBodyComp/rowContainer/setHeightFeature.ts\nvar SetHeightFeature = class extends BeanStub {\n  wireBeans(beans) {\n    this.maxDivHeightScaler = beans.rowContainerHeightService;\n  }\n  constructor(eContainer, eViewport) {\n    super();\n    this.eContainer = eContainer;\n    this.eViewport = eViewport;\n  }\n  postConstruct() {\n    this.addManagedEventListeners({ rowContainerHeightChanged: this.onHeightChanged.bind(this) });\n  }\n  onHeightChanged() {\n    const height = this.maxDivHeightScaler.getUiContainerHeight();\n    const heightString = height != null ? `${height}px` : ``;\n    this.eContainer.style.height = heightString;\n    if (this.eViewport) {\n      this.eViewport.style.height = heightString;\n    }\n  }\n};\n\n// community-modules/core/src/gridBodyComp/fakeVScrollComp.ts\nvar FakeVScrollComp = class extends AbstractFakeScrollComp {\n  wireBeans(beans) {\n    super.wireBeans(beans);\n    this.ctrlsService = beans.ctrlsService;\n    this.scrollVisibleService = beans.scrollVisibleService;\n  }\n  constructor() {\n    super(\n      /* html */\n      `<div class=\"ag-body-vertical-scroll\" aria-hidden=\"true\">\n            <div class=\"ag-body-vertical-scroll-viewport\" data-ref=\"eViewport\">\n                <div class=\"ag-body-vertical-scroll-container\" data-ref=\"eContainer\"></div>\n            </div>\n        </div>`,\n      \"vertical\"\n    );\n  }\n  postConstruct() {\n    super.postConstruct();\n    this.createManagedBean(new SetHeightFeature(this.eContainer));\n    this.ctrlsService.register(\"fakeVScrollComp\", this);\n    this.addManagedEventListeners({ rowContainerHeightChanged: this.onRowContainerHeightChanged.bind(this) });\n  }\n  setScrollVisible() {\n    const vScrollShowing = this.scrollVisibleService.isVerticalScrollShowing();\n    const invisibleScrollbar2 = this.invisibleScrollbar;\n    const scrollbarWidth = vScrollShowing ? this.gos.getScrollbarWidth() || 0 : 0;\n    const adjustedScrollbarWidth = scrollbarWidth === 0 && invisibleScrollbar2 ? 16 : scrollbarWidth;\n    this.addOrRemoveCssClass(\"ag-scrollbar-invisible\", invisibleScrollbar2);\n    _setFixedWidth(this.getGui(), adjustedScrollbarWidth);\n    _setFixedWidth(this.eViewport, adjustedScrollbarWidth);\n    _setFixedWidth(this.eContainer, adjustedScrollbarWidth);\n    this.setDisplayed(vScrollShowing, { skipAriaHidden: true });\n  }\n  onRowContainerHeightChanged() {\n    const { ctrlsService } = this;\n    const gridBodyCtrl = ctrlsService.getGridBodyCtrl();\n    const gridBodyViewportEl = gridBodyCtrl.getBodyViewportElement();\n    const eViewportScrollTop = this.getScrollPosition();\n    const gridBodyViewportScrollTop = gridBodyViewportEl.scrollTop;\n    if (eViewportScrollTop != gridBodyViewportScrollTop) {\n      this.setScrollPosition(gridBodyViewportScrollTop, true);\n    }\n  }\n  getScrollPosition() {\n    return this.getViewportElement().scrollTop;\n  }\n  setScrollPosition(value, force) {\n    if (!force && !_isVisible(this.getViewportElement())) {\n      this.attemptSettingScrollPosition(value);\n    }\n    this.getViewportElement().scrollTop = value;\n  }\n};\nvar FakeVScrollSelector = {\n  selector: \"AG-FAKE-VERTICAL-SCROLL\",\n  component: FakeVScrollComp\n};\n\n// community-modules/core/src/gridBodyComp/gridBodyScrollFeature.ts\nvar HorizontalSources = /* @__PURE__ */ ((HorizontalSources2) => {\n  HorizontalSources2[\"FakeHScrollbar\"] = \"fakeHScrollComp\";\n  HorizontalSources2[\"Header\"] = \"centerHeader\";\n  HorizontalSources2[\"PinnedTop\"] = \"topCenter\";\n  HorizontalSources2[\"PinnedBottom\"] = \"bottomCenter\";\n  HorizontalSources2[\"StickyTop\"] = \"stickyTopCenter\";\n  HorizontalSources2[\"StickyBottom\"] = \"stickyBottomCenter\";\n  return HorizontalSources2;\n})(HorizontalSources || {});\nvar GridBodyScrollFeature = class extends BeanStub {\n  constructor(eBodyViewport) {\n    super();\n    this.lastScrollSource = [null, null];\n    this.scrollLeft = -1;\n    this.nextScrollTop = -1;\n    this.scrollTop = -1;\n    // Used to provide approximate values of scrollTop and offsetHeight\n    // without forcing the browser to recalculate styles.\n    this.lastOffsetHeight = -1;\n    this.lastScrollTop = -1;\n    this.eBodyViewport = eBodyViewport;\n    this.resetLastHScrollDebounced = _debounce(\n      () => this.lastScrollSource[1 /* Horizontal */] = null,\n      500\n    );\n    this.resetLastVScrollDebounced = _debounce(() => this.lastScrollSource[0 /* Vertical */] = null, 500);\n  }\n  wireBeans(beans) {\n    this.ctrlsService = beans.ctrlsService;\n    this.animationFrameService = beans.animationFrameService;\n    this.paginationService = beans.paginationService;\n    this.pageBoundsService = beans.pageBoundsService;\n    this.rowModel = beans.rowModel;\n    this.heightScaler = beans.rowContainerHeightService;\n    this.rowRenderer = beans.rowRenderer;\n    this.columnModel = beans.columnModel;\n    this.visibleColsService = beans.visibleColsService;\n  }\n  postConstruct() {\n    this.enableRtl = this.gos.get(\"enableRtl\");\n    this.addManagedEventListeners({\n      displayedColumnsWidthChanged: this.onDisplayedColumnsWidthChanged.bind(this)\n    });\n    this.ctrlsService.whenReady((p) => {\n      this.centerRowsCtrl = p.center;\n      this.onDisplayedColumnsWidthChanged();\n      this.addScrollListener();\n    });\n  }\n  addScrollListener() {\n    this.addHorizontalScrollListeners();\n    this.addVerticalScrollListeners();\n  }\n  addHorizontalScrollListeners() {\n    const params = this.ctrlsService.getParams();\n    this.addManagedElementListeners(this.centerRowsCtrl.getViewportElement(), {\n      scroll: this.onHScroll.bind(this, \"Viewport\" /* Viewport */)\n    });\n    for (const source of Object.values(HorizontalSources)) {\n      const scrollPartner = params[source];\n      this.registerScrollPartner(scrollPartner, this.onHScroll.bind(this, source));\n    }\n  }\n  addVerticalScrollListeners() {\n    const params = this.ctrlsService.getParams();\n    const isDebounce = this.gos.get(\"debounceVerticalScrollbar\");\n    const onVScroll = isDebounce ? _debounce(this.onVScroll.bind(this, \"Viewport\" /* Viewport */), 100) : this.onVScroll.bind(this, \"Viewport\" /* Viewport */);\n    const onFakeVScroll = isDebounce ? _debounce(this.onVScroll.bind(this, \"fakeVScrollComp\" /* FakeVScrollbar */), 100) : this.onVScroll.bind(this, \"fakeVScrollComp\" /* FakeVScrollbar */);\n    this.addManagedElementListeners(this.eBodyViewport, { scroll: onVScroll });\n    this.registerScrollPartner(params.fakeVScrollComp, onFakeVScroll);\n  }\n  registerScrollPartner(comp, callback) {\n    comp.onScrollCallback(callback);\n  }\n  onDisplayedColumnsWidthChanged() {\n    if (this.enableRtl) {\n      this.horizontallyScrollHeaderCenterAndFloatingCenter();\n    }\n  }\n  horizontallyScrollHeaderCenterAndFloatingCenter(scrollLeft) {\n    const notYetInitialised = this.centerRowsCtrl == null;\n    if (notYetInitialised) {\n      return;\n    }\n    if (scrollLeft === void 0) {\n      scrollLeft = this.centerRowsCtrl.getCenterViewportScrollLeft();\n    }\n    this.setScrollLeftForAllContainersExceptCurrent(Math.abs(scrollLeft));\n  }\n  setScrollLeftForAllContainersExceptCurrent(scrollLeft) {\n    for (const container of [...Object.values(HorizontalSources), \"Viewport\" /* Viewport */]) {\n      if (this.lastScrollSource[1 /* Horizontal */] === container) {\n        continue;\n      }\n      const viewport = this.getViewportForSource(container);\n      _setScrollLeft(viewport, scrollLeft, this.enableRtl);\n    }\n  }\n  getViewportForSource(source) {\n    if (source === \"Viewport\" /* Viewport */) {\n      return this.centerRowsCtrl.getViewportElement();\n    }\n    return this.ctrlsService.get(source).getViewportElement();\n  }\n  isControllingScroll(source, direction) {\n    if (this.lastScrollSource[direction] == null) {\n      if (direction === 0 /* Vertical */) {\n        this.lastScrollSource[0] = source;\n      } else {\n        this.lastScrollSource[1] = source;\n      }\n      return true;\n    }\n    return this.lastScrollSource[direction] === source;\n  }\n  onHScroll(source) {\n    if (!this.isControllingScroll(source, 1 /* Horizontal */)) {\n      return;\n    }\n    const centerContainerViewport = this.centerRowsCtrl.getViewportElement();\n    const { scrollLeft } = centerContainerViewport;\n    if (this.shouldBlockScrollUpdate(1 /* Horizontal */, scrollLeft, true)) {\n      return;\n    }\n    const newScrollLeft = _getScrollLeft(this.getViewportForSource(source), this.enableRtl);\n    this.doHorizontalScroll(Math.round(newScrollLeft));\n    this.resetLastHScrollDebounced();\n  }\n  onVScroll(source) {\n    if (!this.isControllingScroll(source, 0 /* Vertical */)) {\n      return;\n    }\n    let scrollTop;\n    if (source === \"Viewport\" /* Viewport */) {\n      scrollTop = this.eBodyViewport.scrollTop;\n    } else {\n      scrollTop = this.ctrlsService.get(\"fakeVScrollComp\").getScrollPosition();\n    }\n    if (this.shouldBlockScrollUpdate(0 /* Vertical */, scrollTop, true)) {\n      return;\n    }\n    this.animationFrameService.setScrollTop(scrollTop);\n    this.nextScrollTop = scrollTop;\n    if (source === \"Viewport\" /* Viewport */) {\n      this.ctrlsService.get(\"fakeVScrollComp\").setScrollPosition(scrollTop);\n    } else {\n      this.eBodyViewport.scrollTop = scrollTop;\n    }\n    if (this.gos.get(\"suppressAnimationFrame\")) {\n      this.scrollGridIfNeeded();\n    } else {\n      this.animationFrameService.schedule();\n    }\n    this.resetLastVScrollDebounced();\n  }\n  doHorizontalScroll(scrollLeft) {\n    const fakeScrollLeft = this.ctrlsService.get(\"fakeHScrollComp\").getScrollPosition();\n    if (this.scrollLeft === scrollLeft && scrollLeft === fakeScrollLeft) {\n      return;\n    }\n    this.scrollLeft = scrollLeft;\n    this.fireScrollEvent(1 /* Horizontal */);\n    this.horizontallyScrollHeaderCenterAndFloatingCenter(scrollLeft);\n    this.centerRowsCtrl.onHorizontalViewportChanged(true);\n  }\n  fireScrollEvent(direction) {\n    const bodyScrollEvent = {\n      type: \"bodyScroll\",\n      direction: direction === 1 /* Horizontal */ ? \"horizontal\" : \"vertical\",\n      left: this.scrollLeft,\n      top: this.scrollTop\n    };\n    this.eventService.dispatchEvent(bodyScrollEvent);\n    window.clearTimeout(this.scrollTimer);\n    this.scrollTimer = void 0;\n    this.scrollTimer = window.setTimeout(() => {\n      this.eventService.dispatchEvent({\n        ...bodyScrollEvent,\n        type: \"bodyScrollEnd\"\n      });\n    }, 100);\n  }\n  shouldBlockScrollUpdate(direction, scrollTo, touchOnly = false) {\n    if (touchOnly && !_isIOSUserAgent()) {\n      return false;\n    }\n    if (direction === 0 /* Vertical */) {\n      return this.shouldBlockVerticalScroll(scrollTo);\n    }\n    return this.shouldBlockHorizontalScroll(scrollTo);\n  }\n  shouldBlockVerticalScroll(scrollTo) {\n    const clientHeight = _getInnerHeight(this.eBodyViewport);\n    const { scrollHeight } = this.eBodyViewport;\n    if (scrollTo < 0 || scrollTo + clientHeight > scrollHeight) {\n      return true;\n    }\n    return false;\n  }\n  shouldBlockHorizontalScroll(scrollTo) {\n    const clientWidth = this.centerRowsCtrl.getCenterWidth();\n    const { scrollWidth } = this.centerRowsCtrl.getViewportElement();\n    if (this.enableRtl && _isRtlNegativeScroll()) {\n      if (scrollTo > 0) {\n        return true;\n      }\n    } else if (scrollTo < 0) {\n      return true;\n    }\n    if (Math.abs(scrollTo) + clientWidth > scrollWidth) {\n      return true;\n    }\n    return false;\n  }\n  redrawRowsAfterScroll() {\n    this.fireScrollEvent(0 /* Vertical */);\n  }\n  // this is to cater for AG-3274, where grid is removed from the dom and then inserted back in again.\n  // (which happens with some implementations of tabbing). this can result in horizontal scroll getting\n  // reset back to the left, however no scroll event is fired. so we need to get header to also scroll\n  // back to the left to be kept in sync.\n  // adding and removing the grid from the DOM both resets the scroll position and\n  // triggers a resize event, so notify listeners if the scroll position has changed\n  checkScrollLeft() {\n    if (this.scrollLeft !== this.centerRowsCtrl.getCenterViewportScrollLeft()) {\n      this.onHScroll(\"Viewport\" /* Viewport */);\n    }\n  }\n  scrollGridIfNeeded() {\n    const frameNeeded = this.scrollTop != this.nextScrollTop;\n    if (frameNeeded) {\n      this.scrollTop = this.nextScrollTop;\n      this.redrawRowsAfterScroll();\n    }\n    return frameNeeded;\n  }\n  // called by scrollHorizontally method and alignedGridsService\n  setHorizontalScrollPosition(hScrollPosition, fromAlignedGridsService = false) {\n    const minScrollLeft = 0;\n    const maxScrollLeft = this.centerRowsCtrl.getViewportElement().scrollWidth - this.centerRowsCtrl.getCenterWidth();\n    if (!fromAlignedGridsService && this.shouldBlockScrollUpdate(1 /* Horizontal */, hScrollPosition)) {\n      if (this.enableRtl && _isRtlNegativeScroll()) {\n        hScrollPosition = hScrollPosition > 0 ? 0 : maxScrollLeft;\n      } else {\n        hScrollPosition = Math.min(Math.max(hScrollPosition, minScrollLeft), maxScrollLeft);\n      }\n    }\n    _setScrollLeft(this.centerRowsCtrl.getViewportElement(), Math.abs(hScrollPosition), this.enableRtl);\n    this.doHorizontalScroll(hScrollPosition);\n  }\n  setVerticalScrollPosition(vScrollPosition) {\n    this.eBodyViewport.scrollTop = vScrollPosition;\n  }\n  getVScrollPosition() {\n    this.lastScrollTop = this.eBodyViewport.scrollTop;\n    this.lastOffsetHeight = this.eBodyViewport.offsetHeight;\n    const result = {\n      top: this.lastScrollTop,\n      bottom: this.lastScrollTop + this.lastOffsetHeight\n    };\n    return result;\n  }\n  /** Get an approximate scroll position that returns the last real value read.\n   * This is useful for avoiding repeated DOM reads that force the browser to recalculate styles.\n   * This can have big performance improvements but may not be 100% accurate so only use if this is acceptable.\n   */\n  getApproximateVScollPosition() {\n    if (this.lastScrollTop >= 0 && this.lastOffsetHeight >= 0) {\n      return {\n        top: this.scrollTop,\n        bottom: this.scrollTop + this.lastOffsetHeight\n      };\n    }\n    return this.getVScrollPosition();\n  }\n  getHScrollPosition() {\n    return this.centerRowsCtrl.getHScrollPosition();\n  }\n  isHorizontalScrollShowing() {\n    return this.centerRowsCtrl.isHorizontalScrollShowing();\n  }\n  // called by the headerRootComp and moveColumnController\n  scrollHorizontally(pixels) {\n    const oldScrollPosition = this.centerRowsCtrl.getViewportElement().scrollLeft;\n    this.setHorizontalScrollPosition(oldScrollPosition + pixels);\n    return this.centerRowsCtrl.getViewportElement().scrollLeft - oldScrollPosition;\n  }\n  // gets called by rowRenderer when new data loaded, as it will want to scroll to the top\n  scrollToTop() {\n    this.eBodyViewport.scrollTop = 0;\n  }\n  // Valid values for position are bottom, middle and top\n  ensureNodeVisible(comparator, position = null) {\n    const rowCount = this.rowModel.getRowCount();\n    let indexToSelect = -1;\n    for (let i = 0; i < rowCount; i++) {\n      const node = this.rowModel.getRow(i);\n      if (typeof comparator === \"function\") {\n        const predicate = comparator;\n        if (node && predicate(node)) {\n          indexToSelect = i;\n          break;\n        }\n      } else {\n        if (comparator === node || comparator === node.data) {\n          indexToSelect = i;\n          break;\n        }\n      }\n    }\n    if (indexToSelect >= 0) {\n      this.ensureIndexVisible(indexToSelect, position);\n    }\n  }\n  // Valid values for position are bottom, middle and top\n  // position should be {'top','middle','bottom', or undefined/null}.\n  // if undefined/null, then the grid will to the minimal amount of scrolling,\n  // eg if grid needs to scroll up, it scrolls until row is on top,\n  //    if grid needs to scroll down, it scrolls until row is on bottom,\n  //    if row is already in view, grid does not scroll\n  ensureIndexVisible(index, position) {\n    if (this.gos.isDomLayout(\"print\")) {\n      return;\n    }\n    const rowCount = this.rowModel.getRowCount();\n    if (typeof index !== \"number\" || index < 0 || index >= rowCount) {\n      _warnOnce(\"Invalid row index for ensureIndexVisible: \" + index);\n      return;\n    }\n    const isPaging = this.gos.get(\"pagination\");\n    const paginationPanelEnabled = isPaging && !this.gos.get(\"suppressPaginationPanel\");\n    this.getFrameworkOverrides().wrapIncoming(() => {\n      if (!paginationPanelEnabled) {\n        this.paginationService?.goToPageWithIndex(index);\n      }\n      const gridBodyCtrl = this.ctrlsService.getGridBodyCtrl();\n      const stickyTopHeight = gridBodyCtrl.getStickyTopHeight();\n      const stickyBottomHeight = gridBodyCtrl.getStickyBottomHeight();\n      const rowNode = this.rowModel.getRow(index);\n      let rowGotShiftedDuringOperation;\n      do {\n        const startingRowTop = rowNode.rowTop;\n        const startingRowHeight = rowNode.rowHeight;\n        const paginationOffset = this.pageBoundsService.getPixelOffset();\n        const rowTopPixel = rowNode.rowTop - paginationOffset;\n        const rowBottomPixel = rowTopPixel + rowNode.rowHeight;\n        const scrollPosition = this.getVScrollPosition();\n        const heightOffset = this.heightScaler.getDivStretchOffset();\n        const vScrollTop = scrollPosition.top + heightOffset;\n        const vScrollBottom = scrollPosition.bottom + heightOffset;\n        const viewportHeight = vScrollBottom - vScrollTop;\n        const pxTop = this.heightScaler.getScrollPositionForPixel(rowTopPixel);\n        const pxBottom = this.heightScaler.getScrollPositionForPixel(rowBottomPixel - viewportHeight);\n        const pxMiddle = Math.min((pxTop + pxBottom) / 2, rowTopPixel);\n        const rowAboveViewport = vScrollTop + stickyTopHeight > rowTopPixel;\n        const rowBelowViewport = vScrollBottom - stickyBottomHeight < rowBottomPixel;\n        let newScrollPosition = null;\n        if (position === \"top\") {\n          newScrollPosition = pxTop;\n        } else if (position === \"bottom\") {\n          newScrollPosition = pxBottom;\n        } else if (position === \"middle\") {\n          newScrollPosition = pxMiddle;\n        } else if (rowAboveViewport) {\n          newScrollPosition = pxTop - stickyTopHeight;\n        } else if (rowBelowViewport) {\n          newScrollPosition = pxBottom + stickyBottomHeight;\n        }\n        if (newScrollPosition !== null) {\n          this.setVerticalScrollPosition(newScrollPosition);\n          this.rowRenderer.redraw({ afterScroll: true });\n        }\n        rowGotShiftedDuringOperation = startingRowTop !== rowNode.rowTop || startingRowHeight !== rowNode.rowHeight;\n      } while (rowGotShiftedDuringOperation);\n      this.animationFrameService.flushAllFrames();\n    });\n  }\n  ensureColumnVisible(key, position = \"auto\") {\n    const column = this.columnModel.getCol(key);\n    if (!column) {\n      return;\n    }\n    if (column.isPinned()) {\n      return;\n    }\n    if (!this.visibleColsService.isColDisplayed(column)) {\n      return;\n    }\n    const newHorizontalScroll = this.getPositionedHorizontalScroll(column, position);\n    this.getFrameworkOverrides().wrapIncoming(() => {\n      if (newHorizontalScroll !== null) {\n        this.centerRowsCtrl.setCenterViewportScrollLeft(newHorizontalScroll);\n      }\n      this.centerRowsCtrl.onHorizontalViewportChanged();\n      this.animationFrameService.flushAllFrames();\n    });\n  }\n  setScrollPosition(top, left) {\n    this.getFrameworkOverrides().wrapIncoming(() => {\n      this.centerRowsCtrl.setCenterViewportScrollLeft(left);\n      this.setVerticalScrollPosition(top);\n      this.rowRenderer.redraw({ afterScroll: true });\n      this.animationFrameService.flushAllFrames();\n    });\n  }\n  getPositionedHorizontalScroll(column, position) {\n    const { columnBeforeStart, columnAfterEnd } = this.isColumnOutsideViewport(column);\n    const viewportTooSmallForColumn = this.centerRowsCtrl.getCenterWidth() < column.getActualWidth();\n    const viewportWidth = this.centerRowsCtrl.getCenterWidth();\n    const isRtl = this.enableRtl;\n    let alignColToStart = (isRtl ? columnBeforeStart : columnAfterEnd) || viewportTooSmallForColumn;\n    let alignColToEnd = isRtl ? columnAfterEnd : columnBeforeStart;\n    if (position !== \"auto\") {\n      alignColToStart = position === \"start\";\n      alignColToEnd = position === \"end\";\n    }\n    const isMiddle = position === \"middle\";\n    if (alignColToStart || alignColToEnd || isMiddle) {\n      const { colLeft, colMiddle, colRight } = this.getColumnBounds(column);\n      if (isMiddle) {\n        return colMiddle - viewportWidth / 2;\n      }\n      if (alignColToStart) {\n        return isRtl ? colRight : colLeft;\n      }\n      return isRtl ? colLeft - viewportWidth : colRight - viewportWidth;\n    }\n    return null;\n  }\n  isColumnOutsideViewport(column) {\n    const { start: viewportStart, end: viewportEnd } = this.getViewportBounds();\n    const { colLeft, colRight } = this.getColumnBounds(column);\n    const isRtl = this.enableRtl;\n    const columnBeforeStart = isRtl ? viewportStart > colRight : viewportEnd < colRight;\n    const columnAfterEnd = isRtl ? viewportEnd < colLeft : viewportStart > colLeft;\n    return { columnBeforeStart, columnAfterEnd };\n  }\n  getColumnBounds(column) {\n    const isRtl = this.enableRtl;\n    const bodyWidth = this.visibleColsService.getBodyContainerWidth();\n    const colWidth = column.getActualWidth();\n    const colLeft = column.getLeft();\n    const multiplier = isRtl ? -1 : 1;\n    const colLeftPixel = isRtl ? bodyWidth - colLeft : colLeft;\n    const colRightPixel = colLeftPixel + colWidth * multiplier;\n    const colMidPixel = colLeftPixel + colWidth / 2 * multiplier;\n    return { colLeft: colLeftPixel, colMiddle: colMidPixel, colRight: colRightPixel };\n  }\n  getViewportBounds() {\n    const viewportWidth = this.centerRowsCtrl.getCenterWidth();\n    const scrollPosition = this.centerRowsCtrl.getCenterViewportScrollLeft();\n    const viewportStartPixel = scrollPosition;\n    const viewportEndPixel = viewportWidth + scrollPosition;\n    return { start: viewportStartPixel, end: viewportEndPixel, width: viewportWidth };\n  }\n};\n\n// community-modules/core/src/gridBodyComp/viewportSizeFeature.ts\nvar ViewportSizeFeature = class extends BeanStub {\n  wireBeans(beans) {\n    this.ctrlsService = beans.ctrlsService;\n    this.pinnedWidthService = beans.pinnedWidthService;\n    this.columnModel = beans.columnModel;\n    this.visibleColsService = beans.visibleColsService;\n    this.columnSizeService = beans.columnSizeService;\n    this.scrollVisibleService = beans.scrollVisibleService;\n    this.columnViewportService = beans.columnViewportService;\n  }\n  constructor(centerContainerCtrl) {\n    super();\n    this.centerContainerCtrl = centerContainerCtrl;\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady((p) => {\n      this.gridBodyCtrl = p.gridBodyCtrl;\n      this.listenForResize();\n    });\n    this.addManagedEventListeners({ scrollbarWidthChanged: this.onScrollbarWidthChanged.bind(this) });\n    this.addManagedPropertyListeners([\"alwaysShowHorizontalScroll\", \"alwaysShowVerticalScroll\"], () => {\n      this.checkViewportAndScrolls();\n    });\n  }\n  listenForResize() {\n    const listener = () => this.onCenterViewportResized();\n    this.centerContainerCtrl.registerViewportResizeListener(listener);\n    this.gridBodyCtrl.registerBodyViewportResizeListener(listener);\n  }\n  onScrollbarWidthChanged() {\n    this.checkViewportAndScrolls();\n  }\n  onCenterViewportResized() {\n    if (this.centerContainerCtrl.isViewportInTheDOMTree()) {\n      this.keepPinnedColumnsNarrowerThanViewport();\n      this.checkViewportAndScrolls();\n      const newWidth = this.centerContainerCtrl.getCenterWidth();\n      if (newWidth !== this.centerWidth) {\n        this.centerWidth = newWidth;\n        this.columnSizeService.refreshFlexedColumns({\n          viewportWidth: this.centerWidth,\n          updateBodyWidths: true,\n          fireResizedEvent: true\n        });\n      }\n    } else {\n      this.bodyHeight = 0;\n    }\n  }\n  keepPinnedColumnsNarrowerThanViewport() {\n    const eBodyViewport = this.gridBodyCtrl.getBodyViewportElement();\n    const bodyWidth = _getInnerWidth(eBodyViewport);\n    if (bodyWidth <= 50) {\n      return;\n    }\n    let columnsToRemove = this.getPinnedColumnsOverflowingViewport(bodyWidth - 50);\n    const processUnpinnedColumns = this.gos.getCallback(\"processUnpinnedColumns\");\n    if (!columnsToRemove.length) {\n      return;\n    }\n    if (processUnpinnedColumns) {\n      const params = {\n        columns: columnsToRemove,\n        viewportWidth: bodyWidth\n      };\n      columnsToRemove = processUnpinnedColumns(params);\n    }\n    this.columnModel.setColsPinned(columnsToRemove, null, \"viewportSizeFeature\");\n  }\n  getPinnedColumnsOverflowingViewport(viewportWidth) {\n    const pinnedRightWidth = this.pinnedWidthService.getPinnedRightWidth();\n    const pinnedLeftWidth = this.pinnedWidthService.getPinnedLeftWidth();\n    const totalPinnedWidth = pinnedRightWidth + pinnedLeftWidth;\n    if (totalPinnedWidth < viewportWidth) {\n      return [];\n    }\n    const pinnedLeftColumns = [...this.visibleColsService.getLeftCols()];\n    const pinnedRightColumns = [...this.visibleColsService.getRightCols()];\n    let indexRight = 0;\n    let indexLeft = 0;\n    const totalWidthRemoved = 0;\n    const columnsToRemove = [];\n    let spaceNecessary = totalPinnedWidth - totalWidthRemoved - viewportWidth;\n    while ((indexLeft < pinnedLeftColumns.length || indexRight < pinnedRightColumns.length) && spaceNecessary > 0) {\n      if (indexRight < pinnedRightColumns.length) {\n        const currentColumn = pinnedRightColumns[indexRight++];\n        spaceNecessary -= currentColumn.getActualWidth();\n        columnsToRemove.push(currentColumn);\n      }\n      if (indexLeft < pinnedLeftColumns.length && spaceNecessary > 0) {\n        const currentColumn = pinnedLeftColumns[indexLeft++];\n        spaceNecessary -= currentColumn.getActualWidth();\n        columnsToRemove.push(currentColumn);\n      }\n    }\n    return columnsToRemove;\n  }\n  // gets called every time the viewport size changes. we use this to check visibility of scrollbars\n  // in the grid panel, and also to check size and position of viewport for row and column virtualisation.\n  checkViewportAndScrolls() {\n    this.updateScrollVisibleService();\n    this.checkBodyHeight();\n    this.onHorizontalViewportChanged();\n    this.gridBodyCtrl.getScrollFeature().checkScrollLeft();\n  }\n  getBodyHeight() {\n    return this.bodyHeight;\n  }\n  checkBodyHeight() {\n    const eBodyViewport = this.gridBodyCtrl.getBodyViewportElement();\n    const bodyHeight = _getInnerHeight(eBodyViewport);\n    if (this.bodyHeight !== bodyHeight) {\n      this.bodyHeight = bodyHeight;\n      this.eventService.dispatchEvent({\n        type: \"bodyHeightChanged\"\n      });\n    }\n  }\n  updateScrollVisibleService() {\n    this.updateScrollVisibleServiceImpl();\n    setTimeout(this.updateScrollVisibleServiceImpl.bind(this), 500);\n  }\n  updateScrollVisibleServiceImpl() {\n    const params = {\n      horizontalScrollShowing: this.isHorizontalScrollShowing(),\n      verticalScrollShowing: this.gridBodyCtrl.isVerticalScrollShowing()\n    };\n    this.scrollVisibleService.setScrollsVisible(params);\n  }\n  isHorizontalScrollShowing() {\n    return this.centerContainerCtrl.isHorizontalScrollShowing();\n  }\n  // this gets called whenever a change in the viewport, so we can inform column controller it has to work\n  // out the virtual columns again. gets called from following locations:\n  // + ensureColVisible, scroll, init, layoutChanged, displayedColumnsChanged\n  onHorizontalViewportChanged() {\n    const scrollWidth = this.centerContainerCtrl.getCenterWidth();\n    const scrollPosition = this.centerContainerCtrl.getViewportScrollLeft();\n    this.columnViewportService.setScrollPosition(scrollWidth, scrollPosition);\n  }\n};\n\n// community-modules/core/src/gridBodyComp/rowContainer/dragListenerFeature.ts\nvar DragListenerFeature = class extends BeanStub {\n  wireBeans(beans) {\n    this.dragService = beans.dragService;\n    this.rangeService = beans.rangeService;\n  }\n  constructor(eContainer) {\n    super();\n    this.eContainer = eContainer;\n  }\n  postConstruct() {\n    if (!this.rangeService) {\n      return;\n    }\n    this.params = {\n      eElement: this.eContainer,\n      onDragStart: this.rangeService.onDragStart.bind(this.rangeService),\n      onDragStop: this.rangeService.onDragStop.bind(this.rangeService),\n      onDragging: this.rangeService.onDragging.bind(this.rangeService)\n    };\n    this.addManagedPropertyListener(\"enableRangeSelection\", (props) => {\n      const isEnabled = props.currentValue;\n      if (isEnabled) {\n        this.enableFeature();\n        return;\n      }\n      this.disableFeature();\n    });\n    this.addDestroyFunc(() => this.disableFeature());\n    const isRangeSelection = this.gos.get(\"enableRangeSelection\");\n    if (isRangeSelection) {\n      this.enableFeature();\n    }\n  }\n  enableFeature() {\n    this.dragService.addDragSource(this.params);\n  }\n  disableFeature() {\n    this.dragService.removeDragSource(this.params);\n  }\n};\n\n// community-modules/core/src/rendering/checkboxSelectionComponent.ts\nvar CheckboxSelectionComponent = class extends Component {\n  constructor() {\n    super(\n      /* html*/\n      `\n            <div class=\"ag-selection-checkbox\" role=\"presentation\">\n                <ag-checkbox role=\"presentation\" data-ref=\"eCheckbox\"></ag-checkbox>\n            </div>`,\n      [AgCheckboxSelector]\n    );\n    this.eCheckbox = RefPlaceholder;\n  }\n  postConstruct() {\n    this.eCheckbox.setPassive(true);\n  }\n  getCheckboxId() {\n    return this.eCheckbox.getInputElement().id;\n  }\n  onDataChanged() {\n    this.onSelectionChanged();\n  }\n  onSelectableChanged() {\n    this.showOrHideSelect();\n  }\n  onSelectionChanged() {\n    const translate = this.localeService.getLocaleTextFunc();\n    const state = this.rowNode.isSelected();\n    const stateName = _getAriaCheckboxStateName(translate, state);\n    const [ariaKey, ariaLabel] = this.rowNode.selectable ? [\"ariaRowToggleSelection\", \"Press Space to toggle row selection\"] : [\"ariaRowSelectionDisabled\", \"Row Selection is disabled for this row\"];\n    const translatedLabel = translate(ariaKey, ariaLabel);\n    this.eCheckbox.setValue(state, true);\n    this.eCheckbox.setInputAriaLabel(`${translatedLabel} (${stateName})`);\n  }\n  onClicked(newValue, groupSelectsFiltered, event) {\n    return this.rowNode.setSelectedParams({\n      newValue,\n      rangeSelect: event.shiftKey,\n      groupSelectsFiltered,\n      event,\n      source: \"checkboxSelected\"\n    });\n  }\n  init(params) {\n    this.rowNode = params.rowNode;\n    this.column = params.column;\n    this.overrides = params.overrides;\n    this.onSelectionChanged();\n    this.addManagedListeners(this.eCheckbox.getInputElement(), {\n      // we don't want double click on this icon to open a group\n      dblclick: (event) => _stopPropagationForAgGrid(event),\n      click: (event) => {\n        _stopPropagationForAgGrid(event);\n        const groupSelectsFiltered = this.gos.get(\"groupSelectsFiltered\");\n        const isSelected = this.eCheckbox.getValue();\n        if (this.shouldHandleIndeterminateState(isSelected, groupSelectsFiltered)) {\n          const result = this.onClicked(true, groupSelectsFiltered, event || {});\n          if (result === 0) {\n            this.onClicked(false, groupSelectsFiltered, event);\n          }\n        } else if (isSelected) {\n          this.onClicked(false, groupSelectsFiltered, event);\n        } else {\n          this.onClicked(true, groupSelectsFiltered, event || {});\n        }\n      }\n    });\n    this.addManagedListeners(this.rowNode, {\n      rowSelected: this.onSelectionChanged.bind(this),\n      dataChanged: this.onDataChanged.bind(this),\n      selectableChanged: this.onSelectableChanged.bind(this)\n    });\n    const isRowSelectableFunc = this.gos.get(\"isRowSelectable\");\n    const checkboxVisibleIsDynamic = isRowSelectableFunc || typeof this.getIsVisible() === \"function\";\n    if (checkboxVisibleIsDynamic) {\n      const showOrHideSelectListener = this.showOrHideSelect.bind(this);\n      this.addManagedEventListeners({ displayedColumnsChanged: showOrHideSelectListener });\n      this.addManagedListeners(this.rowNode, {\n        dataChanged: showOrHideSelectListener,\n        cellChanged: showOrHideSelectListener\n      });\n      this.showOrHideSelect();\n    }\n    this.eCheckbox.getInputElement().setAttribute(\"tabindex\", \"-1\");\n  }\n  shouldHandleIndeterminateState(isSelected, groupSelectsFiltered) {\n    return groupSelectsFiltered && (this.eCheckbox.getPreviousValue() === void 0 || isSelected === void 0) && this.gos.isRowModelType(\"clientSide\");\n  }\n  showOrHideSelect() {\n    let selectable = this.rowNode.selectable;\n    const isVisible = this.getIsVisible();\n    if (selectable) {\n      if (typeof isVisible === \"function\") {\n        const extraParams = this.overrides?.callbackParams;\n        if (!this.column) {\n          selectable = isVisible({ ...extraParams, node: this.rowNode, data: this.rowNode.data });\n        } else {\n          const params = this.column.createColumnFunctionCallbackParams(this.rowNode);\n          selectable = isVisible({ ...extraParams, ...params });\n        }\n      } else {\n        selectable = isVisible ?? false;\n      }\n    }\n    const disableInsteadOfHide = this.column?.getColDef().showDisabledCheckboxes;\n    if (disableInsteadOfHide) {\n      this.eCheckbox.setDisabled(!selectable);\n      this.setVisible(true);\n      this.setDisplayed(true);\n      return;\n    }\n    if (this.overrides?.removeHidden) {\n      this.setDisplayed(selectable);\n      return;\n    }\n    this.setVisible(selectable);\n  }\n  getIsVisible() {\n    if (this.overrides) {\n      return this.overrides.isVisible;\n    }\n    return this.column?.getColDef()?.checkboxSelection;\n  }\n};\n\n// community-modules/core/src/rendering/dndSourceComp.ts\nvar DndSourceComp = class extends Component {\n  constructor(rowNode, column, eCell) {\n    super(\n      /* html */\n      `<div class=\"ag-drag-handle ag-row-drag\" draggable=\"true\"></div>`\n    );\n    this.rowNode = rowNode;\n    this.column = column;\n    this.eCell = eCell;\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    eGui.appendChild(_createIconNoSpan(\"rowDrag\", this.gos, null));\n    this.addGuiEventListener(\"mousedown\", (e) => {\n      e.stopPropagation();\n    });\n    this.addDragSource();\n    this.checkVisibility();\n  }\n  addDragSource() {\n    this.addGuiEventListener(\"dragstart\", this.onDragStart.bind(this));\n  }\n  onDragStart(dragEvent) {\n    const providedOnRowDrag = this.column.getColDef().dndSourceOnRowDrag;\n    dragEvent.dataTransfer.setDragImage(this.eCell, 0, 0);\n    const defaultOnRowDrag = () => {\n      try {\n        const jsonData = JSON.stringify(this.rowNode.data);\n        dragEvent.dataTransfer.setData(\"application/json\", jsonData);\n        dragEvent.dataTransfer.setData(\"text/plain\", jsonData);\n      } catch (e) {\n      }\n    };\n    if (providedOnRowDrag) {\n      const params = this.gos.addGridCommonParams({\n        rowNode: this.rowNode,\n        dragEvent\n      });\n      providedOnRowDrag(params);\n    } else {\n      defaultOnRowDrag();\n    }\n  }\n  checkVisibility() {\n    const visible = this.column.isDndSource(this.rowNode);\n    this.setDisplayed(visible);\n  }\n};\n\n// community-modules/core/src/rendering/cell/cellCustomStyleFeature.ts\nvar CellCustomStyleFeature = class extends BeanStub {\n  constructor(ctrl, beans) {\n    super();\n    this.staticClasses = [];\n    this.cellCtrl = ctrl;\n    this.beans = beans;\n    this.column = ctrl.getColumn();\n    this.rowNode = ctrl.getRowNode();\n  }\n  setComp(comp) {\n    this.cellComp = comp;\n    this.applyUserStyles();\n    this.applyCellClassRules();\n    this.applyClassesFromColDef();\n  }\n  applyCellClassRules() {\n    const colDef = this.column.getColDef();\n    const { cellClassRules } = colDef;\n    const cellClassParams = this.beans.gos.addGridCommonParams({\n      value: this.cellCtrl.getValue(),\n      data: this.rowNode.data,\n      node: this.rowNode,\n      colDef,\n      column: this.column,\n      rowIndex: this.rowNode.rowIndex\n    });\n    this.beans.stylingService.processClassRules(\n      // if current was previous, skip\n      cellClassRules === this.cellClassRules ? void 0 : this.cellClassRules,\n      cellClassRules,\n      cellClassParams,\n      (className) => this.cellComp.addOrRemoveCssClass(className, true),\n      (className) => this.cellComp.addOrRemoveCssClass(className, false)\n    );\n    this.cellClassRules = cellClassRules;\n  }\n  applyUserStyles() {\n    const colDef = this.column.getColDef();\n    if (!colDef.cellStyle) {\n      return;\n    }\n    let styles;\n    if (typeof colDef.cellStyle === \"function\") {\n      const cellStyleParams = this.beans.gos.addGridCommonParams({\n        column: this.column,\n        value: this.cellCtrl.getValue(),\n        colDef,\n        data: this.rowNode.data,\n        node: this.rowNode,\n        rowIndex: this.rowNode.rowIndex\n      });\n      const cellStyleFunc = colDef.cellStyle;\n      styles = cellStyleFunc(cellStyleParams);\n    } else {\n      styles = colDef.cellStyle;\n    }\n    if (styles) {\n      this.cellComp.setUserStyles(styles);\n    }\n  }\n  applyClassesFromColDef() {\n    const colDef = this.column.getColDef();\n    const cellClassParams = this.beans.gos.addGridCommonParams({\n      value: this.cellCtrl.getValue(),\n      data: this.rowNode.data,\n      node: this.rowNode,\n      column: this.column,\n      colDef,\n      rowIndex: this.rowNode.rowIndex\n    });\n    if (this.staticClasses.length) {\n      this.staticClasses.forEach((className) => this.cellComp.addOrRemoveCssClass(className, false));\n    }\n    this.staticClasses = this.beans.stylingService.getStaticCellClasses(colDef, cellClassParams);\n    if (this.staticClasses.length) {\n      this.staticClasses.forEach((className) => this.cellComp.addOrRemoveCssClass(className, true));\n    }\n  }\n  // overriding to make public, as we don't dispose this bean via context\n  destroy() {\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/rendering/cell/cellKeyboardListenerFeature.ts\nvar CellKeyboardListenerFeature = class extends BeanStub {\n  constructor(ctrl, beans, column, rowNode, rowCtrl) {\n    super();\n    this.cellCtrl = ctrl;\n    this.beans = beans;\n    this.rowNode = rowNode;\n    this.rowCtrl = rowCtrl;\n  }\n  setComp(eGui) {\n    this.eGui = eGui;\n  }\n  onKeyDown(event) {\n    const key = event.key;\n    switch (key) {\n      case KeyCode.ENTER:\n        this.onEnterKeyDown(event);\n        break;\n      case KeyCode.F2:\n        this.onF2KeyDown(event);\n        break;\n      case KeyCode.ESCAPE:\n        this.onEscapeKeyDown(event);\n        break;\n      case KeyCode.TAB:\n        this.onTabKeyDown(event);\n        break;\n      case KeyCode.BACKSPACE:\n      case KeyCode.DELETE:\n        this.onBackspaceOrDeleteKeyDown(key, event);\n        break;\n      case KeyCode.DOWN:\n      case KeyCode.UP:\n      case KeyCode.RIGHT:\n      case KeyCode.LEFT:\n        this.onNavigationKeyDown(event, key);\n        break;\n    }\n  }\n  onNavigationKeyDown(event, key) {\n    if (this.cellCtrl.isEditing()) {\n      return;\n    }\n    if (event.shiftKey && this.cellCtrl.isRangeSelectionEnabled()) {\n      this.onShiftRangeSelect(event);\n    } else {\n      this.beans.navigationService.navigateToNextCell(event, key, this.cellCtrl.getCellPosition(), true);\n    }\n    event.preventDefault();\n  }\n  onShiftRangeSelect(event) {\n    if (!this.beans.rangeService) {\n      return;\n    }\n    const endCell = this.beans.rangeService.extendLatestRangeInDirection(event);\n    if (endCell) {\n      this.beans.navigationService.ensureCellVisible(endCell);\n    }\n  }\n  onTabKeyDown(event) {\n    this.beans.navigationService.onTabKeyDown(this.cellCtrl, event);\n  }\n  onBackspaceOrDeleteKeyDown(key, event) {\n    const { cellCtrl, beans, rowNode } = this;\n    const { gos, rangeService, eventService } = beans;\n    if (cellCtrl.isEditing()) {\n      return;\n    }\n    eventService.dispatchEvent({ type: \"keyShortcutChangedCellStart\" });\n    if (_isDeleteKey(key, gos.get(\"enableCellEditingOnBackspace\"))) {\n      if (rangeService && gos.get(\"enableRangeSelection\")) {\n        rangeService.clearCellRangeCellValues({ dispatchWrapperEvents: true, wrapperEventSource: \"deleteKey\" });\n      } else if (cellCtrl.isCellEditable()) {\n        const column = cellCtrl.getColumn();\n        const emptyValue = this.beans.valueService.parseValue(column, rowNode, \"\", rowNode.getValueFromValueService(column)) ?? null;\n        rowNode.setDataValue(column, emptyValue, \"cellClear\");\n      }\n    } else {\n      cellCtrl.startRowOrCellEdit(key, event);\n    }\n    eventService.dispatchEvent({ type: \"keyShortcutChangedCellEnd\" });\n  }\n  onEnterKeyDown(e) {\n    if (this.cellCtrl.isEditing() || this.rowCtrl.isEditing()) {\n      this.cellCtrl.stopEditingAndFocus(false, e.shiftKey);\n    } else {\n      if (this.beans.gos.get(\"enterNavigatesVertically\")) {\n        const key = e.shiftKey ? KeyCode.UP : KeyCode.DOWN;\n        this.beans.navigationService.navigateToNextCell(null, key, this.cellCtrl.getCellPosition(), false);\n      } else {\n        this.cellCtrl.startRowOrCellEdit(KeyCode.ENTER, e);\n        if (this.cellCtrl.isEditing()) {\n          e.preventDefault();\n        }\n      }\n    }\n  }\n  onF2KeyDown(event) {\n    if (!this.cellCtrl.isEditing()) {\n      this.cellCtrl.startRowOrCellEdit(KeyCode.F2, event);\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onEscapeKeyDown(event) {\n    if (this.cellCtrl.isEditing()) {\n      this.cellCtrl.stopRowOrCellEdit(true);\n      this.cellCtrl.focusCell(true);\n    }\n  }\n  processCharacter(event) {\n    const eventTarget = event.target;\n    const eventOnChildComponent = eventTarget !== this.eGui;\n    if (eventOnChildComponent || this.cellCtrl.isEditing()) {\n      return;\n    }\n    const key = event.key;\n    if (key === \" \") {\n      this.onSpaceKeyDown(event);\n    } else {\n      this.cellCtrl.startRowOrCellEdit(key, event);\n      event.preventDefault();\n    }\n  }\n  onSpaceKeyDown(event) {\n    const { gos } = this.beans;\n    if (!this.cellCtrl.isEditing() && gos.isRowSelection()) {\n      const currentSelection = this.rowNode.isSelected();\n      const newSelection = !currentSelection;\n      if (newSelection || !gos.get(\"suppressRowDeselection\")) {\n        const groupSelectsFiltered = this.beans.gos.get(\"groupSelectsFiltered\");\n        const updatedCount = this.rowNode.setSelectedParams({\n          newValue: newSelection,\n          rangeSelect: event.shiftKey,\n          groupSelectsFiltered,\n          event,\n          source: \"spaceKey\"\n        });\n        if (currentSelection === void 0 && updatedCount === 0) {\n          this.rowNode.setSelectedParams({\n            newValue: false,\n            rangeSelect: event.shiftKey,\n            groupSelectsFiltered,\n            event,\n            source: \"spaceKey\"\n          });\n        }\n      }\n    }\n    event.preventDefault();\n  }\n  destroy() {\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/rendering/cell/cellMouseListenerFeature.ts\nvar CellMouseListenerFeature = class extends BeanStub {\n  constructor(ctrl, beans, column) {\n    super();\n    this.cellCtrl = ctrl;\n    this.beans = beans;\n    this.column = column;\n  }\n  onMouseEvent(eventName, mouseEvent) {\n    if (_isStopPropagationForAgGrid(mouseEvent)) {\n      return;\n    }\n    switch (eventName) {\n      case \"click\":\n        this.onCellClicked(mouseEvent);\n        break;\n      case \"mousedown\":\n      case \"touchstart\":\n        this.onMouseDown(mouseEvent);\n        break;\n      case \"dblclick\":\n        this.onCellDoubleClicked(mouseEvent);\n        break;\n      case \"mouseout\":\n        this.onMouseOut(mouseEvent);\n        break;\n      case \"mouseover\":\n        this.onMouseOver(mouseEvent);\n        break;\n    }\n  }\n  onCellClicked(mouseEvent) {\n    if (this.isDoubleClickOnIPad()) {\n      this.onCellDoubleClicked(mouseEvent);\n      mouseEvent.preventDefault();\n      return;\n    }\n    const { eventService, rangeService, gos } = this.beans;\n    const isMultiKey = mouseEvent.ctrlKey || mouseEvent.metaKey;\n    if (rangeService && isMultiKey) {\n      if (rangeService.getCellRangeCount(this.cellCtrl.getCellPosition()) > 1) {\n        rangeService.intersectLastRange(true);\n      }\n    }\n    const cellClickedEvent = this.cellCtrl.createEvent(mouseEvent, \"cellClicked\");\n    eventService.dispatchEvent(cellClickedEvent);\n    const colDef = this.column.getColDef();\n    if (colDef.onCellClicked) {\n      window.setTimeout(() => {\n        this.beans.frameworkOverrides.wrapOutgoing(() => {\n          colDef.onCellClicked(cellClickedEvent);\n        });\n      }, 0);\n    }\n    const editOnSingleClick = (gos.get(\"singleClickEdit\") || colDef.singleClickEdit) && !gos.get(\"suppressClickEdit\");\n    if (editOnSingleClick && !(mouseEvent.shiftKey && rangeService?.getCellRanges().length != 0)) {\n      this.cellCtrl.startRowOrCellEdit();\n    }\n  }\n  // returns true if on iPad and this is second 'click' event in 200ms\n  isDoubleClickOnIPad() {\n    if (!_isIOSUserAgent() || _isEventSupported(\"dblclick\")) {\n      return false;\n    }\n    const nowMillis = (/* @__PURE__ */ new Date()).getTime();\n    const res = nowMillis - this.lastIPadMouseClickEvent < 200;\n    this.lastIPadMouseClickEvent = nowMillis;\n    return res;\n  }\n  onCellDoubleClicked(mouseEvent) {\n    const { column, beans, cellCtrl } = this;\n    const { eventService, frameworkOverrides, gos } = beans;\n    const colDef = column.getColDef();\n    const cellDoubleClickedEvent = cellCtrl.createEvent(mouseEvent, \"cellDoubleClicked\");\n    eventService.dispatchEvent(cellDoubleClickedEvent);\n    if (typeof colDef.onCellDoubleClicked === \"function\") {\n      window.setTimeout(() => {\n        frameworkOverrides.wrapOutgoing(() => {\n          colDef.onCellDoubleClicked(cellDoubleClickedEvent);\n        });\n      }, 0);\n    }\n    const editOnDoubleClick = !gos.get(\"singleClickEdit\") && !gos.get(\"suppressClickEdit\");\n    if (editOnDoubleClick) {\n      cellCtrl.startRowOrCellEdit(null, mouseEvent);\n    }\n  }\n  onMouseDown(mouseEvent) {\n    const { ctrlKey, metaKey, shiftKey } = mouseEvent;\n    const target = mouseEvent.target;\n    const { cellCtrl, beans } = this;\n    const { eventService, rangeService, focusService, gos } = beans;\n    if (this.isRightClickInExistingRange(mouseEvent)) {\n      return;\n    }\n    const ranges = rangeService && rangeService.getCellRanges().length != 0;\n    if (!shiftKey || !ranges) {\n      const isEnableCellTextSelection = gos.get(\"enableCellTextSelection\");\n      const shouldFocus = isEnableCellTextSelection && mouseEvent.defaultPrevented;\n      const forceBrowserFocus = (_isBrowserSafari() || shouldFocus) && !cellCtrl.isEditing() && !_isFocusableFormField(target);\n      cellCtrl.focusCell(forceBrowserFocus);\n    }\n    if (shiftKey && ranges && !focusService.isCellFocused(cellCtrl.getCellPosition())) {\n      mouseEvent.preventDefault();\n      const focusedCellPosition = focusService.getFocusedCell();\n      if (focusedCellPosition) {\n        const { column, rowIndex, rowPinned } = focusedCellPosition;\n        const focusedRowCtrl = beans.rowRenderer.getRowByPosition({ rowIndex, rowPinned });\n        const focusedCellCtrl = focusedRowCtrl?.getCellCtrl(column);\n        if (focusedCellCtrl?.isEditing()) {\n          focusedCellCtrl.stopEditing();\n        }\n        focusService.setFocusedCell({\n          column,\n          rowIndex,\n          rowPinned,\n          forceBrowserFocus: true,\n          preventScrollOnBrowserFocus: true\n        });\n      }\n    }\n    if (this.containsWidget(target)) {\n      return;\n    }\n    if (rangeService) {\n      const thisCell = this.cellCtrl.getCellPosition();\n      if (shiftKey) {\n        rangeService.extendLatestRangeToCell(thisCell);\n      } else {\n        const isMultiKey = ctrlKey || metaKey;\n        rangeService.setRangeToCell(thisCell, isMultiKey);\n      }\n    }\n    eventService.dispatchEvent(this.cellCtrl.createEvent(mouseEvent, \"cellMouseDown\"));\n  }\n  isRightClickInExistingRange(mouseEvent) {\n    const { rangeService } = this.beans;\n    if (rangeService) {\n      const cellInRange = rangeService.isCellInAnyRange(this.cellCtrl.getCellPosition());\n      const isRightClick = mouseEvent.button === 2 || mouseEvent.ctrlKey && this.beans.gos.get(\"allowContextMenuWithControlKey\");\n      if (cellInRange && isRightClick) {\n        return true;\n      }\n    }\n    return false;\n  }\n  containsWidget(target) {\n    return _isElementChildOfClass(target, \"ag-selection-checkbox\", 3);\n  }\n  onMouseOut(mouseEvent) {\n    if (this.mouseStayingInsideCell(mouseEvent)) {\n      return;\n    }\n    this.beans.eventService.dispatchEvent(this.cellCtrl.createEvent(mouseEvent, \"cellMouseOut\"));\n    this.beans.columnHoverService.clearMouseOver();\n  }\n  onMouseOver(mouseEvent) {\n    if (this.mouseStayingInsideCell(mouseEvent)) {\n      return;\n    }\n    this.beans.eventService.dispatchEvent(this.cellCtrl.createEvent(mouseEvent, \"cellMouseOver\"));\n    this.beans.columnHoverService.setMouseOver([this.column]);\n  }\n  mouseStayingInsideCell(e) {\n    if (!e.target || !e.relatedTarget) {\n      return false;\n    }\n    const eGui = this.cellCtrl.getGui();\n    const cellContainsTarget = eGui.contains(e.target);\n    const cellContainsRelatedTarget = eGui.contains(e.relatedTarget);\n    return cellContainsTarget && cellContainsRelatedTarget;\n  }\n  destroy() {\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/rendering/cell/cellPositionFeature.ts\nvar CellPositionFeature = class extends BeanStub {\n  constructor(ctrl, beans) {\n    super();\n    this.cellCtrl = ctrl;\n    this.beans = beans;\n    this.column = ctrl.getColumn();\n    this.rowNode = ctrl.getRowNode();\n  }\n  setupRowSpan() {\n    this.rowSpan = this.column.getRowSpan(this.rowNode);\n    this.addManagedListeners(this.beans.eventService, { newColumnsLoaded: () => this.onNewColumnsLoaded() });\n  }\n  setComp(eGui) {\n    this.eGui = eGui;\n    this.setupColSpan();\n    this.setupRowSpan();\n    this.onLeftChanged();\n    this.onWidthChanged();\n    this.applyRowSpan();\n  }\n  onNewColumnsLoaded() {\n    const rowSpan = this.column.getRowSpan(this.rowNode);\n    if (this.rowSpan === rowSpan) {\n      return;\n    }\n    this.rowSpan = rowSpan;\n    this.applyRowSpan(true);\n  }\n  onDisplayColumnsChanged() {\n    const colsSpanning = this.getColSpanningList();\n    if (!_areEqual(this.colsSpanning, colsSpanning)) {\n      this.colsSpanning = colsSpanning;\n      this.onWidthChanged();\n      this.onLeftChanged();\n    }\n  }\n  setupColSpan() {\n    if (this.column.getColDef().colSpan == null) {\n      return;\n    }\n    this.colsSpanning = this.getColSpanningList();\n    this.addManagedListeners(this.beans.eventService, {\n      // because we are col spanning, a reorder of the cols can change what cols we are spanning over\n      displayedColumnsChanged: this.onDisplayColumnsChanged.bind(this),\n      // because we are spanning over multiple cols, we check for width any time any cols width changes.\n      // this is expensive - really we should be explicitly checking only the cols we are spanning over\n      // instead of every col, however it would be tricky code to track the cols we are spanning over, so\n      // because hardly anyone will be using colSpan, am favouring this easier way for more maintainable code.\n      displayedColumnsWidthChanged: this.onWidthChanged.bind(this)\n    });\n  }\n  onWidthChanged() {\n    if (!this.eGui) {\n      return;\n    }\n    const width = this.getCellWidth();\n    this.eGui.style.width = `${width}px`;\n  }\n  getCellWidth() {\n    if (!this.colsSpanning) {\n      return this.column.getActualWidth();\n    }\n    return this.colsSpanning.reduce((width, col) => width + col.getActualWidth(), 0);\n  }\n  getColSpanningList() {\n    const colSpan = this.column.getColSpan(this.rowNode);\n    const colsSpanning = [];\n    if (colSpan === 1) {\n      colsSpanning.push(this.column);\n    } else {\n      let pointer = this.column;\n      const pinned = this.column.getPinned();\n      for (let i = 0; pointer && i < colSpan; i++) {\n        colsSpanning.push(pointer);\n        pointer = this.beans.visibleColsService.getColAfter(pointer);\n        if (!pointer || _missing(pointer)) {\n          break;\n        }\n        if (pinned !== pointer.getPinned()) {\n          break;\n        }\n      }\n    }\n    return colsSpanning;\n  }\n  onLeftChanged() {\n    if (!this.eGui) {\n      return;\n    }\n    const left = this.modifyLeftForPrintLayout(this.getCellLeft());\n    this.eGui.style.left = left + \"px\";\n  }\n  getCellLeft() {\n    let mostLeftCol;\n    if (this.beans.gos.get(\"enableRtl\") && this.colsSpanning) {\n      mostLeftCol = _last(this.colsSpanning);\n    } else {\n      mostLeftCol = this.column;\n    }\n    return mostLeftCol.getLeft();\n  }\n  modifyLeftForPrintLayout(leftPosition) {\n    if (!this.cellCtrl.isPrintLayout() || this.column.getPinned() === \"left\") {\n      return leftPosition;\n    }\n    const leftWidth = this.beans.visibleColsService.getColsLeftWidth();\n    if (this.column.getPinned() === \"right\") {\n      const bodyWidth = this.beans.visibleColsService.getBodyContainerWidth();\n      return leftWidth + bodyWidth + (leftPosition || 0);\n    }\n    return leftWidth + (leftPosition || 0);\n  }\n  applyRowSpan(force) {\n    if (this.rowSpan === 1 && !force) {\n      return;\n    }\n    const singleRowHeight = this.beans.gos.getRowHeightAsNumber();\n    const totalRowHeight = singleRowHeight * this.rowSpan;\n    this.eGui.style.height = `${totalRowHeight}px`;\n    this.eGui.style.zIndex = \"1\";\n  }\n  // overriding to make public, as we don't dispose this bean via context\n  destroy() {\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/interfaces/IRangeService.ts\nvar SelectionHandleType = /* @__PURE__ */ ((SelectionHandleType2) => {\n  SelectionHandleType2[SelectionHandleType2[\"FILL\"] = 0] = \"FILL\";\n  SelectionHandleType2[SelectionHandleType2[\"RANGE\"] = 1] = \"RANGE\";\n  return SelectionHandleType2;\n})(SelectionHandleType || {});\nvar CellRangeType = /* @__PURE__ */ ((CellRangeType2) => {\n  CellRangeType2[CellRangeType2[\"VALUE\"] = 0] = \"VALUE\";\n  CellRangeType2[CellRangeType2[\"DIMENSION\"] = 1] = \"DIMENSION\";\n  return CellRangeType2;\n})(CellRangeType || {});\n\n// community-modules/core/src/rendering/cell/cellRangeFeature.ts\nvar CSS_CELL_RANGE_SELECTED = \"ag-cell-range-selected\";\nvar CSS_CELL_RANGE_CHART = \"ag-cell-range-chart\";\nvar CSS_CELL_RANGE_SINGLE_CELL = \"ag-cell-range-single-cell\";\nvar CSS_CELL_RANGE_CHART_CATEGORY = \"ag-cell-range-chart-category\";\nvar CSS_CELL_RANGE_HANDLE = \"ag-cell-range-handle\";\nvar CSS_CELL_RANGE_TOP = \"ag-cell-range-top\";\nvar CSS_CELL_RANGE_RIGHT = \"ag-cell-range-right\";\nvar CSS_CELL_RANGE_BOTTOM = \"ag-cell-range-bottom\";\nvar CSS_CELL_RANGE_LEFT = \"ag-cell-range-left\";\nvar CellRangeFeature = class {\n  constructor(beans, ctrl) {\n    this.beans = beans;\n    this.rangeService = beans.rangeService;\n    this.selectionHandleFactory = beans.selectionHandleFactory;\n    this.cellCtrl = ctrl;\n  }\n  setComp(cellComp, eGui) {\n    this.cellComp = cellComp;\n    this.eGui = eGui;\n    this.onRangeSelectionChanged();\n  }\n  onRangeSelectionChanged() {\n    if (!this.cellComp) {\n      return;\n    }\n    this.rangeCount = this.rangeService.getCellRangeCount(this.cellCtrl.getCellPosition());\n    this.hasChartRange = this.getHasChartRange();\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_SELECTED, this.rangeCount !== 0);\n    this.cellComp.addOrRemoveCssClass(`${CSS_CELL_RANGE_SELECTED}-1`, this.rangeCount === 1);\n    this.cellComp.addOrRemoveCssClass(`${CSS_CELL_RANGE_SELECTED}-2`, this.rangeCount === 2);\n    this.cellComp.addOrRemoveCssClass(`${CSS_CELL_RANGE_SELECTED}-3`, this.rangeCount === 3);\n    this.cellComp.addOrRemoveCssClass(`${CSS_CELL_RANGE_SELECTED}-4`, this.rangeCount >= 4);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_CHART, this.hasChartRange);\n    _setAriaSelected(this.eGui, this.rangeCount > 0 ? true : void 0);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_SINGLE_CELL, this.isSingleCell());\n    this.updateRangeBorders();\n    this.refreshHandle();\n  }\n  updateRangeBorders() {\n    const rangeBorders = this.getRangeBorders();\n    const isSingleCell = this.isSingleCell();\n    const isTop = !isSingleCell && rangeBorders.top;\n    const isRight = !isSingleCell && rangeBorders.right;\n    const isBottom = !isSingleCell && rangeBorders.bottom;\n    const isLeft = !isSingleCell && rangeBorders.left;\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_TOP, isTop);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_RIGHT, isRight);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_BOTTOM, isBottom);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_LEFT, isLeft);\n  }\n  isSingleCell() {\n    const { rangeService } = this.beans;\n    return this.rangeCount === 1 && !!rangeService && !rangeService.isMoreThanOneCell();\n  }\n  getHasChartRange() {\n    const { rangeService } = this.beans;\n    if (!this.rangeCount || !rangeService) {\n      return false;\n    }\n    const cellRanges = rangeService.getCellRanges();\n    return cellRanges.length > 0 && cellRanges.every((range) => _includes([1 /* DIMENSION */, 0 /* VALUE */], range.type));\n  }\n  updateRangeBordersIfRangeCount() {\n    if (this.rangeCount > 0) {\n      this.updateRangeBorders();\n      this.refreshHandle();\n    }\n  }\n  getRangeBorders() {\n    const isRtl = this.beans.gos.get(\"enableRtl\");\n    let top = false;\n    let right = false;\n    let bottom = false;\n    let left = false;\n    const thisCol = this.cellCtrl.getCellPosition().column;\n    const presentedColsService = this.beans.visibleColsService;\n    let leftCol;\n    let rightCol;\n    if (isRtl) {\n      leftCol = presentedColsService.getColAfter(thisCol);\n      rightCol = presentedColsService.getColBefore(thisCol);\n    } else {\n      leftCol = presentedColsService.getColBefore(thisCol);\n      rightCol = presentedColsService.getColAfter(thisCol);\n    }\n    const ranges = this.rangeService.getCellRanges().filter((range) => this.rangeService.isCellInSpecificRange(this.cellCtrl.getCellPosition(), range));\n    if (!leftCol) {\n      left = true;\n    }\n    if (!rightCol) {\n      right = true;\n    }\n    for (let i = 0; i < ranges.length; i++) {\n      if (top && right && bottom && left) {\n        break;\n      }\n      const range = ranges[i];\n      const startRow = this.rangeService.getRangeStartRow(range);\n      const endRow = this.rangeService.getRangeEndRow(range);\n      if (!top && this.beans.rowPositionUtils.sameRow(startRow, this.cellCtrl.getCellPosition())) {\n        top = true;\n      }\n      if (!bottom && this.beans.rowPositionUtils.sameRow(endRow, this.cellCtrl.getCellPosition())) {\n        bottom = true;\n      }\n      if (!left && leftCol && range.columns.indexOf(leftCol) < 0) {\n        left = true;\n      }\n      if (!right && rightCol && range.columns.indexOf(rightCol) < 0) {\n        right = true;\n      }\n    }\n    return { top, right, bottom, left };\n  }\n  refreshHandle() {\n    if (this.beans.context.isDestroyed()) {\n      return;\n    }\n    const shouldHaveSelectionHandle = this.shouldHaveSelectionHandle();\n    if (this.selectionHandle && !shouldHaveSelectionHandle) {\n      this.selectionHandle = this.beans.context.destroyBean(this.selectionHandle);\n    }\n    if (shouldHaveSelectionHandle) {\n      this.addSelectionHandle();\n    }\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_HANDLE, !!this.selectionHandle);\n  }\n  shouldHaveSelectionHandle() {\n    const gos = this.beans.gos;\n    const cellRanges = this.rangeService.getCellRanges();\n    const rangesLen = cellRanges.length;\n    if (this.rangeCount < 1 || rangesLen < 1) {\n      return false;\n    }\n    const cellRange = _last(cellRanges);\n    const cellPosition = this.cellCtrl.getCellPosition();\n    const isFillHandleAvailable = gos.get(\"enableFillHandle\") && !this.cellCtrl.isSuppressFillHandle();\n    const isRangeHandleAvailable = gos.get(\"enableRangeHandle\");\n    let handleIsAvailable = rangesLen === 1 && !this.cellCtrl.isEditing() && (isFillHandleAvailable || isRangeHandleAvailable);\n    if (this.hasChartRange) {\n      const hasCategoryRange = cellRanges[0].type === 1 /* DIMENSION */;\n      const isCategoryCell = hasCategoryRange && this.rangeService.isCellInSpecificRange(cellPosition, cellRanges[0]);\n      this.cellComp.addOrRemoveCssClass(CSS_CELL_RANGE_CHART_CATEGORY, isCategoryCell);\n      handleIsAvailable = cellRange.type === 0 /* VALUE */;\n    }\n    return handleIsAvailable && cellRange.endRow != null && this.rangeService.isContiguousRange(cellRange) && this.rangeService.isBottomRightCell(cellRange, cellPosition);\n  }\n  addSelectionHandle() {\n    const gos = this.beans.gos;\n    const cellRangeType = _last(this.rangeService.getCellRanges()).type;\n    const selectionHandleFill = gos.get(\"enableFillHandle\") && _missing(cellRangeType);\n    const type = selectionHandleFill ? 0 /* FILL */ : 1 /* RANGE */;\n    if (this.selectionHandle && this.selectionHandle.getType() !== type) {\n      this.selectionHandle = this.beans.context.destroyBean(this.selectionHandle);\n    }\n    if (!this.selectionHandle) {\n      this.selectionHandle = this.selectionHandleFactory.createSelectionHandle(type);\n    }\n    this.selectionHandle.refresh(this.cellCtrl);\n  }\n  destroy() {\n    this.beans.context.destroyBean(this.selectionHandle);\n  }\n};\n\n// community-modules/core/src/rendering/cell/cellCtrl.ts\nvar CSS_CELL = \"ag-cell\";\nvar CSS_AUTO_HEIGHT = \"ag-cell-auto-height\";\nvar CSS_NORMAL_HEIGHT = \"ag-cell-normal-height\";\nvar CSS_CELL_FOCUS = \"ag-cell-focus\";\nvar CSS_CELL_FIRST_RIGHT_PINNED = \"ag-cell-first-right-pinned\";\nvar CSS_CELL_LAST_LEFT_PINNED = \"ag-cell-last-left-pinned\";\nvar CSS_CELL_NOT_INLINE_EDITING = \"ag-cell-not-inline-editing\";\nvar CSS_COLUMN_HOVER = \"ag-column-hover\";\nvar CSS_CELL_WRAP_TEXT = \"ag-cell-wrap-text\";\nvar instanceIdSequence4 = 0;\nvar _CellCtrl = class _CellCtrl extends BeanStub {\n  constructor(column, rowNode, beans, rowCtrl) {\n    super();\n    this.column = column;\n    this.rowNode = rowNode;\n    this.beans = beans;\n    this.rowCtrl = rowCtrl;\n    this.cellRangeFeature = null;\n    this.cellPositionFeature = null;\n    this.cellCustomStyleFeature = null;\n    this.tooltipFeature = null;\n    this.cellMouseListenerFeature = null;\n    this.cellKeyboardListenerFeature = null;\n    this.suppressRefreshCell = false;\n    this.onCellCompAttachedFuncs = [];\n    this.instanceId = column.getId() + \"-\" + instanceIdSequence4++;\n    this.colIdSanitised = _escapeString(this.column.getId());\n    this.createCellPosition();\n    this.addFeatures();\n    this.updateAndFormatValue(false);\n  }\n  shouldRestoreFocus() {\n    return this.beans.focusService.shouldRestoreFocus(this.cellPosition);\n  }\n  onFocusOut() {\n    this.beans.focusService.clearRestoreFocus();\n  }\n  addFeatures() {\n    this.cellPositionFeature = new CellPositionFeature(this, this.beans);\n    this.addDestroyFunc(() => {\n      this.cellPositionFeature?.destroy();\n      this.cellPositionFeature = null;\n    });\n    this.cellCustomStyleFeature = new CellCustomStyleFeature(this, this.beans);\n    this.addDestroyFunc(() => {\n      this.cellCustomStyleFeature?.destroy();\n      this.cellCustomStyleFeature = null;\n    });\n    this.cellMouseListenerFeature = new CellMouseListenerFeature(this, this.beans, this.column);\n    this.addDestroyFunc(() => {\n      this.cellMouseListenerFeature?.destroy();\n      this.cellMouseListenerFeature = null;\n    });\n    this.cellKeyboardListenerFeature = new CellKeyboardListenerFeature(\n      this,\n      this.beans,\n      this.column,\n      this.rowNode,\n      this.rowCtrl\n    );\n    this.addDestroyFunc(() => {\n      this.cellKeyboardListenerFeature?.destroy();\n      this.cellKeyboardListenerFeature = null;\n    });\n    if (this.column.isTooltipEnabled()) {\n      this.enableTooltipFeature();\n      this.addDestroyFunc(() => {\n        this.disableTooltipFeature();\n      });\n    }\n    const rangeSelectionEnabled = this.beans.rangeService && this.beans.gos.get(\"enableRangeSelection\");\n    if (rangeSelectionEnabled) {\n      this.cellRangeFeature = new CellRangeFeature(this.beans, this);\n      this.addDestroyFunc(() => {\n        this.cellRangeFeature?.destroy();\n        this.cellRangeFeature = null;\n      });\n    }\n  }\n  enableTooltipFeature(value, shouldDisplayTooltip) {\n    const getTooltipValue = () => {\n      const colDef = this.column.getColDef();\n      const data = this.rowNode.data;\n      if (colDef.tooltipField && _exists(data)) {\n        return _getValueUsingField(data, colDef.tooltipField, this.column.isTooltipFieldContainsDots());\n      }\n      const valueGetter = colDef.tooltipValueGetter;\n      if (valueGetter) {\n        return valueGetter(\n          this.beans.gos.addGridCommonParams({\n            location: \"cell\",\n            colDef: this.column.getColDef(),\n            column: this.column,\n            rowIndex: this.cellPosition.rowIndex,\n            node: this.rowNode,\n            data: this.rowNode.data,\n            value: this.value,\n            valueFormatted: this.valueFormatted\n          })\n        );\n      }\n      return null;\n    };\n    const isTooltipWhenTruncated = this.beans.gos.get(\"tooltipShowMode\") === \"whenTruncated\";\n    if (!shouldDisplayTooltip && isTooltipWhenTruncated && !this.isCellRenderer()) {\n      shouldDisplayTooltip = () => {\n        const eGui = this.getGui();\n        const textEl = eGui.children.length === 0 ? eGui : eGui.querySelector(\".ag-cell-value\");\n        if (!textEl) {\n          return true;\n        }\n        return textEl.scrollWidth > textEl.clientWidth;\n      };\n    }\n    const tooltipCtrl = {\n      getColumn: () => this.column,\n      getColDef: () => this.column.getColDef(),\n      getRowIndex: () => this.cellPosition.rowIndex,\n      getRowNode: () => this.rowNode,\n      getGui: () => this.getGui(),\n      getLocation: () => \"cell\",\n      getTooltipValue: value != null ? () => value : getTooltipValue,\n      // this makes no sense, why is the cell formatted value passed to the tooltip???\n      getValueFormatted: () => this.valueFormatted,\n      shouldDisplayTooltip\n    };\n    this.tooltipFeature = new TooltipFeature(tooltipCtrl, this.beans);\n  }\n  disableTooltipFeature() {\n    if (!this.tooltipFeature) {\n      return;\n    }\n    this.tooltipFeature.destroy();\n    this.tooltipFeature = null;\n  }\n  setComp(comp, eGui, eCellWrapper, printLayout, startEditing) {\n    this.cellComp = comp;\n    this.eGui = eGui;\n    this.printLayout = printLayout;\n    this.addDomData();\n    this.onSuppressCellFocusChanged(this.beans.gos.get(\"suppressCellFocus\"));\n    this.onCellFocused(this.focusEventToRestore);\n    this.applyStaticCssClasses();\n    this.setWrapText();\n    this.onFirstRightPinnedChanged();\n    this.onLastLeftPinnedChanged();\n    this.onColumnHover();\n    this.setupControlComps();\n    this.setupAutoHeight(eCellWrapper);\n    this.refreshFirstAndLastStyles();\n    this.refreshAriaColIndex();\n    this.cellPositionFeature?.setComp(eGui);\n    this.cellCustomStyleFeature?.setComp(comp);\n    this.tooltipFeature?.refreshToolTip();\n    this.cellKeyboardListenerFeature?.setComp(this.eGui);\n    if (this.cellRangeFeature) {\n      this.cellRangeFeature.setComp(comp, eGui);\n    }\n    if (startEditing && this.isCellEditable()) {\n      this.startEditing();\n    } else {\n      this.showValue();\n    }\n    if (this.onCellCompAttachedFuncs.length) {\n      this.onCellCompAttachedFuncs.forEach((func) => func());\n      this.onCellCompAttachedFuncs = [];\n    }\n  }\n  setupAutoHeight(eCellWrapper) {\n    this.isAutoHeight = this.column.isAutoHeight();\n    if (!this.isAutoHeight || !eCellWrapper) {\n      return;\n    }\n    const eParentCell = eCellWrapper.parentElement;\n    const minRowHeight = this.beans.gos.getRowHeightForNode(this.rowNode).height;\n    const measureHeight = (timesCalled) => {\n      if (this.editing) {\n        return;\n      }\n      if (!this.isAlive()) {\n        return;\n      }\n      const { paddingTop, paddingBottom, borderBottomWidth, borderTopWidth } = _getElementSize(eParentCell);\n      const extraHeight = paddingTop + paddingBottom + borderBottomWidth + borderTopWidth;\n      const wrapperHeight = eCellWrapper.offsetHeight;\n      const autoHeight = wrapperHeight + extraHeight;\n      if (timesCalled < 5) {\n        const doc = this.beans.gos.getDocument();\n        const notYetInDom = !doc || !doc.contains(eCellWrapper);\n        const possiblyNoContentYet = autoHeight == 0;\n        if (notYetInDom || possiblyNoContentYet) {\n          window.setTimeout(() => measureHeight(timesCalled + 1), 0);\n          return;\n        }\n      }\n      const newHeight = Math.max(autoHeight, minRowHeight);\n      this.rowNode.setRowAutoHeight(newHeight, this.column);\n    };\n    const listener = () => measureHeight(0);\n    listener();\n    const destroyResizeObserver = this.beans.resizeObserverService.observeResize(eCellWrapper, listener);\n    this.addDestroyFunc(() => {\n      destroyResizeObserver();\n      this.rowNode.setRowAutoHeight(void 0, this.column);\n    });\n  }\n  getCellAriaRole() {\n    return this.column.getColDef().cellAriaRole ?? \"gridcell\";\n  }\n  getInstanceId() {\n    return this.instanceId;\n  }\n  getColumnIdSanitised() {\n    return this.colIdSanitised;\n  }\n  isCellRenderer() {\n    const colDef = this.column.getColDef();\n    return colDef.cellRenderer != null || colDef.cellRendererSelector != null;\n  }\n  getValueToDisplay() {\n    return this.valueFormatted ?? this.value;\n  }\n  showValue(forceNewCellRendererInstance = false) {\n    const valueToDisplay = this.getValueToDisplay();\n    let compDetails;\n    const isSsrmLoading = this.rowNode.stub && this.rowNode.groupData?.[this.column.getId()] == null;\n    if (isSsrmLoading) {\n      const params = this.createCellRendererParams();\n      compDetails = this.beans.userComponentFactory.getLoadingCellRendererDetails(\n        this.column.getColDef(),\n        params\n      );\n    } else if (this.isCellRenderer()) {\n      const params = this.createCellRendererParams();\n      compDetails = this.beans.userComponentFactory.getCellRendererDetails(this.column.getColDef(), params);\n    }\n    this.cellComp.setRenderDetails(compDetails, valueToDisplay, forceNewCellRendererInstance);\n    this.cellRangeFeature?.refreshHandle();\n  }\n  setupControlComps() {\n    const colDef = this.column.getColDef();\n    this.includeSelection = this.isIncludeControl(colDef.checkboxSelection);\n    this.includeRowDrag = this.isIncludeControl(colDef.rowDrag);\n    this.includeDndSource = this.isIncludeControl(colDef.dndSource);\n    this.cellComp.setIncludeSelection(this.includeSelection);\n    this.cellComp.setIncludeDndSource(this.includeDndSource);\n    this.cellComp.setIncludeRowDrag(this.includeRowDrag);\n  }\n  isForceWrapper() {\n    const forceWrapper = this.beans.gos.get(\"enableCellTextSelection\") || this.column.isAutoHeight();\n    return forceWrapper;\n  }\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  isIncludeControl(value) {\n    const rowNodePinned = this.rowNode.rowPinned != null;\n    const isFunc = typeof value === \"function\";\n    const res = rowNodePinned ? false : isFunc || value === true;\n    return res;\n  }\n  refreshShouldDestroy() {\n    const colDef = this.column.getColDef();\n    const selectionChanged = this.includeSelection != this.isIncludeControl(colDef.checkboxSelection);\n    const rowDragChanged = this.includeRowDrag != this.isIncludeControl(colDef.rowDrag);\n    const dndSourceChanged = this.includeDndSource != this.isIncludeControl(colDef.dndSource);\n    const autoHeightChanged = this.isAutoHeight != this.column.isAutoHeight();\n    return selectionChanged || rowDragChanged || dndSourceChanged || autoHeightChanged;\n  }\n  // either called internally if single cell editing, or called by rowRenderer if row editing\n  startEditing(key = null, cellStartedEdit = false, event = null) {\n    const { editService } = this.beans;\n    if (!this.isCellEditable() || this.editing || !editService) {\n      return;\n    }\n    if (!this.cellComp) {\n      this.onCellCompAttachedFuncs.push(() => {\n        this.startEditing(key, cellStartedEdit, event);\n      });\n      return;\n    }\n    editService.startEditing(this, key, cellStartedEdit, event);\n  }\n  setEditing(editing, compDetails) {\n    this.editCompDetails = compDetails;\n    if (this.editing === editing) {\n      return;\n    }\n    this.editing = editing;\n    this.cellRangeFeature?.refreshHandle();\n  }\n  // pass in 'true' to cancel the editing.\n  stopRowOrCellEdit(cancel = false) {\n    if (this.beans.gos.get(\"editType\") === \"fullRow\") {\n      this.rowCtrl.stopEditing(cancel);\n    } else {\n      this.stopEditing(cancel);\n    }\n  }\n  onPopupEditorClosed() {\n    if (!this.editing) {\n      return;\n    }\n    this.stopEditingAndFocus();\n  }\n  /**\n   * Ends the Cell Editing\n   * @param cancel `True` if the edit process is being canceled.\n   * @returns `True` if the value of the `GridCell` has been updated, otherwise `False`.\n   */\n  stopEditing(cancel = false) {\n    const { editService } = this.beans;\n    if (!this.editing || !editService) {\n      return false;\n    }\n    return editService.stopEditing(this, cancel);\n  }\n  createCellRendererParams() {\n    const res = this.beans.gos.addGridCommonParams({\n      value: this.value,\n      valueFormatted: this.valueFormatted,\n      getValue: () => this.rowNode.getValueFromValueService(this.column),\n      setValue: (value) => this.beans.valueService.setValue(this.rowNode, this.column, value),\n      formatValue: this.formatValue.bind(this),\n      data: this.rowNode.data,\n      node: this.rowNode,\n      pinned: this.column.getPinned(),\n      colDef: this.column.getColDef(),\n      column: this.column,\n      refreshCell: this.refreshCell.bind(this),\n      eGridCell: this.getGui(),\n      eParentOfValue: this.cellComp.getParentOfValue(),\n      registerRowDragger: (rowDraggerElement, dragStartPixels, value, suppressVisibilityChange) => this.registerRowDragger(rowDraggerElement, dragStartPixels, suppressVisibilityChange),\n      setTooltip: (value, shouldDisplayTooltip) => {\n        if (this.tooltipFeature) {\n          this.disableTooltipFeature();\n        }\n        this.enableTooltipFeature(value, shouldDisplayTooltip);\n        this.tooltipFeature?.refreshToolTip();\n      }\n    });\n    return res;\n  }\n  setFocusOutOnEditor() {\n    if (!this.editing) {\n      return;\n    }\n    this.beans.editService?.setFocusOutOnEditor(this);\n  }\n  setFocusInOnEditor() {\n    if (!this.editing) {\n      return;\n    }\n    this.beans.editService?.setFocusInOnEditor(this);\n  }\n  onCellChanged(event) {\n    const eventImpactsThisCell = event.column === this.column;\n    if (eventImpactsThisCell) {\n      this.refreshCell({});\n    }\n  }\n  refreshOrDestroyCell(params) {\n    if (this.refreshShouldDestroy()) {\n      this.rowCtrl?.recreateCell(this);\n    } else {\n      this.refreshCell(params);\n    }\n  }\n  // + stop editing {forceRefresh: true, suppressFlash: true}\n  // + event cellChanged {}\n  // + cellRenderer.params.refresh() {} -> method passes 'as is' to the cellRenderer, so params could be anything\n  // + rowCtrl: event dataChanged {suppressFlash: !update, newData: !update}\n  // + rowCtrl: api refreshCells() {animate: true/false}\n  // + rowRenderer: api softRefreshView() {}\n  refreshCell(params) {\n    if (this.suppressRefreshCell || this.editing) {\n      return;\n    }\n    const colDef = this.column.getColDef();\n    const newData = params != null && !!params.newData;\n    const suppressFlash = params != null && !!params.suppressFlash || !!colDef.suppressCellFlash;\n    const noValueProvided = colDef.field == null && colDef.valueGetter == null && colDef.showRowGroup == null;\n    const forceRefresh = params && params.forceRefresh || noValueProvided || newData;\n    const isCellCompReady = !!this.cellComp;\n    const valuesDifferent = this.updateAndFormatValue(isCellCompReady);\n    const dataNeedsUpdating = forceRefresh || valuesDifferent;\n    if (!isCellCompReady) {\n      return;\n    }\n    if (dataNeedsUpdating) {\n      this.showValue(newData);\n      const processingFilterChange = this.beans.filterManager?.isSuppressFlashingCellsBecauseFiltering();\n      const flashCell = !suppressFlash && !processingFilterChange && (this.beans.gos.get(\"enableCellChangeFlash\") || colDef.enableCellChangeFlash);\n      if (flashCell) {\n        this.flashCell();\n      }\n      this.cellCustomStyleFeature?.applyUserStyles();\n      this.cellCustomStyleFeature?.applyClassesFromColDef();\n    }\n    this.tooltipFeature?.refreshToolTip();\n    this.cellCustomStyleFeature?.applyCellClassRules();\n  }\n  // cell editors call this, when they want to stop for reasons other\n  // than what we pick up on. eg selecting from a dropdown ends editing.\n  stopEditingAndFocus(suppressNavigateAfterEdit = false, shiftKey = false) {\n    this.beans.editService?.stopEditingAndFocus(this, suppressNavigateAfterEdit, shiftKey);\n  }\n  // user can also call this via API\n  flashCell(delays) {\n    const flashDuration = delays?.flashDuration ?? delays?.flashDelay;\n    const fadeDuration = delays?.fadeDuration ?? delays?.fadeDelay;\n    this.animateCell(\"data-changed\", flashDuration, fadeDuration);\n  }\n  animateCell(cssName, flashDuration, fadeDuration) {\n    if (!this.cellComp) {\n      return;\n    }\n    const { gos } = this.beans;\n    if (!flashDuration) {\n      flashDuration = gos.get(\"cellFlashDuration\");\n    }\n    if (flashDuration === 0) {\n      return;\n    }\n    if (!_exists(fadeDuration)) {\n      fadeDuration = gos.get(\"cellFadeDuration\");\n    }\n    const fullName = `ag-cell-${cssName}`;\n    const animationFullName = `ag-cell-${cssName}-animation`;\n    this.cellComp.addOrRemoveCssClass(fullName, true);\n    this.cellComp.addOrRemoveCssClass(animationFullName, false);\n    this.beans.frameworkOverrides.wrapIncoming(() => {\n      window.setTimeout(() => {\n        if (!this.isAlive()) {\n          return;\n        }\n        this.cellComp.addOrRemoveCssClass(fullName, false);\n        this.cellComp.addOrRemoveCssClass(animationFullName, true);\n        this.eGui.style.transition = `background-color ${fadeDuration}ms`;\n        window.setTimeout(() => {\n          if (!this.isAlive()) {\n            return;\n          }\n          this.cellComp.addOrRemoveCssClass(animationFullName, false);\n          this.eGui.style.transition = \"\";\n        }, fadeDuration);\n      }, flashDuration);\n    });\n  }\n  onFlashCells(event) {\n    if (!this.cellComp) {\n      return;\n    }\n    const cellId = this.beans.cellPositionUtils.createId(this.getCellPosition());\n    const shouldFlash = event.cells[cellId];\n    if (shouldFlash) {\n      this.animateCell(\"highlight\");\n    }\n  }\n  isCellEditable() {\n    return this.column.isCellEditable(this.rowNode);\n  }\n  isSuppressFillHandle() {\n    return this.column.isSuppressFillHandle();\n  }\n  formatValue(value) {\n    return this.callValueFormatter(value) ?? value;\n  }\n  callValueFormatter(value) {\n    return this.beans.valueService.formatValue(this.column, this.rowNode, value);\n  }\n  updateAndFormatValue(compareValues) {\n    const oldValue = this.value;\n    const oldValueFormatted = this.valueFormatted;\n    this.value = this.rowNode.getValueFromValueService(this.column);\n    this.valueFormatted = this.callValueFormatter(this.value);\n    if (compareValues) {\n      return !this.valuesAreEqual(oldValue, this.value) || this.valueFormatted != oldValueFormatted;\n    }\n    return true;\n  }\n  valuesAreEqual(val1, val2) {\n    const colDef = this.column.getColDef();\n    return colDef.equals ? colDef.equals(val1, val2) : val1 === val2;\n  }\n  getComp() {\n    return this.cellComp;\n  }\n  getValue() {\n    return this.value;\n  }\n  addDomData() {\n    const element = this.getGui();\n    this.beans.gos.setDomData(element, _CellCtrl.DOM_DATA_KEY_CELL_CTRL, this);\n    this.addDestroyFunc(() => this.beans.gos.setDomData(element, _CellCtrl.DOM_DATA_KEY_CELL_CTRL, null));\n  }\n  createEvent(domEvent, eventType) {\n    const event = this.beans.gos.addGridCommonParams({\n      type: eventType,\n      node: this.rowNode,\n      data: this.rowNode.data,\n      value: this.value,\n      column: this.column,\n      colDef: this.column.getColDef(),\n      rowPinned: this.rowNode.rowPinned,\n      event: domEvent,\n      rowIndex: this.rowNode.rowIndex\n    });\n    return event;\n  }\n  processCharacter(event) {\n    this.cellKeyboardListenerFeature?.processCharacter(event);\n  }\n  onKeyDown(event) {\n    this.cellKeyboardListenerFeature?.onKeyDown(event);\n  }\n  onMouseEvent(eventName, mouseEvent) {\n    this.cellMouseListenerFeature?.onMouseEvent(eventName, mouseEvent);\n  }\n  getGui() {\n    return this.eGui;\n  }\n  getColSpanningList() {\n    return this.cellPositionFeature.getColSpanningList();\n  }\n  onLeftChanged() {\n    if (!this.cellComp) {\n      return;\n    }\n    this.cellPositionFeature?.onLeftChanged();\n  }\n  onDisplayedColumnsChanged() {\n    if (!this.eGui) {\n      return;\n    }\n    this.refreshAriaColIndex();\n    this.refreshFirstAndLastStyles();\n  }\n  refreshFirstAndLastStyles() {\n    const { cellComp, column, beans } = this;\n    refreshFirstAndLastStyles(cellComp, column, beans.visibleColsService);\n  }\n  refreshAriaColIndex() {\n    const colIdx = this.beans.visibleColsService.getAriaColIndex(this.column);\n    _setAriaColIndex(this.getGui(), colIdx);\n  }\n  isSuppressNavigable() {\n    return this.column.isSuppressNavigable(this.rowNode);\n  }\n  onWidthChanged() {\n    return this.cellPositionFeature?.onWidthChanged();\n  }\n  getColumn() {\n    return this.column;\n  }\n  getRowNode() {\n    return this.rowNode;\n  }\n  isPrintLayout() {\n    return this.printLayout;\n  }\n  getCellPosition() {\n    return this.cellPosition;\n  }\n  isEditing() {\n    return this.editing;\n  }\n  // called by rowRenderer when user navigates via tab key\n  startRowOrCellEdit(key, event = null) {\n    if (!this.cellComp) {\n      this.onCellCompAttachedFuncs.push(() => {\n        this.startRowOrCellEdit(key, event);\n      });\n      return;\n    }\n    if (this.beans.gos.get(\"editType\") === \"fullRow\") {\n      this.rowCtrl.startRowEditing(key, this);\n    } else {\n      this.startEditing(key, true, event);\n    }\n  }\n  getRowCtrl() {\n    return this.rowCtrl;\n  }\n  getRowPosition() {\n    return {\n      rowIndex: this.cellPosition.rowIndex,\n      rowPinned: this.cellPosition.rowPinned\n    };\n  }\n  updateRangeBordersIfRangeCount() {\n    if (!this.cellComp) {\n      return;\n    }\n    if (this.cellRangeFeature) {\n      this.cellRangeFeature.updateRangeBordersIfRangeCount();\n    }\n  }\n  onRangeSelectionChanged() {\n    if (!this.cellComp) {\n      return;\n    }\n    if (this.cellRangeFeature) {\n      this.cellRangeFeature.onRangeSelectionChanged();\n    }\n  }\n  isRangeSelectionEnabled() {\n    return this.cellRangeFeature != null;\n  }\n  focusCell(forceBrowserFocus = false) {\n    this.beans.focusService.setFocusedCell({\n      rowIndex: this.getCellPosition().rowIndex,\n      column: this.column,\n      rowPinned: this.rowNode.rowPinned,\n      forceBrowserFocus\n    });\n  }\n  onRowIndexChanged() {\n    this.createCellPosition();\n    this.onCellFocused();\n    if (this.cellRangeFeature) {\n      this.cellRangeFeature.onRangeSelectionChanged();\n    }\n  }\n  onSuppressCellFocusChanged(suppressCellFocus) {\n    if (!this.eGui) {\n      return;\n    }\n    _addOrRemoveAttribute(this.eGui, \"tabindex\", suppressCellFocus ? void 0 : -1);\n  }\n  onFirstRightPinnedChanged() {\n    if (!this.cellComp) {\n      return;\n    }\n    const firstRightPinned = this.column.isFirstRightPinned();\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_FIRST_RIGHT_PINNED, firstRightPinned);\n  }\n  onLastLeftPinnedChanged() {\n    if (!this.cellComp) {\n      return;\n    }\n    const lastLeftPinned = this.column.isLastLeftPinned();\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_LAST_LEFT_PINNED, lastLeftPinned);\n  }\n  onCellFocused(event) {\n    if (this.beans.focusService.isCellFocusSuppressed()) {\n      return;\n    }\n    const cellFocused = this.beans.focusService.isCellFocused(this.cellPosition);\n    if (!this.cellComp) {\n      if (cellFocused && event?.forceBrowserFocus) {\n        this.focusEventToRestore = event;\n      }\n      return;\n    }\n    this.focusEventToRestore = void 0;\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_FOCUS, cellFocused);\n    if (cellFocused && event && event.forceBrowserFocus) {\n      let focusEl = this.cellComp.getFocusableElement();\n      if (this.editing) {\n        const focusableEls = this.beans.focusService.findFocusableElements(focusEl, null, true);\n        if (focusableEls.length) {\n          focusEl = focusableEls[0];\n        }\n      }\n      focusEl.focus({ preventScroll: !!event.preventScrollOnBrowserFocus });\n    }\n    const fullRowEdit = this.beans.gos.get(\"editType\") === \"fullRow\";\n    if (!cellFocused && !fullRowEdit && this.editing) {\n      this.stopRowOrCellEdit();\n    }\n    if (cellFocused) {\n      this.rowCtrl.announceDescription();\n    }\n  }\n  createCellPosition() {\n    this.cellPosition = {\n      rowIndex: this.rowNode.rowIndex,\n      rowPinned: _makeNull(this.rowNode.rowPinned),\n      column: this.column\n    };\n  }\n  // CSS Classes that only get applied once, they never change\n  applyStaticCssClasses() {\n    this.cellComp.addOrRemoveCssClass(CSS_CELL, true);\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_NOT_INLINE_EDITING, true);\n    const autoHeight = this.column.isAutoHeight() == true;\n    this.cellComp.addOrRemoveCssClass(CSS_AUTO_HEIGHT, autoHeight);\n    this.cellComp.addOrRemoveCssClass(CSS_NORMAL_HEIGHT, !autoHeight);\n  }\n  onColumnHover() {\n    if (!this.cellComp) {\n      return;\n    }\n    if (!this.beans.gos.get(\"columnHoverHighlight\")) {\n      return;\n    }\n    const isHovered = this.beans.columnHoverService.isHovered(this.column);\n    this.cellComp.addOrRemoveCssClass(CSS_COLUMN_HOVER, isHovered);\n  }\n  onColDefChanged() {\n    if (!this.cellComp) {\n      return;\n    }\n    const isTooltipEnabled = this.column.isTooltipEnabled();\n    if (isTooltipEnabled) {\n      this.disableTooltipFeature();\n      this.enableTooltipFeature();\n    } else {\n      this.disableTooltipFeature();\n    }\n    this.setWrapText();\n    if (!this.editing) {\n      this.refreshOrDestroyCell({ forceRefresh: true, suppressFlash: true });\n    } else {\n      this.beans.editService?.handleColDefChanged(this);\n    }\n  }\n  setWrapText() {\n    const value = this.column.getColDef().wrapText == true;\n    this.cellComp.addOrRemoveCssClass(CSS_CELL_WRAP_TEXT, value);\n  }\n  dispatchCellContextMenuEvent(event) {\n    const colDef = this.column.getColDef();\n    const cellContextMenuEvent = this.createEvent(event, \"cellContextMenu\");\n    this.beans.eventService.dispatchEvent(cellContextMenuEvent);\n    if (colDef.onCellContextMenu) {\n      window.setTimeout(() => {\n        this.beans.frameworkOverrides.wrapOutgoing(() => {\n          colDef.onCellContextMenu(cellContextMenuEvent);\n        });\n      }, 0);\n    }\n  }\n  getCellRenderer() {\n    return this.cellComp ? this.cellComp.getCellRenderer() : null;\n  }\n  getCellEditor() {\n    return this.cellComp ? this.cellComp.getCellEditor() : null;\n  }\n  destroy() {\n    this.onCellCompAttachedFuncs = [];\n    super.destroy();\n  }\n  createSelectionCheckbox() {\n    const cbSelectionComponent = new CheckboxSelectionComponent();\n    this.beans.context.createBean(cbSelectionComponent);\n    cbSelectionComponent.init({ rowNode: this.rowNode, column: this.column });\n    return cbSelectionComponent;\n  }\n  createDndSource() {\n    const dndSourceComp = new DndSourceComp(this.rowNode, this.column, this.eGui);\n    this.beans.context.createBean(dndSourceComp);\n    return dndSourceComp;\n  }\n  registerRowDragger(customElement, dragStartPixels, suppressVisibilityChange) {\n    if (this.customRowDragComp) {\n      this.customRowDragComp.setDragElement(customElement, dragStartPixels);\n      return;\n    }\n    const newComp = this.createRowDragComp(customElement, dragStartPixels, suppressVisibilityChange);\n    if (newComp) {\n      this.customRowDragComp = newComp;\n      this.addDestroyFunc(() => {\n        this.beans.context.destroyBean(newComp);\n        this.customRowDragComp = null;\n      });\n    }\n  }\n  createRowDragComp(customElement, dragStartPixels, suppressVisibilityChange) {\n    const pagination = this.beans.gos.get(\"pagination\");\n    const rowDragManaged = this.beans.gos.get(\"rowDragManaged\");\n    const clientSideRowModelActive = this.beans.gos.isRowModelType(\"clientSide\");\n    if (rowDragManaged) {\n      if (!clientSideRowModelActive) {\n        _warnOnce(\"managed row dragging is only allowed in the Client Side Row Model\");\n        return;\n      }\n      if (pagination) {\n        _warnOnce(\"managed row dragging is not possible when doing pagination\");\n        return;\n      }\n    }\n    const rowDragComp = new RowDragComp(\n      () => this.value,\n      this.rowNode,\n      this.column,\n      customElement,\n      dragStartPixels,\n      suppressVisibilityChange\n    );\n    this.beans.context.createBean(rowDragComp);\n    return rowDragComp;\n  }\n  setSuppressRefreshCell(suppressRefreshCell) {\n    this.suppressRefreshCell = suppressRefreshCell;\n  }\n  getEditCompDetails() {\n    return this.editCompDetails;\n  }\n};\n_CellCtrl.DOM_DATA_KEY_CELL_CTRL = \"cellCtrl\";\nvar CellCtrl = _CellCtrl;\n\n// community-modules/core/src/rendering/row/rowCtrl.ts\nvar instanceIdSequence5 = 0;\nvar _RowCtrl = class _RowCtrl extends BeanStub {\n  constructor(rowNode, beans, animateIn, useAnimationFrameForCreate, printLayout) {\n    super();\n    this.allRowGuis = [];\n    this.active = true;\n    this.centerCellCtrls = { list: [], map: {} };\n    this.leftCellCtrls = { list: [], map: {} };\n    this.rightCellCtrls = { list: [], map: {} };\n    this.slideInAnimation = {\n      left: false,\n      center: false,\n      right: false,\n      fullWidth: false\n    };\n    this.fadeInAnimation = {\n      left: false,\n      center: false,\n      right: false,\n      fullWidth: false\n    };\n    this.rowDragComps = [];\n    this.lastMouseDownOnDragger = false;\n    this.emptyStyle = {};\n    this.updateColumnListsPending = false;\n    this.rowId = null;\n    this.businessKeySanitised = null;\n    this.beans = beans;\n    this.gos = beans.gos;\n    this.rowNode = rowNode;\n    this.paginationPage = beans.paginationService?.getCurrentPage() ?? 0;\n    this.useAnimationFrameForCreate = useAnimationFrameForCreate;\n    this.printLayout = printLayout;\n    this.suppressRowTransform = this.gos.get(\"suppressRowTransform\");\n    this.instanceId = rowNode.id + \"-\" + instanceIdSequence5++;\n    this.rowId = _escapeString(rowNode.id);\n    this.initRowBusinessKey();\n    this.rowFocused = beans.focusService.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned);\n    this.rowLevel = beans.rowCssClassCalculator.calculateRowLevel(this.rowNode);\n    this.setRowType();\n    this.setAnimateFlags(animateIn);\n    this.rowStyles = this.processStylesFromGridOptions();\n    this.addListeners();\n  }\n  initRowBusinessKey() {\n    this.businessKeyForNodeFunc = this.gos.get(\"getBusinessKeyForNode\");\n    this.updateRowBusinessKey();\n  }\n  updateRowBusinessKey() {\n    if (typeof this.businessKeyForNodeFunc !== \"function\") {\n      return;\n    }\n    const businessKey = this.businessKeyForNodeFunc(this.rowNode);\n    this.businessKeySanitised = _escapeString(businessKey);\n  }\n  getRowId() {\n    return this.rowId;\n  }\n  getRowStyles() {\n    return this.rowStyles;\n  }\n  isSticky() {\n    return this.rowNode.sticky;\n  }\n  getInstanceId() {\n    return this.instanceId;\n  }\n  updateGui(containerType, gui) {\n    if (containerType === \"left\") {\n      this.leftGui = gui;\n    } else if (containerType === \"right\") {\n      this.rightGui = gui;\n    } else if (containerType === \"fullWidth\") {\n      this.fullWidthGui = gui;\n    } else {\n      this.centerGui = gui;\n    }\n  }\n  setComp(rowComp, element, containerType) {\n    const gui = { rowComp, element, containerType };\n    this.allRowGuis.push(gui);\n    this.updateGui(containerType, gui);\n    this.initialiseRowComp(gui);\n    if (this.rowType !== \"FullWidthLoading\" && !this.rowNode.rowPinned) {\n      this.beans.rowRenderer.dispatchFirstDataRenderedEvent();\n    }\n  }\n  unsetComp(containerType) {\n    this.allRowGuis = this.allRowGuis.filter((rowGui) => rowGui.containerType !== containerType);\n    this.updateGui(containerType, void 0);\n  }\n  isCacheable() {\n    return this.rowType === \"FullWidthDetail\" && this.gos.get(\"keepDetailRows\");\n  }\n  setCached(cached) {\n    const displayValue = cached ? \"none\" : \"\";\n    this.allRowGuis.forEach((rg) => rg.element.style.display = displayValue);\n  }\n  initialiseRowComp(gui) {\n    const gos = this.gos;\n    this.onSuppressCellFocusChanged(this.beans.gos.get(\"suppressCellFocus\"));\n    this.listenOnDomOrder(gui);\n    if (this.beans.columnModel.wasAutoRowHeightEverActive()) {\n      this.rowNode.checkAutoHeights();\n    }\n    this.onRowHeightChanged(gui);\n    this.updateRowIndexes(gui);\n    this.setFocusedClasses(gui);\n    this.setStylesFromGridOptions(false, gui);\n    if (gos.isRowSelection() && this.rowNode.selectable) {\n      this.onRowSelected(gui);\n    }\n    this.updateColumnLists(!this.useAnimationFrameForCreate);\n    const comp = gui.rowComp;\n    const initialRowClasses = this.getInitialRowClasses(gui.containerType);\n    initialRowClasses.forEach((name) => comp.addOrRemoveCssClass(name, true));\n    this.executeSlideAndFadeAnimations(gui);\n    if (this.rowNode.group) {\n      _setAriaExpanded(gui.element, this.rowNode.expanded == true);\n    }\n    this.setRowCompRowId(comp);\n    this.setRowCompRowBusinessKey(comp);\n    gos.setDomData(gui.element, _RowCtrl.DOM_DATA_KEY_ROW_CTRL, this);\n    this.addDestroyFunc(() => gos.setDomData(gui.element, _RowCtrl.DOM_DATA_KEY_ROW_CTRL, null));\n    if (this.useAnimationFrameForCreate) {\n      this.beans.animationFrameService.createTask(\n        this.addHoverFunctionality.bind(this, gui.element),\n        this.rowNode.rowIndex,\n        \"createTasksP2\"\n      );\n    } else {\n      this.addHoverFunctionality(gui.element);\n    }\n    if (this.isFullWidth()) {\n      this.setupFullWidth(gui);\n    }\n    if (gos.get(\"rowDragEntireRow\")) {\n      this.addRowDraggerToRow(gui);\n    }\n    if (this.useAnimationFrameForCreate) {\n      this.beans.animationFrameService.addDestroyTask(() => {\n        if (!this.isAlive()) {\n          return;\n        }\n        gui.rowComp.addOrRemoveCssClass(\"ag-after-created\", true);\n      });\n    }\n    this.executeProcessRowPostCreateFunc();\n  }\n  setRowCompRowBusinessKey(comp) {\n    if (this.businessKeySanitised == null) {\n      return;\n    }\n    comp.setRowBusinessKey(this.businessKeySanitised);\n  }\n  getBusinessKey() {\n    return this.businessKeySanitised;\n  }\n  setRowCompRowId(comp) {\n    this.rowId = _escapeString(this.rowNode.id);\n    if (this.rowId == null) {\n      return;\n    }\n    comp.setRowId(this.rowId);\n  }\n  executeSlideAndFadeAnimations(gui) {\n    const { containerType } = gui;\n    const shouldSlide = this.slideInAnimation[containerType];\n    if (shouldSlide) {\n      _executeNextVMTurn(() => {\n        this.onTopChanged();\n      });\n      this.slideInAnimation[containerType] = false;\n    }\n    const shouldFade = this.fadeInAnimation[containerType];\n    if (shouldFade) {\n      _executeNextVMTurn(() => {\n        gui.rowComp.addOrRemoveCssClass(\"ag-opacity-zero\", false);\n      });\n      this.fadeInAnimation[containerType] = false;\n    }\n  }\n  addRowDraggerToRow(gui) {\n    if (this.gos.get(\"enableRangeSelection\")) {\n      _warnOnce(\n        \"Setting `rowDragEntireRow: true` in the gridOptions doesn't work with `enableRangeSelection: true`\"\n      );\n      return;\n    }\n    const translate = this.beans.localeService.getLocaleTextFunc();\n    const rowDragComp = new RowDragComp(\n      () => `1 ${translate(\"rowDragRow\", \"row\")}`,\n      this.rowNode,\n      void 0,\n      gui.element,\n      void 0,\n      true\n    );\n    const rowDragBean = this.createBean(rowDragComp, this.beans.context);\n    this.rowDragComps.push(rowDragBean);\n  }\n  setupFullWidth(gui) {\n    const pinned = this.getPinnedForContainer(gui.containerType);\n    if (this.rowType == \"FullWidthDetail\") {\n      if (!ModuleRegistry.__assertRegistered(\n        \"@ag-grid-enterprise/master-detail\" /* MasterDetailModule */,\n        \"cell renderer 'agDetailCellRenderer' (for master detail)\",\n        this.beans.context.getGridId()\n      )) {\n        return;\n      }\n    }\n    const compDetails = this.createFullWidthCompDetails(gui.element, pinned);\n    gui.rowComp.showFullWidth(compDetails);\n  }\n  isPrintLayout() {\n    return this.printLayout;\n  }\n  getFullWidthCellRenderers() {\n    if (this.gos.get(\"embedFullWidthRows\")) {\n      return this.allRowGuis.map((gui) => gui?.rowComp?.getFullWidthCellRenderer());\n    }\n    return [this.fullWidthGui?.rowComp?.getFullWidthCellRenderer()];\n  }\n  // use by autoWidthCalculator, as it clones the elements\n  getCellElement(column) {\n    const cellCtrl = this.getCellCtrl(column);\n    return cellCtrl ? cellCtrl.getGui() : null;\n  }\n  executeProcessRowPostCreateFunc() {\n    const func = this.gos.getCallback(\"processRowPostCreate\");\n    if (!func || !this.areAllContainersReady()) {\n      return;\n    }\n    const params = {\n      // areAllContainersReady asserts that centerGui is not null\n      eRow: this.centerGui.element,\n      ePinnedLeftRow: this.leftGui ? this.leftGui.element : void 0,\n      ePinnedRightRow: this.rightGui ? this.rightGui.element : void 0,\n      node: this.rowNode,\n      rowIndex: this.rowNode.rowIndex,\n      addRenderedRowListener: this.addEventListener.bind(this)\n    };\n    func(params);\n  }\n  areAllContainersReady() {\n    const isLeftReady = !!this.leftGui || !this.beans.visibleColsService.isPinningLeft();\n    const isCenterReady = !!this.centerGui;\n    const isRightReady = !!this.rightGui || !this.beans.visibleColsService.isPinningRight();\n    return isLeftReady && isCenterReady && isRightReady;\n  }\n  setRowType() {\n    const isStub = this.rowNode.stub && !this.gos.get(\"suppressServerSideFullWidthLoadingRow\") && !this.gos.get(\"groupHideOpenParents\");\n    const isFullWidthCell = this.rowNode.isFullWidthCell();\n    const isDetailCell = this.gos.get(\"masterDetail\") && this.rowNode.detail;\n    const pivotMode = this.beans.columnModel.isPivotMode();\n    const isGroupRow = !!this.rowNode.group && !this.rowNode.footer;\n    const isFullWidthGroup = isGroupRow && this.gos.isGroupUseEntireRow(pivotMode);\n    if (isStub) {\n      this.rowType = \"FullWidthLoading\";\n    } else if (isDetailCell) {\n      this.rowType = \"FullWidthDetail\";\n    } else if (isFullWidthCell) {\n      this.rowType = \"FullWidth\";\n    } else if (isFullWidthGroup) {\n      this.rowType = \"FullWidthGroup\";\n    } else {\n      this.rowType = \"Normal\";\n    }\n  }\n  updateColumnLists(suppressAnimationFrame = false, useFlushSync = false) {\n    if (this.isFullWidth()) {\n      return;\n    }\n    const noAnimation = suppressAnimationFrame || this.gos.get(\"suppressAnimationFrame\") || this.printLayout;\n    if (noAnimation) {\n      this.updateColumnListsImpl(useFlushSync);\n      return;\n    }\n    if (this.updateColumnListsPending) {\n      return;\n    }\n    this.beans.animationFrameService.createTask(\n      () => {\n        if (!this.active) {\n          return;\n        }\n        this.updateColumnListsImpl(true);\n      },\n      this.rowNode.rowIndex,\n      \"createTasksP1\"\n    );\n    this.updateColumnListsPending = true;\n  }\n  createCellCtrls(prev, cols, pinned = null) {\n    const res = {\n      list: [],\n      map: {}\n    };\n    const addCell = (colInstanceId, cellCtrl) => {\n      res.list.push(cellCtrl);\n      res.map[colInstanceId] = cellCtrl;\n    };\n    cols.forEach((col) => {\n      const colInstanceId = col.getInstanceId();\n      let cellCtrl = prev.map[colInstanceId];\n      if (!cellCtrl) {\n        cellCtrl = new CellCtrl(col, this.rowNode, this.beans, this);\n      }\n      addCell(colInstanceId, cellCtrl);\n    });\n    prev.list.forEach((prevCellCtrl) => {\n      const cellInResult = res.map[prevCellCtrl.getColumn().getInstanceId()] != null;\n      if (cellInResult) {\n        return;\n      }\n      const keepCell = !this.isCellEligibleToBeRemoved(prevCellCtrl, pinned);\n      if (keepCell) {\n        addCell(prevCellCtrl.getColumn().getInstanceId(), prevCellCtrl);\n        return;\n      }\n      prevCellCtrl.destroy();\n    });\n    return res;\n  }\n  updateColumnListsImpl(useFlushSync) {\n    this.updateColumnListsPending = false;\n    this.createAllCellCtrls();\n    this.setCellCtrls(useFlushSync);\n  }\n  setCellCtrls(useFlushSync) {\n    this.allRowGuis.forEach((item) => {\n      const cellControls = this.getCellCtrlsForContainer(item.containerType);\n      item.rowComp.setCellCtrls(cellControls, useFlushSync);\n    });\n  }\n  getCellCtrlsForContainer(containerType) {\n    switch (containerType) {\n      case \"left\":\n        return this.leftCellCtrls.list;\n      case \"right\":\n        return this.rightCellCtrls.list;\n      case \"fullWidth\":\n        return [];\n      case \"center\":\n        return this.centerCellCtrls.list;\n    }\n  }\n  createAllCellCtrls() {\n    const columnViewportService = this.beans.columnViewportService;\n    const presentedColsService = this.beans.visibleColsService;\n    if (this.printLayout) {\n      this.centerCellCtrls = this.createCellCtrls(this.centerCellCtrls, presentedColsService.getAllCols());\n      this.leftCellCtrls = { list: [], map: {} };\n      this.rightCellCtrls = { list: [], map: {} };\n    } else {\n      const centerCols = columnViewportService.getColsWithinViewport(this.rowNode);\n      this.centerCellCtrls = this.createCellCtrls(this.centerCellCtrls, centerCols);\n      const leftCols = presentedColsService.getLeftColsForRow(this.rowNode);\n      this.leftCellCtrls = this.createCellCtrls(this.leftCellCtrls, leftCols, \"left\");\n      const rightCols = presentedColsService.getRightColsForRow(this.rowNode);\n      this.rightCellCtrls = this.createCellCtrls(this.rightCellCtrls, rightCols, \"right\");\n    }\n  }\n  isCellEligibleToBeRemoved(cellCtrl, nextContainerPinned) {\n    const REMOVE_CELL = true;\n    const KEEP_CELL = false;\n    const column = cellCtrl.getColumn();\n    if (column.getPinned() != nextContainerPinned) {\n      return REMOVE_CELL;\n    }\n    const editing = cellCtrl.isEditing();\n    const focused = this.beans.focusService.isCellFocused(cellCtrl.getCellPosition());\n    const mightWantToKeepCell = editing || focused;\n    if (mightWantToKeepCell) {\n      const column2 = cellCtrl.getColumn();\n      const displayedColumns = this.beans.visibleColsService.getAllCols();\n      const cellStillDisplayed = displayedColumns.indexOf(column2) >= 0;\n      return cellStillDisplayed ? KEEP_CELL : REMOVE_CELL;\n    }\n    return REMOVE_CELL;\n  }\n  getDomOrder() {\n    const isEnsureDomOrder = this.gos.get(\"ensureDomOrder\");\n    return isEnsureDomOrder || this.gos.isDomLayout(\"print\");\n  }\n  listenOnDomOrder(gui) {\n    const listener = () => {\n      gui.rowComp.setDomOrder(this.getDomOrder());\n    };\n    this.addManagedPropertyListener(\"domLayout\", listener);\n    this.addManagedPropertyListener(\"ensureDomOrder\", listener);\n  }\n  setAnimateFlags(animateIn) {\n    if (this.isSticky() || !animateIn) {\n      return;\n    }\n    const oldRowTopExists = _exists(this.rowNode.oldRowTop);\n    const pinningLeft = this.beans.visibleColsService.isPinningLeft();\n    const pinningRight = this.beans.visibleColsService.isPinningRight();\n    if (oldRowTopExists) {\n      if (this.isFullWidth() && !this.gos.get(\"embedFullWidthRows\")) {\n        this.slideInAnimation.fullWidth = true;\n        return;\n      }\n      this.slideInAnimation.center = true;\n      this.slideInAnimation.left = pinningLeft;\n      this.slideInAnimation.right = pinningRight;\n    } else {\n      if (this.isFullWidth() && !this.gos.get(\"embedFullWidthRows\")) {\n        this.fadeInAnimation.fullWidth = true;\n        return;\n      }\n      this.fadeInAnimation.center = true;\n      this.fadeInAnimation.left = pinningLeft;\n      this.fadeInAnimation.right = pinningRight;\n    }\n  }\n  isEditing() {\n    return this.editingRow;\n  }\n  isFullWidth() {\n    return this.rowType !== \"Normal\";\n  }\n  refreshFullWidth() {\n    const tryRefresh = (gui, pinned) => {\n      if (!gui) {\n        return true;\n      }\n      return gui.rowComp.refreshFullWidth(() => {\n        const compDetails = this.createFullWidthCompDetails(gui.element, pinned);\n        return compDetails.params;\n      });\n    };\n    const fullWidthSuccess = tryRefresh(this.fullWidthGui, null);\n    const centerSuccess = tryRefresh(this.centerGui, null);\n    const leftSuccess = tryRefresh(this.leftGui, \"left\");\n    const rightSuccess = tryRefresh(this.rightGui, \"right\");\n    const allFullWidthRowsRefreshed = fullWidthSuccess && centerSuccess && leftSuccess && rightSuccess;\n    return allFullWidthRowsRefreshed;\n  }\n  addListeners() {\n    this.addManagedListeners(this.rowNode, {\n      heightChanged: () => this.onRowHeightChanged(),\n      rowSelected: () => this.onRowSelected(),\n      rowIndexChanged: this.onRowIndexChanged.bind(this),\n      topChanged: this.onTopChanged.bind(this),\n      expandedChanged: this.updateExpandedCss.bind(this),\n      hasChildrenChanged: this.updateExpandedCss.bind(this)\n    });\n    if (this.rowNode.detail) {\n      this.addManagedListeners(this.rowNode.parent, { dataChanged: this.onRowNodeDataChanged.bind(this) });\n    }\n    this.addManagedListeners(this.rowNode, {\n      dataChanged: this.onRowNodeDataChanged.bind(this),\n      cellChanged: this.postProcessCss.bind(this),\n      rowHighlightChanged: this.onRowNodeHighlightChanged.bind(this),\n      draggingChanged: this.postProcessRowDragging.bind(this),\n      uiLevelChanged: this.onUiLevelChanged.bind(this)\n    });\n    this.addManagedListeners(this.beans.eventService, {\n      paginationPixelOffsetChanged: this.onPaginationPixelOffsetChanged.bind(this),\n      heightScaleChanged: this.onTopChanged.bind(this),\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this),\n      virtualColumnsChanged: this.onVirtualColumnsChanged.bind(this),\n      cellFocused: this.onCellFocusChanged.bind(this),\n      cellFocusCleared: this.onCellFocusChanged.bind(this),\n      paginationChanged: this.onPaginationChanged.bind(this),\n      modelUpdated: this.refreshFirstAndLastRowStyles.bind(this),\n      columnMoved: () => this.updateColumnLists()\n    });\n    this.addDestroyFunc(() => {\n      this.destroyBeans(this.rowDragComps, this.beans.context);\n      if (this.tooltipFeature) {\n        this.tooltipFeature = this.destroyBean(this.tooltipFeature, this.beans.context);\n      }\n    });\n    this.addManagedPropertyListeners([\"rowDragEntireRow\"], () => {\n      const useRowDragEntireRow = this.gos.get(\"rowDragEntireRow\");\n      if (useRowDragEntireRow) {\n        this.allRowGuis.forEach((gui) => {\n          this.addRowDraggerToRow(gui);\n        });\n        return;\n      }\n      this.rowDragComps = this.destroyBeans(this.rowDragComps, this.beans.context);\n    });\n    this.addListenersForCellComps();\n  }\n  addListenersForCellComps() {\n    this.addManagedListeners(this.rowNode, {\n      rowIndexChanged: () => {\n        this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onRowIndexChanged());\n      },\n      cellChanged: (event) => {\n        this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onCellChanged(event));\n      }\n    });\n  }\n  onRowNodeDataChanged(event) {\n    const fullWidthChanged = this.isFullWidth() !== !!this.rowNode.isFullWidthCell();\n    if (fullWidthChanged) {\n      this.beans.rowRenderer.redrawRow(this.rowNode);\n      return;\n    }\n    if (this.isFullWidth()) {\n      const refresh = this.refreshFullWidth();\n      if (!refresh) {\n        this.beans.rowRenderer.redrawRow(this.rowNode);\n      }\n      return;\n    }\n    this.getAllCellCtrls().forEach(\n      (cellCtrl) => cellCtrl.refreshCell({\n        suppressFlash: !event.update,\n        newData: !event.update\n      })\n    );\n    this.allRowGuis.forEach((gui) => {\n      this.setRowCompRowId(gui.rowComp);\n      this.updateRowBusinessKey();\n      this.setRowCompRowBusinessKey(gui.rowComp);\n    });\n    this.onRowSelected();\n    this.postProcessCss();\n  }\n  postProcessCss() {\n    this.setStylesFromGridOptions(true);\n    this.postProcessClassesFromGridOptions();\n    this.postProcessRowClassRules();\n    this.postProcessRowDragging();\n  }\n  onRowNodeHighlightChanged() {\n    const highlighted = this.rowNode.highlighted;\n    this.allRowGuis.forEach((gui) => {\n      const aboveOn = highlighted === 0 /* Above */;\n      const belowOn = highlighted === 1 /* Below */;\n      gui.rowComp.addOrRemoveCssClass(\"ag-row-highlight-above\", aboveOn);\n      gui.rowComp.addOrRemoveCssClass(\"ag-row-highlight-below\", belowOn);\n    });\n  }\n  postProcessRowDragging() {\n    const dragging = this.rowNode.dragging;\n    this.allRowGuis.forEach((gui) => gui.rowComp.addOrRemoveCssClass(\"ag-row-dragging\", dragging));\n  }\n  updateExpandedCss() {\n    const expandable = this.rowNode.isExpandable();\n    const expanded = this.rowNode.expanded == true;\n    this.allRowGuis.forEach((gui) => {\n      gui.rowComp.addOrRemoveCssClass(\"ag-row-group\", expandable);\n      gui.rowComp.addOrRemoveCssClass(\"ag-row-group-expanded\", expandable && expanded);\n      gui.rowComp.addOrRemoveCssClass(\"ag-row-group-contracted\", expandable && !expanded);\n      _setAriaExpanded(gui.element, expandable && expanded);\n    });\n  }\n  onDisplayedColumnsChanged() {\n    this.updateColumnLists(true);\n    if (this.beans.columnModel.wasAutoRowHeightEverActive()) {\n      this.rowNode.checkAutoHeights();\n    }\n  }\n  onVirtualColumnsChanged() {\n    this.updateColumnLists(false, true);\n  }\n  getRowPosition() {\n    return {\n      rowPinned: _makeNull(this.rowNode.rowPinned),\n      rowIndex: this.rowNode.rowIndex\n    };\n  }\n  onKeyboardNavigate(keyboardEvent) {\n    const currentFullWidthComp = this.allRowGuis.find(\n      (c) => c.element.contains(keyboardEvent.target)\n    );\n    const currentFullWidthContainer = currentFullWidthComp ? currentFullWidthComp.element : null;\n    const isFullWidthContainerFocused = currentFullWidthContainer === keyboardEvent.target;\n    if (!isFullWidthContainerFocused) {\n      return;\n    }\n    const node = this.rowNode;\n    const lastFocusedCell = this.beans.focusService.getFocusedCell();\n    const cellPosition = {\n      rowIndex: node.rowIndex,\n      rowPinned: node.rowPinned,\n      column: lastFocusedCell && lastFocusedCell.column\n    };\n    this.beans.navigationService.navigateToNextCell(keyboardEvent, keyboardEvent.key, cellPosition, true);\n    keyboardEvent.preventDefault();\n  }\n  onTabKeyDown(keyboardEvent) {\n    if (keyboardEvent.defaultPrevented || _isStopPropagationForAgGrid(keyboardEvent)) {\n      return;\n    }\n    const currentFullWidthComp = this.allRowGuis.find(\n      (c) => c.element.contains(keyboardEvent.target)\n    );\n    const currentFullWidthContainer = currentFullWidthComp ? currentFullWidthComp.element : null;\n    const isFullWidthContainerFocused = currentFullWidthContainer === keyboardEvent.target;\n    let nextEl = null;\n    if (!isFullWidthContainerFocused) {\n      nextEl = this.beans.focusService.findNextFocusableElement(\n        currentFullWidthContainer,\n        false,\n        keyboardEvent.shiftKey\n      );\n    }\n    if (this.isFullWidth() && isFullWidthContainerFocused || !nextEl) {\n      this.beans.navigationService.onTabKeyDown(this, keyboardEvent);\n    }\n  }\n  getFullWidthElement() {\n    if (this.fullWidthGui) {\n      return this.fullWidthGui.element;\n    }\n    return null;\n  }\n  getRowYPosition() {\n    const displayedEl = this.allRowGuis.find((el) => _isVisible(el.element))?.element;\n    if (displayedEl) {\n      return displayedEl.getBoundingClientRect().top;\n    }\n    return 0;\n  }\n  onSuppressCellFocusChanged(suppressCellFocus) {\n    const tabIndex = this.isFullWidth() && suppressCellFocus ? void 0 : -1;\n    this.allRowGuis.forEach((gui) => {\n      _addOrRemoveAttribute(gui.element, \"tabindex\", tabIndex);\n    });\n  }\n  onFullWidthRowFocused(event) {\n    const node = this.rowNode;\n    const isFocused = !event ? false : this.isFullWidth() && event.rowIndex === node.rowIndex && event.rowPinned == node.rowPinned;\n    const element = this.fullWidthGui ? this.fullWidthGui.element : this.centerGui?.element;\n    if (!element) {\n      return;\n    }\n    element.classList.toggle(\"ag-full-width-focus\", isFocused);\n    if (isFocused && event?.forceBrowserFocus) {\n      element.focus({ preventScroll: true });\n    }\n  }\n  recreateCell(cellCtrl) {\n    this.centerCellCtrls = this.removeCellCtrl(this.centerCellCtrls, cellCtrl);\n    this.leftCellCtrls = this.removeCellCtrl(this.leftCellCtrls, cellCtrl);\n    this.rightCellCtrls = this.removeCellCtrl(this.rightCellCtrls, cellCtrl);\n    cellCtrl.destroy();\n    this.updateColumnLists();\n  }\n  removeCellCtrl(prev, cellCtrlToRemove) {\n    const res = {\n      list: [],\n      map: {}\n    };\n    prev.list.forEach((cellCtrl) => {\n      if (cellCtrl === cellCtrlToRemove) {\n        return;\n      }\n      res.list.push(cellCtrl);\n      res.map[cellCtrl.getColumn().getInstanceId()] = cellCtrl;\n    });\n    return res;\n  }\n  onMouseEvent(eventName, mouseEvent) {\n    switch (eventName) {\n      case \"dblclick\":\n        this.onRowDblClick(mouseEvent);\n        break;\n      case \"click\":\n        this.onRowClick(mouseEvent);\n        break;\n      case \"touchstart\":\n      case \"mousedown\":\n        this.onRowMouseDown(mouseEvent);\n        break;\n    }\n  }\n  createRowEvent(type, domEvent) {\n    return this.gos.addGridCommonParams({\n      type,\n      node: this.rowNode,\n      data: this.rowNode.data,\n      rowIndex: this.rowNode.rowIndex,\n      rowPinned: this.rowNode.rowPinned,\n      event: domEvent\n    });\n  }\n  createRowEventWithSource(type, domEvent) {\n    const event = this.createRowEvent(type, domEvent);\n    event.source = this;\n    return event;\n  }\n  onRowDblClick(mouseEvent) {\n    if (_isStopPropagationForAgGrid(mouseEvent)) {\n      return;\n    }\n    this.beans.eventService.dispatchEvent(this.createRowEventWithSource(\"rowDoubleClicked\", mouseEvent));\n  }\n  onRowMouseDown(mouseEvent) {\n    this.lastMouseDownOnDragger = _isElementChildOfClass(mouseEvent.target, \"ag-row-drag\", 3);\n    if (!this.isFullWidth()) {\n      return;\n    }\n    const node = this.rowNode;\n    const presentedColsService = this.beans.visibleColsService;\n    if (this.beans.rangeService) {\n      this.beans.rangeService.removeAllCellRanges();\n    }\n    const element = this.getFullWidthElement();\n    const target = mouseEvent.target;\n    let forceBrowserFocus = true;\n    if (element && element.contains(target) && _isFocusableFormField(target)) {\n      forceBrowserFocus = false;\n    }\n    this.beans.focusService.setFocusedCell({\n      rowIndex: node.rowIndex,\n      column: presentedColsService.getAllCols()[0],\n      rowPinned: node.rowPinned,\n      forceBrowserFocus\n    });\n  }\n  onRowClick(mouseEvent) {\n    const stop = _isStopPropagationForAgGrid(mouseEvent) || this.lastMouseDownOnDragger;\n    if (stop) {\n      return;\n    }\n    this.beans.eventService.dispatchEvent(this.createRowEventWithSource(\"rowClicked\", mouseEvent));\n    const isMultiKey = mouseEvent.ctrlKey || mouseEvent.metaKey;\n    const isShiftKey = mouseEvent.shiftKey;\n    const groupSelectsChildren = this.gos.get(\"groupSelectsChildren\");\n    if (\n      // we do not allow selecting groups by clicking (as the click here expands the group), or if it's a detail row,\n      // so return if it's a group row\n      groupSelectsChildren && this.rowNode.group || this.isRowSelectionBlocked() || // if click selection suppressed, do nothing\n      this.gos.get(\"suppressRowClickSelection\")\n    ) {\n      return;\n    }\n    const multiSelectOnClick = this.gos.get(\"rowMultiSelectWithClick\");\n    const rowDeselectionWithCtrl = !this.gos.get(\"suppressRowDeselection\");\n    const source = \"rowClicked\";\n    if (this.rowNode.isSelected()) {\n      if (multiSelectOnClick) {\n        this.rowNode.setSelectedParams({ newValue: false, event: mouseEvent, source });\n      } else if (isMultiKey) {\n        if (rowDeselectionWithCtrl) {\n          this.rowNode.setSelectedParams({ newValue: false, event: mouseEvent, source });\n        }\n      } else {\n        this.rowNode.setSelectedParams({\n          newValue: true,\n          clearSelection: !isShiftKey,\n          rangeSelect: isShiftKey,\n          event: mouseEvent,\n          source\n        });\n      }\n    } else {\n      const clearSelection = multiSelectOnClick ? false : !isMultiKey;\n      this.rowNode.setSelectedParams({\n        newValue: true,\n        clearSelection,\n        rangeSelect: isShiftKey,\n        event: mouseEvent,\n        source\n      });\n    }\n  }\n  isRowSelectionBlocked() {\n    return !this.rowNode.selectable || !!this.rowNode.rowPinned || !this.gos.isRowSelection();\n  }\n  setupDetailRowAutoHeight(eDetailGui) {\n    if (this.rowType !== \"FullWidthDetail\") {\n      return;\n    }\n    if (!this.gos.get(\"detailRowAutoHeight\")) {\n      return;\n    }\n    const checkRowSizeFunc = () => {\n      const clientHeight = eDetailGui.clientHeight;\n      if (clientHeight != null && clientHeight > 0) {\n        const updateRowHeightFunc = () => {\n          this.rowNode.setRowHeight(clientHeight);\n          if (this.beans.rowModel.getType() === \"clientSide\") {\n            this.beans.rowModel.onRowHeightChanged();\n          } else if (this.beans.rowModel.getType() === \"serverSide\") {\n            this.beans.rowModel.onRowHeightChanged();\n          }\n        };\n        window.setTimeout(updateRowHeightFunc, 0);\n      }\n    };\n    const resizeObserverDestroyFunc = this.beans.resizeObserverService.observeResize(eDetailGui, checkRowSizeFunc);\n    this.addDestroyFunc(resizeObserverDestroyFunc);\n    checkRowSizeFunc();\n  }\n  createFullWidthCompDetails(eRow, pinned) {\n    const { gos, rowNode } = this;\n    const params = gos.addGridCommonParams({\n      fullWidth: true,\n      data: rowNode.data,\n      node: rowNode,\n      value: rowNode.key,\n      valueFormatted: rowNode.key,\n      // these need to be taken out, as part of 'afterAttached' now\n      eGridCell: eRow,\n      eParentOfValue: eRow,\n      pinned,\n      addRenderedRowListener: this.addEventListener.bind(this),\n      registerRowDragger: (rowDraggerElement, dragStartPixels, value, suppressVisibilityChange) => this.addFullWidthRowDragging(rowDraggerElement, dragStartPixels, value, suppressVisibilityChange),\n      setTooltip: (value, shouldDisplayTooltip) => this.refreshRowTooltip(value, shouldDisplayTooltip)\n    });\n    const compFactory = this.beans.userComponentFactory;\n    switch (this.rowType) {\n      case \"FullWidthDetail\":\n        return compFactory.getFullWidthDetailCellRendererDetails(params);\n      case \"FullWidthGroup\":\n        return compFactory.getFullWidthGroupCellRendererDetails(params);\n      case \"FullWidthLoading\":\n        return compFactory.getFullWidthLoadingCellRendererDetails(params);\n      default:\n        return compFactory.getFullWidthCellRendererDetails(params);\n    }\n  }\n  refreshRowTooltip(value, shouldDisplayTooltip) {\n    if (!this.fullWidthGui) {\n      return;\n    }\n    const tooltipParams = {\n      getGui: () => this.fullWidthGui.element,\n      getTooltipValue: () => value,\n      getLocation: () => \"fullWidthRow\",\n      shouldDisplayTooltip\n    };\n    if (this.tooltipFeature) {\n      this.destroyBean(this.tooltipFeature, this.beans.context);\n    }\n    this.tooltipFeature = this.createBean(new TooltipFeature(tooltipParams, this.beans));\n  }\n  addFullWidthRowDragging(rowDraggerElement, dragStartPixels, value = \"\", suppressVisibilityChange) {\n    if (!this.isFullWidth()) {\n      return;\n    }\n    const rowDragComp = new RowDragComp(\n      () => value,\n      this.rowNode,\n      void 0,\n      rowDraggerElement,\n      dragStartPixels,\n      suppressVisibilityChange\n    );\n    this.createBean(rowDragComp, this.beans.context);\n    this.addDestroyFunc(() => {\n      this.destroyBean(rowDragComp, this.beans.context);\n    });\n  }\n  onUiLevelChanged() {\n    const newLevel = this.beans.rowCssClassCalculator.calculateRowLevel(this.rowNode);\n    if (this.rowLevel != newLevel) {\n      const classToAdd = \"ag-row-level-\" + newLevel;\n      const classToRemove = \"ag-row-level-\" + this.rowLevel;\n      this.allRowGuis.forEach((gui) => {\n        gui.rowComp.addOrRemoveCssClass(classToAdd, true);\n        gui.rowComp.addOrRemoveCssClass(classToRemove, false);\n      });\n    }\n    this.rowLevel = newLevel;\n  }\n  isFirstRowOnPage() {\n    return this.rowNode.rowIndex === this.beans.pageBoundsService.getFirstRow();\n  }\n  isLastRowOnPage() {\n    return this.rowNode.rowIndex === this.beans.pageBoundsService.getLastRow();\n  }\n  refreshFirstAndLastRowStyles() {\n    const newFirst = this.isFirstRowOnPage();\n    const newLast = this.isLastRowOnPage();\n    if (this.firstRowOnPage !== newFirst) {\n      this.firstRowOnPage = newFirst;\n      this.allRowGuis.forEach((gui) => gui.rowComp.addOrRemoveCssClass(\"ag-row-first\", newFirst));\n    }\n    if (this.lastRowOnPage !== newLast) {\n      this.lastRowOnPage = newLast;\n      this.allRowGuis.forEach((gui) => gui.rowComp.addOrRemoveCssClass(\"ag-row-last\", newLast));\n    }\n  }\n  stopEditing(cancel = false) {\n    if (this.stoppingRowEdit) {\n      return;\n    }\n    this.beans.rowEditService?.stopEditing(this, cancel);\n  }\n  setInlineEditingCss() {\n    const editing = this.editingRow || this.getAllCellCtrls().some((cellCtrl) => cellCtrl.isEditing());\n    this.allRowGuis.forEach((gui) => {\n      gui.rowComp.addOrRemoveCssClass(\"ag-row-inline-editing\", editing);\n      gui.rowComp.addOrRemoveCssClass(\"ag-row-not-inline-editing\", !editing);\n    });\n  }\n  setEditingRow(value) {\n    this.editingRow = value;\n  }\n  startRowEditing(key = null, sourceRenderedCell = null, event = null) {\n    if (this.editingRow) {\n      return;\n    }\n    this.beans.rowEditService?.startEditing(this, key, sourceRenderedCell, event);\n  }\n  getAllCellCtrls() {\n    if (this.leftCellCtrls.list.length === 0 && this.rightCellCtrls.list.length === 0) {\n      return this.centerCellCtrls.list;\n    }\n    const res = [...this.centerCellCtrls.list, ...this.leftCellCtrls.list, ...this.rightCellCtrls.list];\n    return res;\n  }\n  postProcessClassesFromGridOptions() {\n    const cssClasses = this.beans.rowCssClassCalculator.processClassesFromGridOptions(this.rowNode);\n    if (!cssClasses || !cssClasses.length) {\n      return;\n    }\n    cssClasses.forEach((classStr) => {\n      this.allRowGuis.forEach((c) => c.rowComp.addOrRemoveCssClass(classStr, true));\n    });\n  }\n  postProcessRowClassRules() {\n    this.beans.rowCssClassCalculator.processRowClassRules(\n      this.rowNode,\n      (className) => {\n        this.allRowGuis.forEach((gui) => gui.rowComp.addOrRemoveCssClass(className, true));\n      },\n      (className) => {\n        this.allRowGuis.forEach((gui) => gui.rowComp.addOrRemoveCssClass(className, false));\n      }\n    );\n  }\n  setStylesFromGridOptions(updateStyles, gui) {\n    if (updateStyles) {\n      this.rowStyles = this.processStylesFromGridOptions();\n    }\n    this.forEachGui(gui, (gui2) => gui2.rowComp.setUserStyles(this.rowStyles));\n  }\n  getPinnedForContainer(rowContainerType) {\n    if (rowContainerType === \"left\" || rowContainerType === \"right\") {\n      return rowContainerType;\n    }\n    return null;\n  }\n  getInitialRowClasses(rowContainerType) {\n    const pinned = this.getPinnedForContainer(rowContainerType);\n    const params = {\n      rowNode: this.rowNode,\n      rowFocused: this.rowFocused,\n      fadeRowIn: this.fadeInAnimation[rowContainerType],\n      rowIsEven: this.rowNode.rowIndex % 2 === 0,\n      rowLevel: this.rowLevel,\n      fullWidthRow: this.isFullWidth(),\n      firstRowOnPage: this.isFirstRowOnPage(),\n      lastRowOnPage: this.isLastRowOnPage(),\n      printLayout: this.printLayout,\n      expandable: this.rowNode.isExpandable(),\n      pinned\n    };\n    return this.beans.rowCssClassCalculator.getInitialRowClasses(params);\n  }\n  processStylesFromGridOptions() {\n    const rowStyle = this.gos.get(\"rowStyle\");\n    if (rowStyle && typeof rowStyle === \"function\") {\n      _warnOnce(\"rowStyle should be an object of key/value styles, not be a function, use getRowStyle() instead\");\n      return;\n    }\n    const rowStyleFunc = this.gos.getCallback(\"getRowStyle\");\n    let rowStyleFuncResult;\n    if (rowStyleFunc) {\n      const params = {\n        data: this.rowNode.data,\n        node: this.rowNode,\n        rowIndex: this.rowNode.rowIndex\n      };\n      rowStyleFuncResult = rowStyleFunc(params);\n    }\n    if (rowStyleFuncResult || rowStyle) {\n      return Object.assign({}, rowStyle, rowStyleFuncResult);\n    }\n    return this.emptyStyle;\n  }\n  onRowSelected(gui) {\n    const selected = !!this.rowNode.isSelected();\n    this.forEachGui(gui, (gui2) => {\n      gui2.rowComp.addOrRemoveCssClass(\"ag-row-selected\", selected);\n      _setAriaSelected(gui2.element, selected);\n      const hasFocus = gui2.element.contains(this.gos.getActiveDomElement());\n      if (hasFocus && (gui2 === this.centerGui || gui2 === this.fullWidthGui)) {\n        this.announceDescription();\n      }\n    });\n  }\n  announceDescription() {\n    if (this.isRowSelectionBlocked()) {\n      return;\n    }\n    const selected = this.rowNode.isSelected();\n    if (selected && this.gos.get(\"suppressRowDeselection\")) {\n      return;\n    }\n    const translate = this.beans.localeService.getLocaleTextFunc();\n    const label = translate(\n      selected ? \"ariaRowDeselect\" : \"ariaRowSelect\",\n      `Press SPACE to ${selected ? \"deselect\" : \"select\"} this row.`\n    );\n    this.beans.ariaAnnouncementService.announceValue(label, \"rowSelection\");\n  }\n  addHoverFunctionality(eRow) {\n    if (!this.active) {\n      return;\n    }\n    const { rowNode, beans, gos } = this;\n    this.addManagedListeners(eRow, {\n      mouseenter: () => rowNode.onMouseEnter(),\n      mouseleave: () => rowNode.onMouseLeave()\n    });\n    this.addManagedListeners(rowNode, {\n      mouseEnter: () => {\n        if (!beans.dragService.isDragging() && !gos.get(\"suppressRowHoverHighlight\")) {\n          eRow.classList.add(\"ag-row-hover\");\n          rowNode.setHovered(true);\n        }\n      },\n      mouseLeave: () => {\n        eRow.classList.remove(\"ag-row-hover\");\n        rowNode.setHovered(false);\n      }\n    });\n  }\n  // for animation, we don't want to animate entry or exit to a very far away pixel,\n  // otherwise the row would move so fast, it would appear to disappear. so this method\n  // moves the row closer to the viewport if it is far away, so the row slide in / out\n  // at a speed the user can see.\n  roundRowTopToBounds(rowTop) {\n    const range = this.beans.ctrlsService.getGridBodyCtrl().getScrollFeature().getApproximateVScollPosition();\n    const minPixel = this.applyPaginationOffset(range.top, true) - 100;\n    const maxPixel = this.applyPaginationOffset(range.bottom, true) + 100;\n    return Math.min(Math.max(minPixel, rowTop), maxPixel);\n  }\n  getFrameworkOverrides() {\n    return this.beans.frameworkOverrides;\n  }\n  forEachGui(gui, callback) {\n    if (gui) {\n      callback(gui);\n    } else {\n      this.allRowGuis.forEach(callback);\n    }\n  }\n  onRowHeightChanged(gui) {\n    if (this.rowNode.rowHeight == null) {\n      return;\n    }\n    const rowHeight = this.rowNode.rowHeight;\n    const defaultRowHeight = this.beans.environment.getDefaultRowHeight();\n    const isHeightFromFunc = this.gos.isGetRowHeightFunction();\n    const heightFromFunc = isHeightFromFunc ? this.gos.getRowHeightForNode(this.rowNode).height : void 0;\n    const lineHeight = heightFromFunc ? `${Math.min(defaultRowHeight, heightFromFunc) - 2}px` : void 0;\n    this.forEachGui(gui, (gui2) => {\n      gui2.element.style.height = `${rowHeight}px`;\n      if (lineHeight) {\n        gui2.element.style.setProperty(\"--ag-line-height\", lineHeight);\n      }\n    });\n  }\n  addEventListener(eventType, listener) {\n    super.addEventListener(eventType, listener);\n  }\n  removeEventListener(eventType, listener) {\n    super.removeEventListener(eventType, listener);\n  }\n  // note - this is NOT called by context, as we don't wire / unwire the CellComp for performance reasons.\n  destroyFirstPass(suppressAnimation = false) {\n    this.active = false;\n    if (!suppressAnimation && this.gos.isAnimateRows() && !this.isSticky()) {\n      const rowStillVisibleJustNotInViewport = this.rowNode.rowTop != null;\n      if (rowStillVisibleJustNotInViewport) {\n        const rowTop = this.roundRowTopToBounds(this.rowNode.rowTop);\n        this.setRowTop(rowTop);\n      } else {\n        this.allRowGuis.forEach((gui) => gui.rowComp.addOrRemoveCssClass(\"ag-opacity-zero\", true));\n      }\n    }\n    this.rowNode.setHovered(false);\n    const event = this.createRowEvent(\"virtualRowRemoved\");\n    this.dispatchLocalEvent(event);\n    this.beans.eventService.dispatchEvent(event);\n    super.destroy();\n  }\n  destroySecondPass() {\n    this.allRowGuis.length = 0;\n    this.stopEditing();\n    const destroyCellCtrls = (ctrls) => {\n      ctrls.list.forEach((c) => c.destroy());\n      return { list: [], map: {} };\n    };\n    this.centerCellCtrls = destroyCellCtrls(this.centerCellCtrls);\n    this.leftCellCtrls = destroyCellCtrls(this.leftCellCtrls);\n    this.rightCellCtrls = destroyCellCtrls(this.rightCellCtrls);\n  }\n  setFocusedClasses(gui) {\n    this.forEachGui(gui, (gui2) => {\n      gui2.rowComp.addOrRemoveCssClass(\"ag-row-focus\", this.rowFocused);\n      gui2.rowComp.addOrRemoveCssClass(\"ag-row-no-focus\", !this.rowFocused);\n    });\n  }\n  onCellFocusChanged() {\n    const rowFocused = this.beans.focusService.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned);\n    if (rowFocused !== this.rowFocused) {\n      this.rowFocused = rowFocused;\n      this.setFocusedClasses();\n    }\n    if (!rowFocused && this.editingRow) {\n      this.stopEditing(false);\n    }\n  }\n  onPaginationChanged() {\n    const currentPage = this.beans.paginationService?.getCurrentPage() ?? 0;\n    if (this.paginationPage !== currentPage) {\n      this.paginationPage = currentPage;\n      this.onTopChanged();\n    }\n    this.refreshFirstAndLastRowStyles();\n  }\n  onTopChanged() {\n    this.setRowTop(this.rowNode.rowTop);\n  }\n  onPaginationPixelOffsetChanged() {\n    this.onTopChanged();\n  }\n  // applies pagination offset, eg if on second page, and page height is 500px, then removes\n  // 500px from the top position, so a row with rowTop 600px is displayed at location 100px.\n  // reverse will take the offset away rather than add.\n  applyPaginationOffset(topPx, reverse = false) {\n    if (this.rowNode.isRowPinned() || this.rowNode.sticky) {\n      return topPx;\n    }\n    const pixelOffset = this.beans.pageBoundsService.getPixelOffset();\n    const multiplier = reverse ? 1 : -1;\n    return topPx + pixelOffset * multiplier;\n  }\n  setRowTop(pixels) {\n    if (this.printLayout) {\n      return;\n    }\n    if (_exists(pixels)) {\n      const afterPaginationPixels = this.applyPaginationOffset(pixels);\n      const skipScaling = this.rowNode.isRowPinned() || this.rowNode.sticky;\n      const afterScalingPixels = skipScaling ? afterPaginationPixels : this.beans.rowContainerHeightService.getRealPixelPosition(afterPaginationPixels);\n      const topPx = `${afterScalingPixels}px`;\n      this.setRowTopStyle(topPx);\n    }\n  }\n  // the top needs to be set into the DOM element when the element is created, not updated afterwards.\n  // otherwise the transition would not work, as it would be transitioning from zero (the unset value).\n  // for example, suppose a row that is outside the viewport, then user does a filter to remove other rows\n  // and this row now appears in the viewport, and the row moves up (ie it was under the viewport and not rendered,\n  // but now is in the viewport) then a new RowComp is created, however it should have it's position initialised\n  // to below the viewport, so the row will appear to animate up. if we didn't set the initial position at creation\n  // time, the row would animate down (ie from position zero).\n  getInitialRowTop(rowContainerType) {\n    return this.suppressRowTransform ? this.getInitialRowTopShared(rowContainerType) : void 0;\n  }\n  getInitialTransform(rowContainerType) {\n    return this.suppressRowTransform ? void 0 : `translateY(${this.getInitialRowTopShared(rowContainerType)})`;\n  }\n  getInitialRowTopShared(rowContainerType) {\n    if (this.printLayout) {\n      return \"\";\n    }\n    const rowNode = this.rowNode;\n    let rowTop;\n    if (this.isSticky()) {\n      rowTop = rowNode.stickyRowTop;\n    } else {\n      const pixels = this.slideInAnimation[rowContainerType] ? this.roundRowTopToBounds(rowNode.oldRowTop) : rowNode.rowTop;\n      const afterPaginationPixels = this.applyPaginationOffset(pixels);\n      rowTop = rowNode.isRowPinned() ? afterPaginationPixels : this.beans.rowContainerHeightService.getRealPixelPosition(afterPaginationPixels);\n    }\n    return rowTop + \"px\";\n  }\n  setRowTopStyle(topPx) {\n    this.allRowGuis.forEach(\n      (gui) => this.suppressRowTransform ? gui.rowComp.setTop(topPx) : gui.rowComp.setTransform(`translateY(${topPx})`)\n    );\n  }\n  getRowNode() {\n    return this.rowNode;\n  }\n  getCellCtrl(column) {\n    let res = null;\n    this.getAllCellCtrls().forEach((cellCtrl) => {\n      if (cellCtrl.getColumn() == column) {\n        res = cellCtrl;\n      }\n    });\n    if (res != null) {\n      return res;\n    }\n    this.getAllCellCtrls().forEach((cellCtrl) => {\n      if (cellCtrl.getColSpanningList().indexOf(column) >= 0) {\n        res = cellCtrl;\n      }\n    });\n    return res;\n  }\n  onRowIndexChanged() {\n    if (this.rowNode.rowIndex != null) {\n      this.onCellFocusChanged();\n      this.updateRowIndexes();\n      this.postProcessCss();\n    }\n  }\n  getRowIndex() {\n    return this.rowNode.getRowIndexString();\n  }\n  updateRowIndexes(gui) {\n    const rowIndexStr = this.rowNode.getRowIndexString();\n    if (rowIndexStr === null) {\n      return;\n    }\n    const headerRowCount = this.beans.headerNavigationService.getHeaderRowCount() + (this.beans.filterManager?.getHeaderRowCount() ?? 0);\n    const rowIsEven = this.rowNode.rowIndex % 2 === 0;\n    const ariaRowIndex = headerRowCount + this.rowNode.rowIndex + 1;\n    this.forEachGui(gui, (c) => {\n      c.rowComp.setRowIndex(rowIndexStr);\n      c.rowComp.addOrRemoveCssClass(\"ag-row-even\", rowIsEven);\n      c.rowComp.addOrRemoveCssClass(\"ag-row-odd\", !rowIsEven);\n      _setAriaRowIndex(c.element, ariaRowIndex);\n    });\n  }\n  setStoppingRowEdit(stoppingRowEdit) {\n    this.stoppingRowEdit = stoppingRowEdit;\n  }\n};\n_RowCtrl.DOM_DATA_KEY_ROW_CTRL = \"renderedRow\";\nvar RowCtrl = _RowCtrl;\n\n// community-modules/core/src/gridBodyComp/rowContainer/rowContainerEventsFeature.ts\nvar RowContainerEventsFeature = class extends BeanStub {\n  wireBeans(beans) {\n    this.mouseEventService = beans.mouseEventService;\n    this.valueService = beans.valueService;\n    this.menuService = beans.menuService;\n    this.ctrlsService = beans.ctrlsService;\n    this.navigationService = beans.navigationService;\n    this.focusService = beans.focusService;\n    this.undoRedoService = beans.undoRedoService;\n    this.visibleColsService = beans.visibleColsService;\n    this.rowModel = beans.rowModel;\n    this.pinnedRowModel = beans.pinnedRowModel;\n    this.rangeService = beans.rangeService;\n    this.clipboardService = beans.clipboardService;\n  }\n  constructor(element) {\n    super();\n    this.element = element;\n  }\n  postConstruct() {\n    this.addKeyboardListeners();\n    this.addMouseListeners();\n    this.mockContextMenuForIPad();\n  }\n  addKeyboardListeners() {\n    const eventName = \"keydown\";\n    const listener = this.processKeyboardEvent.bind(this, eventName);\n    this.addManagedElementListeners(this.element, { [eventName]: listener });\n  }\n  addMouseListeners() {\n    const mouseDownEvent = _isEventSupported(\"touchstart\") ? \"touchstart\" : \"mousedown\";\n    const eventNames = [\"dblclick\", \"contextmenu\", \"mouseover\", \"mouseout\", \"click\", mouseDownEvent];\n    eventNames.forEach((eventName) => {\n      const listener = this.processMouseEvent.bind(this, eventName);\n      this.addManagedElementListeners(this.element, { [eventName]: listener });\n    });\n  }\n  processMouseEvent(eventName, mouseEvent) {\n    if (!this.mouseEventService.isEventFromThisGrid(mouseEvent) || _isStopPropagationForAgGrid(mouseEvent)) {\n      return;\n    }\n    const rowComp = this.getRowForEvent(mouseEvent);\n    const cellCtrl = this.mouseEventService.getRenderedCellForEvent(mouseEvent);\n    if (eventName === \"contextmenu\") {\n      this.handleContextMenuMouseEvent(mouseEvent, void 0, rowComp, cellCtrl);\n    } else {\n      if (cellCtrl) {\n        cellCtrl.onMouseEvent(eventName, mouseEvent);\n      }\n      if (rowComp) {\n        rowComp.onMouseEvent(eventName, mouseEvent);\n      }\n    }\n  }\n  mockContextMenuForIPad() {\n    if (!_isIOSUserAgent()) {\n      return;\n    }\n    const touchListener = new TouchListener(this.element);\n    const longTapListener = (event) => {\n      const rowComp = this.getRowForEvent(event.touchEvent);\n      const cellComp = this.mouseEventService.getRenderedCellForEvent(event.touchEvent);\n      this.handleContextMenuMouseEvent(void 0, event.touchEvent, rowComp, cellComp);\n    };\n    this.addManagedListeners(touchListener, { longTap: longTapListener });\n    this.addDestroyFunc(() => touchListener.destroy());\n  }\n  getRowForEvent(event) {\n    let sourceElement = event.target;\n    while (sourceElement) {\n      const rowCon = this.gos.getDomData(sourceElement, RowCtrl.DOM_DATA_KEY_ROW_CTRL);\n      if (rowCon) {\n        return rowCon;\n      }\n      sourceElement = sourceElement.parentElement;\n    }\n    return null;\n  }\n  handleContextMenuMouseEvent(mouseEvent, touchEvent, rowComp, cellCtrl) {\n    const rowNode = rowComp ? rowComp.getRowNode() : null;\n    const column = cellCtrl ? cellCtrl.getColumn() : null;\n    let value = null;\n    if (column) {\n      const event = mouseEvent ? mouseEvent : touchEvent;\n      cellCtrl.dispatchCellContextMenuEvent(event ?? null);\n      value = this.valueService.getValue(column, rowNode);\n    }\n    const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    const anchorToElement = cellCtrl ? cellCtrl.getGui() : gridBodyCon.getGridBodyElement();\n    this.menuService.showContextMenu({\n      mouseEvent,\n      touchEvent,\n      rowNode,\n      column,\n      value,\n      anchorToElement\n    });\n  }\n  getControlsForEventTarget(target) {\n    return {\n      cellCtrl: _getCtrlForEventTarget(this.gos, target, CellCtrl.DOM_DATA_KEY_CELL_CTRL),\n      rowCtrl: _getCtrlForEventTarget(this.gos, target, RowCtrl.DOM_DATA_KEY_ROW_CTRL)\n    };\n  }\n  processKeyboardEvent(eventName, keyboardEvent) {\n    const { cellCtrl, rowCtrl } = this.getControlsForEventTarget(keyboardEvent.target);\n    if (keyboardEvent.defaultPrevented) {\n      return;\n    }\n    if (cellCtrl) {\n      this.processCellKeyboardEvent(cellCtrl, eventName, keyboardEvent);\n    } else if (rowCtrl && rowCtrl.isFullWidth()) {\n      this.processFullWidthRowKeyboardEvent(rowCtrl, eventName, keyboardEvent);\n    }\n  }\n  processCellKeyboardEvent(cellCtrl, eventName, keyboardEvent) {\n    const rowNode = cellCtrl.getRowNode();\n    const column = cellCtrl.getColumn();\n    const editing = cellCtrl.isEditing();\n    const gridProcessingAllowed = !_isUserSuppressingKeyboardEvent(\n      this.gos,\n      keyboardEvent,\n      rowNode,\n      column,\n      editing\n    );\n    if (gridProcessingAllowed) {\n      if (eventName === \"keydown\") {\n        const wasScrollKey = !editing && this.navigationService.handlePageScrollingKey(keyboardEvent);\n        if (!wasScrollKey) {\n          cellCtrl.onKeyDown(keyboardEvent);\n        }\n        this.doGridOperations(keyboardEvent, cellCtrl.isEditing());\n        if (_isEventFromPrintableCharacter(keyboardEvent)) {\n          cellCtrl.processCharacter(keyboardEvent);\n        }\n      }\n    }\n    if (eventName === \"keydown\") {\n      this.eventService.dispatchEvent(cellCtrl.createEvent(keyboardEvent, \"cellKeyDown\"));\n    }\n  }\n  processFullWidthRowKeyboardEvent(rowComp, eventName, keyboardEvent) {\n    const rowNode = rowComp.getRowNode();\n    const focusedCell = this.focusService.getFocusedCell();\n    const column = focusedCell && focusedCell.column;\n    const gridProcessingAllowed = !_isUserSuppressingKeyboardEvent(this.gos, keyboardEvent, rowNode, column, false);\n    if (gridProcessingAllowed) {\n      const key = keyboardEvent.key;\n      if (eventName === \"keydown\") {\n        switch (key) {\n          case KeyCode.PAGE_HOME:\n          case KeyCode.PAGE_END:\n          case KeyCode.PAGE_UP:\n          case KeyCode.PAGE_DOWN:\n            this.navigationService.handlePageScrollingKey(keyboardEvent, true);\n            break;\n          case KeyCode.UP:\n          case KeyCode.DOWN:\n            rowComp.onKeyboardNavigate(keyboardEvent);\n            break;\n          case KeyCode.TAB:\n            rowComp.onTabKeyDown(keyboardEvent);\n            break;\n          default:\n        }\n      }\n    }\n    if (eventName === \"keydown\") {\n      this.eventService.dispatchEvent(rowComp.createRowEvent(\"cellKeyDown\", keyboardEvent));\n    }\n  }\n  doGridOperations(keyboardEvent, editing) {\n    if (!keyboardEvent.ctrlKey && !keyboardEvent.metaKey) {\n      return;\n    }\n    if (editing) {\n      return;\n    }\n    if (!this.mouseEventService.isEventFromThisGrid(keyboardEvent)) {\n      return;\n    }\n    const keyCode = _normaliseQwertyAzerty(keyboardEvent);\n    if (keyCode === KeyCode.A) {\n      return this.onCtrlAndA(keyboardEvent);\n    }\n    if (keyCode === KeyCode.C) {\n      return this.onCtrlAndC(keyboardEvent);\n    }\n    if (keyCode === KeyCode.D) {\n      return this.onCtrlAndD(keyboardEvent);\n    }\n    if (keyCode === KeyCode.V) {\n      return this.onCtrlAndV(keyboardEvent);\n    }\n    if (keyCode === KeyCode.X) {\n      return this.onCtrlAndX(keyboardEvent);\n    }\n    if (keyCode === KeyCode.Y) {\n      return this.onCtrlAndY();\n    }\n    if (keyCode === KeyCode.Z) {\n      return this.onCtrlAndZ(keyboardEvent);\n    }\n  }\n  onCtrlAndA(event) {\n    const { pinnedRowModel, rowModel, rangeService } = this;\n    if (rangeService && rowModel.isRowsToRender()) {\n      const [isEmptyPinnedTop, isEmptyPinnedBottom] = [\n        pinnedRowModel.isEmpty(\"top\"),\n        pinnedRowModel.isEmpty(\"bottom\")\n      ];\n      const floatingStart = isEmptyPinnedTop ? null : \"top\";\n      let floatingEnd;\n      let rowEnd;\n      if (isEmptyPinnedBottom) {\n        floatingEnd = null;\n        rowEnd = rowModel.getRowCount() - 1;\n      } else {\n        floatingEnd = \"bottom\";\n        rowEnd = pinnedRowModel.getPinnedBottomRowCount() - 1;\n      }\n      const allDisplayedColumns = this.visibleColsService.getAllCols();\n      if (_missingOrEmpty(allDisplayedColumns)) {\n        return;\n      }\n      rangeService.setCellRange({\n        rowStartIndex: 0,\n        rowStartPinned: floatingStart,\n        rowEndIndex: rowEnd,\n        rowEndPinned: floatingEnd,\n        columnStart: allDisplayedColumns[0],\n        columnEnd: _last(allDisplayedColumns)\n      });\n    }\n    event.preventDefault();\n  }\n  onCtrlAndC(event) {\n    if (!this.clipboardService || this.gos.get(\"enableCellTextSelection\")) {\n      return;\n    }\n    const { cellCtrl, rowCtrl } = this.getControlsForEventTarget(event.target);\n    if (cellCtrl?.isEditing() || rowCtrl?.isEditing()) {\n      return;\n    }\n    event.preventDefault();\n    this.clipboardService.copyToClipboard();\n  }\n  onCtrlAndX(event) {\n    if (!this.clipboardService || this.gos.get(\"enableCellTextSelection\") || this.gos.get(\"suppressCutToClipboard\")) {\n      return;\n    }\n    const { cellCtrl, rowCtrl } = this.getControlsForEventTarget(event.target);\n    if (cellCtrl?.isEditing() || rowCtrl?.isEditing()) {\n      return;\n    }\n    event.preventDefault();\n    this.clipboardService.cutToClipboard(void 0, \"ui\");\n  }\n  onCtrlAndV(event) {\n    const { cellCtrl, rowCtrl } = this.getControlsForEventTarget(event.target);\n    if (cellCtrl?.isEditing() || rowCtrl?.isEditing()) {\n      return;\n    }\n    if (this.clipboardService && !this.gos.get(\"suppressClipboardPaste\")) {\n      this.clipboardService.pasteFromClipboard();\n    }\n  }\n  onCtrlAndD(event) {\n    if (this.clipboardService && !this.gos.get(\"suppressClipboardPaste\")) {\n      this.clipboardService.copyRangeDown();\n    }\n    event.preventDefault();\n  }\n  onCtrlAndZ(event) {\n    if (!this.gos.get(\"undoRedoCellEditing\") || !this.undoRedoService) {\n      return;\n    }\n    event.preventDefault();\n    if (event.shiftKey) {\n      this.undoRedoService.redo(\"ui\");\n    } else {\n      this.undoRedoService.undo(\"ui\");\n    }\n  }\n  onCtrlAndY() {\n    this.undoRedoService?.redo(\"ui\");\n  }\n};\n\n// community-modules/core/src/gridBodyComp/rowContainer/setPinnedLeftWidthFeature.ts\nvar SetPinnedLeftWidthFeature = class extends BeanStub {\n  wireBeans(beans) {\n    this.pinnedWidthService = beans.pinnedWidthService;\n  }\n  constructor(element) {\n    super();\n    this.element = element;\n  }\n  postConstruct() {\n    this.addManagedEventListeners({ leftPinnedWidthChanged: this.onPinnedLeftWidthChanged.bind(this) });\n  }\n  onPinnedLeftWidthChanged() {\n    const leftWidth = this.pinnedWidthService.getPinnedLeftWidth();\n    const displayed = leftWidth > 0;\n    _setDisplayed(this.element, displayed);\n    _setFixedWidth(this.element, leftWidth);\n  }\n  getWidth() {\n    return this.pinnedWidthService.getPinnedLeftWidth();\n  }\n};\n\n// community-modules/core/src/gridBodyComp/rowContainer/setPinnedRightWidthFeature.ts\nvar SetPinnedRightWidthFeature = class extends BeanStub {\n  wireBeans(beans) {\n    this.pinnedWidthService = beans.pinnedWidthService;\n  }\n  constructor(element) {\n    super();\n    this.element = element;\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      rightPinnedWidthChanged: this.onPinnedRightWidthChanged.bind(this)\n    });\n  }\n  onPinnedRightWidthChanged() {\n    const rightWidth = this.pinnedWidthService.getPinnedRightWidth();\n    const displayed = rightWidth > 0;\n    _setDisplayed(this.element, displayed);\n    _setFixedWidth(this.element, rightWidth);\n  }\n  getWidth() {\n    return this.pinnedWidthService.getPinnedRightWidth();\n  }\n};\n\n// community-modules/core/src/gridBodyComp/rowContainer/rowContainerCtrl.ts\nvar getTopRowCtrls = (r) => r.getTopRowCtrls();\nvar getStickyTopRowCtrls = (r) => r.getStickyTopRowCtrls();\nvar getStickyBottomRowCtrls = (r) => r.getStickyBottomRowCtrls();\nvar getBottomRowCtrls = (r) => r.getBottomRowCtrls();\nvar getCentreRowCtrls = (r) => r.getCentreRowCtrls();\nvar ContainerCssClasses = {\n  center: {\n    type: \"center\",\n    container: \"ag-center-cols-container\",\n    viewport: \"ag-center-cols-viewport\",\n    getRowCtrls: getCentreRowCtrls\n  },\n  left: {\n    type: \"left\",\n    container: \"ag-pinned-left-cols-container\",\n    pinnedType: \"left\",\n    getRowCtrls: getCentreRowCtrls\n  },\n  right: {\n    type: \"right\",\n    container: \"ag-pinned-right-cols-container\",\n    pinnedType: \"right\",\n    getRowCtrls: getCentreRowCtrls\n  },\n  fullWidth: {\n    type: \"fullWidth\",\n    container: \"ag-full-width-container\",\n    fullWidth: true,\n    getRowCtrls: getCentreRowCtrls\n  },\n  topCenter: {\n    type: \"center\",\n    container: \"ag-floating-top-container\",\n    viewport: \"ag-floating-top-viewport\",\n    getRowCtrls: getTopRowCtrls\n  },\n  topLeft: {\n    type: \"left\",\n    container: \"ag-pinned-left-floating-top\",\n    pinnedType: \"left\",\n    getRowCtrls: getTopRowCtrls\n  },\n  topRight: {\n    type: \"right\",\n    container: \"ag-pinned-right-floating-top\",\n    pinnedType: \"right\",\n    getRowCtrls: getTopRowCtrls\n  },\n  topFullWidth: {\n    type: \"fullWidth\",\n    container: \"ag-floating-top-full-width-container\",\n    fullWidth: true,\n    getRowCtrls: getTopRowCtrls\n  },\n  stickyTopCenter: {\n    type: \"center\",\n    container: \"ag-sticky-top-container\",\n    viewport: \"ag-sticky-top-viewport\",\n    getRowCtrls: getStickyTopRowCtrls\n  },\n  stickyTopLeft: {\n    type: \"left\",\n    container: \"ag-pinned-left-sticky-top\",\n    pinnedType: \"left\",\n    getRowCtrls: getStickyTopRowCtrls\n  },\n  stickyTopRight: {\n    type: \"right\",\n    container: \"ag-pinned-right-sticky-top\",\n    pinnedType: \"right\",\n    getRowCtrls: getStickyTopRowCtrls\n  },\n  stickyTopFullWidth: {\n    type: \"fullWidth\",\n    container: \"ag-sticky-top-full-width-container\",\n    fullWidth: true,\n    getRowCtrls: getStickyTopRowCtrls\n  },\n  stickyBottomCenter: {\n    type: \"center\",\n    container: \"ag-sticky-bottom-container\",\n    viewport: \"ag-sticky-bottom-viewport\",\n    getRowCtrls: getStickyBottomRowCtrls\n  },\n  stickyBottomLeft: {\n    type: \"left\",\n    container: \"ag-pinned-left-sticky-bottom\",\n    pinnedType: \"left\",\n    getRowCtrls: getStickyBottomRowCtrls\n  },\n  stickyBottomRight: {\n    type: \"right\",\n    container: \"ag-pinned-right-sticky-bottom\",\n    pinnedType: \"right\",\n    getRowCtrls: getStickyBottomRowCtrls\n  },\n  stickyBottomFullWidth: {\n    type: \"fullWidth\",\n    container: \"ag-sticky-bottom-full-width-container\",\n    fullWidth: true,\n    getRowCtrls: getStickyBottomRowCtrls\n  },\n  bottomCenter: {\n    type: \"center\",\n    container: \"ag-floating-bottom-container\",\n    viewport: \"ag-floating-bottom-viewport\",\n    getRowCtrls: getBottomRowCtrls\n  },\n  bottomLeft: {\n    type: \"left\",\n    container: \"ag-pinned-left-floating-bottom\",\n    pinnedType: \"left\",\n    getRowCtrls: getBottomRowCtrls\n  },\n  bottomRight: {\n    type: \"right\",\n    container: \"ag-pinned-right-floating-bottom\",\n    pinnedType: \"right\",\n    getRowCtrls: getBottomRowCtrls\n  },\n  bottomFullWidth: {\n    type: \"fullWidth\",\n    container: \"ag-floating-bottom-full-width-container\",\n    fullWidth: true,\n    getRowCtrls: getBottomRowCtrls\n  }\n};\nfunction _getRowContainerOptions(name) {\n  return ContainerCssClasses[name];\n}\nvar allTopNoFW = [\"topCenter\", \"topLeft\", \"topRight\"];\nvar allBottomNoFW = [\"bottomCenter\", \"bottomLeft\", \"bottomRight\"];\nvar allMiddleNoFW = [\"center\", \"left\", \"right\"];\nvar allMiddle = [\"center\", \"left\", \"right\", \"fullWidth\"];\nvar allCenter = [\"stickyTopCenter\", \"stickyBottomCenter\", \"center\", \"topCenter\", \"bottomCenter\"];\nvar allLeft = [\"left\", \"bottomLeft\", \"topLeft\", \"stickyTopLeft\", \"stickyBottomLeft\"];\nvar allRight = [\"right\", \"bottomRight\", \"topRight\", \"stickyTopRight\", \"stickyBottomRight\"];\nvar allStickyTopNoFW = [\"stickyTopCenter\", \"stickyTopLeft\", \"stickyTopRight\"];\nvar allStickyBottomNoFW = [\"stickyBottomCenter\", \"stickyBottomLeft\", \"stickyBottomRight\"];\nvar allStickyContainers = [\n  ...allStickyTopNoFW,\n  \"stickyTopFullWidth\",\n  ...allStickyBottomNoFW,\n  \"stickyBottomFullWidth\"\n];\nvar allNoFW = [\n  ...allTopNoFW,\n  ...allBottomNoFW,\n  ...allMiddleNoFW,\n  ...allStickyTopNoFW,\n  ...allStickyBottomNoFW\n];\nvar RowContainerCtrl = class extends BeanStub {\n  constructor(name) {\n    super();\n    this.visible = true;\n    // Maintaining a constant reference enables optimization in React.\n    this.EMPTY_CTRLS = [];\n    this.name = name;\n    this.options = _getRowContainerOptions(name);\n  }\n  wireBeans(beans) {\n    this.dragService = beans.dragService;\n    this.ctrlsService = beans.ctrlsService;\n    this.columnViewportService = beans.columnViewportService;\n    this.resizeObserverService = beans.resizeObserverService;\n    this.rowRenderer = beans.rowRenderer;\n  }\n  postConstruct() {\n    this.enableRtl = this.gos.get(\"enableRtl\");\n    this.forContainers([\"center\"], () => {\n      this.viewportSizeFeature = this.createManagedBean(new ViewportSizeFeature(this));\n      this.addManagedEventListeners({\n        stickyTopOffsetChanged: this.onStickyTopOffsetChanged.bind(this)\n      });\n    });\n  }\n  onStickyTopOffsetChanged(event) {\n    this.comp.setOffsetTop(`${event.offset}px`);\n  }\n  registerWithCtrlsService() {\n    if (this.options.fullWidth)\n      return;\n    this.ctrlsService.register(this.name, this);\n  }\n  forContainers(names, callback) {\n    if (names.indexOf(this.name) >= 0) {\n      callback();\n    }\n  }\n  getContainerElement() {\n    return this.eContainer;\n  }\n  getViewportSizeFeature() {\n    return this.viewportSizeFeature;\n  }\n  setComp(view, eContainer, eViewport) {\n    this.comp = view;\n    this.eContainer = eContainer;\n    this.eViewport = eViewport;\n    this.createManagedBean(new RowContainerEventsFeature(this.eContainer));\n    this.addPreventScrollWhileDragging();\n    this.listenOnDomOrder();\n    const pinnedWidthChanged = () => this.onPinnedWidthChanged();\n    this.forContainers(allLeft, () => {\n      this.pinnedWidthFeature = this.createManagedBean(new SetPinnedLeftWidthFeature(this.eContainer));\n      this.addManagedEventListeners({ leftPinnedWidthChanged: pinnedWidthChanged });\n    });\n    this.forContainers(allRight, () => {\n      this.pinnedWidthFeature = this.createManagedBean(new SetPinnedRightWidthFeature(this.eContainer));\n      this.addManagedEventListeners({ rightPinnedWidthChanged: pinnedWidthChanged });\n    });\n    this.forContainers(\n      allMiddle,\n      () => this.createManagedBean(\n        new SetHeightFeature(this.eContainer, this.name === \"center\" ? eViewport : void 0)\n      )\n    );\n    this.forContainers(allNoFW, () => this.createManagedBean(new DragListenerFeature(this.eContainer)));\n    this.forContainers(\n      allCenter,\n      () => this.createManagedBean(new CenterWidthFeature((width) => this.comp.setContainerWidth(`${width}px`)))\n    );\n    this.addListeners();\n    this.registerWithCtrlsService();\n  }\n  onScrollCallback(fn) {\n    this.addManagedElementListeners(this.getViewportElement(), { scroll: fn });\n  }\n  addListeners() {\n    this.addManagedEventListeners({\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this),\n      displayedColumnsWidthChanged: this.onDisplayedColumnsWidthChanged.bind(this),\n      displayedRowsChanged: (params) => this.onDisplayedRowsChanged(params.afterScroll)\n    });\n    this.onDisplayedColumnsChanged();\n    this.onDisplayedColumnsWidthChanged();\n    this.onDisplayedRowsChanged();\n  }\n  listenOnDomOrder() {\n    const isStickContainer = allStickyContainers.indexOf(this.name) >= 0;\n    if (isStickContainer) {\n      this.comp.setDomOrder(true);\n      return;\n    }\n    const listener = () => {\n      const isEnsureDomOrder = this.gos.get(\"ensureDomOrder\");\n      const isPrintLayout = this.gos.isDomLayout(\"print\");\n      this.comp.setDomOrder(isEnsureDomOrder || isPrintLayout);\n    };\n    this.addManagedPropertyListener(\"domLayout\", listener);\n    listener();\n  }\n  onDisplayedColumnsChanged() {\n    this.forContainers([\"center\"], () => this.onHorizontalViewportChanged());\n  }\n  onDisplayedColumnsWidthChanged() {\n    this.forContainers([\"center\"], () => this.onHorizontalViewportChanged());\n  }\n  // this methods prevents the grid views from being scrolled while the dragService is being used\n  // eg. the view should not scroll up and down while dragging rows using the rowDragComp.\n  addPreventScrollWhileDragging() {\n    const preventScroll = (e) => {\n      if (this.dragService.isDragging()) {\n        if (e.cancelable) {\n          e.preventDefault();\n        }\n      }\n    };\n    this.eContainer.addEventListener(\"touchmove\", preventScroll, { passive: false });\n    this.addDestroyFunc(() => this.eContainer.removeEventListener(\"touchmove\", preventScroll));\n  }\n  // this gets called whenever a change in the viewport, so we can inform column controller it has to work\n  // out the virtual columns again. gets called from following locations:\n  // + ensureColVisible, scroll, init, layoutChanged, displayedColumnsChanged\n  onHorizontalViewportChanged(afterScroll = false) {\n    const scrollWidth = this.getCenterWidth();\n    const scrollPosition = this.getCenterViewportScrollLeft();\n    this.columnViewportService.setScrollPosition(scrollWidth, scrollPosition, afterScroll);\n  }\n  getCenterWidth() {\n    return _getInnerWidth(this.eViewport);\n  }\n  getCenterViewportScrollLeft() {\n    return _getScrollLeft(this.eViewport, this.enableRtl);\n  }\n  registerViewportResizeListener(listener) {\n    const unsubscribeFromResize = this.resizeObserverService.observeResize(this.eViewport, listener);\n    this.addDestroyFunc(() => unsubscribeFromResize());\n  }\n  isViewportInTheDOMTree() {\n    return _isInDOM(this.eViewport);\n  }\n  getViewportScrollLeft() {\n    return _getScrollLeft(this.eViewport, this.enableRtl);\n  }\n  isHorizontalScrollShowing() {\n    const isAlwaysShowHorizontalScroll = this.gos.get(\"alwaysShowHorizontalScroll\");\n    return isAlwaysShowHorizontalScroll || _isHorizontalScrollShowing(this.eViewport);\n  }\n  getViewportElement() {\n    return this.eViewport;\n  }\n  setHorizontalScroll(offset) {\n    this.comp.setHorizontalScroll(offset);\n  }\n  getHScrollPosition() {\n    const res = {\n      left: this.eViewport.scrollLeft,\n      right: this.eViewport.scrollLeft + this.eViewport.offsetWidth\n    };\n    return res;\n  }\n  setCenterViewportScrollLeft(value) {\n    _setScrollLeft(this.eViewport, value, this.enableRtl);\n  }\n  isContainerVisible() {\n    const pinned = this.options.pinnedType != null;\n    return !pinned || !!this.pinnedWidthFeature && this.pinnedWidthFeature.getWidth() > 0;\n  }\n  onPinnedWidthChanged() {\n    const visible = this.isContainerVisible();\n    if (this.visible != visible) {\n      this.visible = visible;\n      this.onDisplayedRowsChanged();\n    }\n  }\n  onDisplayedRowsChanged(afterScroll = false) {\n    const rows = this.options.getRowCtrls(this.rowRenderer);\n    if (!this.visible || rows.length === 0) {\n      this.comp.setRowCtrls({ rowCtrls: this.EMPTY_CTRLS });\n      return;\n    }\n    const printLayout = this.gos.isDomLayout(\"print\");\n    const embedFullWidthRows = this.gos.get(\"embedFullWidthRows\");\n    const embedFW = embedFullWidthRows || printLayout;\n    const rowsThisContainer = rows.filter((rowCtrl) => {\n      const fullWidthRow = rowCtrl.isFullWidth();\n      const match = this.options.fullWidth ? !embedFW && fullWidthRow : embedFW || !fullWidthRow;\n      return match;\n    });\n    this.comp.setRowCtrls({ rowCtrls: rowsThisContainer, useFlushSync: afterScroll });\n  }\n};\n\n// community-modules/core/src/gridBodyComp/gridBodyCtrl.ts\nvar CSS_CLASS_FORCE_VERTICAL_SCROLL = \"ag-force-vertical-scroll\";\nvar CSS_CLASS_CELL_SELECTABLE = \"ag-selectable\";\nvar CSS_CLASS_COLUMN_MOVING = \"ag-column-moving\";\nvar GridBodyCtrl = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.stickyTopHeight = 0;\n    this.stickyBottomHeight = 0;\n  }\n  wireBeans(beans) {\n    this.animationFrameService = beans.animationFrameService;\n    this.rowContainerHeightService = beans.rowContainerHeightService;\n    this.ctrlsService = beans.ctrlsService;\n    this.columnModel = beans.columnModel;\n    this.columnSizeService = beans.columnSizeService;\n    this.scrollVisibleService = beans.scrollVisibleService;\n    this.menuService = beans.menuService;\n    this.headerNavigationService = beans.headerNavigationService;\n    this.dragAndDropService = beans.dragAndDropService;\n    this.pinnedRowModel = beans.pinnedRowModel;\n    this.rowRenderer = beans.rowRenderer;\n    this.popupService = beans.popupService;\n    this.mouseEventService = beans.mouseEventService;\n    this.rowModel = beans.rowModel;\n    this.filterManager = beans.filterManager;\n    this.environment = beans.environment;\n  }\n  getScrollFeature() {\n    return this.bodyScrollFeature;\n  }\n  getBodyViewportElement() {\n    return this.eBodyViewport;\n  }\n  setComp(comp, eGridBody, eBodyViewport, eTop, eBottom, eStickyTop, eStickyBottom) {\n    this.comp = comp;\n    this.eGridBody = eGridBody;\n    this.eBodyViewport = eBodyViewport;\n    this.eTop = eTop;\n    this.eBottom = eBottom;\n    this.eStickyTop = eStickyTop;\n    this.eStickyBottom = eStickyBottom;\n    this.eCenterColsViewport = eBodyViewport.querySelector(\n      `.${_getRowContainerOptions(\"center\").viewport}`\n    );\n    this.eFullWidthContainer = eBodyViewport.querySelector(\n      `.${_getRowContainerOptions(\"fullWidth\").container}`\n    );\n    this.eStickyTopFullWidthContainer = eStickyTop.querySelector(\n      `.${_getRowContainerOptions(\"stickyTopFullWidth\").container}`\n    );\n    this.eStickyBottomFullWidthContainer = eStickyBottom.querySelector(\n      `.${_getRowContainerOptions(\"stickyBottomFullWidth\").container}`\n    );\n    this.setCellTextSelection(this.gos.get(\"enableCellTextSelection\"));\n    this.addManagedPropertyListener(\n      \"enableCellTextSelection\",\n      (props) => this.setCellTextSelection(props.currentValue)\n    );\n    this.createManagedBean(new LayoutFeature(this.comp));\n    this.bodyScrollFeature = this.createManagedBean(new GridBodyScrollFeature(this.eBodyViewport));\n    this.addRowDragListener();\n    this.setupRowAnimationCssClass();\n    this.addEventListeners();\n    this.addFocusListeners([eTop, eBodyViewport, eBottom, eStickyTop, eStickyBottom]);\n    this.onGridColumnsChanged();\n    this.addBodyViewportListener();\n    this.setFloatingHeights();\n    this.disableBrowserDragging();\n    this.addStopEditingWhenGridLosesFocus();\n    this.filterManager?.setupAdvancedFilterHeaderComp(eTop);\n    this.ctrlsService.register(\"gridBodyCtrl\", this);\n  }\n  getComp() {\n    return this.comp;\n  }\n  addEventListeners() {\n    const setFloatingHeights = this.setFloatingHeights.bind(this);\n    this.addManagedEventListeners({\n      gridColumnsChanged: this.onGridColumnsChanged.bind(this),\n      scrollVisibilityChanged: this.onScrollVisibilityChanged.bind(this),\n      pinnedRowDataChanged: setFloatingHeights,\n      pinnedHeightChanged: setFloatingHeights,\n      headerHeightChanged: this.onHeaderHeightChanged.bind(this)\n    });\n  }\n  addFocusListeners(elements) {\n    elements.forEach((element) => {\n      this.addManagedElementListeners(element, {\n        focusin: (e) => {\n          const { target } = e;\n          const isFocusedElementNested = _isElementChildOfClass(target, \"ag-root\", element);\n          element.classList.toggle(\"ag-has-focus\", !isFocusedElementNested);\n        },\n        focusout: (e) => {\n          const { target, relatedTarget } = e;\n          const gridContainRelatedTarget = element.contains(relatedTarget);\n          const isNestedRelatedTarget = _isElementChildOfClass(\n            relatedTarget,\n            \"ag-root\",\n            element\n          );\n          const isNestedTarget = _isElementChildOfClass(target, \"ag-root\", element);\n          if (isNestedTarget) {\n            return;\n          }\n          if (!gridContainRelatedTarget || isNestedRelatedTarget) {\n            element.classList.remove(\"ag-has-focus\");\n          }\n        }\n      });\n    });\n  }\n  // used by ColumnAnimationService\n  setColumnMovingCss(moving) {\n    this.comp.setColumnMovingCss(CSS_CLASS_COLUMN_MOVING, moving);\n  }\n  setCellTextSelection(selectable = false) {\n    this.comp.setCellSelectableCss(CSS_CLASS_CELL_SELECTABLE, selectable);\n  }\n  onScrollVisibilityChanged() {\n    const visible = this.scrollVisibleService.isVerticalScrollShowing();\n    this.setVerticalScrollPaddingVisible(visible);\n    this.setStickyWidth(visible);\n    this.setStickyBottomOffsetBottom();\n    const scrollbarWidth = visible ? this.gos.getScrollbarWidth() || 0 : 0;\n    const pad = _isInvisibleScrollbar() ? 16 : 0;\n    const width = `calc(100% + ${scrollbarWidth + pad}px)`;\n    this.animationFrameService.requestAnimationFrame(() => this.comp.setBodyViewportWidth(width));\n  }\n  onGridColumnsChanged() {\n    const columns = this.columnModel.getCols();\n    this.comp.setColumnCount(columns.length);\n  }\n  // if we do not do this, then the user can select a pic in the grid (eg an image in a custom cell renderer)\n  // and then that will start the browser native drag n' drop, which messes up with our own drag and drop.\n  disableBrowserDragging() {\n    this.addManagedElementListeners(this.eGridBody, {\n      dragstart: (event) => {\n        if (event.target instanceof HTMLImageElement) {\n          event.preventDefault();\n          return false;\n        }\n      }\n    });\n  }\n  addStopEditingWhenGridLosesFocus() {\n    if (!this.gos.get(\"stopEditingWhenCellsLoseFocus\")) {\n      return;\n    }\n    const focusOutListener = (event) => {\n      const elementWithFocus = event.relatedTarget;\n      if (_getTabIndex(elementWithFocus) === null) {\n        this.rowRenderer.stopEditing();\n        return;\n      }\n      let clickInsideGrid = (\n        // see if click came from inside the viewports\n        viewports.some((viewport) => viewport.contains(elementWithFocus)) && // and also that it's not from a detail grid\n        this.mouseEventService.isElementInThisGrid(elementWithFocus)\n      );\n      if (!clickInsideGrid) {\n        const popupService = this.popupService;\n        clickInsideGrid = popupService.getActivePopups().some((popup) => popup.contains(elementWithFocus)) || popupService.isElementWithinCustomPopup(elementWithFocus);\n      }\n      if (!clickInsideGrid) {\n        this.rowRenderer.stopEditing();\n      }\n    };\n    const viewports = [this.eBodyViewport, this.eBottom, this.eTop, this.eStickyTop, this.eStickyBottom];\n    viewports.forEach((viewport) => this.addManagedElementListeners(viewport, { focusout: focusOutListener }));\n  }\n  updateRowCount() {\n    const headerCount = this.headerNavigationService.getHeaderRowCount() + (this.filterManager?.getHeaderRowCount() ?? 0);\n    const rowCount = this.rowModel.isLastRowIndexKnown() ? this.rowModel.getRowCount() : -1;\n    const total = rowCount === -1 ? -1 : headerCount + rowCount;\n    this.comp.setRowCount(total);\n  }\n  registerBodyViewportResizeListener(listener) {\n    this.comp.registerBodyViewportResizeListener(listener);\n  }\n  setVerticalScrollPaddingVisible(visible) {\n    const overflowY = visible ? \"scroll\" : \"hidden\";\n    this.comp.setPinnedTopBottomOverflowY(overflowY);\n  }\n  isVerticalScrollShowing() {\n    const show = this.gos.get(\"alwaysShowVerticalScroll\");\n    const cssClass = show ? CSS_CLASS_FORCE_VERTICAL_SCROLL : null;\n    const allowVerticalScroll = this.gos.isDomLayout(\"normal\");\n    this.comp.setAlwaysVerticalScrollClass(cssClass, show);\n    return show || allowVerticalScroll && _isVerticalScrollShowing(this.eBodyViewport);\n  }\n  setupRowAnimationCssClass() {\n    let initialSizeMeasurementComplete = this.environment.hasMeasuredSizes();\n    const updateAnimationClass = () => {\n      const animateRows = initialSizeMeasurementComplete && this.gos.isAnimateRows() && !this.rowContainerHeightService.isStretching();\n      const animateRowsCssClass = animateRows ? \"ag-row-animation\" : \"ag-row-no-animation\";\n      this.comp.setRowAnimationCssOnBodyViewport(animateRowsCssClass, animateRows);\n    };\n    updateAnimationClass();\n    this.addManagedEventListeners({ heightScaleChanged: updateAnimationClass });\n    this.addManagedPropertyListener(\"animateRows\", updateAnimationClass);\n    this.addManagedEventListeners({\n      gridStylesChanged: () => {\n        if (!initialSizeMeasurementComplete && this.environment.hasMeasuredSizes()) {\n          initialSizeMeasurementComplete = true;\n          updateAnimationClass();\n        }\n      }\n    });\n  }\n  getGridBodyElement() {\n    return this.eGridBody;\n  }\n  addBodyViewportListener() {\n    const listener = this.onBodyViewportContextMenu.bind(this);\n    this.addManagedElementListeners(this.eBodyViewport, { contextmenu: listener });\n    this.mockContextMenuForIPad(listener);\n    this.addManagedElementListeners(this.eBodyViewport, { wheel: this.onBodyViewportWheel.bind(this) });\n    this.addManagedElementListeners(this.eStickyTop, { wheel: this.onStickyWheel.bind(this) });\n    this.addManagedElementListeners(this.eStickyBottom, { wheel: this.onStickyWheel.bind(this) });\n    this.addFullWidthContainerWheelListener();\n  }\n  addFullWidthContainerWheelListener() {\n    this.addManagedElementListeners(this.eFullWidthContainer, {\n      wheel: (e) => this.onFullWidthContainerWheel(e)\n    });\n  }\n  onFullWidthContainerWheel(e) {\n    const { deltaX, deltaY, shiftKey } = e;\n    const isHorizontalScroll = shiftKey || Math.abs(deltaX) > Math.abs(deltaY);\n    if (isHorizontalScroll && this.mouseEventService.isEventFromThisGrid(e)) {\n      this.scrollGridBodyToMatchEvent(e);\n    }\n  }\n  onStickyWheel(e) {\n    const { deltaX, deltaY, shiftKey } = e;\n    const isHorizontalScroll = shiftKey || Math.abs(deltaX) > Math.abs(deltaY);\n    const target = e.target;\n    if (!isHorizontalScroll) {\n      e.preventDefault();\n      this.scrollVertically(deltaY);\n    } else if (this.eStickyTopFullWidthContainer.contains(target) || this.eStickyBottomFullWidthContainer.contains(target)) {\n      this.scrollGridBodyToMatchEvent(e);\n    }\n  }\n  scrollGridBodyToMatchEvent(e) {\n    const { deltaX, deltaY } = e;\n    e.preventDefault();\n    this.eCenterColsViewport.scrollBy({ left: deltaX || deltaY });\n  }\n  onBodyViewportContextMenu(mouseEvent, touch, touchEvent) {\n    if (!mouseEvent && !touchEvent) {\n      return;\n    }\n    if (this.gos.get(\"preventDefaultOnContextMenu\")) {\n      const event = mouseEvent || touchEvent;\n      event.preventDefault();\n    }\n    const { target } = mouseEvent || touch;\n    if (target === this.eBodyViewport || target === this.ctrlsService.get(\"center\").getViewportElement()) {\n      this.menuService.showContextMenu({\n        mouseEvent,\n        touchEvent,\n        value: null,\n        anchorToElement: this.eGridBody\n      });\n    }\n  }\n  mockContextMenuForIPad(listener) {\n    if (!_isIOSUserAgent()) {\n      return;\n    }\n    const touchListener = new TouchListener(this.eBodyViewport);\n    const longTapListener = (event) => {\n      listener(void 0, event.touchStart, event.touchEvent);\n    };\n    this.addManagedListeners(touchListener, { longTap: longTapListener });\n    this.addDestroyFunc(() => touchListener.destroy());\n  }\n  onBodyViewportWheel(e) {\n    if (!this.gos.get(\"suppressScrollWhenPopupsAreOpen\")) {\n      return;\n    }\n    if (this.popupService.hasAnchoredPopup()) {\n      e.preventDefault();\n    }\n  }\n  getGui() {\n    return this.eGridBody;\n  }\n  // called by rowDragFeature\n  scrollVertically(pixels) {\n    const oldScrollPosition = this.eBodyViewport.scrollTop;\n    this.bodyScrollFeature.setVerticalScrollPosition(oldScrollPosition + pixels);\n    return this.eBodyViewport.scrollTop - oldScrollPosition;\n  }\n  addRowDragListener() {\n    this.rowDragFeature = this.createManagedBean(new RowDragFeature(this.eBodyViewport));\n    this.dragAndDropService.addDropTarget(this.rowDragFeature);\n  }\n  getRowDragFeature() {\n    return this.rowDragFeature;\n  }\n  setFloatingHeights() {\n    const { pinnedRowModel } = this;\n    const floatingTopHeight = pinnedRowModel.getPinnedTopTotalHeight();\n    const floatingBottomHeight = pinnedRowModel.getPinnedBottomTotalHeight();\n    this.comp.setTopHeight(floatingTopHeight);\n    this.comp.setBottomHeight(floatingBottomHeight);\n    this.comp.setTopDisplay(floatingTopHeight ? \"inherit\" : \"none\");\n    this.comp.setBottomDisplay(floatingBottomHeight ? \"inherit\" : \"none\");\n    this.setStickyTopOffsetTop();\n    this.setStickyBottomOffsetBottom();\n  }\n  setStickyTopHeight(height = 0) {\n    this.comp.setStickyTopHeight(`${height}px`);\n    this.stickyTopHeight = height;\n  }\n  getStickyTopHeight() {\n    return this.stickyTopHeight;\n  }\n  setStickyBottomHeight(height = 0) {\n    this.comp.setStickyBottomHeight(`${height}px`);\n    this.stickyBottomHeight = height;\n  }\n  getStickyBottomHeight() {\n    return this.stickyBottomHeight;\n  }\n  setStickyWidth(vScrollVisible) {\n    if (!vScrollVisible) {\n      this.comp.setStickyTopWidth(\"100%\");\n      this.comp.setStickyBottomWidth(\"100%\");\n    } else {\n      const scrollbarWidth = this.gos.getScrollbarWidth();\n      this.comp.setStickyTopWidth(`calc(100% - ${scrollbarWidth}px)`);\n      this.comp.setStickyBottomWidth(`calc(100% - ${scrollbarWidth}px)`);\n    }\n  }\n  onHeaderHeightChanged() {\n    this.setStickyTopOffsetTop();\n  }\n  setStickyTopOffsetTop() {\n    const headerCtrl = this.ctrlsService.get(\"gridHeaderCtrl\");\n    const headerHeight = headerCtrl.getHeaderHeight() + (this.filterManager?.getHeaderHeight() ?? 0);\n    const pinnedTopHeight = this.pinnedRowModel.getPinnedTopTotalHeight();\n    let height = 0;\n    if (headerHeight > 0) {\n      height += headerHeight;\n    }\n    if (pinnedTopHeight > 0) {\n      height += pinnedTopHeight;\n    }\n    if (height > 0) {\n      height += 1;\n    }\n    this.comp.setStickyTopTop(`${height}px`);\n  }\n  setStickyBottomOffsetBottom() {\n    const pinnedBottomHeight = this.pinnedRowModel.getPinnedBottomTotalHeight();\n    const hScrollShowing = this.scrollVisibleService.isHorizontalScrollShowing();\n    const scrollbarWidth = hScrollShowing ? this.gos.getScrollbarWidth() || 0 : 0;\n    const height = pinnedBottomHeight + scrollbarWidth;\n    this.comp.setStickyBottomBottom(`${height}px`);\n  }\n  // method will call itself if no available width. this covers if the grid\n  // isn't visible, but is just about to be visible.\n  sizeColumnsToFit(params, nextTimeout) {\n    const removeScrollWidth = this.isVerticalScrollShowing();\n    const scrollWidthToRemove = removeScrollWidth ? this.gos.getScrollbarWidth() : 0;\n    const bodyViewportWidth = _getInnerWidth(this.eGridBody);\n    const availableWidth = bodyViewportWidth - scrollWidthToRemove;\n    if (availableWidth > 0) {\n      this.columnSizeService.sizeColumnsToFit(availableWidth, \"sizeColumnsToFit\", false, params);\n      return;\n    }\n    if (nextTimeout === void 0) {\n      window.setTimeout(() => {\n        this.sizeColumnsToFit(params, 100);\n      }, 0);\n    } else if (nextTimeout === 100) {\n      window.setTimeout(() => {\n        this.sizeColumnsToFit(params, 500);\n      }, 100);\n    } else if (nextTimeout === 500) {\n      window.setTimeout(() => {\n        this.sizeColumnsToFit(params, -1);\n      }, 500);\n    } else {\n      _warnOnce(\n        \"tried to call sizeColumnsToFit() but the grid is coming back with zero width, maybe the grid is not visible yet on the screen?\"\n      );\n    }\n  }\n  // + rangeService\n  addScrollEventListener(listener) {\n    this.eBodyViewport.addEventListener(\"scroll\", listener, { passive: true });\n  }\n  // + focusService\n  removeScrollEventListener(listener) {\n    this.eBodyViewport.removeEventListener(\"scroll\", listener);\n  }\n};\n\n// community-modules/core/src/rendering/cell/cellComp.ts\nvar CellComp = class extends Component {\n  constructor(beans, cellCtrl, printLayout, eRow, editingRow) {\n    super();\n    // every time we go into edit mode, or back again, this gets incremented.\n    // it's the components way of dealing with the async nature of framework components,\n    // so if a framework component takes a while to be created, we know if the object\n    // is still relevant when creating is finished. eg we could click edit / un-edit 20\n    // times before the first React edit component comes back - we should discard\n    // the first 19.\n    this.rendererVersion = 0;\n    this.editorVersion = 0;\n    this.beans = beans;\n    this.column = cellCtrl.getColumn();\n    this.rowNode = cellCtrl.getRowNode();\n    this.rowCtrl = cellCtrl.getRowCtrl();\n    this.eRow = eRow;\n    this.cellCtrl = cellCtrl;\n    const cellDiv = document.createElement(\"div\");\n    cellDiv.setAttribute(\"comp-id\", `${this.getCompId()}`);\n    this.setTemplateFromElement(cellDiv);\n    const eGui = this.getGui();\n    this.forceWrapper = cellCtrl.isForceWrapper();\n    this.refreshWrapper(false);\n    const setAttribute = (name, value) => {\n      if (value != null && value != \"\") {\n        eGui.setAttribute(name, value);\n      } else {\n        eGui.removeAttribute(name);\n      }\n    };\n    _setAriaRole(eGui, cellCtrl.getCellAriaRole());\n    setAttribute(\"col-id\", cellCtrl.getColumnIdSanitised());\n    const compProxy = {\n      addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n      setUserStyles: (styles) => _addStylesToElement(eGui, styles),\n      getFocusableElement: () => this.getFocusableElement(),\n      setIncludeSelection: (include) => this.includeSelection = include,\n      setIncludeRowDrag: (include) => this.includeRowDrag = include,\n      setIncludeDndSource: (include) => this.includeDndSource = include,\n      setRenderDetails: (compDetails, valueToDisplay, force) => this.setRenderDetails(compDetails, valueToDisplay, force),\n      setEditDetails: (compDetails, popup, position) => this.setEditDetails(compDetails, popup, position),\n      getCellEditor: () => this.cellEditor || null,\n      getCellRenderer: () => this.cellRenderer || null,\n      getParentOfValue: () => this.getParentOfValue()\n    };\n    cellCtrl.setComp(compProxy, this.getGui(), this.eCellWrapper, printLayout, editingRow);\n  }\n  getParentOfValue() {\n    if (this.eCellValue) {\n      return this.eCellValue;\n    }\n    if (this.eCellWrapper) {\n      return this.eCellWrapper;\n    }\n    return this.getGui();\n  }\n  setRenderDetails(compDetails, valueToDisplay, forceNewCellRendererInstance) {\n    const isInlineEditing = this.cellEditor && !this.cellEditorPopupWrapper;\n    if (isInlineEditing) {\n      return;\n    }\n    this.firstRender = this.firstRender == null;\n    const controlWrapperChanged = this.refreshWrapper(false);\n    this.refreshEditStyles(false);\n    if (compDetails) {\n      const neverRefresh = forceNewCellRendererInstance || controlWrapperChanged;\n      const cellRendererRefreshSuccessful = neverRefresh ? false : this.refreshCellRenderer(compDetails);\n      if (!cellRendererRefreshSuccessful) {\n        this.destroyRenderer();\n        this.createCellRendererInstance(compDetails);\n      }\n    } else {\n      this.destroyRenderer();\n      this.insertValueWithoutCellRenderer(valueToDisplay);\n    }\n  }\n  setEditDetails(compDetails, popup, position) {\n    if (compDetails) {\n      this.createCellEditorInstance(compDetails, popup, position);\n    } else {\n      this.destroyEditor();\n    }\n  }\n  removeControls() {\n    this.checkboxSelectionComp = this.beans.context.destroyBean(this.checkboxSelectionComp);\n    this.dndSourceComp = this.beans.context.destroyBean(this.dndSourceComp);\n    this.rowDraggingComp = this.beans.context.destroyBean(this.rowDraggingComp);\n  }\n  // returns true if wrapper was changed\n  refreshWrapper(editing) {\n    const providingControls = this.includeRowDrag || this.includeDndSource || this.includeSelection;\n    const usingWrapper = providingControls || this.forceWrapper;\n    const putWrapperIn = usingWrapper && this.eCellWrapper == null;\n    if (putWrapperIn) {\n      const wrapperDiv = document.createElement(\"div\");\n      wrapperDiv.setAttribute(\"role\", \"presentation\");\n      wrapperDiv.setAttribute(\"class\", \"ag-cell-wrapper\");\n      this.eCellWrapper = wrapperDiv;\n      this.getGui().appendChild(this.eCellWrapper);\n    }\n    const takeWrapperOut = !usingWrapper && this.eCellWrapper != null;\n    if (takeWrapperOut) {\n      _removeFromParent(this.eCellWrapper);\n      this.eCellWrapper = void 0;\n    }\n    this.addOrRemoveCssClass(\"ag-cell-value\", !usingWrapper);\n    const usingCellValue = !editing && usingWrapper;\n    const putCellValueIn = usingCellValue && this.eCellValue == null;\n    if (putCellValueIn) {\n      const cellSpan = document.createElement(\"span\");\n      cellSpan.setAttribute(\"role\", \"presentation\");\n      cellSpan.setAttribute(\"class\", \"ag-cell-value\");\n      this.eCellValue = cellSpan;\n      this.eCellWrapper.appendChild(this.eCellValue);\n    }\n    const takeCellValueOut = !usingCellValue && this.eCellValue != null;\n    if (takeCellValueOut) {\n      _removeFromParent(this.eCellValue);\n      this.eCellValue = void 0;\n    }\n    const templateChanged = putWrapperIn || takeWrapperOut || putCellValueIn || takeCellValueOut;\n    if (templateChanged) {\n      this.removeControls();\n    }\n    if (!editing) {\n      if (providingControls) {\n        this.addControls();\n      }\n    }\n    return templateChanged;\n  }\n  addControls() {\n    if (this.includeRowDrag) {\n      if (this.rowDraggingComp == null) {\n        this.rowDraggingComp = this.cellCtrl.createRowDragComp();\n        if (this.rowDraggingComp) {\n          this.eCellWrapper.insertBefore(this.rowDraggingComp.getGui(), this.eCellValue);\n        }\n      }\n    }\n    if (this.includeDndSource) {\n      if (this.dndSourceComp == null) {\n        this.dndSourceComp = this.cellCtrl.createDndSource();\n        this.eCellWrapper.insertBefore(this.dndSourceComp.getGui(), this.eCellValue);\n      }\n    }\n    if (this.includeSelection) {\n      if (this.checkboxSelectionComp == null) {\n        this.checkboxSelectionComp = this.cellCtrl.createSelectionCheckbox();\n        this.eCellWrapper.insertBefore(this.checkboxSelectionComp.getGui(), this.eCellValue);\n      }\n    }\n  }\n  createCellEditorInstance(compDetails, popup, position) {\n    const versionCopy = this.editorVersion;\n    const cellEditorPromise = compDetails.newAgStackInstance();\n    if (cellEditorPromise == null) {\n      return;\n    }\n    const { params } = compDetails;\n    cellEditorPromise.then((c) => this.afterCellEditorCreated(versionCopy, c, params, popup, position));\n    const cellEditorAsync = _missing(this.cellEditor);\n    if (cellEditorAsync && params.cellStartedEdit) {\n      this.cellCtrl.focusCell(true);\n    }\n  }\n  insertValueWithoutCellRenderer(valueToDisplay) {\n    const eParent = this.getParentOfValue();\n    _clearElement(eParent);\n    const escapedValue = valueToDisplay != null ? _escapeString(valueToDisplay, true) : null;\n    if (escapedValue != null) {\n      eParent.textContent = escapedValue;\n    }\n  }\n  destroyEditorAndRenderer() {\n    this.destroyRenderer();\n    this.destroyEditor();\n  }\n  destroyRenderer() {\n    const { context } = this.beans;\n    this.cellRenderer = context.destroyBean(this.cellRenderer);\n    _removeFromParent(this.cellRendererGui);\n    this.cellRendererGui = null;\n    this.rendererVersion++;\n  }\n  destroyEditor() {\n    const { context } = this.beans;\n    if (this.hideEditorPopup) {\n      this.hideEditorPopup();\n    }\n    this.hideEditorPopup = void 0;\n    this.cellEditor = context.destroyBean(this.cellEditor);\n    this.cellEditorPopupWrapper = context.destroyBean(this.cellEditorPopupWrapper);\n    _removeFromParent(this.cellEditorGui);\n    this.cellEditorGui = null;\n    this.editorVersion++;\n  }\n  refreshCellRenderer(compClassAndParams) {\n    if (this.cellRenderer == null || this.cellRenderer.refresh == null) {\n      return false;\n    }\n    if (this.cellRendererClass !== compClassAndParams.componentClass) {\n      return false;\n    }\n    const result = this.cellRenderer.refresh(compClassAndParams.params);\n    return result === true || result === void 0;\n  }\n  createCellRendererInstance(compDetails) {\n    const suppressAnimationFrame = this.beans.gos.get(\"suppressAnimationFrame\");\n    const useTaskService = !suppressAnimationFrame;\n    const displayComponentVersionCopy = this.rendererVersion;\n    const { componentClass } = compDetails;\n    const createCellRendererFunc = () => {\n      const staleTask = this.rendererVersion !== displayComponentVersionCopy || !this.isAlive();\n      if (staleTask) {\n        return;\n      }\n      const componentPromise = compDetails.newAgStackInstance();\n      const callback = this.afterCellRendererCreated.bind(this, displayComponentVersionCopy, componentClass);\n      if (componentPromise) {\n        componentPromise.then(callback);\n      }\n    };\n    if (useTaskService && this.firstRender) {\n      this.beans.animationFrameService.createTask(\n        createCellRendererFunc,\n        this.rowNode.rowIndex,\n        \"createTasksP2\"\n      );\n    } else {\n      createCellRendererFunc();\n    }\n  }\n  getCtrl() {\n    return this.cellCtrl;\n  }\n  getRowCtrl() {\n    return this.rowCtrl;\n  }\n  getCellRenderer() {\n    return this.cellRenderer;\n  }\n  getCellEditor() {\n    return this.cellEditor;\n  }\n  afterCellRendererCreated(cellRendererVersion, cellRendererClass, cellRenderer) {\n    const staleTask = !this.isAlive() || cellRendererVersion !== this.rendererVersion;\n    if (staleTask) {\n      this.beans.context.destroyBean(cellRenderer);\n      return;\n    }\n    this.cellRenderer = cellRenderer;\n    this.cellRendererClass = cellRendererClass;\n    this.cellRendererGui = this.cellRenderer.getGui();\n    if (this.cellRendererGui != null) {\n      const eParent = this.getParentOfValue();\n      _clearElement(eParent);\n      eParent.appendChild(this.cellRendererGui);\n    }\n  }\n  afterCellEditorCreated(requestVersion, cellEditor, params, popup, position) {\n    const staleComp = requestVersion !== this.editorVersion;\n    if (staleComp) {\n      this.beans.context.destroyBean(cellEditor);\n      return;\n    }\n    const editingCancelledByUserComp = cellEditor.isCancelBeforeStart && cellEditor.isCancelBeforeStart();\n    if (editingCancelledByUserComp) {\n      this.beans.context.destroyBean(cellEditor);\n      this.cellCtrl.stopEditing(true);\n      return;\n    }\n    if (!cellEditor.getGui) {\n      _warnOnce(`cellEditor for column ${this.column.getId()} is missing getGui() method`);\n      this.beans.context.destroyBean(cellEditor);\n      return;\n    }\n    this.cellEditor = cellEditor;\n    this.cellEditorGui = cellEditor.getGui();\n    const cellEditorInPopup = popup || cellEditor.isPopup !== void 0 && cellEditor.isPopup();\n    if (cellEditorInPopup) {\n      this.addPopupCellEditor(params, position);\n    } else {\n      this.addInCellEditor();\n    }\n    this.refreshEditStyles(true, cellEditorInPopup);\n    if (cellEditor.afterGuiAttached) {\n      cellEditor.afterGuiAttached();\n    }\n  }\n  refreshEditStyles(editing, isPopup) {\n    this.addOrRemoveCssClass(\"ag-cell-inline-editing\", editing && !isPopup);\n    this.addOrRemoveCssClass(\"ag-cell-popup-editing\", editing && !!isPopup);\n    this.addOrRemoveCssClass(\"ag-cell-not-inline-editing\", !editing || !!isPopup);\n    this.rowCtrl?.setInlineEditingCss();\n  }\n  addInCellEditor() {\n    const eGui = this.getGui();\n    if (eGui.contains(this.beans.gos.getActiveDomElement())) {\n      eGui.focus();\n    }\n    this.destroyRenderer();\n    this.refreshWrapper(true);\n    this.clearParentOfValue();\n    if (this.cellEditorGui) {\n      const eParent = this.getParentOfValue();\n      eParent.appendChild(this.cellEditorGui);\n    }\n  }\n  addPopupCellEditor(params, position) {\n    if (this.beans.gos.get(\"editType\") === \"fullRow\") {\n      _warnOnce(\n        \"popup cellEditor does not work with fullRowEdit - you cannot use them both - either turn off fullRowEdit, or stop using popup editors.\"\n      );\n    }\n    const cellEditor = this.cellEditor;\n    this.cellEditorPopupWrapper = this.beans.context.createBean(\n      this.beans.editService.createPopupEditorWrapper(params)\n    );\n    const ePopupGui = this.cellEditorPopupWrapper.getGui();\n    if (this.cellEditorGui) {\n      ePopupGui.appendChild(this.cellEditorGui);\n    }\n    const popupService = this.beans.popupService;\n    const useModelPopup = this.beans.gos.get(\"stopEditingWhenCellsLoseFocus\");\n    const positionToUse = position != null ? position : cellEditor.getPopupPosition?.() ?? \"over\";\n    const isRtl = this.beans.gos.get(\"enableRtl\");\n    const positionParams = {\n      ePopup: ePopupGui,\n      column: this.column,\n      rowNode: this.rowNode,\n      type: \"popupCellEditor\",\n      eventSource: this.getGui(),\n      position: positionToUse,\n      alignSide: isRtl ? \"right\" : \"left\",\n      keepWithinBounds: true\n    };\n    const positionCallback = popupService.positionPopupByComponent.bind(popupService, positionParams);\n    const translate = this.beans.localeService.getLocaleTextFunc();\n    const addPopupRes = popupService.addPopup({\n      modal: useModelPopup,\n      eChild: ePopupGui,\n      closeOnEsc: true,\n      closedCallback: () => {\n        this.cellCtrl.onPopupEditorClosed();\n      },\n      anchorToElement: this.getGui(),\n      positionCallback,\n      ariaLabel: translate(\"ariaLabelCellEditor\", \"Cell Editor\")\n    });\n    if (addPopupRes) {\n      this.hideEditorPopup = addPopupRes.hideFunc;\n    }\n  }\n  detach() {\n    this.eRow.removeChild(this.getGui());\n  }\n  // if the row is also getting destroyed, then we don't need to remove from dom,\n  // as the row will also get removed, so no need to take out the cells from the row\n  // if the row is going (removing is an expensive operation, so only need to remove\n  // the top part)\n  //\n  // note - this is NOT called by context, as we don't wire / unwire the CellComp for performance reasons.\n  destroy() {\n    this.cellCtrl.stopEditing();\n    this.destroyEditorAndRenderer();\n    this.removeControls();\n    super.destroy();\n  }\n  clearParentOfValue() {\n    const eGui = this.getGui();\n    if (eGui.contains(this.beans.gos.getActiveDomElement()) && _browserSupportsPreventScroll()) {\n      eGui.focus({ preventScroll: true });\n    }\n    _clearElement(this.getParentOfValue());\n  }\n};\n\n// community-modules/core/src/rendering/row/rowComp.ts\nvar RowComp = class extends Component {\n  constructor(ctrl, beans, containerType) {\n    super();\n    this.cellComps = {};\n    this.beans = beans;\n    this.rowCtrl = ctrl;\n    const rowDiv = document.createElement(\"div\");\n    rowDiv.setAttribute(\"comp-id\", `${this.getCompId()}`);\n    rowDiv.setAttribute(\"style\", this.getInitialStyle(containerType));\n    this.setTemplateFromElement(rowDiv);\n    const eGui = this.getGui();\n    const style = eGui.style;\n    this.domOrder = this.rowCtrl.getDomOrder();\n    _setAriaRole(eGui, \"row\");\n    const compProxy = {\n      setDomOrder: (domOrder) => this.domOrder = domOrder,\n      setCellCtrls: (cellCtrls) => this.setCellCtrls(cellCtrls),\n      showFullWidth: (compDetails) => this.showFullWidth(compDetails),\n      getFullWidthCellRenderer: () => this.getFullWidthCellRenderer(),\n      addOrRemoveCssClass: (name, on) => this.addOrRemoveCssClass(name, on),\n      setUserStyles: (styles) => _addStylesToElement(eGui, styles),\n      setTop: (top) => style.top = top,\n      setTransform: (transform) => style.transform = transform,\n      setRowIndex: (rowIndex) => eGui.setAttribute(\"row-index\", rowIndex),\n      setRowId: (rowId) => eGui.setAttribute(\"row-id\", rowId),\n      setRowBusinessKey: (businessKey) => eGui.setAttribute(\"row-business-key\", businessKey),\n      refreshFullWidth: (getUpdatedParams) => this.refreshFullWidth(getUpdatedParams)\n    };\n    ctrl.setComp(compProxy, this.getGui(), containerType);\n    this.addDestroyFunc(() => {\n      ctrl.unsetComp(containerType);\n    });\n  }\n  getInitialStyle(containerType) {\n    const transform = this.rowCtrl.getInitialTransform(containerType);\n    return transform ? `transform: ${transform}` : `top: ${this.rowCtrl.getInitialRowTop(containerType)}`;\n  }\n  showFullWidth(compDetails) {\n    const callback = (cellRenderer) => {\n      if (this.isAlive()) {\n        const eGui = cellRenderer.getGui();\n        this.getGui().appendChild(eGui);\n        this.rowCtrl.setupDetailRowAutoHeight(eGui);\n        this.setFullWidthRowComp(cellRenderer);\n      } else {\n        this.beans.context.destroyBean(cellRenderer);\n      }\n    };\n    const res = compDetails.newAgStackInstance();\n    if (res == null) {\n      return;\n    }\n    res.then(callback);\n  }\n  setCellCtrls(cellCtrls) {\n    const cellsToRemove = Object.assign({}, this.cellComps);\n    cellCtrls.forEach((cellCtrl) => {\n      const key = cellCtrl.getInstanceId();\n      const existingCellComp = this.cellComps[key];\n      if (existingCellComp == null) {\n        this.newCellComp(cellCtrl);\n      } else {\n        cellsToRemove[key] = null;\n      }\n    });\n    const cellCompsToRemove = _getAllValuesInObject(cellsToRemove).filter((cellComp) => cellComp != null);\n    this.destroyCells(cellCompsToRemove);\n    this.ensureDomOrder(cellCtrls);\n  }\n  ensureDomOrder(cellCtrls) {\n    if (!this.domOrder) {\n      return;\n    }\n    const elementsInOrder = [];\n    cellCtrls.forEach((cellCtrl) => {\n      const cellComp = this.cellComps[cellCtrl.getInstanceId()];\n      if (cellComp) {\n        elementsInOrder.push(cellComp.getGui());\n      }\n    });\n    _setDomChildOrder(this.getGui(), elementsInOrder);\n  }\n  newCellComp(cellCtrl) {\n    const cellComp = new CellComp(\n      this.beans,\n      cellCtrl,\n      this.rowCtrl.isPrintLayout(),\n      this.getGui(),\n      this.rowCtrl.isEditing()\n    );\n    this.cellComps[cellCtrl.getInstanceId()] = cellComp;\n    this.getGui().appendChild(cellComp.getGui());\n  }\n  destroy() {\n    super.destroy();\n    this.destroyAllCells();\n  }\n  destroyAllCells() {\n    const cellsToDestroy = _getAllValuesInObject(this.cellComps).filter((cp) => cp != null);\n    this.destroyCells(cellsToDestroy);\n  }\n  setFullWidthRowComp(fullWidthRowComponent) {\n    if (this.fullWidthCellRenderer) {\n      _errorOnce(\"should not be setting fullWidthRowComponent twice\");\n    }\n    this.fullWidthCellRenderer = fullWidthRowComponent;\n    this.addDestroyFunc(() => {\n      this.fullWidthCellRenderer = this.beans.context.destroyBean(this.fullWidthCellRenderer);\n    });\n  }\n  getFullWidthCellRenderer() {\n    return this.fullWidthCellRenderer;\n  }\n  destroyCells(cellComps) {\n    cellComps.forEach((cellComp) => {\n      if (!cellComp) {\n        return;\n      }\n      const instanceId = cellComp.getCtrl().getInstanceId();\n      if (this.cellComps[instanceId] !== cellComp) {\n        return;\n      }\n      cellComp.detach();\n      cellComp.destroy();\n      this.cellComps[instanceId] = null;\n    });\n  }\n  refreshFullWidth(getUpdatedParams) {\n    const { fullWidthCellRenderer } = this;\n    if (!fullWidthCellRenderer || !fullWidthCellRenderer.refresh) {\n      return false;\n    }\n    const params = getUpdatedParams();\n    return fullWidthCellRenderer.refresh(params);\n  }\n};\n\n// community-modules/core/src/gridBodyComp/rowContainer/rowContainerComp.ts\nfunction templateFactory(options) {\n  let res;\n  if (options.type === \"center\") {\n    res = /* html */\n    `<div class=\"${options.viewport}\" data-ref=\"eViewport\" role=\"presentation\">\n                <div class=\"${options.container}\" data-ref=\"eContainer\"></div>\n            </div>`;\n  } else {\n    res = /* html */\n    `<div class=\"${options.container}\" data-ref=\"eContainer\"></div>`;\n  }\n  return res;\n}\nvar RowContainerComp = class extends Component {\n  constructor() {\n    super();\n    this.eViewport = RefPlaceholder;\n    this.eContainer = RefPlaceholder;\n    this.rowComps = {};\n    this.name = Component.elementGettingCreated.getAttribute(\"name\");\n    this.options = _getRowContainerOptions(this.name);\n    this.setTemplate(templateFactory(this.options));\n  }\n  wireBeans(beans) {\n    this.beans = beans;\n  }\n  postConstruct() {\n    const compProxy = {\n      setHorizontalScroll: (offset) => this.eViewport.scrollLeft = offset,\n      setViewportHeight: (height) => this.eViewport.style.height = height,\n      setRowCtrls: ({ rowCtrls }) => this.setRowCtrls(rowCtrls),\n      setDomOrder: (domOrder) => {\n        this.domOrder = domOrder;\n      },\n      setContainerWidth: (width) => this.eContainer.style.width = width,\n      setOffsetTop: (offset) => this.eContainer.style.transform = `translateY(${offset})`\n    };\n    const ctrl = this.createManagedBean(new RowContainerCtrl(this.name));\n    ctrl.setComp(compProxy, this.eContainer, this.eViewport);\n  }\n  destroy() {\n    this.setRowCtrls([]);\n    super.destroy();\n  }\n  setRowCtrls(rowCtrls) {\n    const oldRows = { ...this.rowComps };\n    this.rowComps = {};\n    this.lastPlacedElement = null;\n    const processRow = (rowCon) => {\n      const instanceId = rowCon.getInstanceId();\n      const existingRowComp = oldRows[instanceId];\n      if (existingRowComp) {\n        this.rowComps[instanceId] = existingRowComp;\n        delete oldRows[instanceId];\n        this.ensureDomOrder(existingRowComp.getGui());\n      } else {\n        if (!rowCon.getRowNode().displayed) {\n          return;\n        }\n        const rowComp = new RowComp(rowCon, this.beans, this.options.type);\n        this.rowComps[instanceId] = rowComp;\n        this.appendRow(rowComp.getGui());\n      }\n    };\n    rowCtrls.forEach(processRow);\n    _getAllValuesInObject(oldRows).forEach((oldRowComp) => {\n      this.eContainer.removeChild(oldRowComp.getGui());\n      oldRowComp.destroy();\n    });\n    _setAriaRole(this.eContainer, \"rowgroup\");\n  }\n  appendRow(element) {\n    if (this.domOrder) {\n      _insertWithDomOrder(this.eContainer, element, this.lastPlacedElement);\n    } else {\n      this.eContainer.appendChild(element);\n    }\n    this.lastPlacedElement = element;\n  }\n  ensureDomOrder(eRow) {\n    if (this.domOrder) {\n      _ensureDomOrder(this.eContainer, eRow, this.lastPlacedElement);\n      this.lastPlacedElement = eRow;\n    }\n  }\n};\nvar RowContainerSelector = {\n  selector: \"AG-ROW-CONTAINER\",\n  component: RowContainerComp\n};\n\n// community-modules/core/src/gridBodyComp/gridBodyComp.ts\nfunction makeRowContainers(names) {\n  return names.map((name) => `<ag-row-container name=\"${name}\"></ag-row-container>`).join(\"\");\n}\nvar GRID_BODY_TEMPLATE = (\n  /* html */\n  `<div class=\"ag-root ag-unselectable\" role=\"treegrid\">\n        <ag-header-root></ag-header-root>\n        <div class=\"ag-floating-top\" data-ref=\"eTop\" role=\"presentation\">\n            ${makeRowContainers([\"topLeft\", \"topCenter\", \"topRight\", \"topFullWidth\"])}\n        </div>\n        <div class=\"ag-body\" data-ref=\"eBody\" role=\"presentation\">\n            <div class=\"ag-body-viewport\" data-ref=\"eBodyViewport\" role=\"presentation\">\n            ${makeRowContainers([\"left\", \"center\", \"right\", \"fullWidth\"])}\n            </div>\n            <ag-fake-vertical-scroll></ag-fake-vertical-scroll>\n        </div>\n        <div class=\"ag-sticky-top\" data-ref=\"eStickyTop\" role=\"presentation\">\n            ${makeRowContainers([\"stickyTopLeft\", \"stickyTopCenter\", \"stickyTopRight\", \"stickyTopFullWidth\"])}\n        </div>\n        <div class=\"ag-sticky-bottom\" data-ref=\"eStickyBottom\" role=\"presentation\">\n            ${makeRowContainers([\"stickyBottomLeft\", \"stickyBottomCenter\", \"stickyBottomRight\", \"stickyBottomFullWidth\"])}\n        </div>\n        <div class=\"ag-floating-bottom\" data-ref=\"eBottom\" role=\"presentation\">\n            ${makeRowContainers([\"bottomLeft\", \"bottomCenter\", \"bottomRight\", \"bottomFullWidth\"])}\n        </div>\n        <ag-fake-horizontal-scroll></ag-fake-horizontal-scroll>\n        <ag-overlay-wrapper></ag-overlay-wrapper>\n    </div>`\n);\nvar GridBodyComp = class extends Component {\n  constructor() {\n    super(GRID_BODY_TEMPLATE, [\n      OverlayWrapperSelector,\n      FakeHScrollSelector,\n      FakeVScrollSelector,\n      GridHeaderSelector,\n      RowContainerSelector\n    ]);\n    this.eBodyViewport = RefPlaceholder;\n    this.eStickyTop = RefPlaceholder;\n    this.eStickyBottom = RefPlaceholder;\n    this.eTop = RefPlaceholder;\n    this.eBottom = RefPlaceholder;\n    this.eBody = RefPlaceholder;\n  }\n  wireBeans(beans) {\n    this.resizeObserverService = beans.resizeObserverService;\n    this.rangeService = beans.rangeService;\n  }\n  postConstruct() {\n    const setHeight = (height, element) => {\n      const heightString = `${height}px`;\n      element.style.minHeight = heightString;\n      element.style.height = heightString;\n    };\n    const compProxy = {\n      setRowAnimationCssOnBodyViewport: (cssClass, animate) => this.setRowAnimationCssOnBodyViewport(cssClass, animate),\n      setColumnCount: (count) => _setAriaColCount(this.getGui(), count),\n      setRowCount: (count) => _setAriaRowCount(this.getGui(), count),\n      setTopHeight: (height) => setHeight(height, this.eTop),\n      setBottomHeight: (height) => setHeight(height, this.eBottom),\n      setTopDisplay: (display) => this.eTop.style.display = display,\n      setBottomDisplay: (display) => this.eBottom.style.display = display,\n      setStickyTopHeight: (height) => this.eStickyTop.style.height = height,\n      setStickyTopTop: (top) => this.eStickyTop.style.top = top,\n      setStickyTopWidth: (width) => this.eStickyTop.style.width = width,\n      setStickyBottomHeight: (height) => {\n        this.eStickyBottom.style.height = height;\n        this.eStickyBottom.classList.toggle(\"ag-hidden\", height === \"0px\");\n      },\n      setStickyBottomBottom: (bottom) => this.eStickyBottom.style.bottom = bottom,\n      setStickyBottomWidth: (width) => this.eStickyBottom.style.width = width,\n      setColumnMovingCss: (cssClass, flag) => this.addOrRemoveCssClass(cssClass, flag),\n      updateLayoutClasses: (cssClass, params) => {\n        const classLists = [this.eBodyViewport.classList, this.eBody.classList];\n        classLists.forEach((classList) => {\n          classList.toggle(\"ag-layout-auto-height\" /* AUTO_HEIGHT */, params.autoHeight);\n          classList.toggle(\"ag-layout-normal\" /* NORMAL */, params.normal);\n          classList.toggle(\"ag-layout-print\" /* PRINT */, params.print);\n        });\n        this.addOrRemoveCssClass(\"ag-layout-auto-height\" /* AUTO_HEIGHT */, params.autoHeight);\n        this.addOrRemoveCssClass(\"ag-layout-normal\" /* NORMAL */, params.normal);\n        this.addOrRemoveCssClass(\"ag-layout-print\" /* PRINT */, params.print);\n      },\n      setAlwaysVerticalScrollClass: (cssClass, on) => this.eBodyViewport.classList.toggle(CSS_CLASS_FORCE_VERTICAL_SCROLL, on),\n      registerBodyViewportResizeListener: (listener) => {\n        const unsubscribeFromResize = this.resizeObserverService.observeResize(this.eBodyViewport, listener);\n        this.addDestroyFunc(() => unsubscribeFromResize());\n      },\n      setPinnedTopBottomOverflowY: (overflow) => this.eTop.style.overflowY = this.eBottom.style.overflowY = overflow,\n      setCellSelectableCss: (cssClass, selectable) => {\n        [this.eTop, this.eBodyViewport, this.eBottom].forEach(\n          (ct) => ct.classList.toggle(cssClass, selectable)\n        );\n      },\n      setBodyViewportWidth: (width) => this.eBodyViewport.style.width = width\n    };\n    this.ctrl = this.createManagedBean(new GridBodyCtrl());\n    this.ctrl.setComp(\n      compProxy,\n      this.getGui(),\n      this.eBodyViewport,\n      this.eTop,\n      this.eBottom,\n      this.eStickyTop,\n      this.eStickyBottom\n    );\n    if (this.rangeService && this.gos.get(\"enableRangeSelection\") || this.gos.get(\"rowSelection\") === \"multiple\") {\n      _setAriaMultiSelectable(this.getGui(), true);\n    }\n  }\n  setRowAnimationCssOnBodyViewport(cssClass, animateRows) {\n    const bodyViewportClassList = this.eBodyViewport.classList;\n    bodyViewportClassList.toggle(\"ag-row-animation\", animateRows);\n    bodyViewportClassList.toggle(\"ag-row-no-animation\", !animateRows);\n  }\n  getFloatingTopBottom() {\n    return [this.eTop, this.eBottom];\n  }\n};\nvar GridBodySelector = {\n  selector: \"AG-GRID-BODY\",\n  component: GridBodyComp\n};\n\n// community-modules/core/src/gridBodyComp/scrollVisibleService.ts\nvar ScrollVisibleService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"scrollVisibleService\";\n  }\n  wireBeans(beans) {\n    this.ctrlsService = beans.ctrlsService;\n    this.columnAnimationService = beans.columnAnimationService;\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this),\n      displayedColumnsWidthChanged: this.onDisplayedColumnsWidthChanged.bind(this)\n    });\n  }\n  onDisplayedColumnsChanged() {\n    this.update();\n  }\n  onDisplayedColumnsWidthChanged() {\n    this.update();\n  }\n  update() {\n    if (this.columnAnimationService.isActive()) {\n      this.columnAnimationService.executeLaterVMTurn(() => {\n        this.columnAnimationService.executeLaterVMTurn(() => this.updateImpl());\n      });\n    } else {\n      this.updateImpl();\n    }\n  }\n  updateImpl() {\n    const centerRowCtrl = this.ctrlsService.get(\"center\");\n    if (!centerRowCtrl || this.columnAnimationService.isActive()) {\n      return;\n    }\n    const params = {\n      horizontalScrollShowing: centerRowCtrl.isHorizontalScrollShowing(),\n      verticalScrollShowing: this.isVerticalScrollShowing()\n    };\n    this.setScrollsVisible(params);\n  }\n  setScrollsVisible(params) {\n    const atLeastOneDifferent = this.horizontalScrollShowing !== params.horizontalScrollShowing || this.verticalScrollShowing !== params.verticalScrollShowing;\n    if (atLeastOneDifferent) {\n      this.horizontalScrollShowing = params.horizontalScrollShowing;\n      this.verticalScrollShowing = params.verticalScrollShowing;\n      this.eventService.dispatchEvent({\n        type: \"scrollVisibilityChanged\"\n      });\n    }\n  }\n  // used by pagination service - to know page height\n  isHorizontalScrollShowing() {\n    return this.horizontalScrollShowing;\n  }\n  // used by header container\n  isVerticalScrollShowing() {\n    return this.verticalScrollShowing;\n  }\n};\n\n// community-modules/core/src/gridBodyComp/mouseEventService.ts\nvar GRID_DOM_KEY = \"__ag_grid_instance\";\nvar _MouseEventService = class _MouseEventService extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"mouseEventService\";\n    this.gridInstanceId = _MouseEventService.gridInstanceSequence.next();\n  }\n  wireBeans(beans) {\n    this.ctrlsService = beans.ctrlsService;\n  }\n  // we put the instance id onto the main DOM element. this is used for events, when grids are inside grids,\n  // so the grid can work out if the even came from this grid or a grid inside this one. see the ctrl+v logic\n  // for where this is used.\n  stampTopLevelGridCompWithGridInstance(eGridDiv) {\n    eGridDiv[GRID_DOM_KEY] = this.gridInstanceId;\n  }\n  getRenderedCellForEvent(event) {\n    return _getCtrlForEventTarget(this.gos, event.target, CellCtrl.DOM_DATA_KEY_CELL_CTRL);\n  }\n  // walks the path of the event, and returns true if this grid is the first one that it finds. if doing\n  // master / detail grids, and a child grid is found, then it returns false. this stops things like copy/paste\n  // getting executed on many grids at the same time.\n  isEventFromThisGrid(event) {\n    const res = this.isElementInThisGrid(event.target);\n    return res;\n  }\n  isElementInThisGrid(element) {\n    let pointer = element;\n    while (pointer) {\n      const instanceId = pointer[GRID_DOM_KEY];\n      if (_exists(instanceId)) {\n        const eventFromThisGrid = instanceId === this.gridInstanceId;\n        return eventFromThisGrid;\n      }\n      pointer = pointer.parentElement;\n    }\n    return false;\n  }\n  getCellPositionForEvent(event) {\n    const cellComp = this.getRenderedCellForEvent(event);\n    return cellComp ? cellComp.getCellPosition() : null;\n  }\n  getNormalisedPosition(event) {\n    const gridPanelHasScrolls = this.gos.isDomLayout(\"normal\");\n    const e = event;\n    let x;\n    let y;\n    if (e.clientX != null || e.clientY != null) {\n      x = e.clientX;\n      y = e.clientY;\n    } else {\n      x = e.x;\n      y = e.y;\n    }\n    if (gridPanelHasScrolls) {\n      const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n      const vRange = gridBodyCon.getScrollFeature().getVScrollPosition();\n      const hRange = gridBodyCon.getScrollFeature().getHScrollPosition();\n      x += hRange.left;\n      y += vRange.top;\n    }\n    return { x, y };\n  }\n};\n_MouseEventService.gridInstanceSequence = new NumberSequence();\nvar MouseEventService = _MouseEventService;\n\n// community-modules/core/src/gridBodyComp/navigationService.ts\nvar NavigationService = class extends BeanStub {\n  constructor() {\n    super();\n    this.beanName = \"navigationService\";\n    this.onPageDown = _throttle(this.onPageDown, 100);\n    this.onPageUp = _throttle(this.onPageUp, 100);\n  }\n  wireBeans(beans) {\n    this.mouseEventService = beans.mouseEventService;\n    this.pageBoundsService = beans.pageBoundsService;\n    this.focusService = beans.focusService;\n    this.columnModel = beans.columnModel;\n    this.visibleColsService = beans.visibleColsService;\n    this.rowModel = beans.rowModel;\n    this.ctrlsService = beans.ctrlsService;\n    this.rowRenderer = beans.rowRenderer;\n    this.headerNavigationService = beans.headerNavigationService;\n    this.rowPositionUtils = beans.rowPositionUtils;\n    this.cellNavigationService = beans.cellNavigationService;\n    this.pinnedRowModel = beans.pinnedRowModel;\n    this.rangeService = beans.rangeService;\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady((p) => {\n      this.gridBodyCon = p.gridBodyCtrl;\n    });\n  }\n  handlePageScrollingKey(event, fromFullWidth = false) {\n    const key = event.key;\n    const alt = event.altKey;\n    const ctrl = event.ctrlKey || event.metaKey;\n    const rangeServiceShouldHandleShift = !!this.rangeService && event.shiftKey;\n    const currentCell = this.mouseEventService.getCellPositionForEvent(event);\n    let processed = false;\n    switch (key) {\n      case KeyCode.PAGE_HOME:\n      case KeyCode.PAGE_END:\n        if (!ctrl && !alt) {\n          this.onHomeOrEndKey(key);\n          processed = true;\n        }\n        break;\n      case KeyCode.LEFT:\n      case KeyCode.RIGHT:\n      case KeyCode.UP:\n      case KeyCode.DOWN:\n        if (!currentCell) {\n          return false;\n        }\n        if (ctrl && !alt && !rangeServiceShouldHandleShift) {\n          this.onCtrlUpDownLeftRight(key, currentCell);\n          processed = true;\n        }\n        break;\n      case KeyCode.PAGE_DOWN:\n      case KeyCode.PAGE_UP:\n        if (!ctrl && !alt) {\n          processed = this.handlePageUpDown(key, currentCell, fromFullWidth);\n        }\n        break;\n    }\n    if (processed) {\n      event.preventDefault();\n    }\n    return processed;\n  }\n  handlePageUpDown(key, currentCell, fromFullWidth) {\n    if (fromFullWidth) {\n      currentCell = this.focusService.getFocusedCell();\n    }\n    if (!currentCell) {\n      return false;\n    }\n    if (key === KeyCode.PAGE_UP) {\n      this.onPageUp(currentCell);\n    } else {\n      this.onPageDown(currentCell);\n    }\n    return true;\n  }\n  navigateTo(navigateParams) {\n    const { scrollIndex, scrollType, scrollColumn, focusIndex, focusColumn } = navigateParams;\n    if (_exists(scrollColumn) && !scrollColumn.isPinned()) {\n      this.gridBodyCon.getScrollFeature().ensureColumnVisible(scrollColumn);\n    }\n    if (_exists(scrollIndex)) {\n      this.gridBodyCon.getScrollFeature().ensureIndexVisible(scrollIndex, scrollType);\n    }\n    if (!navigateParams.isAsync) {\n      this.gridBodyCon.getScrollFeature().ensureIndexVisible(focusIndex);\n    }\n    this.focusService.setFocusedCell({\n      rowIndex: focusIndex,\n      column: focusColumn,\n      rowPinned: null,\n      forceBrowserFocus: true\n    });\n    this.rangeService?.setRangeToCell({ rowIndex: focusIndex, rowPinned: null, column: focusColumn });\n  }\n  // this method is throttled, see the `constructor`\n  onPageDown(gridCell) {\n    const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    const scrollPosition = gridBodyCon.getScrollFeature().getVScrollPosition();\n    const pixelsInOnePage = this.getViewportHeight();\n    const pagingPixelOffset = this.pageBoundsService.getPixelOffset();\n    const currentPageBottomPixel = scrollPosition.top + pixelsInOnePage;\n    const currentPageBottomRow = this.rowModel.getRowIndexAtPixel(currentPageBottomPixel + pagingPixelOffset);\n    if (this.columnModel.isAutoRowHeightActive()) {\n      this.navigateToNextPageWithAutoHeight(gridCell, currentPageBottomRow);\n    } else {\n      this.navigateToNextPage(gridCell, currentPageBottomRow);\n    }\n  }\n  // this method is throttled, see the `constructor`\n  onPageUp(gridCell) {\n    const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    const scrollPosition = gridBodyCon.getScrollFeature().getVScrollPosition();\n    const pagingPixelOffset = this.pageBoundsService.getPixelOffset();\n    const currentPageTopPixel = scrollPosition.top;\n    const currentPageTopRow = this.rowModel.getRowIndexAtPixel(currentPageTopPixel + pagingPixelOffset);\n    if (this.columnModel.isAutoRowHeightActive()) {\n      this.navigateToNextPageWithAutoHeight(gridCell, currentPageTopRow, true);\n    } else {\n      this.navigateToNextPage(gridCell, currentPageTopRow, true);\n    }\n  }\n  navigateToNextPage(gridCell, scrollIndex, up = false) {\n    const pixelsInOnePage = this.getViewportHeight();\n    const firstRow = this.pageBoundsService.getFirstRow();\n    const lastRow = this.pageBoundsService.getLastRow();\n    const pagingPixelOffset = this.pageBoundsService.getPixelOffset();\n    const currentRowNode = this.rowModel.getRow(gridCell.rowIndex);\n    const rowPixelDiff = up ? (\n      // eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain\n      currentRowNode?.rowHeight - pixelsInOnePage - pagingPixelOffset\n    ) : pixelsInOnePage - pagingPixelOffset;\n    const nextCellPixel = currentRowNode?.rowTop + rowPixelDiff;\n    let focusIndex = this.rowModel.getRowIndexAtPixel(nextCellPixel + pagingPixelOffset);\n    if (focusIndex === gridCell.rowIndex) {\n      const diff = up ? -1 : 1;\n      scrollIndex = focusIndex = gridCell.rowIndex + diff;\n    }\n    let scrollType;\n    if (up) {\n      scrollType = \"bottom\";\n      if (focusIndex < firstRow) {\n        focusIndex = firstRow;\n      }\n      if (scrollIndex < firstRow) {\n        scrollIndex = firstRow;\n      }\n    } else {\n      scrollType = \"top\";\n      if (focusIndex > lastRow) {\n        focusIndex = lastRow;\n      }\n      if (scrollIndex > lastRow) {\n        scrollIndex = lastRow;\n      }\n    }\n    if (this.isRowTallerThanView(focusIndex)) {\n      scrollIndex = focusIndex;\n      scrollType = \"top\";\n    }\n    this.navigateTo({\n      scrollIndex,\n      scrollType,\n      scrollColumn: null,\n      focusIndex,\n      focusColumn: gridCell.column\n    });\n  }\n  navigateToNextPageWithAutoHeight(gridCell, scrollIndex, up = false) {\n    this.navigateTo({\n      scrollIndex,\n      scrollType: up ? \"bottom\" : \"top\",\n      scrollColumn: null,\n      focusIndex: scrollIndex,\n      focusColumn: gridCell.column\n    });\n    setTimeout(() => {\n      const focusIndex = this.getNextFocusIndexForAutoHeight(gridCell, up);\n      this.navigateTo({\n        scrollIndex,\n        scrollType: up ? \"bottom\" : \"top\",\n        scrollColumn: null,\n        focusIndex,\n        focusColumn: gridCell.column,\n        isAsync: true\n      });\n    }, 50);\n  }\n  getNextFocusIndexForAutoHeight(gridCell, up = false) {\n    const step = up ? -1 : 1;\n    const pixelsInOnePage = this.getViewportHeight();\n    const lastRowIndex = this.pageBoundsService.getLastRow();\n    let pixelSum = 0;\n    let currentIndex = gridCell.rowIndex;\n    while (currentIndex >= 0 && currentIndex <= lastRowIndex) {\n      const currentCell = this.rowModel.getRow(currentIndex);\n      if (currentCell) {\n        const currentCellHeight = currentCell.rowHeight ?? 0;\n        if (pixelSum + currentCellHeight > pixelsInOnePage) {\n          break;\n        }\n        pixelSum += currentCellHeight;\n      }\n      currentIndex += step;\n    }\n    return Math.max(0, Math.min(currentIndex, lastRowIndex));\n  }\n  getViewportHeight() {\n    const { gridBodyCtrl, center } = this.ctrlsService.getParams();\n    const scrollPosition = gridBodyCtrl.getScrollFeature().getVScrollPosition();\n    const scrollbarWidth = this.gos.getScrollbarWidth();\n    let pixelsInOnePage = scrollPosition.bottom - scrollPosition.top;\n    if (center.isHorizontalScrollShowing()) {\n      pixelsInOnePage -= scrollbarWidth;\n    }\n    return pixelsInOnePage;\n  }\n  isRowTallerThanView(rowIndex) {\n    const rowNode = this.rowModel.getRow(rowIndex);\n    if (!rowNode) {\n      return false;\n    }\n    const rowHeight = rowNode.rowHeight;\n    if (typeof rowHeight !== \"number\") {\n      return false;\n    }\n    return rowHeight > this.getViewportHeight();\n  }\n  onCtrlUpDownLeftRight(key, gridCell) {\n    const cellToFocus = this.cellNavigationService.getNextCellToFocus(key, gridCell, true);\n    const { rowIndex } = cellToFocus;\n    const column = cellToFocus.column;\n    this.navigateTo({\n      scrollIndex: rowIndex,\n      scrollType: null,\n      scrollColumn: column,\n      focusIndex: rowIndex,\n      focusColumn: column\n    });\n  }\n  // home brings focus to top left cell, end brings focus to bottom right, grid scrolled to bring\n  // same cell into view (which means either scroll all the way up, or all the way down).\n  onHomeOrEndKey(key) {\n    const homeKey = key === KeyCode.PAGE_HOME;\n    const allColumns = this.visibleColsService.getAllCols();\n    const columnToSelect = homeKey ? allColumns[0] : _last(allColumns);\n    const scrollIndex = homeKey ? this.pageBoundsService.getFirstRow() : this.pageBoundsService.getLastRow();\n    this.navigateTo({\n      scrollIndex,\n      scrollType: null,\n      scrollColumn: columnToSelect,\n      focusIndex: scrollIndex,\n      focusColumn: columnToSelect\n    });\n  }\n  // result of keyboard event\n  onTabKeyDown(previous, keyboardEvent) {\n    const backwards = keyboardEvent.shiftKey;\n    const movedToNextCell = this.tabToNextCellCommon(previous, backwards, keyboardEvent);\n    if (movedToNextCell !== false) {\n      if (movedToNextCell) {\n        keyboardEvent.preventDefault();\n      } else if (movedToNextCell === null) {\n        this.focusService.allowFocusForNextGridCoreContainer(backwards);\n      }\n      return;\n    }\n    if (backwards) {\n      const { rowIndex, rowPinned } = previous.getRowPosition();\n      const firstRow = rowPinned ? rowIndex === 0 : rowIndex === this.pageBoundsService.getFirstRow();\n      if (firstRow) {\n        if (this.gos.get(\"headerHeight\") === 0 || this.focusService.isHeaderFocusSuppressed()) {\n          this.focusService.focusNextGridCoreContainer(true, true);\n        } else {\n          keyboardEvent.preventDefault();\n          this.focusService.focusPreviousFromFirstCell(keyboardEvent);\n        }\n      }\n    } else {\n      if (previous instanceof CellCtrl) {\n        previous.focusCell(true);\n      }\n      if (!backwards && this.focusService.focusOverlay(false) || this.focusService.focusNextGridCoreContainer(backwards)) {\n        keyboardEvent.preventDefault();\n      }\n    }\n  }\n  // comes from API\n  tabToNextCell(backwards, event) {\n    const focusedCell = this.focusService.getFocusedCell();\n    if (!focusedCell) {\n      return false;\n    }\n    let cellOrRow = this.getCellByPosition(focusedCell);\n    if (!cellOrRow) {\n      cellOrRow = this.rowRenderer.getRowByPosition(focusedCell);\n      if (!cellOrRow || !cellOrRow.isFullWidth()) {\n        return false;\n      }\n    }\n    return !!this.tabToNextCellCommon(cellOrRow, backwards, event);\n  }\n  tabToNextCellCommon(previous, backwards, event) {\n    let editing = previous.isEditing();\n    if (!editing && previous instanceof CellCtrl) {\n      const cell = previous;\n      const row = cell.getRowCtrl();\n      if (row) {\n        editing = row.isEditing();\n      }\n    }\n    let res;\n    if (editing) {\n      if (this.gos.get(\"editType\") === \"fullRow\") {\n        res = this.moveToNextEditingRow(previous, backwards, event);\n      } else {\n        res = this.moveToNextEditingCell(previous, backwards, event);\n      }\n    } else {\n      res = this.moveToNextCellNotEditing(previous, backwards);\n    }\n    if (res === null) {\n      return res;\n    }\n    return res || !!this.focusService.getFocusedHeader();\n  }\n  // returns null if no navigation should be performed\n  moveToNextEditingCell(previousCell, backwards, event = null) {\n    const previousPos = previousCell.getCellPosition();\n    previousCell.getGui().focus();\n    previousCell.stopEditing();\n    const nextCell = this.findNextCellToFocusOn(previousPos, backwards, true);\n    if (nextCell === false) {\n      return null;\n    }\n    if (nextCell == null) {\n      return false;\n    }\n    nextCell.startEditing(null, true, event);\n    nextCell.focusCell(false);\n    return true;\n  }\n  // returns null if no navigation should be performed\n  moveToNextEditingRow(previousCell, backwards, event = null) {\n    const previousPos = previousCell.getCellPosition();\n    const nextCell = this.findNextCellToFocusOn(previousPos, backwards, true);\n    if (nextCell === false) {\n      return null;\n    }\n    if (nextCell == null) {\n      return false;\n    }\n    const nextPos = nextCell.getCellPosition();\n    const previousEditable = this.isCellEditable(previousPos);\n    const nextEditable = this.isCellEditable(nextPos);\n    const rowsMatch = nextPos && previousPos.rowIndex === nextPos.rowIndex && previousPos.rowPinned === nextPos.rowPinned;\n    if (previousEditable) {\n      previousCell.setFocusOutOnEditor();\n    }\n    if (!rowsMatch) {\n      const pRow = previousCell.getRowCtrl();\n      pRow.stopEditing();\n      const nRow = nextCell.getRowCtrl();\n      nRow.startRowEditing(void 0, void 0, event);\n    }\n    if (nextEditable) {\n      nextCell.setFocusInOnEditor();\n      nextCell.focusCell();\n    } else {\n      nextCell.focusCell(true);\n    }\n    return true;\n  }\n  // returns null if no navigation should be performed\n  moveToNextCellNotEditing(previousCell, backwards) {\n    const displayedColumns = this.visibleColsService.getAllCols();\n    let cellPos;\n    if (previousCell instanceof RowCtrl) {\n      cellPos = {\n        ...previousCell.getRowPosition(),\n        column: backwards ? displayedColumns[0] : _last(displayedColumns)\n      };\n    } else {\n      cellPos = previousCell.getCellPosition();\n    }\n    const nextCell = this.findNextCellToFocusOn(cellPos, backwards, false);\n    if (nextCell === false) {\n      return null;\n    }\n    if (nextCell instanceof CellCtrl) {\n      nextCell.focusCell(true);\n    } else if (nextCell) {\n      return this.tryToFocusFullWidthRow(nextCell.getRowPosition(), backwards);\n    }\n    return _exists(nextCell);\n  }\n  /**\n   * called by the cell, when tab is pressed while editing.\n   * @return: RenderedCell when navigation successful, false if navigation should not be performed, otherwise null\n   */\n  findNextCellToFocusOn(previousPosition, backwards, startEditing) {\n    let nextPosition = previousPosition;\n    while (true) {\n      if (previousPosition !== nextPosition) {\n        previousPosition = nextPosition;\n      }\n      if (!backwards) {\n        nextPosition = this.getLastCellOfColSpan(nextPosition);\n      }\n      nextPosition = this.cellNavigationService.getNextTabbedCell(nextPosition, backwards);\n      const userFunc = this.gos.getCallback(\"tabToNextCell\");\n      if (_exists(userFunc)) {\n        const params = {\n          backwards,\n          editing: startEditing,\n          previousCellPosition: previousPosition,\n          nextCellPosition: nextPosition ? nextPosition : null\n        };\n        const userResult = userFunc(params);\n        if (userResult === true || userResult === null) {\n          if (userResult === null) {\n            _warnOnce(\n              \"Returning `null` from tabToNextCell is deprecated. Return `true` to stay on the current cell, or `false` to let the browser handle the tab behaviour.\"\n            );\n          }\n          nextPosition = previousPosition;\n        } else if (userResult === false) {\n          return false;\n        } else {\n          nextPosition = {\n            rowIndex: userResult.rowIndex,\n            column: userResult.column,\n            rowPinned: userResult.rowPinned\n          };\n        }\n      }\n      if (!nextPosition) {\n        return null;\n      }\n      if (nextPosition.rowIndex < 0) {\n        const headerLen = this.headerNavigationService.getHeaderRowCount();\n        this.focusService.focusHeaderPosition({\n          headerPosition: {\n            headerRowIndex: headerLen + nextPosition.rowIndex,\n            column: nextPosition.column\n          },\n          fromCell: true\n        });\n        return null;\n      }\n      const fullRowEdit = this.gos.get(\"editType\") === \"fullRow\";\n      if (startEditing && !fullRowEdit) {\n        const cellIsEditable = this.isCellEditable(nextPosition);\n        if (!cellIsEditable) {\n          continue;\n        }\n      }\n      this.ensureCellVisible(nextPosition);\n      const nextCell = this.getCellByPosition(nextPosition);\n      if (!nextCell) {\n        const row = this.rowRenderer.getRowByPosition(nextPosition);\n        if (!row || !row.isFullWidth() || startEditing) {\n          continue;\n        }\n        return row;\n      }\n      if (nextCell.isSuppressNavigable()) {\n        continue;\n      }\n      this.rangeService?.setRangeToCell(nextPosition);\n      return nextCell;\n    }\n  }\n  isCellEditable(cell) {\n    const rowNode = this.lookupRowNodeForCell(cell);\n    if (rowNode) {\n      return cell.column.isCellEditable(rowNode);\n    }\n    return false;\n  }\n  getCellByPosition(cellPosition) {\n    const rowCtrl = this.rowRenderer.getRowByPosition(cellPosition);\n    if (!rowCtrl) {\n      return null;\n    }\n    return rowCtrl.getCellCtrl(cellPosition.column);\n  }\n  lookupRowNodeForCell(cell) {\n    if (cell.rowPinned === \"top\") {\n      return this.pinnedRowModel.getPinnedTopRow(cell.rowIndex);\n    }\n    if (cell.rowPinned === \"bottom\") {\n      return this.pinnedRowModel.getPinnedBottomRow(cell.rowIndex);\n    }\n    return this.rowModel.getRow(cell.rowIndex);\n  }\n  // we use index for rows, but column object for columns, as the next column (by index) might not\n  // be visible (header grouping) so it's not reliable, so using the column object instead.\n  navigateToNextCell(event, key, currentCell, allowUserOverride) {\n    let nextCell = currentCell;\n    let hitEdgeOfGrid = false;\n    while (nextCell && (nextCell === currentCell || !this.isValidNavigateCell(nextCell))) {\n      if (this.gos.get(\"enableRtl\")) {\n        if (key === KeyCode.LEFT) {\n          nextCell = this.getLastCellOfColSpan(nextCell);\n        }\n      } else if (key === KeyCode.RIGHT) {\n        nextCell = this.getLastCellOfColSpan(nextCell);\n      }\n      nextCell = this.cellNavigationService.getNextCellToFocus(key, nextCell);\n      hitEdgeOfGrid = _missing(nextCell);\n    }\n    if (hitEdgeOfGrid && event && event.key === KeyCode.UP) {\n      nextCell = {\n        rowIndex: -1,\n        rowPinned: null,\n        column: currentCell.column\n      };\n    }\n    if (allowUserOverride) {\n      const userFunc = this.gos.getCallback(\"navigateToNextCell\");\n      if (_exists(userFunc)) {\n        const params = {\n          key,\n          previousCellPosition: currentCell,\n          nextCellPosition: nextCell ? nextCell : null,\n          event\n        };\n        const userCell = userFunc(params);\n        if (_exists(userCell)) {\n          nextCell = {\n            rowPinned: userCell.rowPinned,\n            rowIndex: userCell.rowIndex,\n            column: userCell.column\n          };\n        } else {\n          nextCell = null;\n        }\n      }\n    }\n    if (!nextCell) {\n      return;\n    }\n    if (nextCell.rowIndex < 0) {\n      const headerLen = this.headerNavigationService.getHeaderRowCount();\n      this.focusService.focusHeaderPosition({\n        headerPosition: { headerRowIndex: headerLen + nextCell.rowIndex, column: currentCell.column },\n        event: event || void 0,\n        fromCell: true\n      });\n      return;\n    }\n    const normalisedPosition = this.getNormalisedPosition(nextCell);\n    if (normalisedPosition) {\n      this.focusPosition(normalisedPosition);\n    } else {\n      this.tryToFocusFullWidthRow(nextCell);\n    }\n  }\n  getNormalisedPosition(cellPosition) {\n    this.ensureCellVisible(cellPosition);\n    const cellCtrl = this.getCellByPosition(cellPosition);\n    if (!cellCtrl) {\n      return null;\n    }\n    cellPosition = cellCtrl.getCellPosition();\n    this.ensureCellVisible(cellPosition);\n    return cellPosition;\n  }\n  tryToFocusFullWidthRow(position, backwards = false) {\n    const displayedColumns = this.visibleColsService.getAllCols();\n    const rowComp = this.rowRenderer.getRowByPosition(position);\n    if (!rowComp || !rowComp.isFullWidth()) {\n      return false;\n    }\n    const currentCellFocused = this.focusService.getFocusedCell();\n    const cellPosition = {\n      rowIndex: position.rowIndex,\n      rowPinned: position.rowPinned,\n      column: position.column || (backwards ? _last(displayedColumns) : displayedColumns[0])\n    };\n    this.focusPosition(cellPosition);\n    const fromBelow = currentCellFocused != null ? this.rowPositionUtils.before(cellPosition, currentCellFocused) : false;\n    this.eventService.dispatchEvent({\n      type: \"fullWidthRowFocused\",\n      rowIndex: cellPosition.rowIndex,\n      rowPinned: cellPosition.rowPinned,\n      column: cellPosition.column,\n      isFullWidthCell: true,\n      fromBelow\n    });\n    return true;\n  }\n  focusPosition(cellPosition) {\n    this.focusService.setFocusedCell({\n      rowIndex: cellPosition.rowIndex,\n      column: cellPosition.column,\n      rowPinned: cellPosition.rowPinned,\n      forceBrowserFocus: true\n    });\n    this.rangeService?.setRangeToCell(cellPosition);\n  }\n  isValidNavigateCell(cell) {\n    const rowNode = this.rowPositionUtils.getRowNode(cell);\n    return !!rowNode;\n  }\n  getLastCellOfColSpan(cell) {\n    const cellCtrl = this.getCellByPosition(cell);\n    if (!cellCtrl) {\n      return cell;\n    }\n    const colSpanningList = cellCtrl.getColSpanningList();\n    if (colSpanningList.length === 1) {\n      return cell;\n    }\n    return {\n      rowIndex: cell.rowIndex,\n      column: _last(colSpanningList),\n      rowPinned: cell.rowPinned\n    };\n  }\n  ensureCellVisible(gridCell) {\n    const isGroupStickyEnabled = this.gos.isGroupRowsSticky();\n    const rowNode = this.rowModel.getRow(gridCell.rowIndex);\n    const skipScrollToRow = isGroupStickyEnabled && rowNode?.sticky;\n    if (!skipScrollToRow && _missing(gridCell.rowPinned)) {\n      this.gridBodyCon.getScrollFeature().ensureIndexVisible(gridCell.rowIndex);\n    }\n    if (!gridCell.column.isPinned()) {\n      this.gridBodyCon.getScrollFeature().ensureColumnVisible(gridCell.column);\n    }\n  }\n};\n\n// community-modules/core/src/headerRendering/common/horizontalResizeService.ts\nvar HorizontalResizeService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"horizontalResizeService\";\n  }\n  wireBeans(beans) {\n    this.dragService = beans.dragService;\n    this.ctrlsService = beans.ctrlsService;\n  }\n  addResizeBar(params) {\n    const dragSource = {\n      dragStartPixels: params.dragStartPixels || 0,\n      eElement: params.eResizeBar,\n      onDragStart: this.onDragStart.bind(this, params),\n      onDragStop: this.onDragStop.bind(this, params),\n      onDragging: this.onDragging.bind(this, params),\n      includeTouch: true,\n      stopPropagationForTouch: true\n    };\n    this.dragService.addDragSource(dragSource);\n    const finishedWithResizeFunc = () => this.dragService.removeDragSource(dragSource);\n    return finishedWithResizeFunc;\n  }\n  onDragStart(params, mouseEvent) {\n    this.dragStartX = mouseEvent.clientX;\n    this.setResizeIcons();\n    const shiftKey = mouseEvent instanceof MouseEvent && mouseEvent.shiftKey === true;\n    params.onResizeStart(shiftKey);\n  }\n  setResizeIcons() {\n    const ctrl = this.ctrlsService.get(\"gridCtrl\");\n    ctrl.setResizeCursor(true);\n    ctrl.disableUserSelect(true);\n  }\n  onDragStop(params, mouseEvent) {\n    params.onResizeEnd(this.resizeAmount);\n    this.resetIcons();\n  }\n  resetIcons() {\n    const ctrl = this.ctrlsService.get(\"gridCtrl\");\n    ctrl.setResizeCursor(false);\n    ctrl.disableUserSelect(false);\n  }\n  onDragging(params, mouseEvent) {\n    this.resizeAmount = mouseEvent.clientX - this.dragStartX;\n    params.onResizing(this.resizeAmount);\n  }\n};\n\n// community-modules/core/src/headerRendering/cells/column/standardMenu.ts\nvar StandardMenuFactory = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"filterMenuFactory\";\n  }\n  wireBeans(beans) {\n    this.popupService = beans.popupService;\n    this.focusService = beans.focusService;\n    this.ctrlsService = beans.ctrlsService;\n    this.menuService = beans.menuService;\n  }\n  hideActiveMenu() {\n    if (this.hidePopup) {\n      this.hidePopup();\n    }\n  }\n  showMenuAfterMouseEvent(column, mouseEvent, containerType) {\n    this.showPopup(\n      column,\n      (eMenu) => {\n        this.popupService.positionPopupUnderMouseEvent({\n          column,\n          type: containerType,\n          mouseEvent,\n          ePopup: eMenu\n        });\n      },\n      containerType,\n      mouseEvent.target,\n      this.menuService.isLegacyMenuEnabled()\n    );\n  }\n  showMenuAfterButtonClick(column, eventSource, containerType) {\n    let multiplier = -1;\n    let alignSide = \"left\";\n    const isLegacyMenuEnabled = this.menuService.isLegacyMenuEnabled();\n    if (!isLegacyMenuEnabled && this.gos.get(\"enableRtl\")) {\n      multiplier = 1;\n      alignSide = \"right\";\n    }\n    const nudgeX = isLegacyMenuEnabled ? void 0 : 4 * multiplier;\n    const nudgeY = isLegacyMenuEnabled ? void 0 : 4;\n    this.showPopup(\n      column,\n      (eMenu) => {\n        this.popupService.positionPopupByComponent({\n          type: containerType,\n          eventSource,\n          ePopup: eMenu,\n          nudgeX,\n          nudgeY,\n          alignSide,\n          keepWithinBounds: true,\n          position: \"under\",\n          column\n        });\n      },\n      containerType,\n      eventSource,\n      isLegacyMenuEnabled\n    );\n  }\n  showPopup(column, positionCallback, containerType, eventSource, isLegacyMenuEnabled) {\n    const comp = column ? this.createBean(new FilterWrapperComp(column, \"COLUMN_MENU\")) : void 0;\n    this.activeMenu = comp;\n    if (!comp?.hasFilter() || !column) {\n      throw new Error(\"AG Grid - unable to show popup filter, filter instantiation failed\");\n    }\n    const eMenu = document.createElement(\"div\");\n    _setAriaRole(eMenu, \"presentation\");\n    eMenu.classList.add(\"ag-menu\");\n    if (!isLegacyMenuEnabled) {\n      eMenu.classList.add(\"ag-filter-menu\");\n    }\n    [this.tabListener] = this.addManagedElementListeners(eMenu, {\n      keydown: (e) => this.trapFocusWithin(e, eMenu)\n    });\n    eMenu.appendChild(comp?.getGui());\n    let hidePopup;\n    const afterGuiDetached = () => comp?.afterGuiDetached();\n    const anchorToElement = this.menuService.isColumnMenuAnchoringEnabled() ? eventSource ?? this.ctrlsService.getGridBodyCtrl().getGui() : void 0;\n    const closedCallback = (e) => {\n      column.setMenuVisible(false, \"contextMenu\");\n      const isKeyboardEvent = e instanceof KeyboardEvent;\n      if (this.tabListener) {\n        this.tabListener = this.tabListener();\n      }\n      if (isKeyboardEvent && eventSource && _isVisible(eventSource)) {\n        const focusableEl = this.focusService.findTabbableParent(eventSource);\n        if (focusableEl) {\n          focusableEl.focus();\n        }\n      }\n      afterGuiDetached();\n      this.destroyBean(this.activeMenu);\n      this.dispatchVisibleChangedEvent(false, containerType, column);\n    };\n    const translate = this.localeService.getLocaleTextFunc();\n    const ariaLabel = isLegacyMenuEnabled && containerType !== \"columnFilter\" ? translate(\"ariaLabelColumnMenu\", \"Column Menu\") : translate(\"ariaLabelColumnFilter\", \"Column Filter\");\n    const addPopupRes = this.popupService.addPopup({\n      modal: true,\n      eChild: eMenu,\n      closeOnEsc: true,\n      closedCallback,\n      positionCallback: () => positionCallback(eMenu),\n      anchorToElement,\n      ariaLabel\n    });\n    if (addPopupRes) {\n      this.hidePopup = hidePopup = addPopupRes.hideFunc;\n    }\n    comp.afterInit().then(() => {\n      positionCallback(eMenu);\n      comp.afterGuiAttached({ container: containerType, hidePopup });\n    });\n    column.setMenuVisible(true, \"contextMenu\");\n    this.dispatchVisibleChangedEvent(true, containerType, column);\n  }\n  trapFocusWithin(e, menu) {\n    if (e.key !== KeyCode.TAB || e.defaultPrevented || this.focusService.findNextFocusableElement(menu, false, e.shiftKey)) {\n      return;\n    }\n    e.preventDefault();\n    this.focusService.focusInto(menu, e.shiftKey);\n  }\n  dispatchVisibleChangedEvent(visible, containerType, column) {\n    this.eventService.dispatchEvent({\n      type: \"columnMenuVisibleChanged\",\n      visible,\n      switchingTab: false,\n      key: containerType,\n      column: column ?? null\n    });\n  }\n  isMenuEnabled(column) {\n    return column.isFilterAllowed() && (column.getColDef().menuTabs ?? [\"filterMenuTab\"]).includes(\"filterMenuTab\");\n  }\n  showMenuAfterContextMenuEvent() {\n  }\n  destroy() {\n    this.destroyBean(this.activeMenu);\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/misc/resizeObserverService.ts\nvar DEBOUNCE_DELAY = 50;\nvar ResizeObserverService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"resizeObserverService\";\n    this.polyfillFunctions = [];\n  }\n  observeResize(element, callback) {\n    const win = this.gos.getWindow();\n    const useBrowserResizeObserver = () => {\n      const resizeObserver = new win.ResizeObserver(callback);\n      resizeObserver.observe(element);\n      return () => resizeObserver.disconnect();\n    };\n    const usePolyfill = () => {\n      let widthLastTime = element?.clientWidth ?? 0;\n      let heightLastTime = element?.clientHeight ?? 0;\n      let running = true;\n      const periodicallyCheckWidthAndHeight = () => {\n        if (running) {\n          const newWidth = element?.clientWidth ?? 0;\n          const newHeight = element?.clientHeight ?? 0;\n          const changed = newWidth !== widthLastTime || newHeight !== heightLastTime;\n          if (changed) {\n            widthLastTime = newWidth;\n            heightLastTime = newHeight;\n            callback();\n          }\n          this.doNextPolyfillTurn(periodicallyCheckWidthAndHeight);\n        }\n      };\n      periodicallyCheckWidthAndHeight();\n      return () => running = false;\n    };\n    const suppressResize = this.gos.get(\"suppressBrowserResizeObserver\");\n    const resizeObserverExists = !!win.ResizeObserver;\n    if (resizeObserverExists && !suppressResize) {\n      return useBrowserResizeObserver();\n    }\n    return this.getFrameworkOverrides().wrapIncoming(() => usePolyfill(), \"resize-observer\");\n  }\n  doNextPolyfillTurn(func) {\n    this.polyfillFunctions.push(func);\n    this.schedulePolyfill();\n  }\n  schedulePolyfill() {\n    if (this.polyfillScheduled) {\n      return;\n    }\n    const executeAllFuncs = () => {\n      const funcs = this.polyfillFunctions;\n      this.polyfillScheduled = false;\n      this.polyfillFunctions = [];\n      funcs.forEach((f) => f());\n    };\n    this.polyfillScheduled = true;\n    window.setTimeout(executeAllFuncs, DEBOUNCE_DELAY);\n  }\n};\n\n// community-modules/core/src/misc/animationFrameService.ts\nvar AnimationFrameService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"animationFrameService\";\n    // p1 and p2 are create tasks are to do with row and cell creation.\n    // for them we want to execute according to row order, so we use\n    // TaskItem so we know what index the item is for.\n    this.createTasksP1 = { list: [], sorted: false };\n    // eg drawing back-ground of rows\n    this.createTasksP2 = { list: [], sorted: false };\n    // eg cell renderers, adding hover functionality\n    // destroy tasks are to do with row removal. they are done after row creation as the user will need to see new\n    // rows first (as blank is scrolled into view), when we remove the old rows (no longer in view) is not as\n    // important.\n    this.destroyTasks = [];\n    this.ticking = false;\n    // we need to know direction of scroll, to build up rows in the direction of\n    // the scroll. eg if user scrolls down, we extend the rows by building down.\n    this.scrollGoingDown = true;\n    this.lastPage = 0;\n    this.lastScrollTop = 0;\n    this.taskCount = 0;\n    this.cancelledTasks = /* @__PURE__ */ new Set();\n  }\n  wireBeans(beans) {\n    this.ctrlsService = beans.ctrlsService;\n    this.paginationService = beans.paginationService;\n  }\n  setScrollTop(scrollTop) {\n    const isPaginationActive = this.gos.get(\"pagination\");\n    this.scrollGoingDown = scrollTop >= this.lastScrollTop;\n    if (isPaginationActive && scrollTop === 0) {\n      const currentPage = this.paginationService?.getCurrentPage() ?? 0;\n      if (currentPage !== this.lastPage) {\n        this.lastPage = currentPage;\n        this.scrollGoingDown = true;\n      }\n    }\n    this.lastScrollTop = scrollTop;\n  }\n  postConstruct() {\n    this.useAnimationFrame = !this.gos.get(\"suppressAnimationFrame\");\n  }\n  isOn() {\n    return this.useAnimationFrame;\n  }\n  // this method is for our AG Grid sanity only - if animation frames are turned off,\n  // then no place in the code should be looking to add any work to be done in animation\n  // frames. this stops bugs - where some code is asking for a frame to be executed\n  // when it should not.\n  verifyAnimationFrameOn(methodName) {\n    if (this.useAnimationFrame === false) {\n      _warnOnce(`AnimationFrameService.${methodName} called but animation frames are off`);\n    }\n  }\n  createTask(task, index, list) {\n    this.verifyAnimationFrameOn(list);\n    const taskItem = { task, index, createOrder: ++this.taskCount };\n    this.addTaskToList(this[list], taskItem);\n    this.schedule();\n  }\n  cancelTask(task) {\n    this.cancelledTasks.add(task);\n  }\n  addTaskToList(taskList, task) {\n    taskList.list.push(task);\n    taskList.sorted = false;\n  }\n  sortTaskList(taskList) {\n    if (taskList.sorted) {\n      return;\n    }\n    const sortDirection = this.scrollGoingDown ? 1 : -1;\n    taskList.list.sort(\n      (a, b) => a.index !== b.index ? sortDirection * (b.index - a.index) : b.createOrder - a.createOrder\n    );\n    taskList.sorted = true;\n  }\n  addDestroyTask(task) {\n    this.verifyAnimationFrameOn(\"createTasksP3\");\n    this.destroyTasks.push(task);\n    this.schedule();\n  }\n  executeFrame(millis) {\n    this.verifyAnimationFrameOn(\"executeFrame\");\n    const p1TaskList = this.createTasksP1;\n    const p1Tasks = p1TaskList.list;\n    const p2TaskList = this.createTasksP2;\n    const p2Tasks = p2TaskList.list;\n    const destroyTasks = this.destroyTasks;\n    const frameStart = (/* @__PURE__ */ new Date()).getTime();\n    let duration = (/* @__PURE__ */ new Date()).getTime() - frameStart;\n    const noMaxMillis = millis <= 0;\n    const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    while (noMaxMillis || duration < millis) {\n      const gridBodyDidSomething = gridBodyCon.getScrollFeature().scrollGridIfNeeded();\n      if (!gridBodyDidSomething) {\n        let task;\n        if (p1Tasks.length) {\n          this.sortTaskList(p1TaskList);\n          task = p1Tasks.pop().task;\n        } else if (p2Tasks.length) {\n          this.sortTaskList(p2TaskList);\n          task = p2Tasks.pop().task;\n        } else if (destroyTasks.length) {\n          task = destroyTasks.pop();\n        } else {\n          this.cancelledTasks.clear();\n          break;\n        }\n        if (!this.cancelledTasks.has(task)) {\n          task();\n        }\n      }\n      duration = (/* @__PURE__ */ new Date()).getTime() - frameStart;\n    }\n    if (p1Tasks.length || p2Tasks.length || destroyTasks.length) {\n      this.requestFrame();\n    } else {\n      this.stopTicking();\n    }\n  }\n  stopTicking() {\n    this.ticking = false;\n  }\n  flushAllFrames() {\n    if (!this.useAnimationFrame) {\n      return;\n    }\n    this.executeFrame(-1);\n  }\n  schedule() {\n    if (!this.useAnimationFrame) {\n      return;\n    }\n    if (!this.ticking) {\n      this.ticking = true;\n      this.requestFrame();\n    }\n  }\n  requestFrame() {\n    const callback = this.executeFrame.bind(this, 60);\n    this.requestAnimationFrame(callback);\n  }\n  requestAnimationFrame(callback) {\n    const win = this.gos.getWindow();\n    if (win.requestAnimationFrame) {\n      win.requestAnimationFrame(callback);\n    } else if (win.webkitRequestAnimationFrame) {\n      win.webkitRequestAnimationFrame(callback);\n    } else {\n      win.setTimeout(callback, 0);\n    }\n  }\n  isQueueEmpty() {\n    return !this.ticking;\n  }\n  // a debounce utility used for parts of the app involved with rendering.\n  // the advantage over normal debounce is the client can call flushAllFrames()\n  // to make sure all rendering is complete. we don't wait any milliseconds,\n  // as this is intended to batch calls in one VM turn.\n  debounce(func) {\n    let pending = false;\n    return () => {\n      if (!this.isOn()) {\n        window.setTimeout(func, 0);\n        return;\n      }\n      if (pending) {\n        return;\n      }\n      pending = true;\n      this.addDestroyTask(() => {\n        pending = false;\n        func();\n      });\n    };\n  }\n};\n\n// community-modules/core/src/interfaces/iClientSideRowModel.ts\nvar ClientSideRowModelSteps = /* @__PURE__ */ ((ClientSideRowModelSteps2) => {\n  ClientSideRowModelSteps2[\"EVERYTHING\"] = \"group\";\n  ClientSideRowModelSteps2[\"FILTER\"] = \"filter\";\n  ClientSideRowModelSteps2[\"SORT\"] = \"sort\";\n  ClientSideRowModelSteps2[\"MAP\"] = \"map\";\n  ClientSideRowModelSteps2[\"AGGREGATE\"] = \"aggregate\";\n  ClientSideRowModelSteps2[\"FILTER_AGGREGATES\"] = \"filter_aggregates\";\n  ClientSideRowModelSteps2[\"PIVOT\"] = \"pivot\";\n  ClientSideRowModelSteps2[\"NOTHING\"] = \"nothing\";\n  return ClientSideRowModelSteps2;\n})(ClientSideRowModelSteps || {});\n\n// community-modules/core/src/misc/expansionService.ts\nvar ExpansionService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"expansionService\";\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n  }\n  postConstruct() {\n    this.isClientSideRowModel = this.rowModel.getType() === \"clientSide\";\n  }\n  expandRows(rowIds) {\n    if (!this.isClientSideRowModel) {\n      return;\n    }\n    const rowIdSet = new Set(rowIds);\n    this.rowModel.forEachNode((node) => {\n      if (node.id && rowIdSet.has(node.id)) {\n        node.expanded = true;\n      }\n    });\n    this.onGroupExpandedOrCollapsed();\n  }\n  getExpandedRows() {\n    const expandedRows = [];\n    this.rowModel.forEachNode(({ expanded, id }) => {\n      if (expanded && id) {\n        expandedRows.push(id);\n      }\n    });\n    return expandedRows;\n  }\n  expandAll(value) {\n    if (!this.isClientSideRowModel) {\n      return;\n    }\n    this.rowModel.expandOrCollapseAll(value);\n  }\n  setRowNodeExpanded(rowNode, expanded, expandParents, forceSync) {\n    if (rowNode) {\n      if (expandParents && rowNode.parent && rowNode.parent.level !== -1) {\n        this.setRowNodeExpanded(rowNode.parent, expanded, expandParents, forceSync);\n      }\n      rowNode.setExpanded(expanded, void 0, forceSync);\n    }\n  }\n  onGroupExpandedOrCollapsed() {\n    if (!this.isClientSideRowModel) {\n      return;\n    }\n    this.rowModel.refreshModel({ step: \"map\" /* MAP */ });\n  }\n};\n\n// community-modules/core/src/misc/menuService.ts\nvar MenuService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"menuService\";\n  }\n  wireBeans(beans) {\n    this.filterMenuFactory = beans.filterMenuFactory;\n    this.ctrlsService = beans.ctrlsService;\n    this.animationFrameService = beans.animationFrameService;\n    this.filterManager = beans.filterManager;\n    this.rowRenderer = beans.rowRenderer;\n    this.columnChooserFactory = beans.columnChooserFactory;\n    this.contextMenuFactory = beans.contextMenuFactory;\n    this.enterpriseMenuFactory = beans.enterpriseMenuFactory;\n  }\n  postConstruct() {\n    this.activeMenuFactory = this.enterpriseMenuFactory ?? this.filterMenuFactory;\n  }\n  showColumnMenu(params) {\n    this.showColumnMenuCommon(this.activeMenuFactory, params, \"columnMenu\");\n  }\n  showFilterMenu(params) {\n    const menuFactory = this.enterpriseMenuFactory && this.isLegacyMenuEnabled() ? this.enterpriseMenuFactory : this.filterMenuFactory;\n    this.showColumnMenuCommon(menuFactory, params, params.containerType, true);\n  }\n  showHeaderContextMenu(column, mouseEvent, touchEvent) {\n    this.activeMenuFactory.showMenuAfterContextMenuEvent(column, mouseEvent, touchEvent);\n  }\n  getContextMenuPosition(rowNode, column) {\n    const rowCtrl = this.getRowCtrl(rowNode);\n    const eGui = this.getCellGui(rowCtrl, column);\n    if (!eGui) {\n      if (rowCtrl) {\n        return { x: 0, y: rowCtrl.getRowYPosition() };\n      }\n      return { x: 0, y: 0 };\n    }\n    const rect = eGui.getBoundingClientRect();\n    return {\n      x: rect.x + rect.width / 2,\n      y: rect.y + rect.height / 2\n    };\n  }\n  showContextMenu(params) {\n    const { rowNode } = params;\n    const column = params.column;\n    let { anchorToElement, value } = params;\n    if (rowNode && column && value == null) {\n      value = rowNode.getValueFromValueService(column);\n    }\n    if (anchorToElement == null) {\n      anchorToElement = this.getContextMenuAnchorElement(rowNode, column);\n    }\n    this.contextMenuFactory?.onContextMenu(\n      params.mouseEvent ?? null,\n      params.touchEvent ?? null,\n      rowNode ?? null,\n      column ?? null,\n      value,\n      anchorToElement\n    );\n  }\n  showColumnChooser(params) {\n    this.columnChooserFactory?.showColumnChooser(params);\n  }\n  hidePopupMenu() {\n    this.contextMenuFactory?.hideActiveMenu();\n    this.activeMenuFactory.hideActiveMenu();\n  }\n  hideColumnChooser() {\n    this.columnChooserFactory?.hideActiveColumnChooser();\n  }\n  isColumnMenuInHeaderEnabled(column) {\n    const { suppressMenu, suppressHeaderMenuButton } = column.getColDef();\n    const isSuppressMenuButton = suppressHeaderMenuButton ?? suppressMenu;\n    return !isSuppressMenuButton && this.activeMenuFactory.isMenuEnabled(column) && (this.isLegacyMenuEnabled() || !!this.enterpriseMenuFactory);\n  }\n  isFilterMenuInHeaderEnabled(column) {\n    return !column.getColDef().suppressHeaderFilterButton && !!this.filterManager?.isFilterAllowed(column);\n  }\n  isHeaderContextMenuEnabled(column) {\n    return !column?.getColDef().suppressHeaderContextMenu && this.getColumnMenuType() === \"new\";\n  }\n  isHeaderMenuButtonAlwaysShowEnabled() {\n    return this.isSuppressMenuHide();\n  }\n  isHeaderMenuButtonEnabled() {\n    const menuHides = !this.isSuppressMenuHide();\n    const onIpadAndMenuHides = _isIOSUserAgent() && menuHides;\n    return !onIpadAndMenuHides;\n  }\n  isHeaderFilterButtonEnabled(column) {\n    return this.isFilterMenuInHeaderEnabled(column) && !this.isLegacyMenuEnabled() && !this.isFloatingFilterButtonDisplayed(column);\n  }\n  isFilterMenuItemEnabled(column) {\n    return !!this.filterManager?.isFilterAllowed(column) && !this.isLegacyMenuEnabled() && !this.isFilterMenuInHeaderEnabled(column) && !this.isFloatingFilterButtonDisplayed(column);\n  }\n  isColumnMenuAnchoringEnabled() {\n    return !this.isLegacyMenuEnabled();\n  }\n  areAdditionalColumnMenuItemsEnabled() {\n    return this.getColumnMenuType() === \"new\";\n  }\n  isLegacyMenuEnabled() {\n    return this.getColumnMenuType() === \"legacy\";\n  }\n  isFloatingFilterButtonEnabled(column) {\n    const colDef = column.getColDef();\n    const legacySuppressFilterButton = colDef.floatingFilterComponentParams?.suppressFilterButton;\n    if (legacySuppressFilterButton != null) {\n      _warnOnce(\n        `As of v31.1, 'colDef.floatingFilterComponentParams.suppressFilterButton' is deprecated. Use 'colDef.suppressFloatingFilterButton' instead.`\n      );\n    }\n    return colDef.suppressFloatingFilterButton == null ? !legacySuppressFilterButton : !colDef.suppressFloatingFilterButton;\n  }\n  getColumnMenuType() {\n    return this.gos.get(\"columnMenu\");\n  }\n  isFloatingFilterButtonDisplayed(column) {\n    return !!column.getColDef().floatingFilter && this.isFloatingFilterButtonEnabled(column);\n  }\n  isSuppressMenuHide() {\n    const suppressMenuHide = this.gos.get(\"suppressMenuHide\");\n    if (this.isLegacyMenuEnabled()) {\n      return this.gos.exists(\"suppressMenuHide\") ? suppressMenuHide : false;\n    }\n    return suppressMenuHide;\n  }\n  showColumnMenuCommon(menuFactory, params, containerType, filtersOnly) {\n    const { positionBy } = params;\n    const column = params.column;\n    if (positionBy === \"button\") {\n      const { buttonElement } = params;\n      menuFactory.showMenuAfterButtonClick(column, buttonElement, containerType, filtersOnly);\n    } else if (positionBy === \"mouse\") {\n      const { mouseEvent } = params;\n      menuFactory.showMenuAfterMouseEvent(column, mouseEvent, containerType, filtersOnly);\n    } else if (column) {\n      this.ctrlsService.getGridBodyCtrl().getScrollFeature().ensureColumnVisible(column, \"auto\");\n      this.animationFrameService.requestAnimationFrame(() => {\n        const headerCellCtrl = this.ctrlsService.getHeaderRowContainerCtrl(column.getPinned())?.getHeaderCtrlForColumn(column);\n        if (headerCellCtrl) {\n          menuFactory.showMenuAfterButtonClick(\n            column,\n            headerCellCtrl.getAnchorElementForMenu(filtersOnly),\n            containerType,\n            true\n          );\n        }\n      });\n    }\n  }\n  getRowCtrl(rowNode) {\n    const { rowIndex, rowPinned } = rowNode || {};\n    if (rowIndex == null) {\n      return;\n    }\n    return this.rowRenderer.getRowByPosition({ rowIndex, rowPinned }) || void 0;\n  }\n  getCellGui(rowCtrl, column) {\n    if (!rowCtrl || !column) {\n      return;\n    }\n    const cellCtrl = rowCtrl.getCellCtrl(column);\n    return cellCtrl?.getGui() || void 0;\n  }\n  getContextMenuAnchorElement(rowNode, column) {\n    const gridBodyEl = this.ctrlsService.getGridBodyCtrl().getGridBodyElement();\n    const rowCtrl = this.getRowCtrl(rowNode);\n    if (!rowCtrl) {\n      return gridBodyEl;\n    }\n    const cellGui = this.getCellGui(rowCtrl, column);\n    if (cellGui) {\n      return cellGui;\n    }\n    if (rowCtrl.isFullWidth()) {\n      return rowCtrl.getFullWidthElement();\n    }\n    return gridBodyEl;\n  }\n};\n\n// community-modules/core/src/widgets/agInputTextArea.ts\nvar AgInputTextArea = class extends AgAbstractInputField {\n  constructor(config) {\n    super(config, \"ag-text-area\", null, \"textarea\");\n  }\n  setValue(value, silent) {\n    const ret = super.setValue(value, silent);\n    this.eInput.value = value;\n    return ret;\n  }\n  setCols(cols) {\n    this.eInput.cols = cols;\n    return this;\n  }\n  setRows(rows) {\n    this.eInput.rows = rows;\n    return this;\n  }\n};\nvar AgInputTextAreaSelector = {\n  selector: \"AG-INPUT-TEXT-AREA\",\n  component: AgInputTextArea\n};\n\n// community-modules/core/src/edit/cellEditors/largeTextCellEditor.ts\nvar LargeTextCellEditor = class extends PopupComponent {\n  constructor() {\n    super(\n      /* html */\n      `<div class=\"ag-large-text\">\n        <ag-input-text-area data-ref=\"eTextArea\" class=\"ag-large-text-input\"></ag-input-text-area>\n        </div>`,\n      [AgInputTextAreaSelector]\n    );\n    this.eTextArea = RefPlaceholder;\n  }\n  init(params) {\n    this.params = params;\n    this.focusAfterAttached = params.cellStartedEdit;\n    this.eTextArea.setMaxLength(params.maxLength || 200).setCols(params.cols || 60).setRows(params.rows || 10);\n    if (_exists(params.value, true)) {\n      this.eTextArea.setValue(params.value.toString(), true);\n    }\n    this.addGuiEventListener(\"keydown\", this.onKeyDown.bind(this));\n    this.activateTabIndex();\n  }\n  onKeyDown(event) {\n    const key = event.key;\n    if (key === KeyCode.LEFT || key === KeyCode.UP || key === KeyCode.RIGHT || key === KeyCode.DOWN || event.shiftKey && key === KeyCode.ENTER) {\n      event.stopPropagation();\n    }\n  }\n  afterGuiAttached() {\n    const translate = this.localeService.getLocaleTextFunc();\n    this.eTextArea.setInputAriaLabel(translate(\"ariaInputEditor\", \"Input Editor\"));\n    if (this.focusAfterAttached) {\n      this.eTextArea.getFocusableElement().focus();\n    }\n  }\n  getValue() {\n    const value = this.eTextArea.getValue();\n    if (!_exists(value) && !_exists(this.params.value)) {\n      return this.params.value;\n    }\n    return this.params.parseValue(value);\n  }\n};\n\n// community-modules/core/src/edit/cellEditors/popupEditorWrapper.ts\nvar PopupEditorWrapper = class extends PopupComponent {\n  constructor(params) {\n    super(\n      /* html */\n      `<div class=\"ag-popup-editor\" tabindex=\"-1\"/>`\n    );\n    this.params = params;\n  }\n  postConstruct() {\n    this.gos.setDomData(this.getGui(), \"popupEditorWrapper\", true);\n    this.addKeyDownListener();\n  }\n  addKeyDownListener() {\n    const eGui = this.getGui();\n    const params = this.params;\n    const listener = (event) => {\n      if (!_isUserSuppressingKeyboardEvent(this.gos, event, params.node, params.column, true)) {\n        params.onKeyDown(event);\n      }\n    };\n    this.addManagedElementListeners(eGui, { keydown: listener });\n  }\n};\n\n// community-modules/core/src/edit/cellEditors/selectCellEditor.ts\nvar SelectCellEditor = class extends PopupComponent {\n  constructor() {\n    super(\n      /* html */\n      `<div class=\"ag-cell-edit-wrapper\">\n                <ag-select class=\"ag-cell-editor\" data-ref=\"eSelect\"></ag-select>\n            </div>`,\n      [AgSelectSelector]\n    );\n    this.eSelect = RefPlaceholder;\n    this.startedByEnter = false;\n  }\n  wireBeans(beans) {\n    this.valueService = beans.valueService;\n  }\n  init(params) {\n    this.focusAfterAttached = params.cellStartedEdit;\n    const { eSelect, valueService, gos } = this;\n    const { values, value, eventKey } = params;\n    if (_missing(values)) {\n      _warnOnce(\"no values found for select cellEditor\");\n      return;\n    }\n    this.startedByEnter = eventKey != null ? eventKey === KeyCode.ENTER : false;\n    let hasValue = false;\n    values.forEach((currentValue) => {\n      const option = { value: currentValue };\n      const valueFormatted = valueService.formatValue(params.column, null, currentValue);\n      const valueFormattedExits = valueFormatted !== null && valueFormatted !== void 0;\n      option.text = valueFormattedExits ? valueFormatted : currentValue;\n      eSelect.addOption(option);\n      hasValue = hasValue || value === currentValue;\n    });\n    if (hasValue) {\n      eSelect.setValue(params.value, true);\n    } else if (params.values.length) {\n      eSelect.setValue(params.values[0], true);\n    }\n    const { valueListGap, valueListMaxWidth, valueListMaxHeight } = params;\n    if (valueListGap != null) {\n      eSelect.setPickerGap(valueListGap);\n    }\n    if (valueListMaxHeight != null) {\n      eSelect.setPickerMaxHeight(valueListMaxHeight);\n    }\n    if (valueListMaxWidth != null) {\n      eSelect.setPickerMaxWidth(valueListMaxWidth);\n    }\n    if (gos.get(\"editType\") !== \"fullRow\") {\n      this.addManagedListeners(this.eSelect, { selectedItem: () => params.stopEditing() });\n    }\n  }\n  afterGuiAttached() {\n    if (this.focusAfterAttached) {\n      this.eSelect.getFocusableElement().focus();\n    }\n    if (this.startedByEnter) {\n      setTimeout(() => {\n        if (this.isAlive()) {\n          this.eSelect.showPicker();\n        }\n      });\n    }\n  }\n  focusIn() {\n    this.eSelect.getFocusableElement().focus();\n  }\n  getValue() {\n    return this.eSelect.getValue();\n  }\n  isPopup() {\n    return false;\n  }\n};\n\n// community-modules/core/src/edit/cellEditors/simpleCellEditor.ts\nvar SimpleCellEditor = class extends PopupComponent {\n  constructor(cellEditorInput) {\n    super(\n      /* html */\n      `\n            <div class=\"ag-cell-edit-wrapper\">\n                ${cellEditorInput.getTemplate()}\n            </div>`,\n      cellEditorInput.getAgComponents()\n    );\n    this.cellEditorInput = cellEditorInput;\n    this.eInput = RefPlaceholder;\n  }\n  init(params) {\n    this.params = params;\n    const eInput = this.eInput;\n    this.cellEditorInput.init(eInput, params);\n    let startValue;\n    if (params.cellStartedEdit) {\n      this.focusAfterAttached = true;\n      const eventKey = params.eventKey;\n      if (eventKey === KeyCode.BACKSPACE || params.eventKey === KeyCode.DELETE) {\n        startValue = \"\";\n      } else if (eventKey && eventKey.length === 1) {\n        startValue = eventKey;\n      } else {\n        startValue = this.cellEditorInput.getStartValue();\n        if (eventKey !== KeyCode.F2) {\n          this.highlightAllOnFocus = true;\n        }\n      }\n    } else {\n      this.focusAfterAttached = false;\n      startValue = this.cellEditorInput.getStartValue();\n    }\n    if (startValue != null) {\n      eInput.setStartValue(startValue);\n    }\n    this.addManagedElementListeners(eInput.getGui(), {\n      keydown: (event) => {\n        const { key } = event;\n        if (key === KeyCode.PAGE_UP || key === KeyCode.PAGE_DOWN) {\n          event.preventDefault();\n        }\n      }\n    });\n  }\n  afterGuiAttached() {\n    const translate = this.localeService.getLocaleTextFunc();\n    const eInput = this.eInput;\n    eInput.setInputAriaLabel(translate(\"ariaInputEditor\", \"Input Editor\"));\n    if (!this.focusAfterAttached) {\n      return;\n    }\n    if (!_isBrowserSafari()) {\n      eInput.getFocusableElement().focus();\n    }\n    const inputEl = eInput.getInputElement();\n    if (this.highlightAllOnFocus) {\n      inputEl.select();\n    } else {\n      this.cellEditorInput.setCaret?.();\n    }\n  }\n  // gets called when tabbing through cells and in full row edit mode\n  focusIn() {\n    const eInput = this.eInput;\n    const focusEl = eInput.getFocusableElement();\n    const inputEl = eInput.getInputElement();\n    focusEl.focus();\n    inputEl.select();\n  }\n  getValue() {\n    return this.cellEditorInput.getValue();\n  }\n  isPopup() {\n    return false;\n  }\n};\n\n// community-modules/core/src/edit/cellEditors/textCellEditor.ts\nvar TextCellEditorInput = class {\n  getTemplate() {\n    return (\n      /* html */\n      `<ag-input-text-field class=\"ag-cell-editor\" data-ref=\"eInput\"></ag-input-text-field>`\n    );\n  }\n  getAgComponents() {\n    return [AgInputTextFieldSelector];\n  }\n  init(eInput, params) {\n    this.eInput = eInput;\n    this.params = params;\n    if (params.maxLength != null) {\n      eInput.setMaxLength(params.maxLength);\n    }\n  }\n  getValue() {\n    const value = this.eInput.getValue();\n    if (!_exists(value) && !_exists(this.params.value)) {\n      return this.params.value;\n    }\n    return this.params.parseValue(value);\n  }\n  getStartValue() {\n    const formatValue = this.params.useFormatter || this.params.column.getColDef().refData;\n    return formatValue ? this.params.formatValue(this.params.value) : this.params.value;\n  }\n  setCaret() {\n    const value = this.eInput.getValue();\n    const len = _exists(value) && value.length || 0;\n    if (len) {\n      this.eInput.getInputElement().setSelectionRange(len, len);\n    }\n  }\n};\nvar TextCellEditor = class extends SimpleCellEditor {\n  constructor() {\n    super(new TextCellEditorInput());\n  }\n};\n\n// community-modules/core/src/edit/cellEditors/numberCellEditor.ts\nvar NumberCellEditorInput = class {\n  getTemplate() {\n    return (\n      /* html */\n      `<ag-input-number-field class=\"ag-cell-editor\" data-ref=\"eInput\"></ag-input-number-field>`\n    );\n  }\n  getAgComponents() {\n    return [AgInputNumberFieldSelector];\n  }\n  init(eInput, params) {\n    this.eInput = eInput;\n    this.params = params;\n    if (params.max != null) {\n      eInput.setMax(params.max);\n    }\n    if (params.min != null) {\n      eInput.setMin(params.min);\n    }\n    if (params.precision != null) {\n      eInput.setPrecision(params.precision);\n    }\n    if (params.step != null) {\n      eInput.setStep(params.step);\n    }\n    const inputEl = eInput.getInputElement();\n    if (params.preventStepping) {\n      eInput.addManagedElementListeners(inputEl, { keydown: this.preventStepping });\n    } else if (params.showStepperButtons) {\n      inputEl.classList.add(\"ag-number-field-input-stepper\");\n    }\n  }\n  preventStepping(e) {\n    if (e.key === KeyCode.UP || e.key === KeyCode.DOWN) {\n      e.preventDefault();\n    }\n  }\n  getValue() {\n    const value = this.eInput.getValue();\n    if (!_exists(value) && !_exists(this.params.value)) {\n      return this.params.value;\n    }\n    let parsedValue = this.params.parseValue(value);\n    if (parsedValue == null) {\n      return parsedValue;\n    }\n    if (typeof parsedValue === \"string\") {\n      if (parsedValue === \"\") {\n        return null;\n      }\n      parsedValue = Number(parsedValue);\n    }\n    return isNaN(parsedValue) ? null : parsedValue;\n  }\n  getStartValue() {\n    return this.params.value;\n  }\n  setCaret() {\n    if (_isBrowserSafari()) {\n      this.eInput.getInputElement().focus({ preventScroll: true });\n    }\n  }\n};\nvar NumberCellEditor = class extends SimpleCellEditor {\n  constructor() {\n    super(new NumberCellEditorInput());\n  }\n};\n\n// community-modules/core/src/widgets/agInputDateField.ts\nvar AgInputDateField = class extends AgInputTextField {\n  constructor(config) {\n    super(config, \"ag-date-field\", \"date\");\n  }\n  postConstruct() {\n    super.postConstruct();\n    const usingSafari = _isBrowserSafari();\n    this.addManagedListeners(this.eInput, {\n      wheel: this.onWheel.bind(this),\n      mousedown: () => {\n        if (this.isDisabled() || usingSafari) {\n          return;\n        }\n        this.eInput.focus();\n      }\n    });\n    this.eInput.step = \"any\";\n  }\n  onWheel(e) {\n    if (this.gos.getActiveDomElement() === this.eInput) {\n      e.preventDefault();\n    }\n  }\n  setMin(minDate) {\n    const min = minDate instanceof Date ? _serialiseDate(minDate ?? null, false) ?? void 0 : minDate;\n    if (this.min === min) {\n      return this;\n    }\n    this.min = min;\n    _addOrRemoveAttribute(this.eInput, \"min\", min);\n    return this;\n  }\n  setMax(maxDate) {\n    const max = maxDate instanceof Date ? _serialiseDate(maxDate ?? null, false) ?? void 0 : maxDate;\n    if (this.max === max) {\n      return this;\n    }\n    this.max = max;\n    _addOrRemoveAttribute(this.eInput, \"max\", max);\n    return this;\n  }\n  setStep(step) {\n    if (this.step === step) {\n      return this;\n    }\n    this.step = step;\n    _addOrRemoveAttribute(this.eInput, \"step\", step);\n    return this;\n  }\n  getDate() {\n    if (!this.eInput.validity.valid) {\n      return void 0;\n    }\n    return _parseDateTimeFromString(this.getValue()) ?? void 0;\n  }\n  setDate(date, silent) {\n    this.setValue(_serialiseDate(date ?? null, false), silent);\n  }\n};\nvar AgInputDateFieldSelector = {\n  selector: \"AG-INPUT-DATE-FIELD\",\n  component: AgInputDateField\n};\n\n// community-modules/core/src/edit/cellEditors/dateCellEditor.ts\nvar DateCellEditorInput = class {\n  getTemplate() {\n    return (\n      /* html */\n      `<ag-input-date-field class=\"ag-cell-editor\" data-ref=\"eInput\"></ag-input-date-field>`\n    );\n  }\n  getAgComponents() {\n    return [AgInputDateFieldSelector];\n  }\n  init(eInput, params) {\n    this.eInput = eInput;\n    this.params = params;\n    if (params.min != null) {\n      eInput.setMin(params.min);\n    }\n    if (params.max != null) {\n      eInput.setMax(params.max);\n    }\n    if (params.step != null) {\n      eInput.setStep(params.step);\n    }\n  }\n  getValue() {\n    const value = this.eInput.getDate();\n    if (!_exists(value) && !_exists(this.params.value)) {\n      return this.params.value;\n    }\n    return value ?? null;\n  }\n  getStartValue() {\n    const { value } = this.params;\n    if (!(value instanceof Date)) {\n      return void 0;\n    }\n    return _serialiseDate(value, false);\n  }\n};\nvar DateCellEditor = class extends SimpleCellEditor {\n  constructor() {\n    super(new DateCellEditorInput());\n  }\n};\n\n// community-modules/core/src/edit/cellEditors/dateStringCellEditor.ts\nvar DateStringCellEditorInput = class {\n  constructor(getDataTypeService) {\n    this.getDataTypeService = getDataTypeService;\n  }\n  getTemplate() {\n    return (\n      /* html */\n      `<ag-input-date-field class=\"ag-cell-editor\" data-ref=\"eInput\"></ag-input-date-field>`\n    );\n  }\n  getAgComponents() {\n    return [AgInputDateFieldSelector];\n  }\n  init(eInput, params) {\n    this.eInput = eInput;\n    this.params = params;\n    if (params.min != null) {\n      eInput.setMin(params.min);\n    }\n    if (params.max != null) {\n      eInput.setMax(params.max);\n    }\n    if (params.step != null) {\n      eInput.setStep(params.step);\n    }\n  }\n  getValue() {\n    const value = this.formatDate(this.eInput.getDate());\n    if (!_exists(value) && !_exists(this.params.value)) {\n      return this.params.value;\n    }\n    return this.params.parseValue(value ?? \"\");\n  }\n  getStartValue() {\n    return _serialiseDate(this.parseDate(this.params.value ?? void 0) ?? null, false);\n  }\n  parseDate(value) {\n    const dataTypeService = this.getDataTypeService();\n    return dataTypeService ? dataTypeService.getDateParserFunction(this.params.column)(value) : _parseDateTimeFromString(value) ?? void 0;\n  }\n  formatDate(value) {\n    const dataTypeService = this.getDataTypeService();\n    return dataTypeService ? dataTypeService.getDateFormatterFunction(this.params.column)(value) : _serialiseDate(value ?? null, false) ?? void 0;\n  }\n};\nvar DateStringCellEditor = class extends SimpleCellEditor {\n  wireBeans(beans) {\n    this.dataTypeService = beans.dataTypeService;\n  }\n  constructor() {\n    super(new DateStringCellEditorInput(() => this.dataTypeService));\n  }\n};\n\n// community-modules/core/src/edit/cellEditors/checkboxCellEditor.ts\nvar CheckboxCellEditor = class extends PopupComponent {\n  constructor() {\n    super(\n      /* html */\n      `\n            <div class=\"ag-cell-wrapper ag-cell-edit-wrapper ag-checkbox-edit\">\n                <ag-checkbox role=\"presentation\" data-ref=\"eCheckbox\"></ag-checkbox>\n            </div>`,\n      [AgCheckboxSelector]\n    );\n    this.eCheckbox = RefPlaceholder;\n  }\n  init(params) {\n    this.params = params;\n    const isSelected = params.value ?? void 0;\n    this.eCheckbox.setValue(isSelected);\n    const inputEl = this.eCheckbox.getInputElement();\n    inputEl.setAttribute(\"tabindex\", \"-1\");\n    this.setAriaLabel(isSelected);\n    this.addManagedListeners(this.eCheckbox, {\n      fieldValueChanged: (event) => this.setAriaLabel(event.selected)\n    });\n  }\n  getValue() {\n    return this.eCheckbox.getValue();\n  }\n  focusIn() {\n    this.eCheckbox.getFocusableElement().focus();\n  }\n  afterGuiAttached() {\n    if (this.params.cellStartedEdit) {\n      this.focusIn();\n    }\n  }\n  isPopup() {\n    return false;\n  }\n  setAriaLabel(isSelected) {\n    const translate = this.localeService.getLocaleTextFunc();\n    const stateName = _getAriaCheckboxStateName(translate, isSelected);\n    const ariaLabel = translate(\"ariaToggleCellValue\", \"Press SPACE to toggle cell value\");\n    this.eCheckbox.setInputAriaLabel(`${ariaLabel} (${stateName})`);\n  }\n};\n\n// community-modules/core/src/undoRedo/undoRedoStack.ts\nvar UndoRedoAction = class {\n  constructor(cellValueChanges) {\n    this.cellValueChanges = cellValueChanges;\n  }\n};\nvar RangeUndoRedoAction = class extends UndoRedoAction {\n  constructor(cellValueChanges, initialRange, finalRange, ranges) {\n    super(cellValueChanges);\n    this.initialRange = initialRange;\n    this.finalRange = finalRange;\n    this.ranges = ranges;\n  }\n};\nvar DEFAULT_STACK_SIZE = 10;\nvar UndoRedoStack = class {\n  constructor(maxStackSize) {\n    this.actionStack = [];\n    this.maxStackSize = maxStackSize ? maxStackSize : DEFAULT_STACK_SIZE;\n    this.actionStack = new Array(this.maxStackSize);\n  }\n  pop() {\n    return this.actionStack.pop();\n  }\n  push(item) {\n    const shouldAddActions = item.cellValueChanges && item.cellValueChanges.length > 0;\n    if (!shouldAddActions) {\n      return;\n    }\n    if (this.actionStack.length === this.maxStackSize) {\n      this.actionStack.shift();\n    }\n    this.actionStack.push(item);\n  }\n  clear() {\n    this.actionStack = [];\n  }\n  getCurrentStackSize() {\n    return this.actionStack.length;\n  }\n};\n\n// community-modules/core/src/undoRedo/undoRedoService.ts\nvar UndoRedoService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"undoRedoService\";\n    this.cellValueChanges = [];\n    this.activeCellEdit = null;\n    this.activeRowEdit = null;\n    this.isPasting = false;\n    this.isRangeInAction = false;\n    this.onCellValueChanged = (event) => {\n      const eventCell = { column: event.column, rowIndex: event.rowIndex, rowPinned: event.rowPinned };\n      const isCellEditing = this.activeCellEdit !== null && this.cellPositionUtils.equals(this.activeCellEdit, eventCell);\n      const isRowEditing = this.activeRowEdit !== null && this.rowPositionUtils.sameRow(this.activeRowEdit, eventCell);\n      const shouldCaptureAction = isCellEditing || isRowEditing || this.isPasting || this.isRangeInAction;\n      if (!shouldCaptureAction) {\n        return;\n      }\n      const { rowPinned, rowIndex, column, oldValue, value } = event;\n      const cellValueChange = {\n        rowPinned,\n        rowIndex,\n        columnId: column.getColId(),\n        newValue: value,\n        oldValue\n      };\n      this.cellValueChanges.push(cellValueChange);\n    };\n    this.clearStacks = () => {\n      this.undoStack.clear();\n      this.redoStack.clear();\n    };\n  }\n  wireBeans(beans) {\n    this.focusService = beans.focusService;\n    this.ctrlsService = beans.ctrlsService;\n    this.cellPositionUtils = beans.cellPositionUtils;\n    this.rowPositionUtils = beans.rowPositionUtils;\n    this.columnModel = beans.columnModel;\n    this.rangeService = beans.rangeService;\n  }\n  postConstruct() {\n    if (!this.gos.get(\"undoRedoCellEditing\")) {\n      return;\n    }\n    const undoRedoLimit = this.gos.get(\"undoRedoCellEditingLimit\");\n    if (undoRedoLimit <= 0) {\n      return;\n    }\n    this.undoStack = new UndoRedoStack(undoRedoLimit);\n    this.redoStack = new UndoRedoStack(undoRedoLimit);\n    this.addListeners();\n    const listener = this.clearStacks.bind(this);\n    this.addManagedEventListeners({\n      cellValueChanged: this.onCellValueChanged.bind(this),\n      // undo / redo is restricted to actual editing so we clear the stacks when other operations are\n      // performed that change the order of the row / cols.\n      modelUpdated: (e) => {\n        if (!e.keepUndoRedoStack) {\n          this.clearStacks();\n        }\n      },\n      columnPivotModeChanged: listener,\n      newColumnsLoaded: listener,\n      columnGroupOpened: listener,\n      columnRowGroupChanged: listener,\n      columnMoved: listener,\n      columnPinned: listener,\n      columnVisible: listener,\n      rowDragEnd: listener\n    });\n    this.ctrlsService.whenReady((p) => {\n      this.gridBodyCtrl = p.gridBodyCtrl;\n    });\n  }\n  getCurrentUndoStackSize() {\n    return this.undoStack ? this.undoStack.getCurrentStackSize() : 0;\n  }\n  getCurrentRedoStackSize() {\n    return this.redoStack ? this.redoStack.getCurrentStackSize() : 0;\n  }\n  undo(source) {\n    this.eventService.dispatchEvent({\n      type: \"undoStarted\",\n      source\n    });\n    const operationPerformed = this.undoRedo(this.undoStack, this.redoStack, \"initialRange\", \"oldValue\", \"undo\");\n    this.eventService.dispatchEvent({\n      type: \"undoEnded\",\n      source,\n      operationPerformed\n    });\n  }\n  redo(source) {\n    this.eventService.dispatchEvent({\n      type: \"redoStarted\",\n      source\n    });\n    const operationPerformed = this.undoRedo(this.redoStack, this.undoStack, \"finalRange\", \"newValue\", \"redo\");\n    this.eventService.dispatchEvent({\n      type: \"redoEnded\",\n      source,\n      operationPerformed\n    });\n  }\n  undoRedo(undoRedoStack, opposingUndoRedoStack, rangeProperty, cellValueChangeProperty, source) {\n    if (!undoRedoStack) {\n      return false;\n    }\n    const undoRedoAction = undoRedoStack.pop();\n    if (!undoRedoAction || !undoRedoAction.cellValueChanges) {\n      return false;\n    }\n    this.processAction(\n      undoRedoAction,\n      (cellValueChange) => cellValueChange[cellValueChangeProperty],\n      source\n    );\n    if (undoRedoAction instanceof RangeUndoRedoAction) {\n      this.processRange(this.rangeService, undoRedoAction.ranges || [undoRedoAction[rangeProperty]]);\n    } else {\n      this.processCell(undoRedoAction.cellValueChanges);\n    }\n    opposingUndoRedoStack.push(undoRedoAction);\n    return true;\n  }\n  processAction(action, valueExtractor, source) {\n    action.cellValueChanges.forEach((cellValueChange) => {\n      const { rowIndex, rowPinned, columnId } = cellValueChange;\n      const rowPosition = { rowIndex, rowPinned };\n      const currentRow = this.rowPositionUtils.getRowNode(rowPosition);\n      if (!currentRow.displayed) {\n        return;\n      }\n      currentRow.setDataValue(columnId, valueExtractor(cellValueChange), source);\n    });\n  }\n  processRange(rangeService, ranges) {\n    let lastFocusedCell;\n    rangeService.removeAllCellRanges(true);\n    ranges.forEach((range, idx) => {\n      if (!range) {\n        return;\n      }\n      const startRow = range.startRow;\n      const endRow = range.endRow;\n      if (idx === ranges.length - 1) {\n        lastFocusedCell = {\n          rowPinned: startRow.rowPinned,\n          rowIndex: startRow.rowIndex,\n          columnId: range.startColumn.getColId()\n        };\n        this.setLastFocusedCell(lastFocusedCell);\n      }\n      const cellRangeParams = {\n        rowStartIndex: startRow.rowIndex,\n        rowStartPinned: startRow.rowPinned,\n        rowEndIndex: endRow.rowIndex,\n        rowEndPinned: endRow.rowPinned,\n        columnStart: range.startColumn,\n        columns: range.columns\n      };\n      rangeService.addCellRange(cellRangeParams);\n    });\n  }\n  processCell(cellValueChanges) {\n    const cellValueChange = cellValueChanges[0];\n    const { rowIndex, rowPinned } = cellValueChange;\n    const rowPosition = { rowIndex, rowPinned };\n    const row = this.rowPositionUtils.getRowNode(rowPosition);\n    const lastFocusedCell = {\n      rowPinned: cellValueChange.rowPinned,\n      rowIndex: row.rowIndex,\n      columnId: cellValueChange.columnId\n    };\n    this.setLastFocusedCell(lastFocusedCell, this.rangeService);\n  }\n  setLastFocusedCell(lastFocusedCell, rangeService) {\n    const { rowIndex, columnId, rowPinned } = lastFocusedCell;\n    const scrollFeature = this.gridBodyCtrl.getScrollFeature();\n    const column = this.columnModel.getCol(columnId);\n    if (!column) {\n      return;\n    }\n    scrollFeature.ensureIndexVisible(rowIndex);\n    scrollFeature.ensureColumnVisible(column);\n    const cellPosition = { rowIndex, column, rowPinned };\n    this.focusService.setFocusedCell({ ...cellPosition, forceBrowserFocus: true });\n    rangeService?.setRangeToCell(cellPosition);\n  }\n  addListeners() {\n    this.addManagedEventListeners({\n      rowEditingStarted: (e) => {\n        this.activeRowEdit = { rowIndex: e.rowIndex, rowPinned: e.rowPinned };\n      },\n      rowEditingStopped: () => {\n        const action = new UndoRedoAction(this.cellValueChanges);\n        this.pushActionsToUndoStack(action);\n        this.activeRowEdit = null;\n      },\n      cellEditingStarted: (e) => {\n        this.activeCellEdit = { column: e.column, rowIndex: e.rowIndex, rowPinned: e.rowPinned };\n      },\n      cellEditingStopped: (e) => {\n        this.activeCellEdit = null;\n        const shouldPushAction = e.valueChanged && !this.activeRowEdit && !this.isPasting && !this.isRangeInAction;\n        if (shouldPushAction) {\n          const action = new UndoRedoAction(this.cellValueChanges);\n          this.pushActionsToUndoStack(action);\n        }\n      },\n      pasteStart: () => {\n        this.isPasting = true;\n      },\n      pasteEnd: () => {\n        const action = new UndoRedoAction(this.cellValueChanges);\n        this.pushActionsToUndoStack(action);\n        this.isPasting = false;\n      },\n      fillStart: () => {\n        this.isRangeInAction = true;\n      },\n      fillEnd: (event) => {\n        const action = new RangeUndoRedoAction(this.cellValueChanges, event.initialRange, event.finalRange);\n        this.pushActionsToUndoStack(action);\n        this.isRangeInAction = false;\n      },\n      keyShortcutChangedCellStart: () => {\n        this.isRangeInAction = true;\n      },\n      keyShortcutChangedCellEnd: () => {\n        let action;\n        if (this.rangeService && this.gos.get(\"enableRangeSelection\")) {\n          action = new RangeUndoRedoAction(this.cellValueChanges, void 0, void 0, [\n            ...this.rangeService.getCellRanges()\n          ]);\n        } else {\n          action = new UndoRedoAction(this.cellValueChanges);\n        }\n        this.pushActionsToUndoStack(action);\n        this.isRangeInAction = false;\n      }\n    });\n  }\n  pushActionsToUndoStack(action) {\n    this.undoStack.push(action);\n    this.cellValueChanges = [];\n    this.redoStack.clear();\n  }\n};\n\n// community-modules/core/src/api/scrollApi.ts\nfunction getVerticalPixelRange(beans) {\n  return beans.ctrlsService.getGridBodyCtrl().getScrollFeature().getVScrollPosition();\n}\nfunction getHorizontalPixelRange(beans) {\n  return beans.ctrlsService.getGridBodyCtrl().getScrollFeature().getHScrollPosition();\n}\nfunction ensureColumnVisible(beans, key, position = \"auto\") {\n  beans.frameworkOverrides.wrapIncoming(\n    () => beans.ctrlsService.getGridBodyCtrl().getScrollFeature().ensureColumnVisible(key, position),\n    \"ensureVisible\"\n  );\n}\nfunction ensureIndexVisible(beans, index, position) {\n  beans.frameworkOverrides.wrapIncoming(\n    () => beans.ctrlsService.getGridBodyCtrl().getScrollFeature().ensureIndexVisible(index, position),\n    \"ensureVisible\"\n  );\n}\nfunction ensureNodeVisible(beans, nodeSelector, position = null) {\n  beans.frameworkOverrides.wrapIncoming(\n    () => beans.ctrlsService.getGridBodyCtrl().getScrollFeature().ensureNodeVisible(nodeSelector, position),\n    \"ensureVisible\"\n  );\n}\n\n// community-modules/core/src/edit/editApi.ts\nfunction undoCellEditing(beans) {\n  beans.undoRedoService?.undo(\"api\");\n}\nfunction redoCellEditing(beans) {\n  beans.undoRedoService?.redo(\"api\");\n}\nfunction getCellEditorInstances(beans, params = {}) {\n  const res = beans.rowRenderer.getCellEditorInstances(params);\n  const unwrapped = res.map(_unwrapUserComp);\n  return unwrapped;\n}\nfunction getEditingCells(beans) {\n  return beans.rowRenderer.getEditingCells();\n}\nfunction stopEditing(beans, cancel = false) {\n  beans.rowRenderer.stopEditing(cancel);\n}\nfunction startEditingCell(beans, params) {\n  const column = beans.columnModel.getCol(params.colKey);\n  if (!column) {\n    _warnOnce(`no column found for ${params.colKey}`);\n    return;\n  }\n  const cellPosition = {\n    rowIndex: params.rowIndex,\n    rowPinned: params.rowPinned || null,\n    column\n  };\n  const notPinned = params.rowPinned == null;\n  if (notPinned) {\n    ensureIndexVisible(beans, params.rowIndex);\n  }\n  ensureColumnVisible(beans, params.colKey);\n  const cell = beans.navigationService.getCellByPosition(cellPosition);\n  if (!cell) {\n    return;\n  }\n  const { focusService, gos } = beans;\n  const isFocusWithinCell = () => {\n    const activeElement = gos.getActiveDomElement();\n    const eCell = cell.getGui();\n    return activeElement !== eCell && eCell.contains(activeElement);\n  };\n  const forceBrowserFocus = gos.get(\"stopEditingWhenCellsLoseFocus\") && isFocusWithinCell();\n  if (forceBrowserFocus || !focusService.isCellFocused(cellPosition)) {\n    focusService.setFocusedCell({\n      ...cellPosition,\n      forceBrowserFocus,\n      preventScrollOnBrowserFocus: true\n    });\n  }\n  cell.startRowOrCellEdit(params.key);\n}\nfunction getCurrentUndoSize(beans) {\n  return beans.undoRedoService?.getCurrentUndoStackSize() ?? 0;\n}\nfunction getCurrentRedoSize(beans) {\n  return beans.undoRedoService?.getCurrentRedoStackSize() ?? 0;\n}\n\n// community-modules/core/src/edit/editService.ts\nvar EditService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"editService\";\n  }\n  wireBeans(beans) {\n    this.navigationService = beans.navigationService;\n    this.userComponentFactory = beans.userComponentFactory;\n    this.valueService = beans.valueService;\n  }\n  startEditing(cellCtrl, key = null, cellStartedEdit = false, event = null) {\n    const editorParams = this.createCellEditorParams(cellCtrl, key, cellStartedEdit);\n    const colDef = cellCtrl.getColumn().getColDef();\n    const compDetails = this.userComponentFactory.getCellEditorDetails(colDef, editorParams);\n    const popup = compDetails?.popupFromSelector != null ? compDetails.popupFromSelector : !!colDef.cellEditorPopup;\n    const position = compDetails?.popupPositionFromSelector != null ? compDetails.popupPositionFromSelector : colDef.cellEditorPopupPosition;\n    cellCtrl.setEditing(true, compDetails);\n    cellCtrl.getComp().setEditDetails(compDetails, popup, position, this.gos.get(\"reactiveCustomComponents\"));\n    this.eventService.dispatchEvent(cellCtrl.createEvent(event, \"cellEditingStarted\"));\n  }\n  stopEditing(cellCtrl, cancel) {\n    const cellComp = cellCtrl.getComp();\n    const { newValue, newValueExists } = this.takeValueFromCellEditor(cancel, cellComp);\n    const rowNode = cellCtrl.getRowNode();\n    const column = cellCtrl.getColumn();\n    const oldValue = rowNode.getValueFromValueService(column);\n    let valueChanged = false;\n    if (newValueExists) {\n      valueChanged = this.saveNewValue(cellCtrl, oldValue, newValue, rowNode, column);\n    }\n    cellCtrl.setEditing(false, void 0);\n    cellComp.setEditDetails();\n    cellCtrl.updateAndFormatValue(false);\n    cellCtrl.refreshCell({ forceRefresh: true, suppressFlash: true });\n    this.eventService.dispatchEvent({\n      ...cellCtrl.createEvent(null, \"cellEditingStopped\"),\n      oldValue,\n      newValue,\n      valueChanged\n    });\n    return valueChanged;\n  }\n  handleColDefChanged(cellCtrl) {\n    const cellEditor = cellCtrl.getCellEditor();\n    if (cellEditor?.refresh) {\n      const { eventKey, cellStartedEdit } = cellCtrl.getEditCompDetails().params;\n      const editorParams = this.createCellEditorParams(cellCtrl, eventKey, cellStartedEdit);\n      const colDef = cellCtrl.getColumn().getColDef();\n      const compDetails = this.userComponentFactory.getCellEditorDetails(colDef, editorParams);\n      cellEditor.refresh(compDetails.params);\n    }\n  }\n  setFocusOutOnEditor(cellCtrl) {\n    const cellEditor = cellCtrl.getComp().getCellEditor();\n    if (cellEditor && cellEditor.focusOut) {\n      cellEditor.focusOut();\n    }\n  }\n  setFocusInOnEditor(cellCtrl) {\n    const cellEditor = cellCtrl.getComp().getCellEditor();\n    if (cellEditor && cellEditor.focusIn) {\n      cellEditor.focusIn();\n    } else {\n      cellCtrl.focusCell(true);\n    }\n  }\n  stopEditingAndFocus(cellCtrl, suppressNavigateAfterEdit = false, shiftKey = false) {\n    cellCtrl.stopRowOrCellEdit();\n    cellCtrl.focusCell(true);\n    if (!suppressNavigateAfterEdit) {\n      this.navigateAfterEdit(shiftKey, cellCtrl.getCellPosition());\n    }\n  }\n  createPopupEditorWrapper(params) {\n    return new PopupEditorWrapper(params);\n  }\n  takeValueFromCellEditor(cancel, cellComp) {\n    const noValueResult = { newValueExists: false };\n    if (cancel) {\n      return noValueResult;\n    }\n    const cellEditor = cellComp.getCellEditor();\n    if (!cellEditor) {\n      return noValueResult;\n    }\n    const userWantsToCancel = cellEditor.isCancelAfterEnd && cellEditor.isCancelAfterEnd();\n    if (userWantsToCancel) {\n      return noValueResult;\n    }\n    const newValue = cellEditor.getValue();\n    return {\n      newValue,\n      newValueExists: true\n    };\n  }\n  /**\n   * @returns `True` if the value changes, otherwise `False`.\n   */\n  saveNewValue(cellCtrl, oldValue, newValue, rowNode, column) {\n    if (newValue === oldValue) {\n      return false;\n    }\n    cellCtrl.setSuppressRefreshCell(true);\n    const valueChanged = rowNode.setDataValue(column, newValue, \"edit\");\n    cellCtrl.setSuppressRefreshCell(false);\n    return valueChanged;\n  }\n  createCellEditorParams(cellCtrl, key, cellStartedEdit) {\n    const column = cellCtrl.getColumn();\n    const rowNode = cellCtrl.getRowNode();\n    return this.gos.addGridCommonParams({\n      value: rowNode.getValueFromValueService(column),\n      eventKey: key,\n      column,\n      colDef: column.getColDef(),\n      rowIndex: cellCtrl.getCellPosition().rowIndex,\n      node: rowNode,\n      data: rowNode.data,\n      cellStartedEdit,\n      onKeyDown: cellCtrl.onKeyDown.bind(cellCtrl),\n      stopEditing: cellCtrl.stopEditingAndFocus.bind(cellCtrl),\n      eGridCell: cellCtrl.getGui(),\n      parseValue: (newValue) => this.valueService.parseValue(column, rowNode, newValue, cellCtrl.getValue()),\n      formatValue: cellCtrl.formatValue.bind(cellCtrl)\n    });\n  }\n  navigateAfterEdit(shiftKey, cellPosition) {\n    const enterNavigatesVerticallyAfterEdit = this.gos.get(\"enterNavigatesVerticallyAfterEdit\");\n    if (enterNavigatesVerticallyAfterEdit) {\n      const key = shiftKey ? KeyCode.UP : KeyCode.DOWN;\n      this.navigationService.navigateToNextCell(null, key, cellPosition, false);\n    }\n  }\n};\n\n// community-modules/core/src/edit/rowEditService.ts\nvar RowEditService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowEditService\";\n  }\n  startEditing(rowCtrl, key = null, sourceRenderedCell = null, event = null) {\n    const atLeastOneEditing = rowCtrl.getAllCellCtrls().reduce((prev, cellCtrl) => {\n      const cellStartedEdit = cellCtrl === sourceRenderedCell;\n      if (cellStartedEdit) {\n        cellCtrl.startEditing(key, cellStartedEdit, event);\n      } else {\n        cellCtrl.startEditing(null, cellStartedEdit, event);\n      }\n      if (prev) {\n        return true;\n      }\n      return cellCtrl.isEditing();\n    }, false);\n    if (atLeastOneEditing) {\n      this.setEditing(rowCtrl, true);\n    }\n  }\n  stopEditing(rowCtrl, cancel = false) {\n    const cellControls = rowCtrl.getAllCellCtrls();\n    const isRowEdit = rowCtrl.isEditing();\n    rowCtrl.setStoppingRowEdit(true);\n    let fireRowEditEvent = false;\n    for (const ctrl of cellControls) {\n      const valueChanged = ctrl.stopEditing(cancel);\n      if (isRowEdit && !cancel && !fireRowEditEvent && valueChanged) {\n        fireRowEditEvent = true;\n      }\n    }\n    if (fireRowEditEvent) {\n      this.eventService.dispatchEvent(rowCtrl.createRowEvent(\"rowValueChanged\"));\n    }\n    if (isRowEdit) {\n      this.setEditing(rowCtrl, false);\n    }\n    rowCtrl.setStoppingRowEdit(false);\n  }\n  setEditing(rowCtrl, value) {\n    rowCtrl.setEditingRow(value);\n    rowCtrl.forEachGui(void 0, (gui) => gui.rowComp.addOrRemoveCssClass(\"ag-row-editing\", value));\n    const event = value ? rowCtrl.createRowEvent(\"rowEditingStarted\") : rowCtrl.createRowEvent(\"rowEditingStopped\");\n    this.eventService.dispatchEvent(event);\n  }\n};\n\n// community-modules/core/src/edit/editModule.ts\nvar EditCoreModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/edit-core\",\n  beans: [EditService]\n});\nvar EditApiModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/edit-api\",\n  apiFunctions: {\n    undoCellEditing,\n    redoCellEditing,\n    getCellEditorInstances,\n    getEditingCells,\n    stopEditing,\n    startEditingCell,\n    getCurrentUndoSize,\n    getCurrentRedoSize\n  },\n  dependantModules: [EditCoreModule]\n});\nvar UndoRedoEditModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/undo-redo-edit\",\n  beans: [UndoRedoService],\n  dependantModules: [EditCoreModule]\n});\nvar FullRowEditModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/full-row-edit\",\n  beans: [RowEditService],\n  dependantModules: [EditCoreModule]\n});\nvar DefaultEditorModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/default-editor\",\n  userComponents: [{ name: \"agCellEditor\", classImp: TextCellEditor }],\n  dependantModules: [EditCoreModule]\n});\nvar DataTypeEditorsModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/data-type-editors\",\n  userComponents: [\n    { name: \"agTextCellEditor\", classImp: TextCellEditor },\n    { name: \"agNumberCellEditor\", classImp: NumberCellEditor },\n    { name: \"agDateCellEditor\", classImp: DateCellEditor },\n    { name: \"agDateStringCellEditor\", classImp: DateStringCellEditor },\n    { name: \"agCheckboxCellEditor\", classImp: CheckboxCellEditor }\n  ],\n  dependantModules: [DefaultEditorModule]\n});\nvar SelectEditorModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/select-editor\",\n  userComponents: [{ name: \"agSelectCellEditor\", classImp: SelectCellEditor }],\n  dependantModules: [EditCoreModule]\n});\nvar LargeTextEditorModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/large-text-editor\",\n  userComponents: [{ name: \"agLargeTextCellEditor\", classImp: LargeTextCellEditor }],\n  dependantModules: [EditCoreModule]\n});\nvar AllCommunityEditorsModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/all-editors\",\n  dependantModules: [DefaultEditorModule, DataTypeEditorsModule, SelectEditorModule, LargeTextEditorModule]\n});\nvar EditModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/editing\",\n  dependantModules: [EditCoreModule, UndoRedoEditModule, FullRowEditModule, AllCommunityEditorsModule, EditApiModule]\n});\n\n// community-modules/core/src/rendering/autoWidthCalculator.ts\nvar AutoWidthCalculator = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"autoWidthCalculator\";\n  }\n  wireBeans(beans) {\n    this.rowRenderer = beans.rowRenderer;\n    this.ctrlsService = beans.ctrlsService;\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady((p) => {\n      this.centerRowContainerCtrl = p.center;\n    });\n  }\n  // this is the trick: we create a dummy container and clone all the cells\n  // into the dummy, then check the dummy's width. then destroy the dummy\n  // as we don't need it any more.\n  // drawback: only the cells visible on the screen are considered\n  getPreferredWidthForColumn(column, skipHeader) {\n    const eHeaderCell = this.getHeaderCellForColumn(column);\n    if (!eHeaderCell) {\n      return -1;\n    }\n    const elements = this.rowRenderer.getAllCellsForColumn(column);\n    if (!skipHeader) {\n      elements.push(eHeaderCell);\n    }\n    return this.addElementsToContainerAndGetWidth(elements);\n  }\n  getPreferredWidthForColumnGroup(columnGroup) {\n    const eHeaderCell = this.getHeaderCellForColumn(columnGroup);\n    if (!eHeaderCell) {\n      return -1;\n    }\n    return this.addElementsToContainerAndGetWidth([eHeaderCell]);\n  }\n  addElementsToContainerAndGetWidth(elements) {\n    const eDummyContainer = document.createElement(\"form\");\n    eDummyContainer.style.position = \"fixed\";\n    const eBodyContainer = this.centerRowContainerCtrl.getContainerElement();\n    elements.forEach((el) => this.cloneItemIntoDummy(el, eDummyContainer));\n    eBodyContainer.appendChild(eDummyContainer);\n    const dummyContainerWidth = eDummyContainer.offsetWidth;\n    eBodyContainer.removeChild(eDummyContainer);\n    const autoSizePadding = this.getAutoSizePadding();\n    return dummyContainerWidth + autoSizePadding;\n  }\n  getAutoSizePadding() {\n    return this.gos.get(\"autoSizePadding\");\n  }\n  getHeaderCellForColumn(column) {\n    let element = null;\n    this.ctrlsService.getHeaderRowContainerCtrls().forEach((container) => {\n      const res = container.getHtmlElementForColumnHeader(column);\n      if (res != null) {\n        element = res;\n      }\n    });\n    return element;\n  }\n  cloneItemIntoDummy(eCell, eDummyContainer) {\n    const eCellClone = eCell.cloneNode(true);\n    eCellClone.style.width = \"\";\n    eCellClone.style.position = \"static\";\n    eCellClone.style.left = \"\";\n    const eCloneParent = document.createElement(\"div\");\n    const eCloneParentClassList = eCloneParent.classList;\n    const isHeader = [\"ag-header-cell\", \"ag-header-group-cell\"].some((cls) => eCellClone.classList.contains(cls));\n    if (isHeader) {\n      eCloneParentClassList.add(\"ag-header\", \"ag-header-row\");\n      eCloneParent.style.position = \"static\";\n    } else {\n      eCloneParentClassList.add(\"ag-row\");\n    }\n    let pointer = eCell.parentElement;\n    while (pointer) {\n      const isRow = [\"ag-header-row\", \"ag-row\"].some((cls) => pointer.classList.contains(cls));\n      if (isRow) {\n        for (let i = 0; i < pointer.classList.length; i++) {\n          const item = pointer.classList[i];\n          if (item != \"ag-row-position-absolute\") {\n            eCloneParentClassList.add(item);\n          }\n        }\n        break;\n      }\n      pointer = pointer.parentElement;\n    }\n    eCloneParent.appendChild(eCellClone);\n    eDummyContainer.appendChild(eCloneParent);\n  }\n};\n\n// community-modules/core/src/rendering/features/stickyRowFeature.ts\nvar StickyRowFeature = class extends BeanStub {\n  constructor(createRowCon, destroyRowCtrls) {\n    super();\n    this.createRowCon = createRowCon;\n    this.destroyRowCtrls = destroyRowCtrls;\n    this.stickyTopRowCtrls = [];\n    this.stickyBottomRowCtrls = [];\n    this.topContainerHeight = 0;\n    this.bottomContainerHeight = 0;\n    // sticky rows pulls in extra rows from other pages which impacts row position\n    this.extraTopHeight = 0;\n    this.extraBottomHeight = 0;\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n    this.rowRenderer = beans.rowRenderer;\n    this.ctrlsService = beans.ctrlsService;\n    this.pageBoundsService = beans.pageBoundsService;\n  }\n  postConstruct() {\n    this.isClientSide = this.rowModel.getType() === \"clientSide\";\n    this.ctrlsService.whenReady((params) => {\n      this.gridBodyCtrl = params.gridBodyCtrl;\n    });\n  }\n  getStickyTopRowCtrls() {\n    return this.stickyTopRowCtrls;\n  }\n  getStickyBottomRowCtrls() {\n    return this.stickyBottomRowCtrls;\n  }\n  setOffsetTop(offset) {\n    if (this.extraTopHeight === offset) {\n      return;\n    }\n    this.extraTopHeight = offset;\n    this.eventService.dispatchEvent({\n      type: \"stickyTopOffsetChanged\",\n      offset\n    });\n  }\n  setOffsetBottom(offset) {\n    if (this.extraBottomHeight === offset) {\n      return;\n    }\n    this.extraBottomHeight = offset;\n  }\n  resetOffsets() {\n    this.setOffsetBottom(0);\n    this.setOffsetTop(0);\n  }\n  getExtraTopHeight() {\n    return this.extraTopHeight;\n  }\n  getExtraBottomHeight() {\n    return this.extraBottomHeight;\n  }\n  /**\n   * Get the last pixel of the group, this pixel is used to push the sticky node up out of the viewport.\n   */\n  getLastPixelOfGroup(row) {\n    return this.isClientSide ? this.getClientSideLastPixelOfGroup(row) : this.getServerSideLastPixelOfGroup(row);\n  }\n  /**\n   * Get the first pixel of the group, this pixel is used to push the sticky node down out of the viewport\n   */\n  getFirstPixelOfGroup(row) {\n    if (row.footer) {\n      return row.sibling.rowTop + row.sibling.rowHeight - 1;\n    }\n    if (row.hasChildren()) {\n      return row.rowTop - 1;\n    }\n    return 0;\n  }\n  getServerSideLastPixelOfGroup(row) {\n    if (this.isClientSide) {\n      throw new Error(\"This func should only be called in server side row model.\");\n    }\n    if (row.isExpandable() || row.footer) {\n      if (row.master) {\n        return row.detailNode.rowTop + row.detailNode.rowHeight;\n      }\n      const noOrContiguousSiblings = !row.sibling || Math.abs(row.sibling.rowIndex - row.rowIndex) === 1;\n      if (noOrContiguousSiblings) {\n        let storeBounds = row.childStore?.getStoreBounds();\n        if (row.footer) {\n          storeBounds = row.sibling.childStore?.getStoreBounds();\n        }\n        return (storeBounds?.heightPx ?? 0) + (storeBounds?.topPx ?? 0);\n      }\n      if (row.footer) {\n        return row.rowTop + row.rowHeight;\n      }\n      return row.sibling.rowTop + row.sibling.rowHeight;\n    }\n    return Number.MAX_SAFE_INTEGER;\n  }\n  getClientSideLastPixelOfGroup(row) {\n    if (!this.isClientSide) {\n      throw new Error(\"This func should only be called in client side row model.\");\n    }\n    if (row.isExpandable() || row.footer) {\n      const grandTotalAtTop = row.footer && row.rowIndex === 0;\n      if (grandTotalAtTop) {\n        return Number.MAX_SAFE_INTEGER;\n      }\n      const noOrContiguousSiblings = !row.sibling || Math.abs(row.sibling.rowIndex - row.rowIndex) === 1;\n      if (noOrContiguousSiblings) {\n        let lastAncestor = row.footer ? row.sibling : row;\n        while (lastAncestor.isExpandable() && lastAncestor.expanded) {\n          if (lastAncestor.master) {\n            lastAncestor = lastAncestor.detailNode;\n          } else if (lastAncestor.childrenAfterSort) {\n            if (lastAncestor.childrenAfterSort.length === 0) {\n              break;\n            }\n            lastAncestor = _last(lastAncestor.childrenAfterSort);\n          }\n        }\n        return lastAncestor.rowTop + lastAncestor.rowHeight;\n      }\n      if (row.footer) {\n        return row.rowTop + row.rowHeight;\n      }\n      return row.sibling.rowTop + row.sibling.rowHeight;\n    }\n    return Number.MAX_SAFE_INTEGER;\n  }\n  updateStickyRows(container) {\n    const isTop = container === \"top\";\n    let newStickyContainerHeight = 0;\n    if (!this.canRowsBeSticky()) {\n      return this.refreshNodesAndContainerHeight(container, /* @__PURE__ */ new Set(), newStickyContainerHeight);\n    }\n    const pixelAtContainerBoundary = isTop ? this.rowRenderer.getFirstVisibleVerticalPixel() - this.extraTopHeight : this.rowRenderer.getLastVisibleVerticalPixel() - this.extraTopHeight;\n    const newStickyRows = /* @__PURE__ */ new Set();\n    const addStickyRow = (stickyRow) => {\n      newStickyRows.add(stickyRow);\n      if (isTop) {\n        const lastChildBottom = this.getLastPixelOfGroup(stickyRow);\n        const stickRowBottom = pixelAtContainerBoundary + newStickyContainerHeight + stickyRow.rowHeight;\n        if (lastChildBottom < stickRowBottom) {\n          stickyRow.stickyRowTop = newStickyContainerHeight + (lastChildBottom - stickRowBottom);\n        } else {\n          stickyRow.stickyRowTop = newStickyContainerHeight;\n        }\n      } else {\n        const lastChildBottom = this.getFirstPixelOfGroup(stickyRow);\n        const stickRowTop = pixelAtContainerBoundary - (newStickyContainerHeight + stickyRow.rowHeight);\n        if (lastChildBottom > stickRowTop) {\n          stickyRow.stickyRowTop = newStickyContainerHeight - (lastChildBottom - stickRowTop);\n        } else {\n          stickyRow.stickyRowTop = newStickyContainerHeight;\n        }\n      }\n      newStickyContainerHeight = 0;\n      newStickyRows.forEach((rowNode) => {\n        const thisRowLastPx = rowNode.stickyRowTop + rowNode.rowHeight;\n        if (newStickyContainerHeight < thisRowLastPx) {\n          newStickyContainerHeight = thisRowLastPx;\n        }\n      });\n    };\n    const suppressFootersSticky = this.areFooterRowsStickySuppressed();\n    const suppressGroupsSticky = this.gos.get(\"suppressGroupRowsSticky\");\n    const isRowSticky = (row) => {\n      if (!row.displayed) {\n        return false;\n      }\n      if (row.footer) {\n        if (suppressFootersSticky === true) {\n          return false;\n        }\n        if (suppressFootersSticky === \"grand\" && row.level === -1) {\n          return false;\n        }\n        if (suppressFootersSticky === \"group\" && row.level > -1) {\n          return false;\n        }\n        const isFooterFirstRowInGroup = row.sibling.rowIndex ? row.sibling.rowIndex + 1 === row.rowIndex : false;\n        if (container === \"bottom\" && isFooterFirstRowInGroup) {\n          return false;\n        }\n        const alreadySticking = newStickyRows.has(row);\n        return !alreadySticking;\n      }\n      if (row.isExpandable()) {\n        if (suppressGroupsSticky === true) {\n          return false;\n        }\n        if (container === \"bottom\") {\n          return false;\n        }\n        const alreadySticking = newStickyRows.has(row);\n        return !alreadySticking && row.expanded;\n      }\n      return false;\n    };\n    for (let i = 0; i < 100; i++) {\n      let firstPixelAfterStickyRows = pixelAtContainerBoundary + newStickyContainerHeight;\n      if (!isTop) {\n        firstPixelAfterStickyRows = pixelAtContainerBoundary - newStickyContainerHeight;\n      }\n      const firstIndex = this.rowModel.getRowIndexAtPixel(firstPixelAfterStickyRows);\n      const firstRow = this.rowModel.getRow(firstIndex);\n      if (firstRow == null) {\n        break;\n      }\n      const ancestors = this.getStickyAncestors(firstRow);\n      const firstMissingParent = ancestors.find(\n        (parent) => (isTop ? parent.rowIndex < firstIndex : parent.rowIndex > firstIndex) && isRowSticky(parent)\n      );\n      if (firstMissingParent) {\n        addStickyRow(firstMissingParent);\n        continue;\n      }\n      const isFirstRowOutsideViewport = isTop ? firstRow.rowTop < firstPixelAfterStickyRows : firstRow.rowTop + firstRow.rowHeight > firstPixelAfterStickyRows;\n      if (isFirstRowOutsideViewport && isRowSticky(firstRow)) {\n        addStickyRow(firstRow);\n        continue;\n      }\n      break;\n    }\n    if (!isTop) {\n      newStickyRows.forEach((rowNode) => {\n        rowNode.stickyRowTop = newStickyContainerHeight - (rowNode.stickyRowTop + rowNode.rowHeight);\n      });\n    }\n    return this.refreshNodesAndContainerHeight(container, newStickyRows, newStickyContainerHeight);\n  }\n  areFooterRowsStickySuppressed() {\n    const suppressFootersSticky = this.gos.get(\"suppressStickyTotalRow\");\n    if (suppressFootersSticky === true) {\n      return true;\n    }\n    const suppressGroupRows = !!this.gos.get(\"groupIncludeFooter\") || suppressFootersSticky === \"group\";\n    const suppressGrandRows = !!this.gos.get(\"groupIncludeTotalFooter\") || suppressFootersSticky === \"grand\";\n    if (suppressGroupRows && suppressGrandRows) {\n      return true;\n    }\n    if (suppressGrandRows) {\n      return \"grand\";\n    }\n    if (suppressGroupRows) {\n      return \"group\";\n    }\n    return false;\n  }\n  canRowsBeSticky() {\n    const isStickyEnabled = this.gos.isGroupRowsSticky();\n    const suppressFootersSticky = this.areFooterRowsStickySuppressed();\n    const suppressGroupsSticky = this.gos.get(\"suppressGroupRowsSticky\");\n    return isStickyEnabled && (!suppressFootersSticky || !suppressGroupsSticky);\n  }\n  getStickyAncestors(rowNode) {\n    const ancestors = [];\n    let p = rowNode.footer ? rowNode.sibling : rowNode.parent;\n    while (p) {\n      if (p.sibling) {\n        ancestors.push(p.sibling);\n      }\n      ancestors.push(p);\n      p = p.parent;\n    }\n    return ancestors.reverse();\n  }\n  checkStickyRows() {\n    const hasTopUpdated = this.updateStickyRows(\"top\");\n    const hasBottomUpdated = this.updateStickyRows(\"bottom\");\n    return hasTopUpdated || hasBottomUpdated;\n  }\n  destroyStickyCtrls() {\n    this.refreshNodesAndContainerHeight(\"top\", /* @__PURE__ */ new Set(), 0);\n    this.refreshNodesAndContainerHeight(\"bottom\", /* @__PURE__ */ new Set(), 0);\n  }\n  refreshStickyNode(stickRowNode) {\n    const allStickyNodes = /* @__PURE__ */ new Set();\n    if (this.stickyTopRowCtrls.some((ctrl) => ctrl.getRowNode() === stickRowNode)) {\n      for (let i = 0; i < this.stickyTopRowCtrls.length; i++) {\n        const currentNode = this.stickyTopRowCtrls[i].getRowNode();\n        if (currentNode !== stickRowNode) {\n          allStickyNodes.add(currentNode);\n        }\n      }\n      if (this.refreshNodesAndContainerHeight(\"top\", allStickyNodes, this.topContainerHeight)) {\n        this.checkStickyRows();\n      }\n      return;\n    }\n    for (let i = 0; i < this.stickyBottomRowCtrls.length; i++) {\n      const currentNode = this.stickyBottomRowCtrls[i].getRowNode();\n      if (currentNode !== stickRowNode) {\n        allStickyNodes.add(currentNode);\n      }\n    }\n    if (this.refreshNodesAndContainerHeight(\"bottom\", allStickyNodes, this.bottomContainerHeight)) {\n      this.checkStickyRows();\n    }\n  }\n  /**\n   * Destroy old ctrls and create new ctrls where necessary.\n   */\n  refreshNodesAndContainerHeight(container, newStickyNodes, height) {\n    const isTop = container === \"top\";\n    const previousCtrls = isTop ? this.stickyTopRowCtrls : this.stickyBottomRowCtrls;\n    const removedCtrlsMap = {};\n    const remainingCtrls = [];\n    for (let i = 0; i < previousCtrls.length; i++) {\n      const node = previousCtrls[i].getRowNode();\n      const hasBeenRemoved = !newStickyNodes.has(node);\n      if (hasBeenRemoved) {\n        removedCtrlsMap[node.id] = previousCtrls[i];\n        node.sticky = false;\n        continue;\n      }\n      remainingCtrls.push(previousCtrls[i]);\n    }\n    const existingNodes = /* @__PURE__ */ new Set();\n    for (let i = 0; i < remainingCtrls.length; i++) {\n      existingNodes.add(remainingCtrls[i].getRowNode());\n    }\n    const newCtrls = [];\n    newStickyNodes.forEach((node) => {\n      if (existingNodes.has(node)) {\n        return;\n      }\n      node.sticky = true;\n      newCtrls.push(this.createRowCon(node, false, false));\n    });\n    let hasSomethingChanged = !!newCtrls.length || remainingCtrls.length !== previousCtrls.length;\n    if (isTop) {\n      if (this.topContainerHeight !== height) {\n        this.topContainerHeight = height;\n        this.gridBodyCtrl.setStickyTopHeight(height);\n        hasSomethingChanged = true;\n      }\n    } else {\n      if (this.bottomContainerHeight !== height) {\n        this.bottomContainerHeight = height;\n        this.gridBodyCtrl.setStickyBottomHeight(height);\n        hasSomethingChanged = true;\n      }\n    }\n    this.destroyRowCtrls(removedCtrlsMap, false);\n    const newCtrlsList = [...remainingCtrls, ...newCtrls];\n    newCtrlsList.sort((a, b) => b.getRowNode().rowIndex - a.getRowNode().rowIndex);\n    if (!isTop) {\n      newCtrlsList.reverse();\n    }\n    newCtrlsList.forEach((ctrl) => ctrl.setRowTop(ctrl.getRowNode().stickyRowTop));\n    let extraHeight = 0;\n    if (isTop) {\n      newStickyNodes.forEach((node) => {\n        if (node.rowIndex < this.pageBoundsService.getFirstRow()) {\n          extraHeight += node.rowHeight;\n        }\n      });\n      if (extraHeight > this.topContainerHeight) {\n        extraHeight = this.topContainerHeight;\n      }\n      this.setOffsetTop(extraHeight);\n    } else {\n      newStickyNodes.forEach((node) => {\n        if (node.rowIndex > this.pageBoundsService.getLastRow()) {\n          extraHeight += node.rowHeight;\n        }\n      });\n      if (extraHeight > this.bottomContainerHeight) {\n        extraHeight = this.bottomContainerHeight;\n      }\n      this.setOffsetBottom(extraHeight);\n    }\n    if (!hasSomethingChanged) {\n      return false;\n    }\n    if (isTop) {\n      this.stickyTopRowCtrls = newCtrlsList;\n    } else {\n      this.stickyBottomRowCtrls = newCtrlsList;\n    }\n    return true;\n  }\n  ensureRowHeightsValid() {\n    let anyChange = false;\n    const updateRowHeight = (ctrl) => {\n      const rowNode = ctrl.getRowNode();\n      if (rowNode.rowHeightEstimated) {\n        const rowHeight = this.gos.getRowHeightForNode(rowNode);\n        rowNode.setRowHeight(rowHeight.height);\n        anyChange = true;\n      }\n    };\n    this.stickyTopRowCtrls.forEach(updateRowHeight);\n    this.stickyBottomRowCtrls.forEach(updateRowHeight);\n    return anyChange;\n  }\n};\n\n// community-modules/core/src/rendering/rowRenderer.ts\nvar RowRenderer = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowRenderer\";\n    this.destroyFuncsForColumnListeners = [];\n    // map of row ids to row objects. keeps track of which elements\n    // are rendered for which rows in the dom.\n    this.rowCtrlsByRowIndex = {};\n    this.zombieRowCtrls = {};\n    this.allRowCtrls = [];\n    this.topRowCtrls = [];\n    this.bottomRowCtrls = [];\n    // we only allow one refresh at a time, otherwise the internal memory structure here\n    // will get messed up. this can happen if the user has a cellRenderer, and inside the\n    // renderer they call an API method that results in another pass of the refresh,\n    // then it will be trying to draw rows in the middle of a refresh.\n    this.refreshInProgress = false;\n    this.dataFirstRenderedFired = false;\n    this.setupRangeSelectionListeners = () => {\n      const onRangeSelectionChanged = () => {\n        this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onRangeSelectionChanged());\n      };\n      const onColumnMovedPinnedVisible = () => {\n        this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.updateRangeBordersIfRangeCount());\n      };\n      const addRangeSelectionListeners = () => {\n        this.eventService.addEventListener(\"rangeSelectionChanged\", onRangeSelectionChanged);\n        this.eventService.addEventListener(\"columnMoved\", onColumnMovedPinnedVisible);\n        this.eventService.addEventListener(\"columnPinned\", onColumnMovedPinnedVisible);\n        this.eventService.addEventListener(\"columnVisible\", onColumnMovedPinnedVisible);\n      };\n      const removeRangeSelectionListeners = () => {\n        this.eventService.removeEventListener(\"rangeSelectionChanged\", onRangeSelectionChanged);\n        this.eventService.removeEventListener(\"columnMoved\", onColumnMovedPinnedVisible);\n        this.eventService.removeEventListener(\"columnPinned\", onColumnMovedPinnedVisible);\n        this.eventService.removeEventListener(\"columnVisible\", onColumnMovedPinnedVisible);\n      };\n      this.addDestroyFunc(() => removeRangeSelectionListeners());\n      this.addManagedPropertyListener(\"enableRangeSelection\", (params) => {\n        const isEnabled = params.currentValue;\n        if (isEnabled) {\n          addRangeSelectionListeners();\n        } else {\n          removeRangeSelectionListeners();\n        }\n      });\n      const rangeSelectionEnabled = this.gos.get(\"enableRangeSelection\");\n      if (rangeSelectionEnabled) {\n        addRangeSelectionListeners();\n      }\n    };\n  }\n  wireBeans(beans) {\n    this.animationFrameService = beans.animationFrameService;\n    this.paginationService = beans.paginationService;\n    this.pageBoundsService = beans.pageBoundsService;\n    this.columnModel = beans.columnModel;\n    this.visibleColsService = beans.visibleColsService;\n    this.pinnedRowModel = beans.pinnedRowModel;\n    this.rowModel = beans.rowModel;\n    this.focusService = beans.focusService;\n    this.beans = beans;\n    this.rowContainerHeightService = beans.rowContainerHeightService;\n    this.ctrlsService = beans.ctrlsService;\n    this.environment = beans.environment;\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady((p) => {\n      this.gridBodyCtrl = p.gridBodyCtrl;\n      this.initialise();\n    });\n  }\n  initialise() {\n    this.addManagedEventListeners({\n      paginationChanged: this.onPageLoaded.bind(this),\n      pinnedRowDataChanged: this.onPinnedRowDataChanged.bind(this),\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this),\n      bodyScroll: this.onBodyScroll.bind(this),\n      bodyHeightChanged: this.redraw.bind(this)\n    });\n    this.addManagedPropertyListeners([\"domLayout\", \"embedFullWidthRows\"], () => this.onDomLayoutChanged());\n    this.addManagedPropertyListeners([\"suppressMaxRenderedRowRestriction\", \"rowBuffer\"], () => this.redraw());\n    this.addManagedPropertyListener(\"suppressCellFocus\", (e) => this.onSuppressCellFocusChanged(e.currentValue));\n    this.addManagedPropertyListeners(\n      [\n        \"getBusinessKeyForNode\",\n        \"fullWidthCellRenderer\",\n        \"fullWidthCellRendererParams\",\n        \"rowStyle\",\n        \"getRowStyle\",\n        \"rowClass\",\n        \"getRowClass\",\n        \"rowClassRules\",\n        \"suppressStickyTotalRow\",\n        \"groupRowRenderer\",\n        \"groupRowRendererParams\",\n        // maybe only needs to refresh FW rows...\n        \"loadingCellRenderer\",\n        \"loadingCellRendererParams\",\n        \"detailCellRenderer\",\n        \"detailCellRendererParams\",\n        \"enableRangeSelection\",\n        \"enableCellTextSelection\"\n      ],\n      () => this.redrawRows()\n    );\n    if (this.gos.isGroupRowsSticky()) {\n      const rowModelType = this.rowModel.getType();\n      if (rowModelType === \"clientSide\" || rowModelType === \"serverSide\") {\n        this.stickyRowFeature = this.createManagedBean(\n          new StickyRowFeature(this.createRowCon.bind(this), this.destroyRowCtrls.bind(this))\n        );\n      }\n    }\n    this.registerCellEventListeners();\n    this.initialiseCache();\n    this.printLayout = this.gos.isDomLayout(\"print\");\n    this.embedFullWidthRows = this.printLayout || this.gos.get(\"embedFullWidthRows\");\n    this.redrawAfterModelUpdate();\n  }\n  initialiseCache() {\n    if (this.gos.get(\"keepDetailRows\")) {\n      const countProp = this.getKeepDetailRowsCount();\n      const count = countProp != null ? countProp : 3;\n      this.cachedRowCtrls = new RowCtrlCache(count);\n    }\n  }\n  getKeepDetailRowsCount() {\n    return this.gos.get(\"keepDetailRowsCount\");\n  }\n  getStickyTopRowCtrls() {\n    if (!this.stickyRowFeature) {\n      return [];\n    }\n    return this.stickyRowFeature.getStickyTopRowCtrls();\n  }\n  getStickyBottomRowCtrls() {\n    if (!this.stickyRowFeature) {\n      return [];\n    }\n    return this.stickyRowFeature.getStickyBottomRowCtrls();\n  }\n  updateAllRowCtrls() {\n    const liveList = _getAllValuesInObject(this.rowCtrlsByRowIndex);\n    const zombieList = _getAllValuesInObject(this.zombieRowCtrls);\n    const cachedList = this.cachedRowCtrls ? this.cachedRowCtrls.getEntries() : [];\n    if (zombieList.length > 0 || cachedList.length > 0) {\n      this.allRowCtrls = [...liveList, ...zombieList, ...cachedList];\n    } else {\n      this.allRowCtrls = liveList;\n    }\n  }\n  onCellFocusChanged(event) {\n    this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onCellFocused(event));\n    this.getFullWidthRowCtrls().forEach((rowCtrl) => rowCtrl.onFullWidthRowFocused(event));\n  }\n  onSuppressCellFocusChanged(suppressCellFocus) {\n    this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onSuppressCellFocusChanged(suppressCellFocus));\n    this.getFullWidthRowCtrls().forEach((rowCtrl) => rowCtrl.onSuppressCellFocusChanged(suppressCellFocus));\n  }\n  // in a clean design, each cell would register for each of these events. however when scrolling, all the cells\n  // registering and de-registering for events is a performance bottleneck. so we register here once and inform\n  // all active cells.\n  registerCellEventListeners() {\n    this.addManagedEventListeners({\n      cellFocused: (event) => {\n        this.onCellFocusChanged(event);\n      },\n      cellFocusCleared: () => this.onCellFocusChanged(),\n      flashCells: (event) => {\n        this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onFlashCells(event));\n      },\n      columnHoverChanged: () => {\n        this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onColumnHover());\n      },\n      displayedColumnsChanged: () => {\n        this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onDisplayedColumnsChanged());\n      },\n      displayedColumnsWidthChanged: () => {\n        if (this.printLayout) {\n          this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onLeftChanged());\n        }\n      }\n    });\n    this.setupRangeSelectionListeners();\n    this.refreshListenersToColumnsForCellComps();\n    this.addManagedEventListeners({\n      gridColumnsChanged: this.refreshListenersToColumnsForCellComps.bind(this)\n    });\n    this.addDestroyFunc(this.removeGridColumnListeners.bind(this));\n  }\n  // executes all functions in destroyFuncsForColumnListeners and then clears the list\n  removeGridColumnListeners() {\n    this.destroyFuncsForColumnListeners.forEach((func) => func());\n    this.destroyFuncsForColumnListeners.length = 0;\n  }\n  // this function adds listeners onto all the grid columns, which are the column that we could have cellComps for.\n  // when the grid columns change, we add listeners again. in an ideal design, each CellComp would just register to\n  // the column it belongs to on creation, however this was a bottleneck with the number of cells, so do it here\n  // once instead.\n  refreshListenersToColumnsForCellComps() {\n    this.removeGridColumnListeners();\n    const cols = this.columnModel.getCols();\n    cols.forEach((col) => {\n      const forEachCellWithThisCol = (callback) => {\n        this.getAllCellCtrls().forEach((cellCtrl) => {\n          if (cellCtrl.getColumn() === col) {\n            callback(cellCtrl);\n          }\n        });\n      };\n      const leftChangedListener = () => {\n        forEachCellWithThisCol((cellCtrl) => cellCtrl.onLeftChanged());\n      };\n      const widthChangedListener = () => {\n        forEachCellWithThisCol((cellCtrl) => cellCtrl.onWidthChanged());\n      };\n      const firstRightPinnedChangedListener = () => {\n        forEachCellWithThisCol((cellCtrl) => cellCtrl.onFirstRightPinnedChanged());\n      };\n      const lastLeftPinnedChangedListener = () => {\n        forEachCellWithThisCol((cellCtrl) => cellCtrl.onLastLeftPinnedChanged());\n      };\n      const colDefChangedListener = () => {\n        forEachCellWithThisCol((cellCtrl) => cellCtrl.onColDefChanged());\n      };\n      col.addEventListener(\"leftChanged\", leftChangedListener);\n      col.addEventListener(\"widthChanged\", widthChangedListener);\n      col.addEventListener(\"firstRightPinnedChanged\", firstRightPinnedChangedListener);\n      col.addEventListener(\"lastLeftPinnedChanged\", lastLeftPinnedChangedListener);\n      col.addEventListener(\"colDefChanged\", colDefChangedListener);\n      this.destroyFuncsForColumnListeners.push(() => {\n        col.removeEventListener(\"leftChanged\", leftChangedListener);\n        col.removeEventListener(\"widthChanged\", widthChangedListener);\n        col.removeEventListener(\"firstRightPinnedChanged\", firstRightPinnedChangedListener);\n        col.removeEventListener(\"lastLeftPinnedChanged\", lastLeftPinnedChangedListener);\n        col.removeEventListener(\"colDefChanged\", colDefChangedListener);\n      });\n    });\n  }\n  onDomLayoutChanged() {\n    const printLayout = this.gos.isDomLayout(\"print\");\n    const embedFullWidthRows = printLayout || this.gos.get(\"embedFullWidthRows\");\n    const destroyRows = embedFullWidthRows !== this.embedFullWidthRows || this.printLayout !== printLayout;\n    this.printLayout = printLayout;\n    this.embedFullWidthRows = embedFullWidthRows;\n    if (destroyRows) {\n      this.redrawAfterModelUpdate({ domLayoutChanged: true });\n    }\n  }\n  // for row models that have datasources, when we update the datasource, we need to force the rowRenderer\n  // to redraw all rows. otherwise the old rows from the old datasource will stay displayed.\n  datasourceChanged() {\n    this.firstRenderedRow = 0;\n    this.lastRenderedRow = -1;\n    const rowIndexesToRemove = Object.keys(this.rowCtrlsByRowIndex);\n    this.removeRowCtrls(rowIndexesToRemove);\n  }\n  onPageLoaded(event) {\n    const params = {\n      recycleRows: event.keepRenderedRows,\n      animate: event.animate,\n      newData: event.newData,\n      newPage: event.newPage,\n      // because this is a model updated event (not pinned rows), we\n      // can skip updating the pinned rows. this is needed so that if user\n      // is doing transaction updates, the pinned rows are not getting constantly\n      // trashed - or editing cells in pinned rows are not refreshed and put into read mode\n      onlyBody: true\n    };\n    this.redrawAfterModelUpdate(params);\n  }\n  getAllCellsForColumn(column) {\n    const res = [];\n    this.getAllRowCtrls().forEach((rowCtrl) => {\n      const eCell = rowCtrl.getCellElement(column);\n      if (eCell) {\n        res.push(eCell);\n      }\n    });\n    return res;\n  }\n  refreshFloatingRowComps() {\n    this.refreshFloatingRows(this.topRowCtrls, \"top\");\n    this.refreshFloatingRows(this.bottomRowCtrls, \"bottom\");\n  }\n  getTopRowCtrls() {\n    return this.topRowCtrls;\n  }\n  getCentreRowCtrls() {\n    return this.allRowCtrls;\n  }\n  getBottomRowCtrls() {\n    return this.bottomRowCtrls;\n  }\n  /**\n   * Determines which row controllers need to be destroyed and re-created vs which ones can\n   * be re-used.\n   *\n   * This is operation is to pinned/floating rows as `this.recycleRows` is to normal/body rows.\n   *\n   * All `RowCtrl` instances in `rowCtrls` that don't correspond to `RowNode` instances in `rowNodes` are destroyed.\n   * All `RowNode` instances in `rowNodes` that don't correspond to `RowCtrl` instances in `rowCtrls` are created.\n   * All instances in `rowCtrls` must be in the same order as their corresponding nodes in `rowNodes`.\n   *\n   * @param rowCtrls The list of existing row controllers\n   * @param rowNodes The canonical list of row nodes that should have associated controllers\n   */\n  refreshFloatingRows(rowCtrls, floating) {\n    const { pinnedRowModel, beans, printLayout } = this;\n    const rowCtrlMap = Object.fromEntries(rowCtrls.map((ctrl) => [ctrl.getRowNode().id, ctrl]));\n    pinnedRowModel.forEachPinnedRow(floating, (node, i) => {\n      const rowCtrl = rowCtrls[i];\n      const rowCtrlDoesNotExist = rowCtrl && pinnedRowModel.getPinnedRowById(rowCtrl.getRowNode().id, floating) === void 0;\n      if (rowCtrlDoesNotExist) {\n        rowCtrl.destroyFirstPass();\n        rowCtrl.destroySecondPass();\n      }\n      if (node.id in rowCtrlMap) {\n        rowCtrls[i] = rowCtrlMap[node.id];\n        delete rowCtrlMap[node.id];\n      } else {\n        rowCtrls[i] = new RowCtrl(node, beans, false, false, printLayout);\n      }\n    });\n    const rowNodeCount = floating === \"top\" ? pinnedRowModel.getPinnedTopRowCount() : pinnedRowModel.getPinnedBottomRowCount();\n    rowCtrls.length = rowNodeCount;\n  }\n  onPinnedRowDataChanged() {\n    const params = {\n      recycleRows: true\n    };\n    this.redrawAfterModelUpdate(params);\n  }\n  redrawRow(rowNode, suppressEvent = false) {\n    if (rowNode.sticky) {\n      this.stickyRowFeature.refreshStickyNode(rowNode);\n    } else if (this.cachedRowCtrls?.has(rowNode)) {\n      this.cachedRowCtrls.removeRow(rowNode);\n      return;\n    } else {\n      const destroyAndRecreateCtrl = (dataStruct) => {\n        const ctrl = dataStruct[rowNode.rowIndex];\n        if (!ctrl) {\n          return;\n        }\n        if (ctrl.getRowNode() !== rowNode) {\n          return;\n        }\n        ctrl.destroyFirstPass();\n        ctrl.destroySecondPass();\n        dataStruct[rowNode.rowIndex] = this.createRowCon(rowNode, false, false);\n      };\n      switch (rowNode.rowPinned) {\n        case \"top\":\n          destroyAndRecreateCtrl(this.topRowCtrls);\n          break;\n        case \"bottom\":\n          destroyAndRecreateCtrl(this.bottomRowCtrls);\n          break;\n        default:\n          destroyAndRecreateCtrl(this.rowCtrlsByRowIndex);\n          this.updateAllRowCtrls();\n      }\n    }\n    if (!suppressEvent) {\n      this.dispatchDisplayedRowsChanged(false);\n    }\n  }\n  redrawRows(rowNodes) {\n    const partialRefresh = rowNodes != null;\n    if (partialRefresh) {\n      rowNodes?.forEach((node) => this.redrawRow(node, true));\n      this.dispatchDisplayedRowsChanged(false);\n      return;\n    }\n    this.redrawAfterModelUpdate();\n  }\n  getCellToRestoreFocusToAfterRefresh(params) {\n    const focusedCell = params?.suppressKeepFocus ? null : this.focusService.getFocusCellToUseAfterRefresh();\n    if (focusedCell == null) {\n      return null;\n    }\n    const activeElement = this.gos.getActiveDomElement();\n    const cellDomData = this.gos.getDomData(activeElement, CellCtrl.DOM_DATA_KEY_CELL_CTRL);\n    const rowDomData = this.gos.getDomData(activeElement, RowCtrl.DOM_DATA_KEY_ROW_CTRL);\n    const gridElementFocused = cellDomData || rowDomData;\n    return gridElementFocused ? focusedCell : null;\n  }\n  // gets called from:\n  // +) initialisation (in registerGridComp) params = null\n  // +) onDomLayoutChanged, params = null\n  // +) onPageLoaded, recycleRows, animate, newData, newPage from event, onlyBody=true\n  // +) onPinnedRowDataChanged, recycleRows = true\n  // +) redrawRows (from Grid API), recycleRows = true/false\n  redrawAfterModelUpdate(params = {}) {\n    this.getLockOnRefresh();\n    const focusedCell = this.getCellToRestoreFocusToAfterRefresh(params);\n    this.updateContainerHeights();\n    this.scrollToTopIfNewData(params);\n    const recycleRows = !params.domLayoutChanged && !!params.recycleRows;\n    const animate = params.animate && this.gos.isAnimateRows();\n    const rowsToRecycle = recycleRows ? this.getRowsToRecycle() : null;\n    if (!recycleRows) {\n      this.removeAllRowComps();\n    }\n    this.workOutFirstAndLastRowsToRender();\n    if (this.stickyRowFeature) {\n      this.stickyRowFeature.checkStickyRows();\n      const extraHeight = this.stickyRowFeature.getExtraTopHeight() + this.stickyRowFeature.getExtraBottomHeight();\n      if (extraHeight) {\n        this.updateContainerHeights(extraHeight);\n      }\n    }\n    this.recycleRows(rowsToRecycle, animate);\n    this.gridBodyCtrl.updateRowCount();\n    if (!params.onlyBody) {\n      this.refreshFloatingRowComps();\n    }\n    this.dispatchDisplayedRowsChanged();\n    if (focusedCell != null) {\n      this.restoreFocusedCell(focusedCell);\n    }\n    this.releaseLockOnRefresh();\n  }\n  scrollToTopIfNewData(params) {\n    const scrollToTop = params.newData || params.newPage;\n    const suppressScrollToTop = this.gos.get(\"suppressScrollOnNewData\");\n    if (scrollToTop && !suppressScrollToTop) {\n      this.gridBodyCtrl.getScrollFeature().scrollToTop();\n      this.stickyRowFeature?.resetOffsets();\n    }\n  }\n  updateContainerHeights(additionalHeight = 0) {\n    if (this.printLayout) {\n      this.rowContainerHeightService.setModelHeight(null);\n      return;\n    }\n    let containerHeight = this.pageBoundsService.getCurrentPageHeight();\n    if (containerHeight === 0) {\n      containerHeight = 1;\n    }\n    this.rowContainerHeightService.setModelHeight(containerHeight + additionalHeight);\n  }\n  getLockOnRefresh() {\n    if (this.refreshInProgress) {\n      const frameworkMessage = this.frameworkOverrides.getLockOnRefreshError?.() ?? \"\";\n      throw new Error(\n        \"AG Grid: cannot get grid to draw rows when it is in the middle of drawing rows. Your code probably called a grid API method while the grid was in the render stage. To overcome this, put the API call into a timeout, e.g. instead of api.redrawRows(), call setTimeout(function() { api.redrawRows(); }, 0). To see what part of your code that caused the refresh check this stacktrace.\" + frameworkMessage\n      );\n    }\n    this.refreshInProgress = true;\n    this.frameworkOverrides.getLockOnRefresh?.();\n  }\n  releaseLockOnRefresh() {\n    this.refreshInProgress = false;\n    this.frameworkOverrides.releaseLockOnRefresh?.();\n  }\n  isRefreshInProgress() {\n    return this.refreshInProgress;\n  }\n  // sets the focus to the provided cell, if the cell is provided. this way, the user can call refresh without\n  // worry about the focus been lost. this is important when the user is using keyboard navigation to do edits\n  // and the cellEditor is calling 'refresh' to get other cells to update (as other cells might depend on the\n  // edited cell).\n  restoreFocusedCell(cellPosition) {\n    if (!cellPosition) {\n      return;\n    }\n    this.focusService.restoreFocusedCell(cellPosition, () => {\n      this.onCellFocusChanged(\n        this.gos.addGridCommonParams({\n          rowIndex: cellPosition.rowIndex,\n          column: cellPosition.column,\n          rowPinned: cellPosition.rowPinned,\n          forceBrowserFocus: true,\n          preventScrollOnBrowserFocus: true,\n          type: \"cellFocused\"\n        })\n      );\n    });\n  }\n  stopEditing(cancel = false) {\n    this.getAllRowCtrls().forEach((rowCtrl) => {\n      rowCtrl.stopEditing(cancel);\n    });\n  }\n  getAllCellCtrls() {\n    const res = [];\n    const rowCtrls = this.getAllRowCtrls();\n    const rowCtrlsLength = rowCtrls.length;\n    for (let i = 0; i < rowCtrlsLength; i++) {\n      const cellCtrls = rowCtrls[i].getAllCellCtrls();\n      const cellCtrlsLength = cellCtrls.length;\n      for (let j = 0; j < cellCtrlsLength; j++) {\n        res.push(cellCtrls[j]);\n      }\n    }\n    return res;\n  }\n  getAllRowCtrls() {\n    const stickyTopRowCtrls = this.stickyRowFeature && this.stickyRowFeature.getStickyTopRowCtrls() || [];\n    const stickyBottomRowCtrls = this.stickyRowFeature && this.stickyRowFeature.getStickyBottomRowCtrls() || [];\n    const res = [...this.topRowCtrls, ...this.bottomRowCtrls, ...stickyTopRowCtrls, ...stickyBottomRowCtrls];\n    for (const key in this.rowCtrlsByRowIndex) {\n      res.push(this.rowCtrlsByRowIndex[key]);\n    }\n    return res;\n  }\n  addRenderedRowListener(eventName, rowIndex, callback) {\n    const rowComp = this.rowCtrlsByRowIndex[rowIndex];\n    if (rowComp) {\n      rowComp.addEventListener(eventName, callback);\n    }\n  }\n  flashCells(params = {}) {\n    this.getCellCtrls(params.rowNodes, params.columns).forEach(\n      (cellCtrl) => cellCtrl.flashCell(params)\n    );\n  }\n  refreshCells(params = {}) {\n    const refreshCellParams = {\n      forceRefresh: params.force,\n      newData: false,\n      suppressFlash: params.suppressFlash\n    };\n    for (const cellCtrl of this.getCellCtrls(params.rowNodes, params.columns)) {\n      cellCtrl.refreshOrDestroyCell(refreshCellParams);\n    }\n    this.refreshFullWidth(params.rowNodes);\n  }\n  refreshFullWidth(rowNodes) {\n    if (!rowNodes) {\n      return;\n    }\n    let cellFocused = null;\n    if (this.stickyRowFeature && _browserSupportsPreventScroll()) {\n      cellFocused = this.getCellToRestoreFocusToAfterRefresh() || null;\n    }\n    for (const rowCtrl of this.getRowCtrls(rowNodes)) {\n      if (!rowCtrl.isFullWidth()) {\n        continue;\n      }\n      const refreshed = rowCtrl.refreshFullWidth();\n      if (!refreshed) {\n        this.redrawRow(rowCtrl.getRowNode(), true);\n      }\n    }\n    this.dispatchDisplayedRowsChanged(false);\n    if (cellFocused) {\n      this.restoreFocusedCell(cellFocused);\n    }\n  }\n  getCellRendererInstances(params) {\n    const cellRenderers = this.getCellCtrls(params.rowNodes, params.columns).map((cellCtrl) => cellCtrl.getCellRenderer()).filter((renderer) => renderer != null);\n    if (params.columns?.length) {\n      return cellRenderers;\n    }\n    const fullWidthRenderers = [];\n    const rowIdMap = this.mapRowNodes(params.rowNodes);\n    this.getAllRowCtrls().forEach((rowCtrl) => {\n      if (rowIdMap && !this.isRowInMap(rowCtrl.getRowNode(), rowIdMap)) {\n        return;\n      }\n      if (!rowCtrl.isFullWidth()) {\n        return;\n      }\n      const renderers = rowCtrl.getFullWidthCellRenderers();\n      for (let i = 0; i < renderers.length; i++) {\n        const renderer = renderers[i];\n        if (renderer != null) {\n          fullWidthRenderers.push(renderer);\n        }\n      }\n    });\n    return [...fullWidthRenderers, ...cellRenderers];\n  }\n  getCellEditorInstances(params) {\n    const res = [];\n    this.getCellCtrls(params.rowNodes, params.columns).forEach((cellCtrl) => {\n      const cellEditor = cellCtrl.getCellEditor();\n      if (cellEditor) {\n        res.push(cellEditor);\n      }\n    });\n    return res;\n  }\n  getEditingCells() {\n    const res = [];\n    this.getAllCellCtrls().forEach((cellCtrl) => {\n      if (cellCtrl.isEditing()) {\n        const cellPosition = cellCtrl.getCellPosition();\n        res.push(cellPosition);\n      }\n    });\n    return res;\n  }\n  mapRowNodes(rowNodes) {\n    if (!rowNodes) {\n      return;\n    }\n    const res = {\n      top: {},\n      bottom: {},\n      normal: {}\n    };\n    rowNodes.forEach((rowNode) => {\n      const id = rowNode.id;\n      switch (rowNode.rowPinned) {\n        case \"top\":\n          res.top[id] = rowNode;\n          break;\n        case \"bottom\":\n          res.bottom[id] = rowNode;\n          break;\n        default:\n          res.normal[id] = rowNode;\n          break;\n      }\n    });\n    return res;\n  }\n  isRowInMap(rowNode, rowIdsMap) {\n    const id = rowNode.id;\n    const floating = rowNode.rowPinned;\n    switch (floating) {\n      case \"top\":\n        return rowIdsMap.top[id] != null;\n      case \"bottom\":\n        return rowIdsMap.bottom[id] != null;\n      default:\n        return rowIdsMap.normal[id] != null;\n    }\n  }\n  /**\n   * @param rowNodes if provided, returns the RowCtrls for the provided rowNodes. otherwise returns all RowCtrls.\n   */\n  getRowCtrls(rowNodes) {\n    const rowIdsMap = this.mapRowNodes(rowNodes);\n    const allRowCtrls = this.getAllRowCtrls();\n    if (!rowNodes || !rowIdsMap) {\n      return allRowCtrls;\n    }\n    return allRowCtrls.filter((rowCtrl) => {\n      const rowNode = rowCtrl.getRowNode();\n      return this.isRowInMap(rowNode, rowIdsMap);\n    });\n  }\n  // returns CellCtrl's that match the provided rowNodes and columns. eg if one row node\n  // and two columns provided, that identifies 4 cells, so 4 CellCtrl's returned.\n  getCellCtrls(rowNodes, columns) {\n    let colIdsMap;\n    if (_exists(columns)) {\n      colIdsMap = {};\n      columns.forEach((colKey) => {\n        const column = this.columnModel.getCol(colKey);\n        if (_exists(column)) {\n          colIdsMap[column.getId()] = true;\n        }\n      });\n    }\n    const res = [];\n    this.getRowCtrls(rowNodes).forEach((rowCtrl) => {\n      rowCtrl.getAllCellCtrls().forEach((cellCtrl) => {\n        const colId = cellCtrl.getColumn().getId();\n        const excludeColFromRefresh = colIdsMap && !colIdsMap[colId];\n        if (excludeColFromRefresh) {\n          return;\n        }\n        res.push(cellCtrl);\n      });\n    });\n    return res;\n  }\n  destroy() {\n    this.removeAllRowComps();\n    super.destroy();\n  }\n  removeAllRowComps() {\n    const rowIndexesToRemove = Object.keys(this.rowCtrlsByRowIndex);\n    this.removeRowCtrls(rowIndexesToRemove);\n    if (this.stickyRowFeature) {\n      this.stickyRowFeature.destroyStickyCtrls();\n    }\n  }\n  getRowsToRecycle() {\n    const stubNodeIndexes = [];\n    _iterateObject(this.rowCtrlsByRowIndex, (index, rowCtrl) => {\n      const stubNode = rowCtrl.getRowNode().id == null;\n      if (stubNode) {\n        stubNodeIndexes.push(index);\n      }\n    });\n    this.removeRowCtrls(stubNodeIndexes);\n    const ctrlsByIdMap = {};\n    _iterateObject(this.rowCtrlsByRowIndex, (_, rowCtrl) => {\n      const rowNode = rowCtrl.getRowNode();\n      ctrlsByIdMap[rowNode.id] = rowCtrl;\n    });\n    this.rowCtrlsByRowIndex = {};\n    return ctrlsByIdMap;\n  }\n  // takes array of row indexes\n  removeRowCtrls(rowsToRemove, suppressAnimation = false) {\n    rowsToRemove.forEach((indexToRemove) => {\n      const rowCtrl = this.rowCtrlsByRowIndex[indexToRemove];\n      if (rowCtrl) {\n        rowCtrl.destroyFirstPass(suppressAnimation);\n        rowCtrl.destroySecondPass();\n      }\n      delete this.rowCtrlsByRowIndex[indexToRemove];\n    });\n  }\n  onBodyScroll(e) {\n    if (e.direction !== \"vertical\") {\n      return;\n    }\n    this.redraw({ afterScroll: true });\n  }\n  // gets called when rows don't change, but viewport does, so after:\n  // 1) height of grid body changes, ie number of displayed rows has changed\n  // 2) grid scrolled to new position\n  // 3) ensure index visible (which is a scroll)\n  redraw(params = {}) {\n    const { afterScroll } = params;\n    let cellFocused;\n    if (this.stickyRowFeature && _browserSupportsPreventScroll()) {\n      cellFocused = this.getCellToRestoreFocusToAfterRefresh() || void 0;\n    }\n    const oldFirstRow = this.firstRenderedRow;\n    const oldLastRow = this.lastRenderedRow;\n    this.workOutFirstAndLastRowsToRender();\n    let hasStickyRowChanges = false;\n    if (this.stickyRowFeature) {\n      hasStickyRowChanges = this.stickyRowFeature.checkStickyRows();\n      const extraHeight = this.stickyRowFeature.getExtraTopHeight() + this.stickyRowFeature.getExtraBottomHeight();\n      if (extraHeight) {\n        this.updateContainerHeights(extraHeight);\n      }\n    }\n    const rangeChanged = this.firstRenderedRow !== oldFirstRow || this.lastRenderedRow !== oldLastRow;\n    if (afterScroll && !hasStickyRowChanges && !rangeChanged) {\n      return;\n    }\n    this.getLockOnRefresh();\n    this.recycleRows(null, false, afterScroll);\n    this.releaseLockOnRefresh();\n    this.dispatchDisplayedRowsChanged(afterScroll && !hasStickyRowChanges);\n    if (cellFocused != null) {\n      const newFocusedCell = this.getCellToRestoreFocusToAfterRefresh();\n      if (cellFocused != null && newFocusedCell == null) {\n        this.animationFrameService.flushAllFrames();\n        this.restoreFocusedCell(cellFocused);\n      }\n    }\n  }\n  removeRowCompsNotToDraw(indexesToDraw, suppressAnimation) {\n    const indexesToDrawMap = {};\n    indexesToDraw.forEach((index) => indexesToDrawMap[index] = true);\n    const existingIndexes = Object.keys(this.rowCtrlsByRowIndex);\n    const indexesNotToDraw = existingIndexes.filter((index) => !indexesToDrawMap[index]);\n    this.removeRowCtrls(indexesNotToDraw, suppressAnimation);\n  }\n  calculateIndexesToDraw(rowsToRecycle) {\n    const indexesToDraw = _createArrayOfNumbers(this.firstRenderedRow, this.lastRenderedRow);\n    const checkRowToDraw = (indexStr, rowComp) => {\n      const index = rowComp.getRowNode().rowIndex;\n      if (index == null) {\n        return;\n      }\n      if (index < this.firstRenderedRow || index > this.lastRenderedRow) {\n        if (this.doNotUnVirtualiseRow(rowComp)) {\n          indexesToDraw.push(index);\n        }\n      }\n    };\n    _iterateObject(this.rowCtrlsByRowIndex, checkRowToDraw);\n    _iterateObject(rowsToRecycle, checkRowToDraw);\n    indexesToDraw.sort((a, b) => a - b);\n    const ret = [];\n    for (let i = 0; i < indexesToDraw.length; i++) {\n      const currRow = indexesToDraw[i];\n      const rowNode = this.rowModel.getRow(currRow);\n      if (rowNode && !rowNode.sticky) {\n        ret.push(currRow);\n      }\n    }\n    return ret;\n  }\n  recycleRows(rowsToRecycle, animate = false, afterScroll = false) {\n    const indexesToDraw = this.calculateIndexesToDraw(rowsToRecycle);\n    if (this.printLayout || afterScroll) {\n      animate = false;\n    }\n    this.removeRowCompsNotToDraw(indexesToDraw, !animate);\n    const rowCtrls = [];\n    indexesToDraw.forEach((rowIndex) => {\n      const rowCtrl = this.createOrUpdateRowCtrl(rowIndex, rowsToRecycle, animate, afterScroll);\n      if (_exists(rowCtrl)) {\n        rowCtrls.push(rowCtrl);\n      }\n    });\n    if (rowsToRecycle) {\n      const useAnimationFrame = afterScroll && !this.gos.get(\"suppressAnimationFrame\") && !this.printLayout;\n      if (useAnimationFrame) {\n        this.beans.animationFrameService.addDestroyTask(() => {\n          this.destroyRowCtrls(rowsToRecycle, animate);\n          this.updateAllRowCtrls();\n          this.dispatchDisplayedRowsChanged();\n        });\n      } else {\n        this.destroyRowCtrls(rowsToRecycle, animate);\n      }\n    }\n    this.updateAllRowCtrls();\n  }\n  dispatchDisplayedRowsChanged(afterScroll = false) {\n    this.eventService.dispatchEvent({\n      type: \"displayedRowsChanged\",\n      afterScroll\n    });\n  }\n  onDisplayedColumnsChanged() {\n    const pinningLeft = this.visibleColsService.isPinningLeft();\n    const pinningRight = this.visibleColsService.isPinningRight();\n    const atLeastOneChanged = this.pinningLeft !== pinningLeft || pinningRight !== this.pinningRight;\n    if (atLeastOneChanged) {\n      this.pinningLeft = pinningLeft;\n      this.pinningRight = pinningRight;\n      if (this.embedFullWidthRows) {\n        this.redrawFullWidthEmbeddedRows();\n      }\n    }\n  }\n  // when embedding, what gets showed in each section depends on what is pinned. eg if embedding group expand / collapse,\n  // then it should go into the pinned left area if pinning left, or the center area if not pinning.\n  redrawFullWidthEmbeddedRows() {\n    const rowsToRemove = [];\n    this.getFullWidthRowCtrls().forEach((fullWidthCtrl) => {\n      const rowIndex = fullWidthCtrl.getRowNode().rowIndex;\n      rowsToRemove.push(rowIndex.toString());\n    });\n    this.refreshFloatingRowComps();\n    this.removeRowCtrls(rowsToRemove);\n    this.redraw({ afterScroll: true });\n  }\n  getFullWidthRowCtrls(rowNodes) {\n    const rowNodesMap = this.mapRowNodes(rowNodes);\n    return this.getAllRowCtrls().filter((rowCtrl) => {\n      if (!rowCtrl.isFullWidth()) {\n        return false;\n      }\n      const rowNode = rowCtrl.getRowNode();\n      if (rowNodesMap != null && !this.isRowInMap(rowNode, rowNodesMap)) {\n        return false;\n      }\n      return true;\n    });\n  }\n  createOrUpdateRowCtrl(rowIndex, rowsToRecycle, animate, afterScroll) {\n    let rowNode;\n    let rowCtrl = this.rowCtrlsByRowIndex[rowIndex];\n    if (!rowCtrl) {\n      rowNode = this.rowModel.getRow(rowIndex);\n      if (_exists(rowNode) && _exists(rowsToRecycle) && rowsToRecycle[rowNode.id] && rowNode.alreadyRendered) {\n        rowCtrl = rowsToRecycle[rowNode.id];\n        rowsToRecycle[rowNode.id] = null;\n      }\n    }\n    const creatingNewRowCtrl = !rowCtrl;\n    if (creatingNewRowCtrl) {\n      if (!rowNode) {\n        rowNode = this.rowModel.getRow(rowIndex);\n      }\n      if (_exists(rowNode)) {\n        rowCtrl = this.createRowCon(rowNode, animate, afterScroll);\n      } else {\n        return;\n      }\n    }\n    if (rowNode) {\n      rowNode.alreadyRendered = true;\n    }\n    this.rowCtrlsByRowIndex[rowIndex] = rowCtrl;\n    return rowCtrl;\n  }\n  destroyRowCtrls(rowCtrlsMap, animate) {\n    const executeInAWhileFuncs = [];\n    _iterateObject(rowCtrlsMap, (nodeId, rowCtrl) => {\n      if (!rowCtrl) {\n        return;\n      }\n      if (this.cachedRowCtrls && rowCtrl.isCacheable()) {\n        this.cachedRowCtrls.addRow(rowCtrl);\n        return;\n      }\n      rowCtrl.destroyFirstPass(!animate);\n      if (animate) {\n        this.zombieRowCtrls[rowCtrl.getInstanceId()] = rowCtrl;\n        executeInAWhileFuncs.push(() => {\n          rowCtrl.destroySecondPass();\n          delete this.zombieRowCtrls[rowCtrl.getInstanceId()];\n        });\n      } else {\n        rowCtrl.destroySecondPass();\n      }\n    });\n    if (animate) {\n      executeInAWhileFuncs.push(() => {\n        this.updateAllRowCtrls();\n        this.dispatchDisplayedRowsChanged();\n      });\n      _executeInAWhile(executeInAWhileFuncs);\n    }\n  }\n  getRowBuffer() {\n    return this.gos.get(\"rowBuffer\");\n  }\n  getRowBufferInPixels() {\n    const rowsToBuffer = this.getRowBuffer();\n    const defaultRowHeight = this.gos.getRowHeightAsNumber();\n    return rowsToBuffer * defaultRowHeight;\n  }\n  workOutFirstAndLastRowsToRender() {\n    this.rowContainerHeightService.updateOffset();\n    let newFirst;\n    let newLast;\n    if (!this.rowModel.isRowsToRender()) {\n      newFirst = 0;\n      newLast = -1;\n    } else if (this.printLayout) {\n      this.environment.refreshRowHeightVariable();\n      newFirst = this.pageBoundsService.getFirstRow();\n      newLast = this.pageBoundsService.getLastRow();\n    } else {\n      const bufferPixels = this.getRowBufferInPixels();\n      const gridBodyCtrl = this.ctrlsService.getGridBodyCtrl();\n      const suppressRowVirtualisation = this.gos.get(\"suppressRowVirtualisation\");\n      let rowHeightsChanged = false;\n      let firstPixel;\n      let lastPixel;\n      do {\n        const paginationOffset = this.pageBoundsService.getPixelOffset();\n        const { pageFirstPixel, pageLastPixel } = this.pageBoundsService.getCurrentPagePixelRange();\n        const divStretchOffset = this.rowContainerHeightService.getDivStretchOffset();\n        const bodyVRange = gridBodyCtrl.getScrollFeature().getVScrollPosition();\n        const bodyTopPixel = bodyVRange.top;\n        const bodyBottomPixel = bodyVRange.bottom;\n        if (suppressRowVirtualisation) {\n          firstPixel = pageFirstPixel + divStretchOffset;\n          lastPixel = pageLastPixel + divStretchOffset;\n        } else {\n          firstPixel = Math.max(bodyTopPixel + paginationOffset - bufferPixels, pageFirstPixel) + divStretchOffset;\n          lastPixel = Math.min(bodyBottomPixel + paginationOffset + bufferPixels, pageLastPixel) + divStretchOffset;\n        }\n        this.firstVisibleVPixel = Math.max(bodyTopPixel + paginationOffset, pageFirstPixel) + divStretchOffset;\n        this.lastVisibleVPixel = Math.min(bodyBottomPixel + paginationOffset, pageLastPixel) + divStretchOffset;\n        rowHeightsChanged = this.ensureAllRowsInRangeHaveHeightsCalculated(firstPixel, lastPixel);\n      } while (rowHeightsChanged);\n      let firstRowIndex = this.rowModel.getRowIndexAtPixel(firstPixel);\n      let lastRowIndex = this.rowModel.getRowIndexAtPixel(lastPixel);\n      const pageFirstRow = this.pageBoundsService.getFirstRow();\n      const pageLastRow = this.pageBoundsService.getLastRow();\n      if (firstRowIndex < pageFirstRow) {\n        firstRowIndex = pageFirstRow;\n      }\n      if (lastRowIndex > pageLastRow) {\n        lastRowIndex = pageLastRow;\n      }\n      newFirst = firstRowIndex;\n      newLast = lastRowIndex;\n    }\n    const rowLayoutNormal = this.gos.isDomLayout(\"normal\");\n    const suppressRowCountRestriction = this.gos.get(\"suppressMaxRenderedRowRestriction\");\n    const rowBufferMaxSize = Math.max(this.getRowBuffer(), 500);\n    if (rowLayoutNormal && !suppressRowCountRestriction) {\n      if (newLast - newFirst > rowBufferMaxSize) {\n        newLast = newFirst + rowBufferMaxSize;\n      }\n    }\n    const firstDiffers = newFirst !== this.firstRenderedRow;\n    const lastDiffers = newLast !== this.lastRenderedRow;\n    if (firstDiffers || lastDiffers) {\n      this.firstRenderedRow = newFirst;\n      this.lastRenderedRow = newLast;\n      this.eventService.dispatchEvent({\n        type: \"viewportChanged\",\n        firstRow: newFirst,\n        lastRow: newLast\n      });\n    }\n  }\n  /**\n   * This event will only be fired once, and is queued until after the browser next renders.\n   * This allows us to fire an event during the start of the render cycle, when we first see data being rendered\n   * but not execute the event until all of the data has finished being rendered to the dom.\n   */\n  dispatchFirstDataRenderedEvent() {\n    if (this.dataFirstRenderedFired) {\n      return;\n    }\n    this.dataFirstRenderedFired = true;\n    window.requestAnimationFrame(() => {\n      this.beans.eventService.dispatchEvent({\n        type: \"firstDataRendered\",\n        firstRow: this.firstRenderedRow,\n        lastRow: this.lastRenderedRow\n      });\n    });\n  }\n  ensureAllRowsInRangeHaveHeightsCalculated(topPixel, bottomPixel) {\n    const pinnedRowHeightsChanged = this.pinnedRowModel?.ensureRowHeightsValid();\n    const stickyHeightsChanged = this.stickyRowFeature?.ensureRowHeightsValid();\n    const rowModelHeightsChanged = this.rowModel.ensureRowHeightsValid(\n      topPixel,\n      bottomPixel,\n      this.pageBoundsService.getFirstRow(),\n      this.pageBoundsService.getLastRow()\n    );\n    if (rowModelHeightsChanged || stickyHeightsChanged) {\n      this.eventService.dispatchEvent({\n        type: \"recalculateRowBounds\"\n      });\n    }\n    if (stickyHeightsChanged || rowModelHeightsChanged || pinnedRowHeightsChanged) {\n      this.updateContainerHeights();\n      return true;\n    }\n    return false;\n  }\n  getFirstVisibleVerticalPixel() {\n    return this.firstVisibleVPixel;\n  }\n  getLastVisibleVerticalPixel() {\n    return this.lastVisibleVPixel;\n  }\n  getFirstVirtualRenderedRow() {\n    return this.firstRenderedRow;\n  }\n  getLastVirtualRenderedRow() {\n    return this.lastRenderedRow;\n  }\n  // check that none of the rows to remove are editing or focused as:\n  // a) if editing, we want to keep them, otherwise the user will loose the context of the edit,\n  //    eg user starts editing, enters some text, then scrolls down and then up, next time row rendered\n  //    the edit is reset - so we want to keep it rendered.\n  // b) if focused, we want ot keep keyboard focus, so if user ctrl+c, it goes to clipboard,\n  //    otherwise the user can range select and drag (with focus cell going out of the viewport)\n  //    and then ctrl+c, nothing will happen if cell is removed from dom.\n  // c) if detail record of master detail, as users complained that the context of detail rows\n  //    was getting lost when detail row out of view. eg user expands to show detail row,\n  //    then manipulates the detail panel (eg sorts the detail grid), then context is lost\n  //    after detail panel is scrolled out of / into view.\n  doNotUnVirtualiseRow(rowComp) {\n    const REMOVE_ROW = false;\n    const KEEP_ROW = true;\n    const rowNode = rowComp.getRowNode();\n    const rowHasFocus = this.focusService.isRowNodeFocused(rowNode);\n    const rowIsEditing = rowComp.isEditing();\n    const rowIsDetail = rowNode.detail;\n    const mightWantToKeepRow = rowHasFocus || rowIsEditing || rowIsDetail;\n    if (!mightWantToKeepRow) {\n      return REMOVE_ROW;\n    }\n    const rowNodePresent = this.isRowPresent(rowNode);\n    return rowNodePresent ? KEEP_ROW : REMOVE_ROW;\n  }\n  isRowPresent(rowNode) {\n    if (!this.rowModel.isRowPresent(rowNode)) {\n      return false;\n    }\n    return this.paginationService ? this.paginationService.isRowPresent(rowNode) : true;\n  }\n  createRowCon(rowNode, animate, afterScroll) {\n    const rowCtrlFromCache = this.cachedRowCtrls ? this.cachedRowCtrls.getRow(rowNode) : null;\n    if (rowCtrlFromCache) {\n      return rowCtrlFromCache;\n    }\n    const suppressAnimationFrame = this.gos.get(\"suppressAnimationFrame\");\n    const useAnimationFrameForCreate = afterScroll && !suppressAnimationFrame && !this.printLayout;\n    const res = new RowCtrl(rowNode, this.beans, animate, useAnimationFrameForCreate, this.printLayout);\n    return res;\n  }\n  getRenderedNodes() {\n    const renderedRows = this.rowCtrlsByRowIndex;\n    return Object.values(renderedRows).map((rowCtrl) => rowCtrl.getRowNode());\n  }\n  getRowByPosition(rowPosition) {\n    let rowCtrl;\n    const { rowIndex } = rowPosition;\n    switch (rowPosition.rowPinned) {\n      case \"top\":\n        rowCtrl = this.topRowCtrls[rowIndex];\n        break;\n      case \"bottom\":\n        rowCtrl = this.bottomRowCtrls[rowIndex];\n        break;\n      default:\n        rowCtrl = this.rowCtrlsByRowIndex[rowIndex];\n        if (!rowCtrl) {\n          rowCtrl = this.getStickyTopRowCtrls().find((ctrl) => ctrl.getRowNode().rowIndex === rowIndex) || null;\n          if (!rowCtrl) {\n            rowCtrl = this.getStickyBottomRowCtrls().find((ctrl) => ctrl.getRowNode().rowIndex === rowIndex) || null;\n          }\n        }\n        break;\n    }\n    return rowCtrl;\n  }\n  // returns true if any row between startIndex and endIndex is rendered. used by\n  // SSRM or IRM, as they don't want to purge visible blocks from cache.\n  isRangeInRenderedViewport(startIndex, endIndex) {\n    const parentClosed = startIndex == null || endIndex == null;\n    if (parentClosed) {\n      return false;\n    }\n    const blockAfterViewport = startIndex > this.lastRenderedRow;\n    const blockBeforeViewport = endIndex < this.firstRenderedRow;\n    const blockInsideViewport = !blockBeforeViewport && !blockAfterViewport;\n    return blockInsideViewport;\n  }\n};\nvar RowCtrlCache = class {\n  constructor(maxCount) {\n    // map for fast access\n    this.entriesMap = {};\n    // list for keeping order\n    this.entriesList = [];\n    this.maxCount = maxCount;\n  }\n  addRow(rowCtrl) {\n    this.entriesMap[rowCtrl.getRowNode().id] = rowCtrl;\n    this.entriesList.push(rowCtrl);\n    rowCtrl.setCached(true);\n    if (this.entriesList.length > this.maxCount) {\n      const rowCtrlToDestroy = this.entriesList[0];\n      rowCtrlToDestroy.destroyFirstPass();\n      rowCtrlToDestroy.destroySecondPass();\n      this.removeFromCache(rowCtrlToDestroy);\n    }\n  }\n  getRow(rowNode) {\n    if (rowNode == null || rowNode.id == null) {\n      return null;\n    }\n    const res = this.entriesMap[rowNode.id];\n    if (!res) {\n      return null;\n    }\n    this.removeFromCache(res);\n    res.setCached(false);\n    const rowNodeMismatch = res.getRowNode() != rowNode;\n    return rowNodeMismatch ? null : res;\n  }\n  has(rowNode) {\n    return this.entriesMap[rowNode.id] != null;\n  }\n  removeRow(rowNode) {\n    const rowNodeId = rowNode.id;\n    const ctrl = this.entriesMap[rowNodeId];\n    delete this.entriesMap[rowNodeId];\n    _removeFromArray(this.entriesList, ctrl);\n  }\n  removeFromCache(rowCtrl) {\n    const rowNodeId = rowCtrl.getRowNode().id;\n    delete this.entriesMap[rowNodeId];\n    _removeFromArray(this.entriesList, rowCtrl);\n  }\n  getEntries() {\n    return this.entriesList;\n  }\n};\n\n// community-modules/core/src/pinnedRowModel/pinnedRowModel.ts\nvar PinnedRowModel = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"pinnedRowModel\";\n    this.nextId = 0;\n    this.pinnedTopRows = new OrderedCache();\n    this.pinnedBottomRows = new OrderedCache();\n  }\n  wireBeans(beans) {\n    this.beans = beans;\n  }\n  postConstruct() {\n    this.setPinnedRowData(this.gos.get(\"pinnedTopRowData\"), \"top\");\n    this.setPinnedRowData(this.gos.get(\"pinnedBottomRowData\"), \"bottom\");\n    this.addManagedPropertyListener(\"pinnedTopRowData\", (e) => this.setPinnedRowData(e.currentValue, \"top\"));\n    this.addManagedPropertyListener(\"pinnedBottomRowData\", (e) => this.setPinnedRowData(e.currentValue, \"bottom\"));\n    this.addManagedEventListeners({ gridStylesChanged: this.onGridStylesChanges.bind(this) });\n  }\n  isEmpty(floating) {\n    const rows = floating === \"top\" ? this.pinnedTopRows : this.pinnedBottomRows;\n    return rows.isEmpty();\n  }\n  isRowsToRender(floating) {\n    return !this.isEmpty(floating);\n  }\n  onGridStylesChanges(e) {\n    if (e.rowHeightChanged) {\n      const estimateRowHeight = (rowNode) => {\n        rowNode.setRowHeight(rowNode.rowHeight, true);\n      };\n      this.pinnedBottomRows.forEach(estimateRowHeight);\n      this.pinnedTopRows.forEach(estimateRowHeight);\n    }\n  }\n  ensureRowHeightsValid() {\n    let anyChange = false;\n    let rowTop = 0;\n    const updateRowHeight = (rowNode) => {\n      if (rowNode.rowHeightEstimated) {\n        const rowHeight = this.gos.getRowHeightForNode(rowNode);\n        rowNode.setRowTop(rowTop);\n        rowNode.setRowHeight(rowHeight.height);\n        rowTop += rowHeight.height;\n        anyChange = true;\n      }\n    };\n    this.pinnedBottomRows?.forEach(updateRowHeight);\n    rowTop = 0;\n    this.pinnedTopRows?.forEach(updateRowHeight);\n    this.eventService.dispatchEvent({\n      type: \"pinnedHeightChanged\"\n    });\n    return anyChange;\n  }\n  setPinnedRowData(rowData, floating) {\n    this.updateNodesFromRowData(rowData, floating);\n    this.eventService.dispatchEvent({\n      type: \"pinnedRowDataChanged\"\n    });\n  }\n  /**\n   * Updates existing RowNode instances and creates new ones if necessary\n   *\n   * Setting data as `undefined` will clear row nodes\n   */\n  updateNodesFromRowData(allData, floating) {\n    const nodes = floating === \"top\" ? this.pinnedTopRows : this.pinnedBottomRows;\n    if (allData === void 0) {\n      nodes.clear();\n      return;\n    }\n    const getRowId = this.gos.getRowIdCallback();\n    const idPrefix = floating === \"top\" ? RowNode.ID_PREFIX_TOP_PINNED : RowNode.ID_PREFIX_BOTTOM_PINNED;\n    const nodesToRemove = nodes.getIds();\n    const newOrder = [];\n    const dataIds = /* @__PURE__ */ new Set();\n    let nextRowTop = 0;\n    let i = -1;\n    for (const data of allData) {\n      const id = getRowId?.({ data, level: 0, rowPinned: floating }) ?? idPrefix + this.nextId++;\n      if (dataIds.has(id)) {\n        _warnOnce(\n          \"Duplicate ID\",\n          id,\n          \"found for pinned row with data\",\n          data,\n          \"When `getRowId` is defined, it must return unique IDs for all pinned rows. Use the `rowPinned` parameter.\"\n        );\n        continue;\n      }\n      i++;\n      dataIds.add(id);\n      newOrder.push(id);\n      const existingNode = nodes.getById(id);\n      if (existingNode !== void 0) {\n        if (existingNode.data !== data) {\n          existingNode.setData(data);\n        }\n        nextRowTop += this.setRowTopAndRowIndex(existingNode, nextRowTop, i);\n        nodesToRemove.delete(id);\n      } else {\n        const rowNode = new RowNode(this.beans);\n        rowNode.id = id;\n        rowNode.data = data;\n        rowNode.rowPinned = floating;\n        nextRowTop += this.setRowTopAndRowIndex(rowNode, nextRowTop, i);\n        nodes.push(rowNode);\n      }\n    }\n    nodesToRemove.forEach((id) => {\n      nodes.getById(id)?.clearRowTopAndRowIndex();\n    });\n    nodes.removeAllById(nodesToRemove);\n    nodes.setOrder(newOrder);\n  }\n  setRowTopAndRowIndex(rowNode, rowTop, rowIndex) {\n    rowNode.setRowTop(rowTop);\n    rowNode.setRowHeight(this.gos.getRowHeightForNode(rowNode).height);\n    rowNode.setRowIndex(rowIndex);\n    return rowNode.rowHeight;\n  }\n  getPinnedTopTotalHeight() {\n    return this.getTotalHeight(this.pinnedTopRows);\n  }\n  getPinnedBottomTotalHeight() {\n    return this.getTotalHeight(this.pinnedBottomRows);\n  }\n  getPinnedTopRowCount() {\n    return this.pinnedTopRows.getSize();\n  }\n  getPinnedBottomRowCount() {\n    return this.pinnedBottomRows.getSize();\n  }\n  getPinnedTopRow(index) {\n    return this.pinnedTopRows.getByIndex(index);\n  }\n  getPinnedBottomRow(index) {\n    return this.pinnedBottomRows.getByIndex(index);\n  }\n  getPinnedRowById(id, floating) {\n    return floating === \"top\" ? this.pinnedTopRows.getById(id) : this.pinnedBottomRows.getById(id);\n  }\n  forEachPinnedRow(floating, callback) {\n    return floating === \"top\" ? this.pinnedTopRows.forEach(callback) : this.pinnedBottomRows.forEach(callback);\n  }\n  getTotalHeight(rowNodes) {\n    const size = rowNodes.getSize();\n    if (size === 0) {\n      return 0;\n    }\n    const node = rowNodes.getByIndex(size - 1);\n    if (node === void 0) {\n      return 0;\n    }\n    return node.rowTop + node.rowHeight;\n  }\n};\nvar OrderedCache = class {\n  constructor() {\n    this.cache = {};\n    this.ordering = [];\n  }\n  getById(id) {\n    return this.cache[id];\n  }\n  getByIndex(i) {\n    const id = this.ordering[i];\n    return this.cache[id];\n  }\n  push(item) {\n    this.cache[item.id] = item;\n    this.ordering.push(item.id);\n  }\n  removeAllById(ids) {\n    for (const id of ids) {\n      delete this.cache[id];\n    }\n    this.ordering = this.ordering.filter((id) => !ids.has(id));\n  }\n  setOrder(orderedIds) {\n    this.ordering = orderedIds;\n  }\n  forEach(callback) {\n    this.ordering.forEach((id, index) => {\n      const node = this.cache[id];\n      node && callback(node, index);\n    });\n  }\n  clear() {\n    this.ordering.length = 0;\n    this.cache = {};\n  }\n  isEmpty() {\n    return this.ordering.length === 0;\n  }\n  getSize() {\n    return this.ordering.length;\n  }\n  getIds() {\n    return new Set(this.ordering);\n  }\n};\n\n// community-modules/core/src/interfaces/serverSideTransaction.ts\nvar ServerSideTransactionResultStatus = /* @__PURE__ */ ((ServerSideTransactionResultStatus2) => {\n  ServerSideTransactionResultStatus2[\"Applied\"] = \"Applied\";\n  ServerSideTransactionResultStatus2[\"StoreNotFound\"] = \"StoreNotFound\";\n  ServerSideTransactionResultStatus2[\"StoreLoading\"] = \"StoreLoading\";\n  ServerSideTransactionResultStatus2[\"StoreWaitingToLoad\"] = \"StoreWaitingToLoad\";\n  ServerSideTransactionResultStatus2[\"StoreLoadingFailed\"] = \"StoreLoadingFailed\";\n  ServerSideTransactionResultStatus2[\"StoreWrongType\"] = \"StoreWrongType\";\n  ServerSideTransactionResultStatus2[\"Cancelled\"] = \"Cancelled\";\n  ServerSideTransactionResultStatus2[\"StoreNotStarted\"] = \"StoreNotStarted\";\n  return ServerSideTransactionResultStatus2;\n})(ServerSideTransactionResultStatus || {});\n\n// community-modules/core/src/rowNodeCache/rowNodeBlock.ts\nvar RowNodeBlock = class extends BeanStub {\n  constructor(id) {\n    super();\n    this.state = \"needsLoading\";\n    this.version = 0;\n    this.id = id;\n  }\n  getId() {\n    return this.id;\n  }\n  load() {\n    this.state = \"loading\";\n    this.loadFromDatasource();\n  }\n  getVersion() {\n    return this.version;\n  }\n  setStateWaitingToLoad() {\n    this.version++;\n    this.state = \"needsLoading\";\n  }\n  getState() {\n    return this.state;\n  }\n  pageLoadFailed(version) {\n    const requestMostRecentAndLive = this.isRequestMostRecentAndLive(version);\n    if (requestMostRecentAndLive) {\n      this.state = \"failed\";\n      this.processServerFail();\n    }\n    this.dispatchLoadCompleted(false);\n  }\n  success(version, params) {\n    this.successCommon(version, params);\n  }\n  pageLoaded(version, rows, lastRow) {\n    this.successCommon(version, { rowData: rows, rowCount: lastRow });\n  }\n  isRequestMostRecentAndLive(version) {\n    const thisIsMostRecentRequest = version === this.version;\n    const weAreNotDestroyed = this.isAlive();\n    return thisIsMostRecentRequest && weAreNotDestroyed;\n  }\n  successCommon(version, params) {\n    this.dispatchLoadCompleted();\n    const requestMostRecentAndLive = this.isRequestMostRecentAndLive(version);\n    if (requestMostRecentAndLive) {\n      this.state = \"loaded\";\n      this.processServerResult(params);\n    }\n  }\n  dispatchLoadCompleted(success = true) {\n    const event = {\n      type: \"loadComplete\",\n      success,\n      block: this\n    };\n    this.dispatchLocalEvent(event);\n  }\n};\n\n// community-modules/core/src/rowNodeCache/rowNodeBlockLoader.ts\nvar RowNodeBlockLoader = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowNodeBlockLoader\";\n    this.activeBlockLoadsCount = 0;\n    this.blocks = [];\n    this.active = true;\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n  }\n  postConstruct() {\n    this.maxConcurrentRequests = this.getMaxConcurrentDatasourceRequests();\n    const blockLoadDebounceMillis = this.gos.get(\"blockLoadDebounceMillis\");\n    if (blockLoadDebounceMillis && blockLoadDebounceMillis > 0) {\n      this.checkBlockToLoadDebounce = _debounce(\n        this.performCheckBlocksToLoad.bind(this),\n        blockLoadDebounceMillis\n      );\n    }\n  }\n  getMaxConcurrentDatasourceRequests() {\n    const res = this.gos.get(\"maxConcurrentDatasourceRequests\");\n    if (res == null) {\n      return 2;\n    }\n    if (res <= 0) {\n      return;\n    }\n    return res;\n  }\n  addBlock(block) {\n    this.blocks.push(block);\n    block.addEventListener(\"loadComplete\", this.loadComplete.bind(this));\n    this.checkBlockToLoad();\n  }\n  removeBlock(block) {\n    _removeFromArray(this.blocks, block);\n  }\n  destroy() {\n    super.destroy();\n    this.active = false;\n  }\n  loadComplete() {\n    this.activeBlockLoadsCount--;\n    this.checkBlockToLoad();\n    this.dispatchLocalEvent({ type: \"blockLoaded\" });\n    if (this.activeBlockLoadsCount == 0) {\n      this.dispatchLocalEvent({ type: \"blockLoaderFinished\" });\n    }\n  }\n  checkBlockToLoad() {\n    if (this.checkBlockToLoadDebounce) {\n      this.checkBlockToLoadDebounce();\n    } else {\n      this.performCheckBlocksToLoad();\n    }\n  }\n  performCheckBlocksToLoad() {\n    if (!this.active) {\n      return;\n    }\n    this.printCacheStatus();\n    if (this.maxConcurrentRequests != null && this.activeBlockLoadsCount >= this.maxConcurrentRequests) {\n      if (this.gos.get(\"debug\")) {\n        _log(`RowNodeBlockLoader - checkBlockToLoad: max loads exceeded`);\n      }\n      return;\n    }\n    const loadAvailability = this.getAvailableLoadingCount();\n    const blocksToLoad = this.blocks.filter((block) => block.getState() === \"needsLoading\").slice(0, loadAvailability);\n    this.registerLoads(blocksToLoad.length);\n    blocksToLoad.forEach((block) => block.load());\n    this.printCacheStatus();\n  }\n  getBlockState() {\n    if (this.gos.isRowModelType(\"serverSide\")) {\n      const ssrm = this.rowModel;\n      return ssrm.getBlockStates();\n    }\n    const result = {};\n    this.blocks.forEach((block) => {\n      const { id, state } = block.getBlockStateJson();\n      result[id] = state;\n    });\n    return result;\n  }\n  printCacheStatus() {\n    if (this.gos.get(\"debug\")) {\n      _log(\n        `RowNodeBlockLoader - printCacheStatus: activePageLoadsCount = ${this.activeBlockLoadsCount}, blocks = ${JSON.stringify(this.getBlockState())}`\n      );\n    }\n  }\n  isLoading() {\n    return this.activeBlockLoadsCount > 0;\n  }\n  registerLoads(count) {\n    this.activeBlockLoadsCount += count;\n  }\n  getAvailableLoadingCount() {\n    return this.maxConcurrentRequests !== void 0 ? this.maxConcurrentRequests - this.activeBlockLoadsCount : void 0;\n  }\n};\n\n// community-modules/core/src/rowNodeCache/rowNodeBlockModule.ts\nvar RowNodeBlockModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/row-node-block\",\n  beans: [RowNodeBlockLoader]\n});\n\n// community-modules/core/src/selection/rowRangeSelectionContext.ts\nvar RowRangeSelectionContext = class {\n  constructor() {\n    this.root = null;\n    /**\n     * Note that the \"end\" `RowNode` may come before or after the \"root\" `RowNode` in the\n     * actual grid.\n     */\n    this.end = null;\n    this.cachedRange = [];\n  }\n  init(rowModel) {\n    this.rowModel = rowModel;\n  }\n  reset() {\n    this.root = null;\n    this.end = null;\n    this.cachedRange.length = 0;\n  }\n  setRoot(node) {\n    this.root = node;\n    this.end = null;\n    this.cachedRange.length = 0;\n  }\n  setEndRange(end) {\n    this.end = end;\n    this.cachedRange.length = 0;\n  }\n  getRange() {\n    if (this.cachedRange.length === 0) {\n      const root = this.getRoot();\n      const end = this.getEnd();\n      if (root == null || end == null) {\n        return this.cachedRange;\n      }\n      this.cachedRange = this.rowModel.getNodesInRangeForSelection(root, end);\n    }\n    return this.cachedRange;\n  }\n  isInRange(node) {\n    if (this.root === null) {\n      return false;\n    }\n    return this.getRange().some((nodeInRange) => nodeInRange.id === node.id);\n  }\n  getRoot() {\n    if (this.root && this.root?.key === null) {\n      this.root = this.rowModel.getRowNode(this.root.id) ?? null;\n    }\n    return this.root;\n  }\n  getEnd() {\n    if (this.end && this.end?.key === null) {\n      this.end = this.rowModel.getRowNode(this.end.id) ?? null;\n    }\n    return this.end;\n  }\n  /**\n   * Truncates the range to the given node (assumed to be within the current range).\n   * Returns nodes that remain in the current range and those that should be removed\n   *\n   * @param node - Node at which to truncate the range\n   * @returns Object of nodes to either keep or discard (i.e. deselect) from the range\n   */\n  truncate(node) {\n    const range = this.getRange();\n    if (range.length === 0) {\n      return { keep: [], discard: [] };\n    }\n    const discardAfter = range[0].id === this.root.id;\n    const idx = range.findIndex((rowNode) => rowNode.id === node.id);\n    if (idx > -1) {\n      const above = range.slice(0, idx);\n      const below = range.slice(idx + 1);\n      this.setEndRange(node);\n      return discardAfter ? { keep: above, discard: below } : { keep: below, discard: above };\n    } else {\n      return { keep: range, discard: [] };\n    }\n  }\n  /**\n   * Extends the range to the given node. Returns nodes that remain in the current range\n   * and those that should be removed.\n   *\n   * @param node - Node marking the new end of the range\n   * @returns Object of nodes to either keep or discard (i.e. deselect) from the range\n   */\n  extend(node, groupSelectsChildren = false) {\n    const root = this.getRoot();\n    if (root == null) {\n      const keep = this.getRange().slice();\n      if (groupSelectsChildren) {\n        node.depthFirstSearch((node2) => !node2.group && keep.push(node2));\n      }\n      keep.push(node);\n      this.setRoot(node);\n      return { keep, discard: [] };\n    }\n    const newRange = this.rowModel.getNodesInRangeForSelection(root, node);\n    if (newRange.find((newRangeNode) => newRangeNode.id === this.end?.id)) {\n      this.setEndRange(node);\n      return { keep: this.getRange(), discard: [] };\n    } else {\n      const discard = this.getRange().slice();\n      this.setEndRange(node);\n      return { keep: this.getRange(), discard };\n    }\n  }\n};\n\n// community-modules/core/src/styling/stylingService.ts\nvar StylingService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"stylingService\";\n  }\n  wireBeans(beans) {\n    this.expressionService = beans.expressionService;\n  }\n  processAllCellClasses(colDef, params, onApplicableClass, onNotApplicableClass) {\n    this.processClassRules(void 0, colDef.cellClassRules, params, onApplicableClass, onNotApplicableClass);\n    this.processStaticCellClasses(colDef, params, onApplicableClass);\n  }\n  processClassRules(previousClassRules, classRules, params, onApplicableClass, onNotApplicableClass) {\n    if (classRules == null && previousClassRules == null) {\n      return;\n    }\n    const classesToApply = {};\n    const classesToRemove = {};\n    const forEachSingleClass = (className, callback) => {\n      className.split(\" \").forEach((singleClass) => {\n        if (singleClass.trim() == \"\")\n          return;\n        callback(singleClass);\n      });\n    };\n    if (classRules) {\n      const classNames = Object.keys(classRules);\n      for (let i = 0; i < classNames.length; i++) {\n        const className = classNames[i];\n        const rule = classRules[className];\n        let resultOfRule;\n        if (typeof rule === \"string\") {\n          resultOfRule = this.expressionService.evaluate(rule, params);\n        } else if (typeof rule === \"function\") {\n          resultOfRule = rule(params);\n        }\n        forEachSingleClass(className, (singleClass) => {\n          resultOfRule ? classesToApply[singleClass] = true : classesToRemove[singleClass] = true;\n        });\n      }\n    }\n    if (previousClassRules && onNotApplicableClass) {\n      Object.keys(previousClassRules).forEach(\n        (className) => forEachSingleClass(className, (singleClass) => {\n          if (!classesToApply[singleClass]) {\n            classesToRemove[singleClass] = true;\n          }\n        })\n      );\n    }\n    if (onNotApplicableClass) {\n      Object.keys(classesToRemove).forEach(onNotApplicableClass);\n    }\n    Object.keys(classesToApply).forEach(onApplicableClass);\n  }\n  getStaticCellClasses(colDef, params) {\n    const { cellClass } = colDef;\n    if (!cellClass) {\n      return [];\n    }\n    let classOrClasses;\n    if (typeof cellClass === \"function\") {\n      const cellClassFunc = cellClass;\n      classOrClasses = cellClassFunc(params);\n    } else {\n      classOrClasses = cellClass;\n    }\n    if (typeof classOrClasses === \"string\") {\n      classOrClasses = [classOrClasses];\n    }\n    return classOrClasses || [];\n  }\n  processStaticCellClasses(colDef, params, onApplicableClass) {\n    const classOrClasses = this.getStaticCellClasses(colDef, params);\n    classOrClasses.forEach((cssClassItem) => {\n      onApplicableClass(cssClassItem);\n    });\n  }\n};\n\n// community-modules/core/src/widgets/agToggleButton.ts\nvar AgToggleButton = class extends AgCheckbox {\n  constructor(config) {\n    super(config, \"ag-toggle-button\");\n  }\n  setValue(value, silent) {\n    super.setValue(value, silent);\n    this.addOrRemoveCssClass(\"ag-selected\", this.getValue());\n    return this;\n  }\n};\nvar AgToggleButtonSelector = {\n  selector: \"AG-TOGGLE-BUTTON\",\n  component: AgToggleButton\n};\n\n// community-modules/core/src/widgets/tabGuardCtrl.ts\nvar TabGuardClassNames = /* @__PURE__ */ ((TabGuardClassNames2) => {\n  TabGuardClassNames2[\"TAB_GUARD\"] = \"ag-tab-guard\";\n  TabGuardClassNames2[\"TAB_GUARD_TOP\"] = \"ag-tab-guard-top\";\n  TabGuardClassNames2[\"TAB_GUARD_BOTTOM\"] = \"ag-tab-guard-bottom\";\n  return TabGuardClassNames2;\n})(TabGuardClassNames || {});\nvar TabGuardCtrl = class extends BeanStub {\n  constructor(params) {\n    super();\n    this.skipTabGuardFocus = false;\n    this.forcingFocusOut = false;\n    // Used when `isFocusableContainer` enabled\n    this.allowFocus = false;\n    const {\n      comp,\n      eTopGuard,\n      eBottomGuard,\n      focusTrapActive,\n      forceFocusOutWhenTabGuardsAreEmpty,\n      isFocusableContainer,\n      focusInnerElement,\n      onFocusIn,\n      onFocusOut,\n      shouldStopEventPropagation,\n      onTabKeyDown,\n      handleKeyDown,\n      eFocusableElement\n    } = params;\n    this.comp = comp;\n    this.eTopGuard = eTopGuard;\n    this.eBottomGuard = eBottomGuard;\n    this.providedFocusInnerElement = focusInnerElement;\n    this.eFocusableElement = eFocusableElement;\n    this.focusTrapActive = !!focusTrapActive;\n    this.forceFocusOutWhenTabGuardsAreEmpty = !!forceFocusOutWhenTabGuardsAreEmpty;\n    this.isFocusableContainer = !!isFocusableContainer;\n    this.providedFocusIn = onFocusIn;\n    this.providedFocusOut = onFocusOut;\n    this.providedShouldStopEventPropagation = shouldStopEventPropagation;\n    this.providedOnTabKeyDown = onTabKeyDown;\n    this.providedHandleKeyDown = handleKeyDown;\n  }\n  wireBeans(beans) {\n    this.focusService = beans.focusService;\n  }\n  postConstruct() {\n    this.createManagedBean(\n      new ManagedFocusFeature(this.eFocusableElement, {\n        shouldStopEventPropagation: () => this.shouldStopEventPropagation(),\n        onTabKeyDown: (e) => this.onTabKeyDown(e),\n        handleKeyDown: (e) => this.handleKeyDown(e),\n        onFocusIn: (e) => this.onFocusIn(e),\n        onFocusOut: (e) => this.onFocusOut(e)\n      })\n    );\n    this.activateTabGuards();\n    [this.eTopGuard, this.eBottomGuard].forEach(\n      (guard) => this.addManagedElementListeners(guard, { focus: this.onFocus.bind(this) })\n    );\n  }\n  handleKeyDown(e) {\n    if (this.providedHandleKeyDown) {\n      this.providedHandleKeyDown(e);\n    }\n  }\n  tabGuardsAreActive() {\n    return !!this.eTopGuard && this.eTopGuard.hasAttribute(\"tabIndex\");\n  }\n  shouldStopEventPropagation() {\n    if (this.providedShouldStopEventPropagation) {\n      return this.providedShouldStopEventPropagation();\n    }\n    return false;\n  }\n  activateTabGuards() {\n    if (this.forcingFocusOut) {\n      return;\n    }\n    const tabIndex = this.gos.get(\"tabIndex\");\n    this.comp.setTabIndex(tabIndex.toString());\n  }\n  deactivateTabGuards() {\n    this.comp.setTabIndex();\n  }\n  onFocus(e) {\n    if (this.isFocusableContainer && !this.eFocusableElement.contains(e.relatedTarget)) {\n      if (!this.allowFocus) {\n        this.findNextElementOutsideAndFocus(e.target === this.eBottomGuard);\n        return;\n      }\n    }\n    if (this.skipTabGuardFocus) {\n      this.skipTabGuardFocus = false;\n      return;\n    }\n    if (this.forceFocusOutWhenTabGuardsAreEmpty) {\n      const isEmpty = this.focusService.findFocusableElements(this.eFocusableElement, \".ag-tab-guard\").length === 0;\n      if (isEmpty) {\n        this.findNextElementOutsideAndFocus(e.target === this.eBottomGuard);\n        return;\n      }\n    }\n    if (this.isFocusableContainer && this.eFocusableElement.contains(e.relatedTarget)) {\n      return;\n    }\n    const fromBottom = e.target === this.eBottomGuard;\n    if (this.providedFocusInnerElement) {\n      this.providedFocusInnerElement(fromBottom);\n    } else {\n      this.focusInnerElement(fromBottom);\n    }\n  }\n  findNextElementOutsideAndFocus(up) {\n    const eDocument = this.gos.getDocument();\n    const focusableEls = this.focusService.findFocusableElements(eDocument.body, null, true);\n    const index = focusableEls.indexOf(up ? this.eTopGuard : this.eBottomGuard);\n    if (index === -1) {\n      return;\n    }\n    let start;\n    let end;\n    if (up) {\n      start = 0;\n      end = index;\n    } else {\n      start = index + 1;\n      end = focusableEls.length;\n    }\n    const focusableRange = focusableEls.slice(start, end);\n    const targetTabIndex = this.gos.get(\"tabIndex\");\n    focusableRange.sort((a, b) => {\n      const indexA = parseInt(a.getAttribute(\"tabindex\") || \"0\");\n      const indexB = parseInt(b.getAttribute(\"tabindex\") || \"0\");\n      if (indexB === targetTabIndex) {\n        return 1;\n      }\n      if (indexA === targetTabIndex) {\n        return -1;\n      }\n      if (indexA === 0) {\n        return 1;\n      }\n      if (indexB === 0) {\n        return -1;\n      }\n      return indexA - indexB;\n    });\n    focusableRange[up ? focusableRange.length - 1 : 0].focus();\n  }\n  onFocusIn(e) {\n    if (this.focusTrapActive || this.forcingFocusOut) {\n      return;\n    }\n    if (this.providedFocusIn) {\n      this.providedFocusIn(e);\n    }\n    if (!this.isFocusableContainer) {\n      this.deactivateTabGuards();\n    }\n  }\n  onFocusOut(e) {\n    if (this.focusTrapActive) {\n      return;\n    }\n    if (this.providedFocusOut) {\n      this.providedFocusOut(e);\n    }\n    if (!this.eFocusableElement.contains(e.relatedTarget)) {\n      this.activateTabGuards();\n    }\n  }\n  onTabKeyDown(e) {\n    if (this.providedOnTabKeyDown) {\n      this.providedOnTabKeyDown(e);\n      return;\n    }\n    if (this.focusTrapActive) {\n      return;\n    }\n    if (e.defaultPrevented) {\n      return;\n    }\n    const tabGuardsAreActive = this.tabGuardsAreActive();\n    if (tabGuardsAreActive) {\n      this.deactivateTabGuards();\n    }\n    const nextRoot = this.getNextFocusableElement(e.shiftKey);\n    if (tabGuardsAreActive) {\n      setTimeout(() => this.activateTabGuards(), 0);\n    }\n    if (!nextRoot) {\n      return;\n    }\n    nextRoot.focus();\n    e.preventDefault();\n  }\n  focusInnerElement(fromBottom = false) {\n    const focusable = this.focusService.findFocusableElements(this.eFocusableElement);\n    if (this.tabGuardsAreActive()) {\n      focusable.splice(0, 1);\n      focusable.splice(focusable.length - 1, 1);\n    }\n    if (!focusable.length) {\n      return;\n    }\n    focusable[fromBottom ? focusable.length - 1 : 0].focus({ preventScroll: true });\n  }\n  getNextFocusableElement(backwards) {\n    return this.focusService.findNextFocusableElement(this.eFocusableElement, false, backwards);\n  }\n  forceFocusOutOfContainer(up = false) {\n    if (this.forcingFocusOut) {\n      return;\n    }\n    const tabGuardToFocus = up ? this.eTopGuard : this.eBottomGuard;\n    this.activateTabGuards();\n    this.skipTabGuardFocus = true;\n    this.forcingFocusOut = true;\n    tabGuardToFocus.focus();\n    window.setTimeout(() => {\n      this.forcingFocusOut = false;\n      this.activateTabGuards();\n    });\n  }\n  isTabGuard(element, bottom) {\n    return element === this.eTopGuard && !bottom || element === this.eBottomGuard && (bottom ?? true);\n  }\n  setAllowFocus(allowFocus) {\n    this.allowFocus = allowFocus;\n  }\n};\n\n// community-modules/core/src/widgets/tabGuardFeature.ts\nvar TabGuardFeature = class extends BeanStub {\n  constructor(comp) {\n    super();\n    this.comp = comp;\n  }\n  initialiseTabGuard(params) {\n    this.eTopGuard = this.createTabGuard(\"top\");\n    this.eBottomGuard = this.createTabGuard(\"bottom\");\n    this.eFocusableElement = this.comp.getFocusableElement();\n    const { eTopGuard, eBottomGuard, eFocusableElement } = this;\n    const tabGuards = [eTopGuard, eBottomGuard];\n    const compProxy = {\n      setTabIndex: (tabIndex) => {\n        tabGuards.forEach(\n          (tabGuard) => tabIndex != null ? tabGuard.setAttribute(\"tabindex\", tabIndex) : tabGuard.removeAttribute(\"tabindex\")\n        );\n      }\n    };\n    this.addTabGuards(eTopGuard, eBottomGuard);\n    const {\n      focusTrapActive = false,\n      onFocusIn,\n      onFocusOut,\n      focusInnerElement,\n      handleKeyDown,\n      onTabKeyDown,\n      shouldStopEventPropagation,\n      forceFocusOutWhenTabGuardsAreEmpty,\n      isFocusableContainer\n    } = params;\n    this.tabGuardCtrl = this.createManagedBean(\n      new TabGuardCtrl({\n        comp: compProxy,\n        focusTrapActive,\n        eTopGuard,\n        eBottomGuard,\n        eFocusableElement,\n        onFocusIn,\n        onFocusOut,\n        focusInnerElement,\n        handleKeyDown,\n        onTabKeyDown,\n        shouldStopEventPropagation,\n        forceFocusOutWhenTabGuardsAreEmpty,\n        isFocusableContainer\n      })\n    );\n  }\n  getTabGuardCtrl() {\n    return this.tabGuardCtrl;\n  }\n  createTabGuard(side) {\n    const tabGuard = this.gos.getDocument().createElement(\"div\");\n    const cls = side === \"top\" ? \"ag-tab-guard-top\" /* TAB_GUARD_TOP */ : \"ag-tab-guard-bottom\" /* TAB_GUARD_BOTTOM */;\n    tabGuard.classList.add(\"ag-tab-guard\" /* TAB_GUARD */, cls);\n    _setAriaRole(tabGuard, \"presentation\");\n    return tabGuard;\n  }\n  addTabGuards(topTabGuard, bottomTabGuard) {\n    this.eFocusableElement.insertAdjacentElement(\"afterbegin\", topTabGuard);\n    this.eFocusableElement.insertAdjacentElement(\"beforeend\", bottomTabGuard);\n  }\n  removeAllChildrenExceptTabGuards() {\n    const tabGuards = [this.eTopGuard, this.eBottomGuard];\n    _clearElement(this.comp.getFocusableElement());\n    this.addTabGuards(...tabGuards);\n  }\n  forceFocusOutOfContainer(up = false) {\n    this.tabGuardCtrl.forceFocusOutOfContainer(up);\n  }\n  appendChild(appendChild, newChild, container) {\n    if (!_isNodeOrElement(newChild)) {\n      newChild = newChild.getGui();\n    }\n    const { eBottomGuard: bottomTabGuard } = this;\n    if (bottomTabGuard) {\n      bottomTabGuard.insertAdjacentElement(\"beforebegin\", newChild);\n    } else {\n      appendChild(newChild, container);\n    }\n  }\n};\n\n// community-modules/core/src/widgets/tabGuardComp.ts\nvar TabGuardComp = class extends Component {\n  initialiseTabGuard(params) {\n    this.tabGuardFeature = this.createManagedBean(new TabGuardFeature(this));\n    this.tabGuardFeature.initialiseTabGuard(params);\n  }\n  forceFocusOutOfContainer(up = false) {\n    this.tabGuardFeature.forceFocusOutOfContainer(up);\n  }\n  appendChild(newChild, container) {\n    this.tabGuardFeature.appendChild(super.appendChild.bind(this), newChild, container);\n  }\n};\n\n// community-modules/core/src/widgets/popupService.ts\nvar instanceIdSeq = 0;\nvar WAIT_FOR_POPUP_CONTENT_RESIZE = 200;\nvar PopupService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"popupService\";\n    this.popupList = [];\n  }\n  wireBeans(beans) {\n    this.ctrlsService = beans.ctrlsService;\n    this.resizeObserverService = beans.resizeObserverService;\n    this.environment = beans.environment;\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady((p) => {\n      this.gridCtrl = p.gridCtrl;\n    });\n    this.addManagedEventListeners({ gridStylesChanged: this.handleThemeChange.bind(this) });\n  }\n  getPopupParent() {\n    const ePopupParent = this.gos.get(\"popupParent\");\n    if (ePopupParent) {\n      return ePopupParent;\n    }\n    return this.gridCtrl.getGui();\n  }\n  positionPopupForMenu(params) {\n    const { eventSource, ePopup } = params;\n    const popupIdx = this.getPopupIndex(ePopup);\n    if (popupIdx !== -1) {\n      const popup = this.popupList[popupIdx];\n      popup.alignedToElement = eventSource;\n    }\n    const sourceRect = eventSource.getBoundingClientRect();\n    const parentRect = this.getParentRect();\n    const y = this.keepXYWithinBounds(ePopup, sourceRect.top - parentRect.top, 0 /* vertical */);\n    const minWidth = ePopup.clientWidth > 0 ? ePopup.clientWidth : 200;\n    ePopup.style.minWidth = `${minWidth}px`;\n    const widthOfParent = parentRect.right - parentRect.left;\n    const maxX = widthOfParent - minWidth;\n    let x;\n    if (this.gos.get(\"enableRtl\")) {\n      x = xLeftPosition();\n      if (x < 0) {\n        x = xRightPosition();\n        this.setAlignedStyles(ePopup, \"left\");\n      }\n      if (x > maxX) {\n        x = 0;\n        this.setAlignedStyles(ePopup, \"right\");\n      }\n    } else {\n      x = xRightPosition();\n      if (x > maxX) {\n        x = xLeftPosition();\n        this.setAlignedStyles(ePopup, \"right\");\n      }\n      if (x < 0) {\n        x = 0;\n        this.setAlignedStyles(ePopup, \"left\");\n      }\n    }\n    ePopup.style.left = `${x}px`;\n    ePopup.style.top = `${y}px`;\n    function xRightPosition() {\n      return sourceRect.right - parentRect.left - 2;\n    }\n    function xLeftPosition() {\n      return sourceRect.left - parentRect.left - minWidth;\n    }\n  }\n  positionPopupUnderMouseEvent(params) {\n    const { ePopup, nudgeX, nudgeY, skipObserver } = params;\n    this.positionPopup({\n      ePopup,\n      nudgeX,\n      nudgeY,\n      keepWithinBounds: true,\n      skipObserver,\n      updatePosition: () => this.calculatePointerAlign(params.mouseEvent),\n      postProcessCallback: () => this.callPostProcessPopup(\n        params.type,\n        params.ePopup,\n        null,\n        params.mouseEvent,\n        params.column,\n        params.rowNode\n      )\n    });\n  }\n  calculatePointerAlign(e) {\n    const parentRect = this.getParentRect();\n    return {\n      x: e.clientX - parentRect.left,\n      y: e.clientY - parentRect.top\n    };\n  }\n  positionPopupByComponent(params) {\n    const {\n      ePopup,\n      nudgeX,\n      nudgeY,\n      keepWithinBounds,\n      eventSource,\n      alignSide = \"left\",\n      position = \"over\",\n      column,\n      rowNode,\n      type\n    } = params;\n    const sourceRect = eventSource.getBoundingClientRect();\n    const parentRect = this.getParentRect();\n    const popupIdx = this.getPopupIndex(ePopup);\n    if (popupIdx !== -1) {\n      const popup = this.popupList[popupIdx];\n      popup.alignedToElement = eventSource;\n    }\n    const updatePosition = () => {\n      let x = sourceRect.left - parentRect.left;\n      if (alignSide === \"right\") {\n        x -= ePopup.offsetWidth - sourceRect.width;\n      }\n      let y;\n      if (position === \"over\") {\n        y = sourceRect.top - parentRect.top;\n        this.setAlignedStyles(ePopup, \"over\");\n      } else {\n        this.setAlignedStyles(ePopup, \"under\");\n        const alignSide2 = this.shouldRenderUnderOrAbove(ePopup, sourceRect, parentRect, params.nudgeY || 0);\n        if (alignSide2 === \"under\") {\n          y = sourceRect.top - parentRect.top + sourceRect.height;\n        } else {\n          y = sourceRect.top - ePopup.offsetHeight - (nudgeY || 0) * 2 - parentRect.top;\n        }\n      }\n      return { x, y };\n    };\n    this.positionPopup({\n      ePopup,\n      nudgeX,\n      nudgeY,\n      keepWithinBounds,\n      updatePosition,\n      postProcessCallback: () => this.callPostProcessPopup(type, ePopup, eventSource, null, column, rowNode)\n    });\n  }\n  shouldRenderUnderOrAbove(ePopup, targetCompRect, parentRect, nudgeY) {\n    const spaceAvailableUnder = parentRect.bottom - targetCompRect.bottom;\n    const spaceAvailableAbove = targetCompRect.top - parentRect.top;\n    const spaceRequired = ePopup.offsetHeight + nudgeY;\n    if (spaceAvailableUnder > spaceRequired) {\n      return \"under\";\n    }\n    if (spaceAvailableAbove > spaceRequired || spaceAvailableAbove > spaceAvailableUnder) {\n      return \"above\";\n    }\n    return \"under\";\n  }\n  setAlignedStyles(ePopup, positioned) {\n    const popupIdx = this.getPopupIndex(ePopup);\n    if (popupIdx === -1) {\n      return;\n    }\n    const popup = this.popupList[popupIdx];\n    const { alignedToElement } = popup;\n    if (!alignedToElement) {\n      return;\n    }\n    const positions = [\"right\", \"left\", \"over\", \"above\", \"under\"];\n    positions.forEach((position) => {\n      alignedToElement.classList.remove(`ag-has-popup-positioned-${position}`);\n      ePopup.classList.remove(`ag-popup-positioned-${position}`);\n    });\n    if (!positioned) {\n      return;\n    }\n    alignedToElement.classList.add(`ag-has-popup-positioned-${positioned}`);\n    ePopup.classList.add(`ag-popup-positioned-${positioned}`);\n  }\n  callPostProcessPopup(type, ePopup, eventSource, mouseEvent, column, rowNode) {\n    const callback = this.gos.getCallback(\"postProcessPopup\");\n    if (callback) {\n      const params = {\n        column,\n        rowNode,\n        ePopup,\n        type,\n        eventSource,\n        mouseEvent\n      };\n      callback(params);\n    }\n  }\n  positionPopup(params) {\n    const { ePopup, keepWithinBounds, nudgeX, nudgeY, skipObserver, updatePosition } = params;\n    const lastSize = { width: 0, height: 0 };\n    const updatePopupPosition = (fromResizeObserver = false) => {\n      let { x, y } = updatePosition();\n      if (fromResizeObserver && ePopup.clientWidth === lastSize.width && ePopup.clientHeight === lastSize.height) {\n        return;\n      }\n      lastSize.width = ePopup.clientWidth;\n      lastSize.height = ePopup.clientHeight;\n      if (nudgeX) {\n        x += nudgeX;\n      }\n      if (nudgeY) {\n        y += nudgeY;\n      }\n      if (keepWithinBounds) {\n        x = this.keepXYWithinBounds(ePopup, x, 1 /* horizontal */);\n        y = this.keepXYWithinBounds(ePopup, y, 0 /* vertical */);\n      }\n      ePopup.style.left = `${x}px`;\n      ePopup.style.top = `${y}px`;\n      if (params.postProcessCallback) {\n        params.postProcessCallback();\n      }\n    };\n    updatePopupPosition();\n    if (!skipObserver) {\n      const resizeObserverDestroyFunc = this.resizeObserverService.observeResize(\n        ePopup,\n        () => updatePopupPosition(true)\n      );\n      setTimeout(() => resizeObserverDestroyFunc(), WAIT_FOR_POPUP_CONTENT_RESIZE);\n    }\n  }\n  getActivePopups() {\n    return this.popupList.map((popup) => popup.element);\n  }\n  getPopupList() {\n    return this.popupList;\n  }\n  getParentRect() {\n    const eDocument = this.gos.getDocument();\n    let popupParent = this.getPopupParent();\n    if (popupParent === eDocument.body) {\n      popupParent = eDocument.documentElement;\n    } else if (getComputedStyle(popupParent).position === \"static\") {\n      popupParent = popupParent.offsetParent;\n    }\n    return _getElementRectWithOffset(popupParent);\n  }\n  keepXYWithinBounds(ePopup, position, direction) {\n    const isVertical = direction === 0 /* vertical */;\n    const sizeProperty = isVertical ? \"clientHeight\" : \"clientWidth\";\n    const anchorProperty = isVertical ? \"top\" : \"left\";\n    const offsetProperty = isVertical ? \"height\" : \"width\";\n    const scrollPositionProperty = isVertical ? \"scrollTop\" : \"scrollLeft\";\n    const eDocument = this.gos.getDocument();\n    const docElement = eDocument.documentElement;\n    const popupParent = this.getPopupParent();\n    const popupRect = ePopup.getBoundingClientRect();\n    const parentRect = popupParent.getBoundingClientRect();\n    const documentRect = eDocument.documentElement.getBoundingClientRect();\n    const isBody = popupParent === eDocument.body;\n    const offsetSize = Math.ceil(popupRect[offsetProperty]);\n    const getSize = isVertical ? _getAbsoluteHeight : _getAbsoluteWidth;\n    let sizeOfParent = isBody ? getSize(docElement) + docElement[scrollPositionProperty] : popupParent[sizeProperty];\n    if (isBody) {\n      sizeOfParent -= Math.abs(documentRect[anchorProperty] - parentRect[anchorProperty]);\n    }\n    const max = sizeOfParent - offsetSize;\n    return Math.min(Math.max(position, 0), Math.abs(max));\n  }\n  addPopup(params) {\n    const eDocument = this.gos.getDocument();\n    const { eChild, ariaLabel, alwaysOnTop, positionCallback, anchorToElement } = params;\n    if (!eDocument) {\n      _warnOnce(\"could not find the document, document is empty\");\n      return { hideFunc: () => {\n      } };\n    }\n    const pos = this.getPopupIndex(eChild);\n    if (pos !== -1) {\n      const popup = this.popupList[pos];\n      return { hideFunc: popup.hideFunc };\n    }\n    this.initialisePopupPosition(eChild);\n    const wrapperEl = this.createPopupWrapper(eChild, ariaLabel, !!alwaysOnTop);\n    const removeListeners = this.addEventListenersToPopup({ ...params, wrapperEl });\n    if (positionCallback) {\n      positionCallback();\n    }\n    this.addPopupToPopupList(eChild, wrapperEl, removeListeners, anchorToElement);\n    return {\n      hideFunc: removeListeners\n    };\n  }\n  initialisePopupPosition(element) {\n    const ePopupParent = this.getPopupParent();\n    const ePopupParentRect = ePopupParent.getBoundingClientRect();\n    if (!_exists(element.style.top)) {\n      element.style.top = `${ePopupParentRect.top * -1}px`;\n    }\n    if (!_exists(element.style.left)) {\n      element.style.left = `${ePopupParentRect.left * -1}px`;\n    }\n  }\n  createPopupWrapper(element, ariaLabel, alwaysOnTop) {\n    const ePopupParent = this.getPopupParent();\n    const eWrapper = document.createElement(\"div\");\n    this.environment.applyThemeClasses(eWrapper);\n    eWrapper.classList.add(\"ag-popup\");\n    element.classList.add(this.gos.get(\"enableRtl\") ? \"ag-rtl\" : \"ag-ltr\", \"ag-popup-child\");\n    if (!element.hasAttribute(\"role\")) {\n      _setAriaRole(element, \"dialog\");\n    }\n    _setAriaLabel(element, ariaLabel);\n    eWrapper.appendChild(element);\n    ePopupParent.appendChild(eWrapper);\n    if (alwaysOnTop) {\n      this.setAlwaysOnTop(element, true);\n    } else {\n      this.bringPopupToFront(element);\n    }\n    return eWrapper;\n  }\n  handleThemeChange(e) {\n    if (e.themeChanged) {\n      for (const popup of this.popupList) {\n        this.environment.applyThemeClasses(popup.wrapper);\n      }\n    }\n  }\n  addEventListenersToPopup(params) {\n    const eDocument = this.gos.getDocument();\n    const ePopupParent = this.getPopupParent();\n    const { wrapperEl, eChild: popupEl, closedCallback, afterGuiAttached, closeOnEsc, modal } = params;\n    let popupHidden = false;\n    const hidePopupOnKeyboardEvent = (event) => {\n      if (!wrapperEl.contains(this.gos.getActiveDomElement())) {\n        return;\n      }\n      const key = event.key;\n      if (key === KeyCode.ESCAPE && !_isStopPropagationForAgGrid(event)) {\n        removeListeners({ keyboardEvent: event });\n      }\n    };\n    const hidePopupOnMouseEvent = (event) => removeListeners({ mouseEvent: event });\n    const hidePopupOnTouchEvent = (event) => removeListeners({ touchEvent: event });\n    const removeListeners = (popupParams = {}) => {\n      const { mouseEvent, touchEvent, keyboardEvent, forceHide } = popupParams;\n      if (!forceHide && // we don't hide popup if the event was on the child, or any\n      // children of this child\n      (this.isEventFromCurrentPopup({ mouseEvent, touchEvent }, popupEl) || // this method should only be called once. the client can have different\n      // paths, each one wanting to close, so this method may be called multiple times.\n      popupHidden)) {\n        return;\n      }\n      popupHidden = true;\n      ePopupParent.removeChild(wrapperEl);\n      eDocument.removeEventListener(\"keydown\", hidePopupOnKeyboardEvent);\n      eDocument.removeEventListener(\"mousedown\", hidePopupOnMouseEvent);\n      eDocument.removeEventListener(\"touchstart\", hidePopupOnTouchEvent);\n      eDocument.removeEventListener(\"contextmenu\", hidePopupOnMouseEvent);\n      this.eventService.removeEventListener(\"dragStarted\", hidePopupOnMouseEvent);\n      if (closedCallback) {\n        closedCallback(mouseEvent || touchEvent || keyboardEvent);\n      }\n      this.removePopupFromPopupList(popupEl);\n    };\n    if (afterGuiAttached) {\n      afterGuiAttached({ hidePopup: removeListeners });\n    }\n    window.setTimeout(() => {\n      if (closeOnEsc) {\n        eDocument.addEventListener(\"keydown\", hidePopupOnKeyboardEvent);\n      }\n      if (modal) {\n        eDocument.addEventListener(\"mousedown\", hidePopupOnMouseEvent);\n        this.eventService.addEventListener(\"dragStarted\", hidePopupOnMouseEvent);\n        eDocument.addEventListener(\"touchstart\", hidePopupOnTouchEvent);\n        eDocument.addEventListener(\"contextmenu\", hidePopupOnMouseEvent);\n      }\n    }, 0);\n    return removeListeners;\n  }\n  addPopupToPopupList(element, wrapperEl, removeListeners, anchorToElement) {\n    this.popupList.push({\n      element,\n      wrapper: wrapperEl,\n      hideFunc: removeListeners,\n      instanceId: instanceIdSeq++,\n      isAnchored: !!anchorToElement\n    });\n    if (anchorToElement) {\n      this.setPopupPositionRelatedToElement(element, anchorToElement);\n    }\n  }\n  getPopupIndex(el) {\n    return this.popupList.findIndex((p) => p.element === el);\n  }\n  setPopupPositionRelatedToElement(popupEl, relativeElement) {\n    const popupIndex = this.getPopupIndex(popupEl);\n    if (popupIndex === -1) {\n      return;\n    }\n    const popup = this.popupList[popupIndex];\n    if (popup.stopAnchoringPromise) {\n      popup.stopAnchoringPromise.then((destroyFunc) => destroyFunc && destroyFunc());\n    }\n    popup.stopAnchoringPromise = void 0;\n    popup.isAnchored = false;\n    if (!relativeElement) {\n      return;\n    }\n    const destroyPositionTracker = this.keepPopupPositionedRelativeTo({\n      element: relativeElement,\n      ePopup: popupEl,\n      hidePopup: popup.hideFunc\n    });\n    popup.stopAnchoringPromise = destroyPositionTracker;\n    popup.isAnchored = true;\n    return destroyPositionTracker;\n  }\n  removePopupFromPopupList(element) {\n    this.setAlignedStyles(element, null);\n    this.setPopupPositionRelatedToElement(element, null);\n    this.popupList = this.popupList.filter((p) => p.element !== element);\n  }\n  keepPopupPositionedRelativeTo(params) {\n    const eParent = this.getPopupParent();\n    const parentRect = eParent.getBoundingClientRect();\n    const { element, ePopup } = params;\n    const sourceRect = element.getBoundingClientRect();\n    const initialDiffTop = parentRect.top - sourceRect.top;\n    const initialDiffLeft = parentRect.left - sourceRect.left;\n    let lastDiffTop = initialDiffTop;\n    let lastDiffLeft = initialDiffLeft;\n    const topPx = ePopup.style.top;\n    const top = parseInt(topPx.substring(0, topPx.length - 1), 10);\n    const leftPx = ePopup.style.left;\n    const left = parseInt(leftPx.substring(0, leftPx.length - 1), 10);\n    const fwOverrides = this.getFrameworkOverrides();\n    return new AgPromise((resolve) => {\n      fwOverrides.wrapIncoming(() => {\n        fwOverrides.setInterval(() => {\n          const pRect = eParent.getBoundingClientRect();\n          const sRect = element.getBoundingClientRect();\n          const elementNotInDom = sRect.top == 0 && sRect.left == 0 && sRect.height == 0 && sRect.width == 0;\n          if (elementNotInDom) {\n            params.hidePopup();\n            return;\n          }\n          const currentDiffTop = pRect.top - sRect.top;\n          if (currentDiffTop != lastDiffTop) {\n            const newTop = this.keepXYWithinBounds(\n              ePopup,\n              top + initialDiffTop - currentDiffTop,\n              0 /* vertical */\n            );\n            ePopup.style.top = `${newTop}px`;\n          }\n          lastDiffTop = currentDiffTop;\n          const currentDiffLeft = pRect.left - sRect.left;\n          if (currentDiffLeft != lastDiffLeft) {\n            const newLeft = this.keepXYWithinBounds(\n              ePopup,\n              left + initialDiffLeft - currentDiffLeft,\n              1 /* horizontal */\n            );\n            ePopup.style.left = `${newLeft}px`;\n          }\n          lastDiffLeft = currentDiffLeft;\n        }, 200).then((intervalId) => {\n          const result = () => {\n            if (intervalId != null) {\n              window.clearInterval(intervalId);\n            }\n          };\n          resolve(result);\n        });\n      }, \"popupPositioning\");\n    });\n  }\n  hasAnchoredPopup() {\n    return this.popupList.some((popup) => popup.isAnchored);\n  }\n  isEventFromCurrentPopup(params, target) {\n    const { mouseEvent, touchEvent } = params;\n    const event = mouseEvent ? mouseEvent : touchEvent;\n    if (!event) {\n      return false;\n    }\n    const indexOfThisChild = this.getPopupIndex(target);\n    if (indexOfThisChild === -1) {\n      return false;\n    }\n    for (let i = indexOfThisChild; i < this.popupList.length; i++) {\n      const popup = this.popupList[i];\n      if (_isElementInEventPath(popup.element, event)) {\n        return true;\n      }\n    }\n    return this.isElementWithinCustomPopup(event.target);\n  }\n  isElementWithinCustomPopup(el) {\n    const eDocument = this.gos.getDocument();\n    while (el && el !== eDocument.body) {\n      if (el.classList.contains(\"ag-custom-component-popup\") || el.parentElement === null) {\n        return true;\n      }\n      el = el.parentElement;\n    }\n    return false;\n  }\n  getWrapper(ePopup) {\n    while (!ePopup.classList.contains(\"ag-popup\") && ePopup.parentElement) {\n      ePopup = ePopup.parentElement;\n    }\n    return ePopup.classList.contains(\"ag-popup\") ? ePopup : null;\n  }\n  setAlwaysOnTop(ePopup, alwaysOnTop) {\n    const eWrapper = this.getWrapper(ePopup);\n    if (!eWrapper) {\n      return;\n    }\n    eWrapper.classList.toggle(\"ag-always-on-top\", !!alwaysOnTop);\n    if (alwaysOnTop) {\n      this.bringPopupToFront(eWrapper);\n    }\n  }\n  /** @return true if moved */\n  bringPopupToFront(ePopup) {\n    const parent = this.getPopupParent();\n    const popupList = Array.prototype.slice.call(parent.querySelectorAll(\".ag-popup\"));\n    const popupLen = popupList.length;\n    const alwaysOnTopList = Array.prototype.slice.call(\n      parent.querySelectorAll(\".ag-popup.ag-always-on-top\")\n    );\n    const onTopLength = alwaysOnTopList.length;\n    const eWrapper = this.getWrapper(ePopup);\n    if (!eWrapper || popupLen <= 1 || !parent.contains(ePopup)) {\n      return false;\n    }\n    const pos = popupList.indexOf(eWrapper);\n    const innerEls = eWrapper.querySelectorAll(\"div\");\n    const innerElsScrollMap = [];\n    innerEls.forEach((el) => {\n      if (el.scrollTop !== 0) {\n        innerElsScrollMap.push([el, el.scrollTop]);\n      }\n    });\n    let result = false;\n    if (onTopLength) {\n      const isPopupAlwaysOnTop = eWrapper.classList.contains(\"ag-always-on-top\");\n      if (isPopupAlwaysOnTop) {\n        if (pos !== popupLen - 1) {\n          _last(alwaysOnTopList).insertAdjacentElement(\"afterend\", eWrapper);\n          result = true;\n        }\n      } else if (pos !== popupLen - onTopLength - 1) {\n        alwaysOnTopList[0].insertAdjacentElement(\"beforebegin\", eWrapper);\n        result = true;\n      }\n    } else if (pos !== popupLen - 1) {\n      _last(popupList).insertAdjacentElement(\"afterend\", eWrapper);\n      result = true;\n    }\n    while (innerElsScrollMap.length) {\n      const currentEl = innerElsScrollMap.pop();\n      currentEl[0].scrollTop = currentEl[1];\n    }\n    return result;\n  }\n};\n\n// community-modules/core/src/vanillaFrameworkOverrides.ts\nvar PASSIVE_EVENTS2 = [\"touchstart\", \"touchend\", \"touchmove\", \"touchcancel\"];\nvar VanillaFrameworkOverrides = class {\n  constructor(frameworkName = \"javascript\") {\n    this.frameworkName = frameworkName;\n    this.renderingEngine = \"vanilla\";\n    this.wrapIncoming = (callback) => callback();\n    this.wrapOutgoing = (callback) => callback();\n  }\n  setInterval(action, timeout) {\n    return new AgPromise((resolve) => {\n      resolve(window.setInterval(action, timeout));\n    });\n  }\n  // for Vanilla JS, we just add the event to the element\n  addEventListener(element, type, listener, useCapture) {\n    const isPassive = _includes(PASSIVE_EVENTS2, type);\n    element.addEventListener(type, listener, { capture: !!useCapture, passive: isPassive });\n  }\n  get shouldWrapOutgoing() {\n    return false;\n  }\n  frameworkComponent(name) {\n    return null;\n  }\n  isFrameworkComponent(comp) {\n    return false;\n  }\n  getDocLink(path) {\n    const framework = this.frameworkName === \"solid\" ? \"react\" : this.frameworkName;\n    return `https://www.ag-grid.com/${framework}-data-grid${path ? `/${path}` : \"\"}`;\n  }\n};\n\n// community-modules/core/src/cellNavigationService.ts\nvar CellNavigationService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"cellNavigationService\";\n  }\n  wireBeans(beans) {\n    this.visibleColsService = beans.visibleColsService;\n    this.rowModel = beans.rowModel;\n    this.rowRenderer = beans.rowRenderer;\n    this.pinnedRowModel = beans.pinnedRowModel;\n    this.paginationService = beans.paginationService;\n    this.pageBoundsService = beans.pageBoundsService;\n  }\n  // returns null if no cell to focus on, ie at the end of the grid\n  getNextCellToFocus(key, focusedCell, ctrlPressed = false) {\n    if (ctrlPressed) {\n      return this.getNextCellToFocusWithCtrlPressed(key, focusedCell);\n    }\n    return this.getNextCellToFocusWithoutCtrlPressed(key, focusedCell);\n  }\n  getNextCellToFocusWithCtrlPressed(key, focusedCell) {\n    const upKey = key === KeyCode.UP;\n    const downKey = key === KeyCode.DOWN;\n    const leftKey = key === KeyCode.LEFT;\n    let column;\n    let rowIndex;\n    if (upKey || downKey) {\n      rowIndex = upKey ? this.pageBoundsService.getFirstRow() : this.pageBoundsService.getLastRow();\n      column = focusedCell.column;\n    } else {\n      const allColumns = this.visibleColsService.getAllCols();\n      const isRtl = this.gos.get(\"enableRtl\");\n      rowIndex = focusedCell.rowIndex;\n      column = leftKey !== isRtl ? allColumns[0] : _last(allColumns);\n    }\n    return {\n      rowIndex,\n      rowPinned: null,\n      column\n    };\n  }\n  getNextCellToFocusWithoutCtrlPressed(key, focusedCell) {\n    let pointer = focusedCell;\n    let finished = false;\n    while (!finished) {\n      switch (key) {\n        case KeyCode.UP:\n          pointer = this.getCellAbove(pointer);\n          break;\n        case KeyCode.DOWN:\n          pointer = this.getCellBelow(pointer);\n          break;\n        case KeyCode.RIGHT:\n          if (this.gos.get(\"enableRtl\")) {\n            pointer = this.getCellToLeft(pointer);\n          } else {\n            pointer = this.getCellToRight(pointer);\n          }\n          break;\n        case KeyCode.LEFT:\n          if (this.gos.get(\"enableRtl\")) {\n            pointer = this.getCellToRight(pointer);\n          } else {\n            pointer = this.getCellToLeft(pointer);\n          }\n          break;\n        default:\n          pointer = null;\n          _warnOnce(\"unknown key for navigation \", key);\n          break;\n      }\n      if (pointer) {\n        finished = this.isCellGoodToFocusOn(pointer);\n      } else {\n        finished = true;\n      }\n    }\n    return pointer;\n  }\n  isCellGoodToFocusOn(gridCell) {\n    const column = gridCell.column;\n    let rowNode;\n    switch (gridCell.rowPinned) {\n      case \"top\":\n        rowNode = this.pinnedRowModel.getPinnedTopRow(gridCell.rowIndex);\n        break;\n      case \"bottom\":\n        rowNode = this.pinnedRowModel.getPinnedBottomRow(gridCell.rowIndex);\n        break;\n      default:\n        rowNode = this.rowModel.getRow(gridCell.rowIndex);\n        break;\n    }\n    if (!rowNode) {\n      return false;\n    }\n    const suppressNavigable = column.isSuppressNavigable(rowNode);\n    return !suppressNavigable;\n  }\n  getCellToLeft(lastCell) {\n    if (!lastCell) {\n      return null;\n    }\n    const colToLeft = this.visibleColsService.getColBefore(lastCell.column);\n    if (!colToLeft) {\n      return null;\n    }\n    return {\n      rowIndex: lastCell.rowIndex,\n      column: colToLeft,\n      rowPinned: lastCell.rowPinned\n    };\n  }\n  getCellToRight(lastCell) {\n    if (!lastCell) {\n      return null;\n    }\n    const colToRight = this.visibleColsService.getColAfter(lastCell.column);\n    if (!colToRight) {\n      return null;\n    }\n    return {\n      rowIndex: lastCell.rowIndex,\n      column: colToRight,\n      rowPinned: lastCell.rowPinned\n    };\n  }\n  getRowBelow(rowPosition) {\n    const index = rowPosition.rowIndex;\n    const pinned = rowPosition.rowPinned;\n    let ignoreSticky = false;\n    if (this.isLastRowInContainer(rowPosition)) {\n      switch (pinned) {\n        case \"bottom\":\n          return null;\n        case \"top\":\n          if (this.rowModel.isRowsToRender()) {\n            return { rowIndex: this.pageBoundsService.getFirstRow(), rowPinned: null };\n          }\n          if (this.pinnedRowModel.isRowsToRender(\"bottom\")) {\n            return { rowIndex: 0, rowPinned: \"bottom\" };\n          }\n          return null;\n        default:\n          if (this.pinnedRowModel.isRowsToRender(\"bottom\")) {\n            return { rowIndex: 0, rowPinned: \"bottom\" };\n          }\n          return null;\n      }\n    } else if (pinned) {\n      ignoreSticky = true;\n    }\n    const rowNode = this.rowModel.getRow(rowPosition.rowIndex);\n    const nextStickyPosition = ignoreSticky ? void 0 : this.getNextStickyPosition(rowNode);\n    if (nextStickyPosition) {\n      return nextStickyPosition;\n    }\n    return { rowIndex: index + 1, rowPinned: pinned };\n  }\n  getNextStickyPosition(rowNode, up) {\n    if (!this.gos.isGroupRowsSticky() || !rowNode || !rowNode.sticky) {\n      return;\n    }\n    const isTopCtrls = this.rowRenderer.getStickyTopRowCtrls().some((ctrl) => ctrl.getRowNode().rowIndex === rowNode.rowIndex);\n    let stickyRowCtrls = [];\n    if (isTopCtrls) {\n      stickyRowCtrls = [...this.rowRenderer.getStickyTopRowCtrls()].sort(\n        (a, b) => a.getRowNode().rowIndex - b.getRowNode().rowIndex\n      );\n    } else {\n      stickyRowCtrls = [...this.rowRenderer.getStickyBottomRowCtrls()].sort(\n        (a, b) => b.getRowNode().rowIndex - a.getRowNode().rowIndex\n      );\n    }\n    const diff = up ? -1 : 1;\n    const idx = stickyRowCtrls.findIndex((ctrl) => ctrl.getRowNode().rowIndex === rowNode.rowIndex);\n    const nextCtrl = stickyRowCtrls[idx + diff];\n    if (nextCtrl) {\n      return { rowIndex: nextCtrl.getRowNode().rowIndex, rowPinned: null };\n    }\n  }\n  getCellBelow(lastCell) {\n    if (!lastCell) {\n      return null;\n    }\n    const rowBelow = this.getRowBelow(lastCell);\n    if (rowBelow) {\n      return {\n        rowIndex: rowBelow.rowIndex,\n        column: lastCell.column,\n        rowPinned: rowBelow.rowPinned\n      };\n    }\n    return null;\n  }\n  isLastRowInContainer(rowPosition) {\n    const pinned = rowPosition.rowPinned;\n    const index = rowPosition.rowIndex;\n    if (pinned === \"top\") {\n      const lastTopIndex = this.pinnedRowModel.getPinnedTopRowCount() - 1;\n      return lastTopIndex <= index;\n    }\n    if (pinned === \"bottom\") {\n      const lastBottomIndex = this.pinnedRowModel.getPinnedBottomRowCount() - 1;\n      return lastBottomIndex <= index;\n    }\n    const lastBodyIndex = this.pageBoundsService.getLastRow();\n    return lastBodyIndex <= index;\n  }\n  getRowAbove(rowPosition) {\n    const index = rowPosition.rowIndex;\n    const pinned = rowPosition.rowPinned;\n    const isFirstRow = pinned ? index === 0 : index === this.pageBoundsService.getFirstRow();\n    let ignoreSticky = false;\n    if (isFirstRow) {\n      if (pinned === \"top\") {\n        return null;\n      }\n      if (!pinned) {\n        if (this.pinnedRowModel.isRowsToRender(\"top\")) {\n          return this.getLastFloatingTopRow();\n        }\n        return null;\n      }\n      if (this.rowModel.isRowsToRender()) {\n        return this.getLastBodyCell();\n      }\n      if (this.pinnedRowModel.isRowsToRender(\"top\")) {\n        return this.getLastFloatingTopRow();\n      }\n      return null;\n    } else if (pinned) {\n      ignoreSticky = true;\n    }\n    const rowNode = this.rowModel.getRow(rowPosition.rowIndex);\n    const nextStickyPosition = ignoreSticky ? void 0 : this.getNextStickyPosition(rowNode, true);\n    if (nextStickyPosition) {\n      return nextStickyPosition;\n    }\n    return { rowIndex: index - 1, rowPinned: pinned };\n  }\n  getCellAbove(lastCell) {\n    if (!lastCell) {\n      return null;\n    }\n    const rowAbove = this.getRowAbove({ rowIndex: lastCell.rowIndex, rowPinned: lastCell.rowPinned });\n    if (rowAbove) {\n      return {\n        rowIndex: rowAbove.rowIndex,\n        column: lastCell.column,\n        rowPinned: rowAbove.rowPinned\n      };\n    }\n    return null;\n  }\n  getLastBodyCell() {\n    const lastBodyRow = this.pageBoundsService.getLastRow();\n    return { rowIndex: lastBodyRow, rowPinned: null };\n  }\n  getLastFloatingTopRow() {\n    const lastFloatingRow = this.pinnedRowModel.getPinnedTopRowCount() - 1;\n    return { rowIndex: lastFloatingRow, rowPinned: \"top\" };\n  }\n  getNextTabbedCell(gridCell, backwards) {\n    if (backwards) {\n      return this.getNextTabbedCellBackwards(gridCell);\n    }\n    return this.getNextTabbedCellForwards(gridCell);\n  }\n  getNextTabbedCellForwards(gridCell) {\n    const displayedColumns = this.visibleColsService.getAllCols();\n    let newRowIndex = gridCell.rowIndex;\n    let newFloating = gridCell.rowPinned;\n    let newColumn = this.visibleColsService.getColAfter(gridCell.column);\n    if (!newColumn) {\n      newColumn = displayedColumns[0];\n      const rowBelow = this.getRowBelow(gridCell);\n      if (_missing(rowBelow)) {\n        return null;\n      }\n      if (!rowBelow.rowPinned && !(this.paginationService?.isRowInPage(rowBelow) ?? true)) {\n        return null;\n      }\n      newRowIndex = rowBelow ? rowBelow.rowIndex : null;\n      newFloating = rowBelow ? rowBelow.rowPinned : null;\n    }\n    return { rowIndex: newRowIndex, column: newColumn, rowPinned: newFloating };\n  }\n  getNextTabbedCellBackwards(gridCell) {\n    const displayedColumns = this.visibleColsService.getAllCols();\n    let newRowIndex = gridCell.rowIndex;\n    let newFloating = gridCell.rowPinned;\n    let newColumn = this.visibleColsService.getColBefore(gridCell.column);\n    if (!newColumn) {\n      newColumn = _last(displayedColumns);\n      const rowAbove = this.getRowAbove({ rowIndex: gridCell.rowIndex, rowPinned: gridCell.rowPinned });\n      if (_missing(rowAbove)) {\n        return null;\n      }\n      if (!rowAbove.rowPinned && !(this.paginationService?.isRowInPage(rowAbove) ?? true)) {\n        return null;\n      }\n      newRowIndex = rowAbove ? rowAbove.rowIndex : null;\n      newFloating = rowAbove ? rowAbove.rowPinned : null;\n    }\n    return { rowIndex: newRowIndex, column: newColumn, rowPinned: newFloating };\n  }\n};\n\n// community-modules/core/src/api/gridApiFunctions.ts\nvar mod = (moduleName, input) => {\n  for (const key in input) {\n    input[key] = moduleName;\n  }\n  return input;\n};\nvar gridApiFunctionsMap = {\n  ...mod(\"@ag-grid-community/core\" /* CommunityCoreModule */, {\n    dispatchEvent: 0,\n    destroy: 0,\n    getGridId: 0,\n    getGridOption: 0,\n    isDestroyed: 0,\n    setGridOption: 0,\n    updateGridOptions: 0,\n    getState: 0,\n    setNodesSelected: 0,\n    selectAll: 0,\n    deselectAll: 0,\n    selectAllFiltered: 0,\n    deselectAllFiltered: 0,\n    selectAllOnCurrentPage: 0,\n    deselectAllOnCurrentPage: 0,\n    getSelectedNodes: 0,\n    getSelectedRows: 0,\n    redrawRows: 0,\n    setRowNodeExpanded: 0,\n    getRowNode: 0,\n    addRenderedRowListener: 0,\n    getRenderedNodes: 0,\n    forEachNode: 0,\n    getFirstDisplayedRow: 0,\n    getFirstDisplayedRowIndex: 0,\n    getLastDisplayedRow: 0,\n    getLastDisplayedRowIndex: 0,\n    getDisplayedRowAtIndex: 0,\n    getDisplayedRowCount: 0,\n    getModel: 0,\n    getVerticalPixelRange: 0,\n    getHorizontalPixelRange: 0,\n    ensureColumnVisible: 0,\n    ensureIndexVisible: 0,\n    ensureNodeVisible: 0,\n    getFocusedCell: 0,\n    clearFocusedCell: 0,\n    setFocusedCell: 0,\n    tabToNextCell: 0,\n    tabToPreviousCell: 0,\n    setFocusedHeader: 0,\n    addEventListener: 0,\n    addGlobalListener: 0,\n    removeEventListener: 0,\n    removeGlobalListener: 0,\n    expireValueCache: 0,\n    getValue: 0,\n    getCellValue: 0,\n    showColumnMenuAfterButtonClick: 0,\n    showColumnMenuAfterMouseClick: 0,\n    showColumnMenu: 0,\n    hidePopupMenu: 0,\n    onSortChanged: 0,\n    getPinnedTopRowCount: 0,\n    getPinnedBottomRowCount: 0,\n    getPinnedTopRow: 0,\n    getPinnedBottomRow: 0,\n    showLoadingOverlay: 0,\n    showNoRowsOverlay: 0,\n    hideOverlay: 0,\n    setGridAriaProperty: 0,\n    refreshCells: 0,\n    flashCells: 0,\n    refreshHeader: 0,\n    isAnimationFrameQueueEmpty: 0,\n    flushAllAnimationFrames: 0,\n    getSizesForCurrentTheme: 0,\n    getCellRendererInstances: 0,\n    addRowDropZone: 0,\n    removeRowDropZone: 0,\n    getRowDropZoneParams: 0,\n    getColumnDef: 0,\n    getColumnDefs: 0,\n    sizeColumnsToFit: 0,\n    setColumnGroupOpened: 0,\n    getColumnGroup: 0,\n    getProvidedColumnGroup: 0,\n    getDisplayNameForColumn: 0,\n    getDisplayNameForColumnGroup: 0,\n    getColumn: 0,\n    getColumns: 0,\n    applyColumnState: 0,\n    getColumnState: 0,\n    resetColumnState: 0,\n    getColumnGroupState: 0,\n    setColumnGroupState: 0,\n    resetColumnGroupState: 0,\n    isPinning: 0,\n    isPinningLeft: 0,\n    isPinningRight: 0,\n    getDisplayedColAfter: 0,\n    getDisplayedColBefore: 0,\n    setColumnVisible: 0,\n    setColumnsVisible: 0,\n    setColumnPinned: 0,\n    setColumnsPinned: 0,\n    getAllGridColumns: 0,\n    getDisplayedLeftColumns: 0,\n    getDisplayedCenterColumns: 0,\n    getDisplayedRightColumns: 0,\n    getAllDisplayedColumns: 0,\n    getAllDisplayedVirtualColumns: 0,\n    moveColumn: 0,\n    moveColumnByIndex: 0,\n    moveColumns: 0,\n    setColumnWidth: 0,\n    setColumnWidths: 0,\n    getLeftDisplayedColumnGroups: 0,\n    getCenterDisplayedColumnGroups: 0,\n    getRightDisplayedColumnGroups: 0,\n    getAllDisplayedColumnGroups: 0,\n    autoSizeColumn: 0,\n    autoSizeColumns: 0,\n    autoSizeAllColumns: 0,\n    undoCellEditing: 0,\n    redoCellEditing: 0,\n    getCellEditorInstances: 0,\n    getEditingCells: 0,\n    stopEditing: 0,\n    startEditingCell: 0,\n    getCurrentUndoSize: 0,\n    getCurrentRedoSize: 0,\n    isAnyFilterPresent: 0,\n    onFilterChanged: 0,\n    isColumnFilterPresent: 0,\n    getFilterInstance: 0,\n    getColumnFilterInstance: 0,\n    destroyFilter: 0,\n    setFilterModel: 0,\n    getFilterModel: 0,\n    getColumnFilterModel: 0,\n    setColumnFilterModel: 0,\n    showColumnFilter: 0,\n    isQuickFilterPresent: 0,\n    getQuickFilter: 0,\n    resetQuickFilter: 0,\n    paginationIsLastPageFound: 0,\n    paginationGetPageSize: 0,\n    paginationGetCurrentPage: 0,\n    paginationGetTotalPages: 0,\n    paginationGetRowCount: 0,\n    paginationGoToNextPage: 0,\n    paginationGoToPreviousPage: 0,\n    paginationGoToFirstPage: 0,\n    paginationGoToLastPage: 0,\n    paginationGoToPage: 0,\n    // These may need updating to say which of multiple possible modules they could be missing from.\n    expandAll: 0,\n    collapseAll: 0,\n    onRowHeightChanged: 0,\n    setRowCount: 0,\n    getCacheBlockState: 0\n  }),\n  ...mod(\"@ag-grid-community/client-side-row-model\" /* ClientSideRowModelModule */, {\n    onGroupExpandedOrCollapsed: 0,\n    refreshClientSideRowModel: 0,\n    forEachLeafNode: 0,\n    forEachNodeAfterFilter: 0,\n    forEachNodeAfterFilterAndSort: 0,\n    resetRowHeights: 0,\n    applyTransaction: 0,\n    applyTransactionAsync: 0,\n    flushAsyncTransactions: 0,\n    getBestCostNodeSelection: 0\n  }),\n  ...mod(\"@ag-grid-community/csv-export\" /* CsvExportModule */, {\n    getDataAsCsv: 0,\n    exportDataAsCsv: 0\n  }),\n  ...mod(\"@ag-grid-community/infinite-row-model\" /* InfiniteRowModelModule */, {\n    refreshInfiniteCache: 0,\n    purgeInfiniteCache: 0,\n    getInfiniteRowCount: 0,\n    isLastRowIndexKnown: 0\n  }),\n  ...mod(\"@ag-grid-enterprise/advanced-filter\" /* AdvancedFilterModule */, {\n    getAdvancedFilterModel: 0,\n    setAdvancedFilterModel: 0,\n    showAdvancedFilterBuilder: 0,\n    hideAdvancedFilterBuilder: 0\n  }),\n  ...mod(\"@ag-grid-enterprise/charts\" /* GridChartsModule */, {\n    getChartModels: 0,\n    getChartRef: 0,\n    getChartImageDataURL: 0,\n    downloadChart: 0,\n    openChartToolPanel: 0,\n    closeChartToolPanel: 0,\n    createRangeChart: 0,\n    createPivotChart: 0,\n    createCrossFilterChart: 0,\n    updateChart: 0,\n    restoreChart: 0\n  }),\n  ...mod(\"@ag-grid-enterprise/clipboard\" /* ClipboardModule */, {\n    copyToClipboard: 0,\n    cutToClipboard: 0,\n    copySelectedRowsToClipboard: 0,\n    copySelectedRangeToClipboard: 0,\n    copySelectedRangeDown: 0,\n    pasteFromClipboard: 0\n  }),\n  ...mod(\"@ag-grid-enterprise/excel-export\" /* ExcelExportModule */, {\n    getDataAsExcel: 0,\n    exportDataAsExcel: 0,\n    getSheetDataForExcel: 0,\n    getMultipleSheetsAsExcel: 0,\n    exportMultipleSheetsAsExcel: 0\n  }),\n  ...mod(\"@ag-grid-enterprise/master-detail\" /* MasterDetailModule */, {\n    addDetailGridInfo: 0,\n    removeDetailGridInfo: 0,\n    getDetailGridInfo: 0,\n    forEachDetailGridInfo: 0\n  }),\n  ...mod(\"@ag-grid-enterprise/menu\" /* MenuModule */, {\n    showContextMenu: 0,\n    showColumnChooser: 0,\n    hideColumnChooser: 0\n  }),\n  ...mod(\"@ag-grid-enterprise/range-selection\" /* RangeSelectionModule */, {\n    getCellRanges: 0,\n    addCellRange: 0,\n    clearRangeSelection: 0\n  }),\n  ...mod(\"@ag-grid-enterprise/row-grouping\" /* RowGroupingModule */, {\n    addAggFunc: 0,\n    addAggFuncs: 0,\n    clearAggFuncs: 0,\n    setColumnAggFunc: 0,\n    isPivotMode: 0,\n    getPivotResultColumn: 0,\n    setValueColumns: 0,\n    getValueColumns: 0,\n    removeValueColumn: 0,\n    removeValueColumns: 0,\n    addValueColumn: 0,\n    addValueColumns: 0,\n    setRowGroupColumns: 0,\n    removeRowGroupColumn: 0,\n    removeRowGroupColumns: 0,\n    addRowGroupColumn: 0,\n    addRowGroupColumns: 0,\n    getRowGroupColumns: 0,\n    moveRowGroupColumn: 0,\n    setPivotColumns: 0,\n    removePivotColumn: 0,\n    removePivotColumns: 0,\n    addPivotColumn: 0,\n    addPivotColumns: 0,\n    getPivotColumns: 0,\n    setPivotResultColumns: 0,\n    getPivotResultColumns: 0\n  }),\n  ...mod(\"@ag-grid-enterprise/server-side-row-model\" /* ServerSideRowModelModule */, {\n    getServerSideSelectionState: 0,\n    setServerSideSelectionState: 0,\n    applyServerSideTransaction: 0,\n    applyServerSideTransactionAsync: 0,\n    applyServerSideRowData: 0,\n    retryServerSideLoads: 0,\n    flushServerSideAsyncTransactions: 0,\n    refreshServerSide: 0,\n    getServerSideGroupLevelState: 0\n  }),\n  ...mod(\"@ag-grid-enterprise/side-bar\" /* SideBarModule */, {\n    isSideBarVisible: 0,\n    setSideBarVisible: 0,\n    setSideBarPosition: 0,\n    openToolPanel: 0,\n    closeToolPanel: 0,\n    getOpenedToolPanel: 0,\n    refreshToolPanel: 0,\n    isToolPanelShowing: 0,\n    getToolPanelInstance: 0,\n    getSideBar: 0\n  }),\n  ...mod(\"@ag-grid-enterprise/status-bar\" /* StatusBarModule */, {\n    getStatusPanel: 0\n  })\n};\n\n// community-modules/core/src/api/apiFunctionService.ts\nvar defaultFns = {\n  isDestroyed: () => true,\n  destroy() {\n  },\n  preConstruct() {\n  },\n  postConstruct() {\n  },\n  preWireBeans() {\n  },\n  wireBeans() {\n  }\n};\nvar dispatchEvent = (beans, event) => beans.eventService.dispatchEvent(event);\nvar GridApiClass = class {\n};\nReflect.defineProperty(GridApiClass, \"name\", { value: \"GridApi\" });\nvar ApiFunctionService = class extends BeanStub {\n  constructor() {\n    super();\n    this.beanName = \"apiFunctionService\";\n    this.api = new GridApiClass();\n    this.fns = {\n      ...defaultFns,\n      // dispatchEvent is used by frameworks, also used by aligned grids to identify a grid api instance\n      dispatchEvent\n    };\n    this.beans = null;\n    this.preDestroyLink = \"\";\n    const { api } = this;\n    for (const key in gridApiFunctionsMap) {\n      api[key] = this.makeApi(key)[key];\n    }\n  }\n  wireBeans(beans) {\n    this.beans = beans;\n  }\n  postConstruct() {\n    this.preDestroyLink = this.frameworkOverrides.getDocLink(\"grid-lifecycle/#grid-pre-destroyed\");\n  }\n  addFunction(functionName, func) {\n    const { fns, beans } = this;\n    if (fns !== defaultFns) {\n      fns[functionName] = beans?.validationService?.validateApiFunction(functionName, func) ?? func;\n    }\n  }\n  makeApi(apiName) {\n    return {\n      [apiName]: (...args) => {\n        const {\n          beans,\n          fns: { [apiName]: fn }\n        } = this;\n        return fn ? fn(beans, ...args) : this.apiNotFound(apiName);\n      }\n    };\n  }\n  apiNotFound(fnName) {\n    const { beans, gridId, preDestroyLink } = this;\n    if (!beans) {\n      _warnOnce(\n        `Grid API function ${fnName}() cannot be called as the grid has been destroyed.\nEither clear local references to the grid api, when it is destroyed, or check gridApi.isDestroyed() to avoid calling methods against a destroyed grid.\nTo run logic when the grid is about to be destroyed use the gridPreDestroy event. See: ${preDestroyLink}`\n      );\n    } else {\n      const module = gridApiFunctionsMap[fnName];\n      if (ModuleRegistry.__assertRegistered(module, `api.${fnName}`, gridId)) {\n        _warnOnce(`API function '${fnName}' not registered to module '${module}'`);\n      }\n    }\n  }\n  destroy() {\n    super.destroy();\n    this.fns = defaultFns;\n    this.beans = null;\n  }\n};\n\n// community-modules/core/src/api/apiUtils.ts\nfunction createGridApi(context) {\n  return {\n    beanName: \"gridApi\",\n    bean: context.getBean(\"apiFunctionService\").api\n  };\n}\n\n// community-modules/core/src/columns/columnDefFactory.ts\nvar ColumnDefFactory = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnDefFactory\";\n  }\n  buildColumnDefs(cols, rowGroupColumns, pivotColumns) {\n    const res = [];\n    const colGroupDefs = {};\n    cols.forEach((col) => {\n      const colDef = this.createDefFromColumn(col, rowGroupColumns, pivotColumns);\n      let addToResult = true;\n      let childDef = colDef;\n      let pointer = col.getOriginalParent();\n      let lastPointer = null;\n      while (pointer) {\n        let parentDef = null;\n        if (pointer.isPadding()) {\n          pointer = pointer.getOriginalParent();\n          continue;\n        }\n        const existingParentDef = colGroupDefs[pointer.getGroupId()];\n        if (existingParentDef) {\n          existingParentDef.children.push(childDef);\n          addToResult = false;\n          break;\n        }\n        parentDef = this.createDefFromGroup(pointer);\n        if (parentDef) {\n          parentDef.children = [childDef];\n          colGroupDefs[parentDef.groupId] = parentDef;\n          childDef = parentDef;\n          pointer = pointer.getOriginalParent();\n        }\n        if (pointer != null && lastPointer === pointer) {\n          addToResult = false;\n          break;\n        }\n        lastPointer = pointer;\n      }\n      if (addToResult) {\n        res.push(childDef);\n      }\n    });\n    return res;\n  }\n  createDefFromGroup(group) {\n    const defCloned = _deepCloneDefinition(group.getColGroupDef(), [\"children\"]);\n    if (defCloned) {\n      defCloned.groupId = group.getGroupId();\n    }\n    return defCloned;\n  }\n  createDefFromColumn(col, rowGroupColumns, pivotColumns) {\n    const colDefCloned = _deepCloneDefinition(col.getColDef());\n    colDefCloned.colId = col.getColId();\n    colDefCloned.width = col.getActualWidth();\n    colDefCloned.rowGroup = col.isRowGroupActive();\n    colDefCloned.rowGroupIndex = col.isRowGroupActive() ? rowGroupColumns.indexOf(col) : null;\n    colDefCloned.pivot = col.isPivotActive();\n    colDefCloned.pivotIndex = col.isPivotActive() ? pivotColumns.indexOf(col) : null;\n    colDefCloned.aggFunc = col.isValueActive() ? col.getAggFunc() : null;\n    colDefCloned.hide = col.isVisible() ? void 0 : true;\n    colDefCloned.pinned = col.isPinned() ? col.getPinned() : null;\n    colDefCloned.sort = col.getSort() ? col.getSort() : null;\n    colDefCloned.sortIndex = col.getSortIndex() != null ? col.getSortIndex() : null;\n    return colDefCloned;\n  }\n};\n\n// community-modules/core/src/columns/columnEventDispatcher.ts\nvar ColumnEventDispatcher = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnEventDispatcher\";\n  }\n  visibleCols() {\n    this.eventService.dispatchEvent({\n      type: \"displayedColumnsChanged\"\n    });\n  }\n  gridColumns() {\n    this.eventService.dispatchEvent({\n      type: \"gridColumnsChanged\"\n    });\n  }\n  headerHeight(col) {\n    this.eventService.dispatchEvent({\n      type: \"columnHeaderHeightChanged\",\n      column: col,\n      columns: [col],\n      source: \"autosizeColumnHeaderHeight\"\n    });\n  }\n  groupHeaderHeight(col) {\n    this.eventService.dispatchEvent({\n      type: \"columnGroupHeaderHeightChanged\",\n      columnGroup: col,\n      source: \"autosizeColumnGroupHeaderHeight\"\n    });\n  }\n  groupOpened(impactedGroups) {\n    this.eventService.dispatchEvent({\n      type: \"columnGroupOpened\",\n      columnGroup: impactedGroups.length === 1 ? impactedGroups[0] : void 0,\n      columnGroups: impactedGroups\n    });\n  }\n  rowGroupChanged(impactedColumns, source) {\n    this.eventService.dispatchEvent({\n      type: \"columnRowGroupChanged\",\n      columns: impactedColumns,\n      column: impactedColumns.length === 1 ? impactedColumns[0] : null,\n      source\n    });\n  }\n  genericColumnEvent(eventType, masterList, source) {\n    this.eventService.dispatchEvent({\n      type: eventType,\n      columns: masterList,\n      column: masterList.length === 1 ? masterList[0] : null,\n      source\n    });\n  }\n  pivotModeChanged() {\n    this.eventService.dispatchEvent({\n      type: \"columnPivotModeChanged\"\n    });\n  }\n  virtualColumnsChanged(afterScroll) {\n    this.eventService.dispatchEvent({\n      type: \"virtualColumnsChanged\",\n      afterScroll\n    });\n  }\n  newColumnsLoaded(source) {\n    this.eventService.dispatchEvent({\n      type: \"newColumnsLoaded\",\n      source\n    });\n  }\n  everythingChanged(source) {\n    this.eventService.dispatchEvent({\n      type: \"columnEverythingChanged\",\n      source\n    });\n  }\n  columnMoved(params) {\n    const { movedColumns, source, toIndex, finished } = params;\n    this.eventService.dispatchEvent({\n      type: \"columnMoved\",\n      columns: movedColumns,\n      column: movedColumns && movedColumns.length === 1 ? movedColumns[0] : null,\n      toIndex,\n      finished,\n      source\n    });\n  }\n  columnPinned(changedColumns, source) {\n    if (!changedColumns.length) {\n      return;\n    }\n    const column = changedColumns.length === 1 ? changedColumns[0] : null;\n    const pinned = this.getCommonValue(changedColumns, (col) => col.getPinned());\n    this.eventService.dispatchEvent({\n      type: \"columnPinned\",\n      // mistake in typing, 'undefined' should be allowed, as 'null' means 'not pinned'\n      pinned: pinned != null ? pinned : null,\n      columns: changedColumns,\n      column,\n      source\n    });\n  }\n  columnVisible(changedColumns, source) {\n    if (!changedColumns.length) {\n      return;\n    }\n    const column = changedColumns.length === 1 ? changedColumns[0] : null;\n    const visible = this.getCommonValue(changedColumns, (col) => col.isVisible());\n    this.eventService.dispatchEvent({\n      type: \"columnVisible\",\n      visible,\n      columns: changedColumns,\n      column,\n      source\n    });\n  }\n  getCommonValue(cols, valueGetter) {\n    if (!cols || cols.length == 0) {\n      return void 0;\n    }\n    const firstValue = valueGetter(cols[0]);\n    for (let i = 1; i < cols.length; i++) {\n      if (firstValue !== valueGetter(cols[i])) {\n        return void 0;\n      }\n    }\n    return firstValue;\n  }\n  columnChanged(type, columns, source) {\n    this.eventService.dispatchEvent({\n      type,\n      columns,\n      column: columns && columns.length == 1 ? columns[0] : null,\n      source\n    });\n  }\n  columnResized(columns, finished, source, flexColumns = null) {\n    if (columns && columns.length) {\n      this.eventService.dispatchEvent({\n        type: \"columnResized\",\n        columns,\n        column: columns.length === 1 ? columns[0] : null,\n        flexColumns,\n        finished,\n        source\n      });\n    }\n  }\n};\n\n// community-modules/core/src/columns/columnGetStateService.ts\nvar ColumnGetStateService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnGetStateService\";\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.funcColsService = beans.funcColsService;\n  }\n  getColumnState() {\n    const primaryCols = this.columnModel.getColDefCols();\n    if (_missing(primaryCols) || !this.columnModel.isAlive()) {\n      return [];\n    }\n    const colsForState = this.columnModel.getAllCols();\n    const res = colsForState.map(this.createStateItemFromColumn.bind(this));\n    this.orderColumnStateList(res);\n    return res;\n  }\n  createStateItemFromColumn(column) {\n    const rowGorupColumns = this.funcColsService.getRowGroupColumns();\n    const pivotColumns = this.funcColsService.getPivotColumns();\n    const rowGroupIndex = column.isRowGroupActive() ? rowGorupColumns.indexOf(column) : null;\n    const pivotIndex = column.isPivotActive() ? pivotColumns.indexOf(column) : null;\n    const aggFunc = column.isValueActive() ? column.getAggFunc() : null;\n    const sort = column.getSort() != null ? column.getSort() : null;\n    const sortIndex = column.getSortIndex() != null ? column.getSortIndex() : null;\n    const flex = column.getFlex() != null && column.getFlex() > 0 ? column.getFlex() : null;\n    const res = {\n      colId: column.getColId(),\n      width: column.getActualWidth(),\n      hide: !column.isVisible(),\n      pinned: column.getPinned(),\n      sort,\n      sortIndex,\n      aggFunc,\n      rowGroup: column.isRowGroupActive(),\n      rowGroupIndex,\n      pivot: column.isPivotActive(),\n      pivotIndex,\n      flex\n    };\n    return res;\n  }\n  orderColumnStateList(columnStateList) {\n    const gridColumns = this.columnModel.getCols();\n    const colIdToGridIndexMap = new Map(gridColumns.map((col, index) => [col.getColId(), index]));\n    columnStateList.sort((itemA, itemB) => {\n      const posA = colIdToGridIndexMap.has(itemA.colId) ? colIdToGridIndexMap.get(itemA.colId) : -1;\n      const posB = colIdToGridIndexMap.has(itemB.colId) ? colIdToGridIndexMap.get(itemB.colId) : -1;\n      return posA - posB;\n    });\n  }\n};\n\n// community-modules/core/src/columns/columnGroupStateService.ts\nvar ColumnGroupStateService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnGroupStateService\";\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.columnAnimationService = beans.columnAnimationService;\n    this.eventDispatcher = beans.columnEventDispatcher;\n    this.visibleColsService = beans.visibleColsService;\n  }\n  getColumnGroupState() {\n    const columnGroupState = [];\n    const gridBalancedTree = this.columnModel.getColTree();\n    depthFirstOriginalTreeSearch(null, gridBalancedTree, (node) => {\n      if (isProvidedColumnGroup(node)) {\n        columnGroupState.push({\n          groupId: node.getGroupId(),\n          open: node.isExpanded()\n        });\n      }\n    });\n    return columnGroupState;\n  }\n  resetColumnGroupState(source) {\n    const primaryColumnTree = this.columnModel.getColDefColTree();\n    if (!primaryColumnTree) {\n      return;\n    }\n    const stateItems = [];\n    depthFirstOriginalTreeSearch(null, primaryColumnTree, (child) => {\n      if (isProvidedColumnGroup(child)) {\n        const colGroupDef = child.getColGroupDef();\n        const groupState = {\n          groupId: child.getGroupId(),\n          open: !colGroupDef ? void 0 : colGroupDef.openByDefault\n        };\n        stateItems.push(groupState);\n      }\n    });\n    this.setColumnGroupState(stateItems, source);\n  }\n  setColumnGroupState(stateItems, source) {\n    const gridBalancedTree = this.columnModel.getColTree();\n    if (!gridBalancedTree) {\n      return;\n    }\n    this.columnAnimationService.start();\n    const impactedGroups = [];\n    stateItems.forEach((stateItem) => {\n      const groupKey = stateItem.groupId;\n      const newValue = stateItem.open;\n      const providedColumnGroup = this.columnModel.getProvidedColGroup(groupKey);\n      if (!providedColumnGroup) {\n        return;\n      }\n      if (providedColumnGroup.isExpanded() === newValue) {\n        return;\n      }\n      providedColumnGroup.setExpanded(newValue);\n      impactedGroups.push(providedColumnGroup);\n    });\n    this.visibleColsService.refresh(source, true);\n    if (impactedGroups.length) {\n      this.eventDispatcher.groupOpened(impactedGroups);\n    }\n    this.columnAnimationService.finish();\n  }\n};\n\n// community-modules/core/src/columns/columnViewportService.ts\nvar ColumnViewportService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnViewportService\";\n    // cols in center that are in the viewport\n    this.colsWithinViewport = [];\n    // same as colsWithinViewport, except we always include columns with headerAutoHeight\n    this.headerColsWithinViewport = [];\n    // A hash key to keep track of changes in viewport columns\n    this.colsWithinViewportHash = \"\";\n    // all columns & groups to be rendered, index by row.\n    // used by header rows to get all items to render for that row.\n    this.rowsOfHeadersToRenderLeft = {};\n    this.rowsOfHeadersToRenderRight = {};\n    this.rowsOfHeadersToRenderCenter = {};\n  }\n  wireBeans(beans) {\n    this.visibleColsService = beans.visibleColsService;\n    this.columnModel = beans.columnModel;\n    this.eventDispatcher = beans.columnEventDispatcher;\n  }\n  postConstruct() {\n    this.suppressColumnVirtualisation = this.gos.get(\"suppressColumnVirtualisation\");\n  }\n  setScrollPosition(scrollWidth, scrollPosition, afterScroll = false) {\n    const bodyWidthDirty = this.visibleColsService.isBodyWidthDirty();\n    const noChange = scrollWidth === this.scrollWidth && scrollPosition === this.scrollPosition && !bodyWidthDirty;\n    if (noChange) {\n      return;\n    }\n    this.scrollWidth = scrollWidth;\n    this.scrollPosition = scrollPosition;\n    this.visibleColsService.setBodyWidthDirty();\n    if (this.gos.get(\"enableRtl\")) {\n      const bodyWidth = this.visibleColsService.getBodyContainerWidth();\n      this.viewportLeft = bodyWidth - this.scrollPosition - this.scrollWidth;\n      this.viewportRight = bodyWidth - this.scrollPosition;\n    } else {\n      this.viewportLeft = this.scrollPosition;\n      this.viewportRight = this.scrollWidth + this.scrollPosition;\n    }\n    if (this.columnModel.isReady()) {\n      this.checkViewportColumns(afterScroll);\n    }\n  }\n  getHeadersToRender(type, dept) {\n    let result;\n    switch (type) {\n      case \"left\":\n        result = this.rowsOfHeadersToRenderLeft[dept];\n        break;\n      case \"right\":\n        result = this.rowsOfHeadersToRenderRight[dept];\n        break;\n      default:\n        result = this.rowsOfHeadersToRenderCenter[dept];\n        break;\n    }\n    return result || [];\n  }\n  extractViewportColumns() {\n    const displayedColumnsCenter = this.visibleColsService.getCenterCols();\n    if (this.isColumnVirtualisationSuppressed()) {\n      this.colsWithinViewport = displayedColumnsCenter;\n      this.headerColsWithinViewport = displayedColumnsCenter;\n    } else {\n      this.colsWithinViewport = displayedColumnsCenter.filter(this.isColumnInRowViewport.bind(this));\n      this.headerColsWithinViewport = displayedColumnsCenter.filter(this.isColumnInHeaderViewport.bind(this));\n    }\n  }\n  isColumnVirtualisationSuppressed() {\n    return this.suppressColumnVirtualisation || this.viewportRight === 0;\n  }\n  clear() {\n    this.rowsOfHeadersToRenderLeft = {};\n    this.rowsOfHeadersToRenderRight = {};\n    this.rowsOfHeadersToRenderCenter = {};\n    this.colsWithinViewportHash = \"\";\n  }\n  isColumnInHeaderViewport(col) {\n    if (col.isAutoHeaderHeight() || this.isAnyParentAutoHeaderHeight(col)) {\n      return true;\n    }\n    return this.isColumnInRowViewport(col);\n  }\n  isAnyParentAutoHeaderHeight(col) {\n    while (col) {\n      if (col.isAutoHeaderHeight()) {\n        return true;\n      }\n      col = col.getParent();\n    }\n    return false;\n  }\n  isColumnInRowViewport(col) {\n    if (col.isAutoHeight()) {\n      return true;\n    }\n    const columnLeft = col.getLeft() || 0;\n    const columnRight = columnLeft + col.getActualWidth();\n    const leftBounds = this.viewportLeft - 200;\n    const rightBounds = this.viewportRight + 200;\n    const columnToMuchLeft = columnLeft < leftBounds && columnRight < leftBounds;\n    const columnToMuchRight = columnLeft > rightBounds && columnRight > rightBounds;\n    return !columnToMuchLeft && !columnToMuchRight;\n  }\n  // used by Grid API only\n  getViewportColumns() {\n    const leftCols = this.visibleColsService.getLeftCols();\n    const rightCols = this.visibleColsService.getRightCols();\n    const res = this.colsWithinViewport.concat(leftCols).concat(rightCols);\n    return res;\n  }\n  // + rowRenderer\n  // if we are not column spanning, this just returns back the virtual centre columns,\n  // however if we are column spanning, then different rows can have different virtual\n  // columns, so we have to work out the list for each individual row.\n  getColsWithinViewport(rowNode) {\n    if (!this.columnModel.isColSpanActive()) {\n      return this.colsWithinViewport;\n    }\n    const emptySpaceBeforeColumn = (col) => {\n      const left = col.getLeft();\n      return _exists(left) && left > this.viewportLeft;\n    };\n    const inViewportCallback = this.isColumnVirtualisationSuppressed() ? null : this.isColumnInRowViewport.bind(this);\n    const displayedColumnsCenter = this.visibleColsService.getColsCenter();\n    return this.visibleColsService.getColsForRow(\n      rowNode,\n      displayedColumnsCenter,\n      inViewportCallback,\n      emptySpaceBeforeColumn\n    );\n  }\n  // checks what columns are currently displayed due to column virtualisation. dispatches an event\n  // if the list of columns has changed.\n  // + setColumnWidth(), setViewportPosition(), setColumnDefs(), sizeColumnsToFit()\n  checkViewportColumns(afterScroll = false) {\n    const viewportColumnsChanged = this.extractViewport();\n    if (viewportColumnsChanged) {\n      this.eventDispatcher.virtualColumnsChanged(afterScroll);\n    }\n  }\n  calculateHeaderRows() {\n    this.rowsOfHeadersToRenderLeft = {};\n    this.rowsOfHeadersToRenderRight = {};\n    this.rowsOfHeadersToRenderCenter = {};\n    const renderedColIds = {};\n    const renderedColsLeft = this.visibleColsService.getLeftCols();\n    const renderedColsRight = this.visibleColsService.getRightCols();\n    const allRenderedCols = this.headerColsWithinViewport.concat(renderedColsLeft).concat(renderedColsRight);\n    allRenderedCols.forEach((col) => renderedColIds[col.getId()] = true);\n    const testGroup = (children, result, dept) => {\n      let returnValue = false;\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        let addThisItem = false;\n        if (isColumn(child)) {\n          addThisItem = renderedColIds[child.getId()] === true;\n        } else {\n          const columnGroup = child;\n          const displayedChildren = columnGroup.getDisplayedChildren();\n          if (displayedChildren) {\n            addThisItem = testGroup(displayedChildren, result, dept + 1);\n          }\n        }\n        if (addThisItem) {\n          returnValue = true;\n          if (!result[dept]) {\n            result[dept] = [];\n          }\n          result[dept].push(child);\n        }\n      }\n      return returnValue;\n    };\n    testGroup(this.visibleColsService.getTreeLeft(), this.rowsOfHeadersToRenderLeft, 0);\n    testGroup(this.visibleColsService.getTreeRight(), this.rowsOfHeadersToRenderRight, 0);\n    testGroup(this.visibleColsService.getTreeCenter(), this.rowsOfHeadersToRenderCenter, 0);\n  }\n  extractViewport() {\n    const hashColumn = (c) => `${c.getId()}-${c.getPinned() || \"normal\"}`;\n    this.extractViewportColumns();\n    const newHash = this.getViewportColumns().map(hashColumn).join(\"#\");\n    const changed = this.colsWithinViewportHash !== newHash;\n    if (changed) {\n      this.colsWithinViewportHash = newHash;\n      this.calculateHeaderRows();\n    }\n    return changed;\n  }\n};\n\n// community-modules/core/src/components/framework/agComponentUtils.ts\nvar AgComponentUtils = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"agComponentUtils\";\n  }\n  wireBeans(beans) {\n    this.componentMetadataProvider = beans.componentMetadataProvider;\n  }\n  adaptFunction(propertyName, jsCompFunc) {\n    const metadata = this.componentMetadataProvider.retrieve(propertyName);\n    if (metadata && metadata.functionAdapter) {\n      return metadata.functionAdapter(jsCompFunc);\n    }\n    return null;\n  }\n  adaptCellRendererFunction(callback) {\n    class Adapter {\n      refresh() {\n        return false;\n      }\n      getGui() {\n        return this.eGui;\n      }\n      init(params) {\n        const callbackResult = callback(params);\n        const type = typeof callbackResult;\n        if (type === \"string\" || type === \"number\" || type === \"boolean\") {\n          this.eGui = _loadTemplate(\"<span>\" + callbackResult + \"</span>\");\n          return;\n        }\n        if (callbackResult == null) {\n          this.eGui = _loadTemplate(\"<span></span>\");\n          return;\n        }\n        this.eGui = callbackResult;\n      }\n    }\n    return Adapter;\n  }\n  doesImplementIComponent(candidate) {\n    if (!candidate) {\n      return false;\n    }\n    return candidate.prototype && \"getGui\" in candidate.prototype;\n  }\n};\n\n// community-modules/core/src/components/framework/componentMetadataProvider.ts\nvar ComponentMetadataProvider = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"componentMetadataProvider\";\n  }\n  wireBeans(beans) {\n    this.agComponentUtils = beans.agComponentUtils;\n  }\n  postConstruct() {\n    this.componentMetaData = {\n      dateComponent: {\n        mandatoryMethodList: [\"getDate\", \"setDate\"],\n        optionalMethodList: [\n          \"afterGuiAttached\",\n          \"setInputPlaceholder\",\n          \"setInputAriaLabel\",\n          \"setDisabled\",\n          \"onParamsUpdated\",\n          \"refresh\"\n        ]\n      },\n      detailCellRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"refresh\"],\n        functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n      },\n      headerComponent: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"refresh\"]\n      },\n      headerGroupComponent: {\n        mandatoryMethodList: [],\n        optionalMethodList: []\n      },\n      loadingCellRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: [],\n        functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n      },\n      loadingOverlayComponent: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"refresh\"]\n      },\n      noRowsOverlayComponent: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"refresh\"]\n      },\n      floatingFilterComponent: {\n        mandatoryMethodList: [\"onParentModelChanged\"],\n        optionalMethodList: [\"afterGuiAttached\", \"onParamsUpdated\", \"refresh\"]\n      },\n      cellRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"refresh\", \"afterGuiAttached\"],\n        functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n      },\n      cellEditor: {\n        mandatoryMethodList: [\"getValue\"],\n        optionalMethodList: [\n          \"isPopup\",\n          \"isCancelBeforeStart\",\n          \"isCancelAfterEnd\",\n          \"getPopupPosition\",\n          \"focusIn\",\n          \"focusOut\",\n          \"afterGuiAttached\",\n          \"refresh\"\n        ]\n      },\n      innerRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"afterGuiAttached\"],\n        functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n      },\n      fullWidthCellRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"refresh\", \"afterGuiAttached\"],\n        functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n      },\n      groupRowRenderer: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"afterGuiAttached\"],\n        functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n      },\n      filter: {\n        mandatoryMethodList: [\"isFilterActive\", \"doesFilterPass\", \"getModel\", \"setModel\"],\n        optionalMethodList: [\n          \"afterGuiAttached\",\n          \"afterGuiDetached\",\n          \"onNewRowsLoaded\",\n          \"getModelAsString\",\n          \"onFloatingFilterChanged\",\n          \"onAnyFilterChanged\",\n          \"refresh\"\n        ]\n      },\n      statusPanel: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"refresh\"]\n      },\n      toolPanel: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"refresh\", \"getState\"]\n      },\n      tooltipComponent: {\n        mandatoryMethodList: [],\n        optionalMethodList: []\n      },\n      menuItem: {\n        mandatoryMethodList: [],\n        optionalMethodList: [\"setActive\", \"select\", \"setExpanded\", \"configureDefaults\"]\n      }\n    };\n  }\n  retrieve(name) {\n    return this.componentMetaData[name];\n  }\n};\n\n// community-modules/core/src/context/gridBeanComparator.ts\nvar orderedCoreBeans = [\n  // core beans only\n  \"rowPositionUtils\",\n  \"cellPositionUtils\",\n  \"headerPositionUtils\",\n  \"paginationAutoPageSizeService\",\n  \"apiFunctionService\",\n  \"gridApi\",\n  \"userComponentRegistry\",\n  \"agComponentUtils\",\n  \"componentMetadataProvider\",\n  \"resizeObserverService\",\n  \"userComponentFactory\",\n  \"rowContainerHeightService\",\n  \"horizontalResizeService\",\n  \"localeService\",\n  \"validationService\",\n  \"pinnedRowModel\",\n  \"dragService\",\n  \"visibleColsService\",\n  \"eventService\",\n  \"gos\",\n  \"popupService\",\n  \"selectionService\",\n  \"columnFilterService\",\n  \"quickFilterService\",\n  \"filterManager\",\n  \"columnModel\",\n  \"headerNavigationService\",\n  \"pageBoundsService\",\n  \"paginationService\",\n  \"pageBoundsListener\",\n  \"rowRenderer\",\n  \"expressionService\",\n  \"columnFactory\",\n  \"alignedGridsService\",\n  \"navigationService\",\n  \"valueCache\",\n  \"valueService\",\n  \"loggerFactory\",\n  \"autoWidthCalculator\",\n  \"filterMenuFactory\",\n  \"dragAndDropService\",\n  \"focusService\",\n  \"mouseEventService\",\n  \"environment\",\n  \"cellNavigationService\",\n  \"stylingService\",\n  \"scrollVisibleService\",\n  \"sortController\",\n  \"columnHoverService\",\n  \"columnAnimationService\",\n  \"selectableService\",\n  \"autoColService\",\n  \"changeDetectionService\",\n  \"animationFrameService\",\n  \"undoRedoService\",\n  \"columnDefFactory\",\n  \"rowCssClassCalculator\",\n  \"rowNodeBlockLoader\",\n  \"rowNodeSorter\",\n  \"ctrlsService\",\n  \"pinnedWidthService\",\n  \"rowNodeEventThrottle\",\n  \"ctrlsFactory\",\n  \"dataTypeService\",\n  \"syncService\",\n  \"overlayService\",\n  \"stateService\",\n  \"expansionService\",\n  \"apiEventService\",\n  \"ariaAnnouncementService\",\n  \"menuService\",\n  \"columnApplyStateService\",\n  \"columnEventDispatcher\",\n  \"columnMoveService\",\n  \"columnAutosizeService\",\n  \"columnGetStateService\",\n  \"columnGroupStateService\",\n  \"columnSizeService\",\n  \"funcColsService\",\n  \"columnNameService\",\n  \"columnViewportService\",\n  \"pivotResultColsService\",\n  \"showRowGroupColsService\"\n];\nvar beanNamePosition = Object.fromEntries(\n  orderedCoreBeans.map((beanName, index) => [beanName, index])\n);\nfunction gridBeanInitComparator(bean1, bean2) {\n  const index1 = (bean1.beanName ? beanNamePosition[bean1.beanName] : void 0) ?? Number.MAX_SAFE_INTEGER;\n  const index2 = (bean2.beanName ? beanNamePosition[bean2.beanName] : void 0) ?? Number.MAX_SAFE_INTEGER;\n  return index1 - index2;\n}\nfunction gridBeanDestroyComparator(bean1, bean2) {\n  return bean1?.beanName === \"gridDestroyService\" ? -1 : 0;\n}\n\n// community-modules/core/src/ctrlsFactory.ts\nvar CtrlsFactory = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"ctrlsFactory\";\n    this.registry = {};\n  }\n  register(meta) {\n    this.registry[meta.name] = meta.classImp;\n  }\n  getInstance(name, ...args) {\n    const ControllerClass = this.registry[name];\n    if (ControllerClass == null) {\n      return void 0;\n    }\n    return new ControllerClass(...args);\n  }\n};\n\n// community-modules/core/src/ctrlsService.ts\nvar CtrlsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"ctrlsService\";\n    this.params = {};\n    this.ready = false;\n    this.readyCallbacks = [];\n  }\n  checkReady() {\n    const params = this.params;\n    this.ready = params.gridCtrl != null && params.gridBodyCtrl != null && params.center != null && params.left != null && params.right != null && params.bottomCenter != null && params.bottomLeft != null && params.bottomRight != null && params.topCenter != null && params.topLeft != null && params.topRight != null && params.stickyTopCenter != null && params.stickyTopLeft != null && params.stickyTopRight != null && params.stickyBottomCenter != null && params.stickyBottomLeft != null && params.stickyBottomRight != null && params.centerHeader != null && params.leftHeader != null && params.rightHeader != null && params.fakeHScrollComp != null && params.fakeVScrollComp != null && params.gridHeaderCtrl != null;\n    if (this.ready) {\n      this.readyCallbacks.forEach((c) => c(params));\n      this.readyCallbacks.length = 0;\n    }\n  }\n  whenReady(callback) {\n    if (this.ready) {\n      callback(this.params);\n    } else {\n      this.readyCallbacks.push(callback);\n    }\n  }\n  register(ctrlType, ctrl) {\n    this.params[ctrlType] = ctrl;\n    this.checkReady();\n  }\n  registerHeaderContainer(ctrl, pinned) {\n    const params = this.params;\n    switch (pinned) {\n      case \"left\":\n        params.leftHeader = ctrl;\n        break;\n      case \"right\":\n        params.rightHeader = ctrl;\n        break;\n      default:\n        params.centerHeader = ctrl;\n        break;\n    }\n    this.checkReady();\n  }\n  get(ctrlType) {\n    return this.params[ctrlType];\n  }\n  getParams() {\n    return this.params;\n  }\n  getGridBodyCtrl() {\n    return this.params.gridBodyCtrl;\n  }\n  getHeaderRowContainerCtrls() {\n    const { leftHeader, centerHeader, rightHeader } = this.params;\n    return [leftHeader, rightHeader, centerHeader];\n  }\n  getHeaderRowContainerCtrl(pinned) {\n    const params = this.params;\n    switch (pinned) {\n      case \"left\":\n        return params.leftHeader;\n      case \"right\":\n        return params.rightHeader;\n      default:\n        return params.centerHeader;\n    }\n  }\n};\n\n// community-modules/core/src/entities/cellPositionUtils.ts\nvar CellPositionUtils = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"cellPositionUtils\";\n  }\n  createId(cellPosition) {\n    const { rowIndex, rowPinned, column } = cellPosition;\n    return this.createIdFromValues({ rowIndex, column, rowPinned });\n  }\n  createIdFromValues(cellPosition) {\n    const { rowIndex, rowPinned, column } = cellPosition;\n    return `${rowIndex}.${rowPinned == null ? \"null\" : rowPinned}.${column.getId()}`;\n  }\n  equals(cellA, cellB) {\n    const colsMatch = cellA.column === cellB.column;\n    const floatingMatch = cellA.rowPinned === cellB.rowPinned;\n    const indexMatch = cellA.rowIndex === cellB.rowIndex;\n    return colsMatch && floatingMatch && indexMatch;\n  }\n};\n\n// community-modules/core/src/entities/rowNodeEventThrottle.ts\nvar RowNodeEventThrottle = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowNodeEventThrottle\";\n    this.events = [];\n  }\n  wireBeans(beans) {\n    this.animationFrameService = beans.animationFrameService;\n    this.rowModel = beans.rowModel;\n  }\n  postConstruct() {\n    if (this.rowModel.getType() == \"clientSide\") {\n      this.clientSideRowModel = this.rowModel;\n    }\n  }\n  // because the user can call rowNode.setExpanded() many times in one VM turn,\n  // we throttle the calls to ClientSideRowModel using animationFrameService. this means for 100\n  // row nodes getting expanded, we only update the CSRM once, and then we fire all events after\n  // CSRM has updated.\n  //\n  // if we did not do this, then the user could call setExpanded on 100+ rows, causing the grid\n  // to re-render 100+ times, which would be a performance lag.\n  //\n  // we use animationFrameService\n  // rather than debounce() so this will get done if anyone flushes the animationFrameService\n  // (eg user calls api.ensureRowVisible(), which in turn flushes ).\n  dispatchExpanded(event, forceSync) {\n    if (this.clientSideRowModel == null) {\n      this.eventService.dispatchEvent(event);\n      return;\n    }\n    this.events.push(event);\n    const func = () => {\n      if (this.clientSideRowModel) {\n        this.clientSideRowModel.onRowGroupOpened();\n      }\n      this.events.forEach((e) => this.eventService.dispatchEvent(e));\n      this.events = [];\n    };\n    if (forceSync) {\n      func();\n    } else {\n      if (this.dispatchExpandedDebounced == null) {\n        this.dispatchExpandedDebounced = this.animationFrameService.debounce(func);\n      }\n      this.dispatchExpandedDebounced();\n    }\n  }\n};\n\n// community-modules/core/src/entities/rowPositionUtils.ts\nvar RowPositionUtils = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowPositionUtils\";\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n    this.pinnedRowModel = beans.pinnedRowModel;\n    this.pageBoundsService = beans.pageBoundsService;\n  }\n  getFirstRow() {\n    let rowIndex = 0;\n    let rowPinned;\n    if (this.pinnedRowModel.getPinnedTopRowCount()) {\n      rowPinned = \"top\";\n    } else if (this.rowModel.getRowCount()) {\n      rowPinned = null;\n      rowIndex = this.pageBoundsService.getFirstRow();\n    } else if (this.pinnedRowModel.getPinnedBottomRowCount()) {\n      rowPinned = \"bottom\";\n    }\n    return rowPinned === void 0 ? null : { rowIndex, rowPinned };\n  }\n  getLastRow() {\n    let rowIndex;\n    let rowPinned = null;\n    const pinnedBottomCount = this.pinnedRowModel.getPinnedBottomRowCount();\n    const pinnedTopCount = this.pinnedRowModel.getPinnedTopRowCount();\n    if (pinnedBottomCount) {\n      rowPinned = \"bottom\";\n      rowIndex = pinnedBottomCount - 1;\n    } else if (this.rowModel.getRowCount()) {\n      rowPinned = null;\n      rowIndex = this.pageBoundsService.getLastRow();\n    } else if (pinnedTopCount) {\n      rowPinned = \"top\";\n      rowIndex = pinnedTopCount - 1;\n    }\n    return rowIndex === void 0 ? null : { rowIndex, rowPinned };\n  }\n  getRowNode(gridRow) {\n    switch (gridRow.rowPinned) {\n      case \"top\":\n        return this.pinnedRowModel.getPinnedTopRow(gridRow.rowIndex);\n      case \"bottom\":\n        return this.pinnedRowModel.getPinnedBottomRow(gridRow.rowIndex);\n      default:\n        return this.rowModel.getRow(gridRow.rowIndex);\n    }\n  }\n  sameRow(rowA, rowB) {\n    if (!rowA && !rowB) {\n      return true;\n    }\n    if (rowA && !rowB || !rowA && rowB) {\n      return false;\n    }\n    return rowA.rowIndex === rowB.rowIndex && rowA.rowPinned == rowB.rowPinned;\n  }\n  // tests if this row selection is before the other row selection\n  before(rowA, rowB) {\n    switch (rowA.rowPinned) {\n      case \"top\":\n        if (rowB.rowPinned !== \"top\") {\n          return true;\n        }\n        break;\n      case \"bottom\":\n        if (rowB.rowPinned !== \"bottom\") {\n          return false;\n        }\n        break;\n      default:\n        if (_exists(rowB.rowPinned)) {\n          return rowB.rowPinned !== \"top\";\n        }\n        break;\n    }\n    return rowA.rowIndex < rowB.rowIndex;\n  }\n};\n\n// community-modules/core/src/environment.ts\nvar ROW_HEIGHT = {\n  cssName: \"--ag-row-height\",\n  changeKey: \"rowHeightChanged\",\n  defaultValue: 42\n};\nvar HEADER_HEIGHT = {\n  cssName: \"--ag-header-height\",\n  changeKey: \"headerHeightChanged\",\n  defaultValue: 48\n};\nvar LIST_ITEM_HEIGHT = {\n  cssName: \"--ag-list-item-height\",\n  changeKey: \"listItemHeightChanged\",\n  defaultValue: 24\n};\nvar Environment = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"environment\";\n    this.sizeEls = /* @__PURE__ */ new Map();\n    this.lastKnownValues = /* @__PURE__ */ new Map();\n    this.themeClasses = [];\n    this.eThemeAncestor = null;\n    this.eMeasurementContainer = null;\n    this.sizesMeasured = false;\n  }\n  wireBeans(beans) {\n    this.resizeObserverService = beans.resizeObserverService;\n    this.eGridDiv = beans.eGridDiv;\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(\"rowHeight\", () => this.refreshRowHeightVariable());\n    this.themeClasses = this.getAncestorThemeClasses();\n    this.setUpThemeClassObservers();\n    this.getSizeEl(ROW_HEIGHT);\n    this.getSizeEl(HEADER_HEIGHT);\n    this.getSizeEl(LIST_ITEM_HEIGHT);\n  }\n  getDefaultRowHeight() {\n    return this.getCSSVariablePixelValue(ROW_HEIGHT);\n  }\n  getDefaultHeaderHeight() {\n    return this.getCSSVariablePixelValue(HEADER_HEIGHT);\n  }\n  getDefaultListItemHeight() {\n    return this.getCSSVariablePixelValue(LIST_ITEM_HEIGHT);\n  }\n  hasMeasuredSizes() {\n    return this.sizesMeasured;\n  }\n  getThemeClasses() {\n    return this.themeClasses;\n  }\n  applyThemeClasses(el) {\n    for (const className of Array.from(el.classList)) {\n      if (className.startsWith(\"ag-theme-\") && !this.themeClasses.includes(className)) {\n        el.classList.remove(className);\n      }\n    }\n    for (const className of this.themeClasses) {\n      if (!el.classList.contains(className)) {\n        el.classList.add(className);\n      }\n    }\n  }\n  getThemeAncestorElement() {\n    return this.eThemeAncestor;\n  }\n  refreshRowHeightVariable() {\n    const oldRowHeight = this.eGridDiv.style.getPropertyValue(\"--ag-line-height\").trim();\n    const height = this.gos.get(\"rowHeight\");\n    if (height == null || isNaN(height) || !isFinite(height)) {\n      if (oldRowHeight !== null) {\n        this.eGridDiv.style.setProperty(\"--ag-line-height\", null);\n      }\n      return -1;\n    }\n    const newRowHeight = `${height}px`;\n    if (oldRowHeight != newRowHeight) {\n      this.eGridDiv.style.setProperty(\"--ag-line-height\", newRowHeight);\n      return height;\n    }\n    return oldRowHeight != \"\" ? parseFloat(oldRowHeight) : -1;\n  }\n  getCSSVariablePixelValue(variable) {\n    const cached = this.lastKnownValues.get(variable);\n    if (cached != null) {\n      return cached;\n    }\n    const measurement = this.measureSizeEl(variable);\n    if (measurement === \"detached\" || measurement === \"no-styles\") {\n      return variable.defaultValue;\n    }\n    this.lastKnownValues.set(variable, measurement);\n    return measurement;\n  }\n  measureSizeEl(variable) {\n    const sizeEl = this.getSizeEl(variable);\n    if (sizeEl.offsetParent == null) {\n      return \"detached\";\n    }\n    const newSize = sizeEl.offsetWidth;\n    if (newSize === NO_VALUE_SENTINEL)\n      return \"no-styles\";\n    this.sizesMeasured = true;\n    return newSize;\n  }\n  getSizeEl(variable) {\n    let sizeEl = this.sizeEls.get(variable);\n    if (sizeEl) {\n      return sizeEl;\n    }\n    let container = this.eMeasurementContainer;\n    if (!container) {\n      container = this.eMeasurementContainer = document.createElement(\"div\");\n      container.className = \"ag-measurement-container\";\n      this.eGridDiv.appendChild(container);\n    }\n    sizeEl = document.createElement(\"div\");\n    sizeEl.style.width = `var(${variable.cssName}, ${NO_VALUE_SENTINEL}px)`;\n    container.appendChild(sizeEl);\n    this.sizeEls.set(variable, sizeEl);\n    let lastMeasurement = this.measureSizeEl(variable);\n    if (lastMeasurement === \"no-styles\") {\n      _warnOnce(\n        `no value for ${variable.cssName}. This usually means that the grid has been initialised before styles have been loaded. The default value of ${variable.defaultValue} will be used and updated when styles load.`\n      );\n    }\n    const unsubscribe = this.resizeObserverService.observeResize(sizeEl, () => {\n      const newMeasurement = this.measureSizeEl(variable);\n      if (newMeasurement === \"detached\" || newMeasurement === \"no-styles\") {\n        return;\n      }\n      this.lastKnownValues.set(variable, newMeasurement);\n      if (newMeasurement !== lastMeasurement) {\n        lastMeasurement = newMeasurement;\n        this.fireGridStylesChangedEvent(variable.changeKey);\n      }\n    });\n    this.addDestroyFunc(() => unsubscribe());\n    return sizeEl;\n  }\n  fireGridStylesChangedEvent(change) {\n    this.eventService.dispatchEvent({\n      type: \"gridStylesChanged\",\n      [change]: true\n    });\n  }\n  setUpThemeClassObservers() {\n    const observer = new MutationObserver(() => {\n      const newThemeClasses = this.getAncestorThemeClasses();\n      if (!arraysEqual(newThemeClasses, this.themeClasses)) {\n        this.themeClasses = newThemeClasses;\n        this.fireGridStylesChangedEvent(\"themeChanged\");\n      }\n    });\n    let node = this.eGridDiv;\n    while (node) {\n      observer.observe(node || this.eGridDiv, {\n        attributes: true,\n        attributeFilter: [\"class\"]\n      });\n      node = node.parentElement;\n    }\n  }\n  getAncestorThemeClasses() {\n    let el = this.eGridDiv;\n    const allThemeClasses = [];\n    this.eThemeAncestor = null;\n    while (el) {\n      const themeClasses = Array.from(el.classList).filter((c) => c.startsWith(\"ag-theme-\"));\n      for (const themeClass of themeClasses) {\n        this.eThemeAncestor = el;\n        if (!allThemeClasses.includes(themeClass)) {\n          allThemeClasses.unshift(themeClass);\n        }\n      }\n      el = el.parentElement;\n    }\n    return Object.freeze(allThemeClasses);\n  }\n};\nvar arraysEqual = (a, b) => a.length === b.length && a.findIndex((_, i) => a[i] !== b[i]) === -1;\nvar NO_VALUE_SENTINEL = 15538;\n\n// community-modules/core/src/eventService.ts\nvar EventService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"eventService\";\n    this.globalEventService = new LocalEventService();\n  }\n  wireBeans(beans) {\n    this.globalEventListener = beans.globalEventListener;\n    this.globalSyncEventListener = beans.globalSyncEventListener;\n  }\n  postConstruct() {\n    if (this.globalEventListener) {\n      const async = this.gos.useAsyncEvents();\n      this.addGlobalListener(this.globalEventListener, async);\n    }\n    if (this.globalSyncEventListener) {\n      this.addGlobalListener(this.globalSyncEventListener, false);\n    }\n  }\n  addEventListener(eventType, listener, async) {\n    this.globalEventService.addEventListener(eventType, listener, async);\n  }\n  removeEventListener(eventType, listener, async) {\n    this.globalEventService.removeEventListener(eventType, listener, async);\n  }\n  addGlobalListener(listener, async = false) {\n    this.globalEventService.addGlobalListener(listener, async);\n  }\n  removeGlobalListener(listener, async = false) {\n    this.globalEventService.removeGlobalListener(listener, async);\n  }\n  /** @deprecated DO NOT FIRE LOCAL EVENTS OFF THE EVENT SERVICE */\n  dispatchLocalEvent() {\n  }\n  dispatchEvent(event) {\n    this.globalEventService.dispatchEvent(this.gos.addGridCommonParams(event));\n  }\n  dispatchEventOnce(event) {\n    this.globalEventService.dispatchEventOnce(this.gos.addGridCommonParams(event));\n  }\n};\n\n// community-modules/core/src/focusService.ts\nvar _FocusService = class _FocusService extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"focusService\";\n  }\n  wireBeans(beans) {\n    this.eGridDiv = beans.eGridDiv;\n    this.columnModel = beans.columnModel;\n    this.visibleColsService = beans.visibleColsService;\n    this.headerNavigationService = beans.headerNavigationService;\n    this.headerPositionUtils = beans.headerPositionUtils;\n    this.rowRenderer = beans.rowRenderer;\n    this.rowPositionUtils = beans.rowPositionUtils;\n    this.cellPositionUtils = beans.cellPositionUtils;\n    this.navigationService = beans.navigationService;\n    this.ctrlsService = beans.ctrlsService;\n    this.filterManager = beans.filterManager;\n    this.rangeService = beans.rangeService;\n    this.advancedFilterService = beans.advancedFilterService;\n    this.overlayService = beans.overlayService;\n  }\n  static addKeyboardModeEvents(doc) {\n    if (this.instanceCount > 0) {\n      return;\n    }\n    doc.addEventListener(\"keydown\", _FocusService.toggleKeyboardMode);\n    doc.addEventListener(\"mousedown\", _FocusService.toggleKeyboardMode);\n  }\n  static removeKeyboardModeEvents(doc) {\n    if (this.instanceCount > 0)\n      return;\n    doc.addEventListener(\"keydown\", _FocusService.toggleKeyboardMode);\n    doc.addEventListener(\"mousedown\", _FocusService.toggleKeyboardMode);\n  }\n  static toggleKeyboardMode(event) {\n    const isKeyboardActive = _FocusService.keyboardModeActive;\n    const isKeyboardEvent = event.type === \"keydown\";\n    if (isKeyboardEvent) {\n      if (event.ctrlKey || event.metaKey || event.altKey) {\n        return;\n      }\n    }\n    if (isKeyboardActive === isKeyboardEvent) {\n      return;\n    }\n    _FocusService.keyboardModeActive = isKeyboardEvent;\n  }\n  static unregisterGridCompController(doc) {\n    _FocusService.removeKeyboardModeEvents(doc);\n  }\n  postConstruct() {\n    const clearFocusedCellListener = this.clearFocusedCell.bind(this);\n    this.addManagedEventListeners({\n      columnPivotModeChanged: clearFocusedCellListener,\n      newColumnsLoaded: this.onColumnEverythingChanged.bind(this),\n      columnGroupOpened: clearFocusedCellListener,\n      columnRowGroupChanged: clearFocusedCellListener\n    });\n    this.registerKeyboardFocusEvents();\n    this.ctrlsService.whenReady((p) => {\n      this.gridCtrl = p.gridCtrl;\n    });\n  }\n  registerKeyboardFocusEvents() {\n    const eDocument = this.gos.getDocument();\n    _FocusService.addKeyboardModeEvents(eDocument);\n    _FocusService.instanceCount++;\n    this.addDestroyFunc(() => {\n      _FocusService.instanceCount--;\n      _FocusService.unregisterGridCompController(eDocument);\n    });\n  }\n  onColumnEverythingChanged() {\n    if (!this.focusedCellPosition) {\n      return;\n    }\n    const col = this.focusedCellPosition.column;\n    const colFromColumnModel = this.columnModel.getCol(col.getId());\n    if (col !== colFromColumnModel) {\n      this.clearFocusedCell();\n    }\n  }\n  isKeyboardMode() {\n    return _FocusService.keyboardModeActive;\n  }\n  // we check if the browser is focusing something, and if it is, and\n  // it's the cell we think is focused, then return the cell. so this\n  // methods returns the cell if a) we think it has focus and b) the\n  // browser thinks it has focus. this then returns nothing if we\n  // first focus a cell, then second click outside the grid, as then the\n  // grid cell will still be focused as far as the grid is concerned,\n  // however the browser focus will have moved somewhere else.\n  getFocusCellToUseAfterRefresh() {\n    if (this.gos.get(\"suppressFocusAfterRefresh\") || !this.focusedCellPosition) {\n      return null;\n    }\n    if (this.isDomDataMissingInHierarchy(this.gos.getActiveDomElement(), RowCtrl.DOM_DATA_KEY_ROW_CTRL)) {\n      return null;\n    }\n    return this.focusedCellPosition;\n  }\n  getFocusHeaderToUseAfterRefresh() {\n    if (this.gos.get(\"suppressFocusAfterRefresh\") || !this.focusedHeaderPosition) {\n      return null;\n    }\n    if (this.isDomDataMissingInHierarchy(\n      this.gos.getActiveDomElement(),\n      AbstractHeaderCellCtrl.DOM_DATA_KEY_HEADER_CTRL\n    )) {\n      return null;\n    }\n    return this.focusedHeaderPosition;\n  }\n  isDomDataMissingInHierarchy(eBrowserCell, key) {\n    let ePointer = eBrowserCell;\n    while (ePointer) {\n      const data = this.gos.getDomData(ePointer, key);\n      if (data) {\n        return false;\n      }\n      ePointer = ePointer.parentNode;\n    }\n    return true;\n  }\n  getFocusedCell() {\n    return this.focusedCellPosition;\n  }\n  shouldRestoreFocus(cell) {\n    if (this.isCellRestoreFocused(cell)) {\n      setTimeout(() => {\n        this.restoredFocusedCellPosition = null;\n      }, 0);\n      return true;\n    }\n    return false;\n  }\n  clearRestoreFocus() {\n    this.restoredFocusedCellPosition = null;\n    this.awaitRestoreFocusedCell = false;\n  }\n  restoreFocusedCell(cellPosition, setFocusCallback) {\n    this.awaitRestoreFocusedCell = true;\n    setTimeout(() => {\n      if (!this.awaitRestoreFocusedCell) {\n        return;\n      }\n      this.setRestoreFocusedCell(cellPosition);\n      setFocusCallback();\n    });\n  }\n  isCellRestoreFocused(cellPosition) {\n    if (this.restoredFocusedCellPosition == null) {\n      return false;\n    }\n    return this.cellPositionUtils.equals(cellPosition, this.restoredFocusedCellPosition);\n  }\n  setRestoreFocusedCell(cellPosition) {\n    if (this.getFrameworkOverrides().renderingEngine === \"react\") {\n      this.restoredFocusedCellPosition = cellPosition;\n    }\n  }\n  getFocusEventParams(focusedCellPosition) {\n    const { rowIndex, rowPinned, column } = focusedCellPosition;\n    const params = {\n      rowIndex,\n      rowPinned,\n      column,\n      isFullWidthCell: false\n    };\n    const rowCtrl = this.rowRenderer.getRowByPosition({ rowIndex, rowPinned });\n    if (rowCtrl) {\n      params.isFullWidthCell = rowCtrl.isFullWidth();\n    }\n    return params;\n  }\n  clearFocusedCell() {\n    this.restoredFocusedCellPosition = null;\n    if (this.focusedCellPosition == null) {\n      return;\n    }\n    const focusEventParams = this.getFocusEventParams(this.focusedCellPosition);\n    this.focusedCellPosition = null;\n    this.eventService.dispatchEvent({\n      type: \"cellFocusCleared\",\n      ...focusEventParams\n    });\n  }\n  setFocusedCell(params) {\n    const { column, rowIndex, rowPinned, forceBrowserFocus = false, preventScrollOnBrowserFocus = false } = params;\n    const gridColumn = this.columnModel.getCol(column);\n    if (!gridColumn) {\n      this.focusedCellPosition = null;\n      return;\n    }\n    this.focusedCellPosition = {\n      rowIndex,\n      rowPinned: _makeNull(rowPinned),\n      column: gridColumn\n    };\n    this.eventService.dispatchEvent({\n      type: \"cellFocused\",\n      ...this.getFocusEventParams(this.focusedCellPosition),\n      forceBrowserFocus,\n      preventScrollOnBrowserFocus\n    });\n  }\n  isCellFocused(cellPosition) {\n    if (this.focusedCellPosition == null) {\n      return false;\n    }\n    return this.cellPositionUtils.equals(cellPosition, this.focusedCellPosition);\n  }\n  isRowNodeFocused(rowNode) {\n    return this.isRowFocused(rowNode.rowIndex, rowNode.rowPinned);\n  }\n  isHeaderWrapperFocused(headerCtrl) {\n    if (this.focusedHeaderPosition == null) {\n      return false;\n    }\n    const column = headerCtrl.getColumnGroupChild();\n    const headerRowIndex = headerCtrl.getRowIndex();\n    const pinned = headerCtrl.getPinned();\n    const { column: focusedColumn, headerRowIndex: focusedHeaderRowIndex } = this.focusedHeaderPosition;\n    return column === focusedColumn && headerRowIndex === focusedHeaderRowIndex && pinned == focusedColumn.getPinned();\n  }\n  clearFocusedHeader() {\n    this.focusedHeaderPosition = null;\n  }\n  getFocusedHeader() {\n    return this.focusedHeaderPosition;\n  }\n  setFocusedHeader(headerRowIndex, column) {\n    this.focusedHeaderPosition = { headerRowIndex, column };\n  }\n  isHeaderFocusSuppressed() {\n    return this.gos.get(\"suppressHeaderFocus\") || this.overlayService.isExclusive();\n  }\n  isCellFocusSuppressed() {\n    return this.gos.get(\"suppressCellFocus\") || this.overlayService.isExclusive();\n  }\n  focusHeaderPosition(params) {\n    if (this.isHeaderFocusSuppressed()) {\n      return false;\n    }\n    const { direction, fromTab, allowUserOverride, event, fromCell, rowWithoutSpanValue } = params;\n    let { headerPosition } = params;\n    if (fromCell && this.filterManager?.isAdvancedFilterHeaderActive()) {\n      return this.focusAdvancedFilter(headerPosition);\n    }\n    if (allowUserOverride) {\n      const currentPosition = this.getFocusedHeader();\n      const headerRowCount = this.headerNavigationService.getHeaderRowCount();\n      if (fromTab) {\n        const userFunc = this.gos.getCallback(\"tabToNextHeader\");\n        if (userFunc) {\n          headerPosition = this.getHeaderPositionFromUserFunc({\n            userFunc,\n            direction,\n            currentPosition,\n            headerPosition,\n            headerRowCount\n          });\n        }\n      } else {\n        const userFunc = this.gos.getCallback(\"navigateToNextHeader\");\n        if (userFunc && event) {\n          const params2 = {\n            key: event.key,\n            previousHeaderPosition: currentPosition,\n            nextHeaderPosition: headerPosition,\n            headerRowCount,\n            event\n          };\n          headerPosition = userFunc(params2);\n        }\n      }\n    }\n    if (!headerPosition) {\n      return false;\n    }\n    return this.focusProvidedHeaderPosition({\n      headerPosition,\n      direction,\n      event,\n      fromCell,\n      rowWithoutSpanValue\n    });\n  }\n  focusHeaderPositionFromUserFunc(params) {\n    if (this.isHeaderFocusSuppressed()) {\n      return false;\n    }\n    const { userFunc, headerPosition, direction, event } = params;\n    const currentPosition = this.getFocusedHeader();\n    const headerRowCount = this.headerNavigationService.getHeaderRowCount();\n    const newHeaderPosition = this.getHeaderPositionFromUserFunc({\n      userFunc,\n      direction,\n      currentPosition,\n      headerPosition,\n      headerRowCount\n    });\n    return !!newHeaderPosition && this.focusProvidedHeaderPosition({\n      headerPosition: newHeaderPosition,\n      direction,\n      event\n    });\n  }\n  getHeaderPositionFromUserFunc(params) {\n    const { userFunc, direction, currentPosition, headerPosition, headerRowCount } = params;\n    const userFuncParams = {\n      backwards: direction === \"Before\",\n      previousHeaderPosition: currentPosition,\n      nextHeaderPosition: headerPosition,\n      headerRowCount\n    };\n    const userResult = userFunc(userFuncParams);\n    if (userResult === true || userResult === null) {\n      if (userResult === null) {\n        _warnOnce(\n          \"Since v31.3 Returning `null` from tabToNextHeader is deprecated. Return `true` to stay on the current header, or `false` to let the browser handle the tab behaviour.\"\n        );\n      }\n      return currentPosition;\n    }\n    if (userResult === false) {\n      return null;\n    }\n    return userResult;\n  }\n  focusProvidedHeaderPosition(params) {\n    const { headerPosition, direction, fromCell, rowWithoutSpanValue, event } = params;\n    const { column, headerRowIndex } = headerPosition;\n    if (headerRowIndex === -1) {\n      if (this.filterManager?.isAdvancedFilterHeaderActive()) {\n        return this.focusAdvancedFilter(headerPosition);\n      }\n      return this.focusGridView(column);\n    }\n    this.headerNavigationService.scrollToColumn(column, direction);\n    const headerRowContainerCtrl = this.ctrlsService.getHeaderRowContainerCtrl(column.getPinned());\n    const focusSuccess = headerRowContainerCtrl?.focusHeader(headerPosition.headerRowIndex, column, event) || false;\n    if (focusSuccess && (rowWithoutSpanValue != null || fromCell)) {\n      this.headerNavigationService.setCurrentHeaderRowWithoutSpan(rowWithoutSpanValue ?? -1);\n    }\n    return focusSuccess;\n  }\n  focusFirstHeader() {\n    if (this.overlayService.isExclusive() && this.focusOverlay()) {\n      return true;\n    }\n    let firstColumn = this.visibleColsService.getAllCols()[0];\n    if (!firstColumn) {\n      return false;\n    }\n    if (firstColumn.getParent()) {\n      firstColumn = this.visibleColsService.getColGroupAtLevel(firstColumn, 0);\n    }\n    const headerPosition = this.headerPositionUtils.getHeaderIndexToFocus(firstColumn, 0);\n    return this.focusHeaderPosition({\n      headerPosition,\n      rowWithoutSpanValue: 0\n    });\n  }\n  focusLastHeader(event) {\n    if (this.overlayService.isExclusive() && this.focusOverlay(true)) {\n      return true;\n    }\n    const headerRowIndex = this.headerNavigationService.getHeaderRowCount() - 1;\n    const column = _last(this.visibleColsService.getAllCols());\n    return this.focusHeaderPosition({\n      headerPosition: { headerRowIndex, column },\n      rowWithoutSpanValue: -1,\n      event\n    });\n  }\n  focusPreviousFromFirstCell(event) {\n    if (this.filterManager?.isAdvancedFilterHeaderActive()) {\n      return this.focusAdvancedFilter(null);\n    }\n    return this.focusLastHeader(event);\n  }\n  isAnyCellFocused() {\n    return !!this.focusedCellPosition;\n  }\n  isRowFocused(rowIndex, rowPinnedType) {\n    if (this.focusedCellPosition == null) {\n      return false;\n    }\n    return this.focusedCellPosition.rowIndex === rowIndex && this.focusedCellPosition.rowPinned === _makeNull(rowPinnedType);\n  }\n  findFocusableElements(rootNode, exclude, onlyUnmanaged = false) {\n    const focusableString = FOCUSABLE_SELECTOR;\n    let excludeString = FOCUSABLE_EXCLUDE;\n    if (exclude) {\n      excludeString += \", \" + exclude;\n    }\n    if (onlyUnmanaged) {\n      excludeString += ', [tabindex=\"-1\"]';\n    }\n    const nodes = Array.prototype.slice.apply(rootNode.querySelectorAll(focusableString)).filter((node) => {\n      return _isVisible(node);\n    });\n    const excludeNodes = Array.prototype.slice.apply(rootNode.querySelectorAll(excludeString));\n    if (!excludeNodes.length) {\n      return nodes;\n    }\n    const diff = (a, b) => a.filter((element) => b.indexOf(element) === -1);\n    return diff(nodes, excludeNodes);\n  }\n  focusInto(rootNode, up = false, onlyUnmanaged = false) {\n    const focusableElements = this.findFocusableElements(rootNode, null, onlyUnmanaged);\n    const toFocus = up ? _last(focusableElements) : focusableElements[0];\n    if (toFocus) {\n      toFocus.focus({ preventScroll: true });\n      return true;\n    }\n    return false;\n  }\n  findFocusableElementBeforeTabGuard(rootNode, referenceElement) {\n    if (!referenceElement) {\n      return null;\n    }\n    const focusableElements = this.findFocusableElements(rootNode);\n    const referenceIndex = focusableElements.indexOf(referenceElement);\n    if (referenceIndex === -1) {\n      return null;\n    }\n    let lastTabGuardIndex = -1;\n    for (let i = referenceIndex - 1; i >= 0; i--) {\n      if (focusableElements[i].classList.contains(\"ag-tab-guard-top\" /* TAB_GUARD_TOP */)) {\n        lastTabGuardIndex = i;\n        break;\n      }\n    }\n    if (lastTabGuardIndex <= 0) {\n      return null;\n    }\n    return focusableElements[lastTabGuardIndex - 1];\n  }\n  findNextFocusableElement(rootNode = this.eGridDiv, onlyManaged, backwards) {\n    const focusable = this.findFocusableElements(rootNode, onlyManaged ? ':not([tabindex=\"-1\"])' : null);\n    const activeEl = this.gos.getActiveDomElement();\n    let currentIndex;\n    if (onlyManaged) {\n      currentIndex = focusable.findIndex((el) => el.contains(activeEl));\n    } else {\n      currentIndex = focusable.indexOf(activeEl);\n    }\n    const nextIndex = currentIndex + (backwards ? -1 : 1);\n    if (nextIndex < 0 || nextIndex >= focusable.length) {\n      return null;\n    }\n    return focusable[nextIndex];\n  }\n  isTargetUnderManagedComponent(rootNode, target) {\n    if (!target) {\n      return false;\n    }\n    const managedContainers = rootNode.querySelectorAll(`.${ManagedFocusFeature.FOCUS_MANAGED_CLASS}`);\n    if (!managedContainers.length) {\n      return false;\n    }\n    for (let i = 0; i < managedContainers.length; i++) {\n      if (managedContainers[i].contains(target)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  findTabbableParent(node, limit = 5) {\n    let counter = 0;\n    while (node && _getTabIndex(node) === null && ++counter <= limit) {\n      node = node.parentElement;\n    }\n    if (_getTabIndex(node) === null) {\n      return null;\n    }\n    return node;\n  }\n  focusOverlay(backwards) {\n    const overlayGui = this.overlayService.isVisible() && this.overlayService.getOverlayWrapper()?.getGui();\n    return !!overlayGui && this.focusInto(overlayGui, backwards);\n  }\n  focusGridViewFailed(backwards, canFocusOverlay) {\n    const overlayFocused = canFocusOverlay && this.focusOverlay(backwards);\n    return overlayFocused || backwards && this.focusLastHeader();\n  }\n  focusGridView(column, backwards = false, canFocusOverlay = true) {\n    if (this.overlayService.isExclusive()) {\n      return canFocusOverlay && this.focusOverlay(backwards);\n    }\n    if (this.isCellFocusSuppressed()) {\n      if (backwards) {\n        if (!this.isHeaderFocusSuppressed()) {\n          return this.focusLastHeader();\n        }\n      }\n      if (canFocusOverlay && this.focusOverlay(backwards)) {\n        return true;\n      }\n      return this.focusNextGridCoreContainer(false);\n    }\n    const nextRow = backwards ? this.rowPositionUtils.getLastRow() : this.rowPositionUtils.getFirstRow();\n    if (nextRow) {\n      const { rowIndex, rowPinned } = nextRow;\n      column ?? (column = this.getFocusedHeader()?.column);\n      if (column && rowIndex !== void 0 && rowIndex !== null) {\n        this.navigationService.ensureCellVisible({ rowIndex, column, rowPinned });\n        this.setFocusedCell({\n          rowIndex,\n          column,\n          rowPinned: _makeNull(rowPinned),\n          forceBrowserFocus: true\n        });\n        this.rangeService?.setRangeToCell({ rowIndex, rowPinned, column });\n        return true;\n      }\n    }\n    if (canFocusOverlay && this.focusOverlay(backwards)) {\n      return true;\n    }\n    if (backwards && this.focusLastHeader()) {\n      return true;\n    }\n    return false;\n  }\n  /** Returns true if an element inside the grid has focus */\n  isGridFocused() {\n    const activeEl = this.gos.getActiveDomElement();\n    return !!activeEl && this.eGridDiv.contains(activeEl);\n  }\n  focusNextGridCoreContainer(backwards, forceOut = false) {\n    if (!forceOut && this.gridCtrl.focusNextInnerContainer(backwards)) {\n      return true;\n    }\n    if (forceOut || !backwards && !this.gridCtrl.isDetailGrid()) {\n      this.gridCtrl.forceFocusOutOfContainer(backwards);\n    }\n    return false;\n  }\n  focusAdvancedFilter(position) {\n    this.advancedFilterFocusColumn = position?.column;\n    return this.advancedFilterService?.getCtrl().focusHeaderComp() ?? false;\n  }\n  focusNextFromAdvancedFilter(backwards, forceFirstColumn) {\n    const column = (forceFirstColumn ? void 0 : this.advancedFilterFocusColumn) ?? this.visibleColsService.getAllCols()?.[0];\n    if (backwards) {\n      return this.focusHeaderPosition({\n        headerPosition: {\n          column,\n          headerRowIndex: this.headerNavigationService.getHeaderRowCount() - 1\n        }\n      });\n    } else {\n      return this.focusGridView(column);\n    }\n  }\n  clearAdvancedFilterColumn() {\n    this.advancedFilterFocusColumn = void 0;\n  }\n  addFocusableContainer(container) {\n    this.gridCtrl.addFocusableContainer(container);\n  }\n  removeFocusableContainer(container) {\n    this.gridCtrl.removeFocusableContainer(container);\n  }\n  focusGridInnerElement(fromBottom) {\n    return this.gridCtrl.focusInnerElement(fromBottom);\n  }\n  allowFocusForNextGridCoreContainer(up) {\n    this.gridCtrl.allowFocusForNextCoreContainer(up);\n  }\n};\n_FocusService.keyboardModeActive = false;\n_FocusService.instanceCount = 0;\nvar FocusService = _FocusService;\n\n// community-modules/core/src/gridBodyComp/pinnedWidthService.ts\nvar PinnedWidthService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"pinnedWidthService\";\n  }\n  wireBeans(beans) {\n    this.visibleColsService = beans.visibleColsService;\n  }\n  postConstruct() {\n    const listener = this.checkContainerWidths.bind(this);\n    this.addManagedEventListeners({\n      displayedColumnsChanged: listener,\n      displayedColumnsWidthChanged: listener\n    });\n    this.addManagedPropertyListener(\"domLayout\", listener);\n  }\n  checkContainerWidths() {\n    const printLayout = this.gos.isDomLayout(\"print\");\n    const newLeftWidth = printLayout ? 0 : this.visibleColsService.getColsLeftWidth();\n    const newRightWidth = printLayout ? 0 : this.visibleColsService.getDisplayedColumnsRightWidth();\n    if (newLeftWidth != this.leftWidth) {\n      this.leftWidth = newLeftWidth;\n      this.eventService.dispatchEvent({ type: \"leftPinnedWidthChanged\" });\n    }\n    if (newRightWidth != this.rightWidth) {\n      this.rightWidth = newRightWidth;\n      this.eventService.dispatchEvent({ type: \"rightPinnedWidthChanged\" });\n    }\n  }\n  getPinnedRightWidth() {\n    return this.rightWidth;\n  }\n  getPinnedLeftWidth() {\n    return this.leftWidth;\n  }\n};\n\n// community-modules/core/src/gridComp/gridCtrl.ts\nvar GridCtrl = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.additionalFocusableContainers = /* @__PURE__ */ new Set();\n  }\n  wireBeans(beans) {\n    this.beans = beans;\n    this.focusService = beans.focusService;\n    this.visibleColsService = beans.visibleColsService;\n  }\n  setComp(view, eGridDiv, eGui) {\n    this.view = view;\n    this.eGridHostDiv = eGridDiv;\n    this.eGui = eGui;\n    this.eGui.setAttribute(\"grid-id\", this.gridId);\n    const { dragAndDropService, mouseEventService, ctrlsService, resizeObserverService } = this.beans;\n    dragAndDropService.addDropTarget({\n      getContainer: () => this.eGui,\n      isInterestedIn: (type) => type === 1 /* HeaderCell */ || type === 0 /* ToolPanel */,\n      getIconName: () => \"notAllowed\"\n    });\n    mouseEventService.stampTopLevelGridCompWithGridInstance(eGridDiv);\n    this.createManagedBean(new LayoutFeature(this.view));\n    this.addRtlSupport();\n    const unsubscribeFromResize = resizeObserverService.observeResize(\n      this.eGridHostDiv,\n      this.onGridSizeChanged.bind(this)\n    );\n    this.addDestroyFunc(() => unsubscribeFromResize());\n    ctrlsService.register(\"gridCtrl\", this);\n  }\n  isDetailGrid() {\n    const el = this.focusService.findTabbableParent(this.getGui());\n    return el?.getAttribute(\"row-id\")?.startsWith(\"detail\") || false;\n  }\n  getOptionalSelectors() {\n    const beans = this.beans;\n    return {\n      paginationSelector: beans.paginationService?.getPaginationSelector(),\n      gridHeaderDropZonesSelector: beans.columnDropZonesService?.getDropZoneSelector(),\n      sideBarSelector: beans.sideBarService?.getSideBarSelector(),\n      statusBarSelector: beans.statusBarService?.getStatusPanelSelector(),\n      watermarkSelector: beans.licenseManager?.getWatermarkSelector()\n    };\n  }\n  onGridSizeChanged() {\n    this.eventService.dispatchEvent({\n      type: \"gridSizeChanged\",\n      clientWidth: this.eGridHostDiv.clientWidth,\n      clientHeight: this.eGridHostDiv.clientHeight\n    });\n  }\n  addRtlSupport() {\n    const cssClass = this.gos.get(\"enableRtl\") ? \"ag-rtl\" : \"ag-ltr\";\n    this.view.setRtlClass(cssClass);\n  }\n  destroyGridUi() {\n    this.view.destroyGridUi();\n  }\n  getGui() {\n    return this.eGui;\n  }\n  setResizeCursor(on) {\n    this.view.setCursor(on ? \"ew-resize\" : null);\n  }\n  disableUserSelect(on) {\n    this.view.setUserSelect(on ? \"none\" : null);\n  }\n  focusNextInnerContainer(backwards) {\n    const focusableContainers = this.getFocusableContainers();\n    const { indexWithFocus, nextIndex } = this.getNextFocusableIndex(focusableContainers, backwards);\n    if (nextIndex < 0 || nextIndex >= focusableContainers.length) {\n      return false;\n    }\n    if (nextIndex === 0) {\n      if (indexWithFocus > 0) {\n        const allColumns = this.visibleColsService.getAllCols();\n        const lastColumn = _last(allColumns);\n        if (this.focusService.focusGridView(lastColumn, true)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return this.focusContainer(focusableContainers[nextIndex], backwards);\n  }\n  focusInnerElement(fromBottom) {\n    const userCallbackFunction = this.gos.getCallback(\"focusGridInnerElement\");\n    if (userCallbackFunction && userCallbackFunction({ fromBottom: !!fromBottom })) {\n      return true;\n    }\n    const focusableContainers = this.getFocusableContainers();\n    const allColumns = this.visibleColsService.getAllCols();\n    if (fromBottom) {\n      if (focusableContainers.length > 1) {\n        return this.focusContainer(_last(focusableContainers), true);\n      }\n      const lastColumn = _last(allColumns);\n      if (this.focusService.focusGridView(lastColumn, true)) {\n        return true;\n      }\n    }\n    if (this.gos.get(\"headerHeight\") === 0 || this.focusService.isHeaderFocusSuppressed()) {\n      if (this.focusService.focusGridView(allColumns[0])) {\n        return true;\n      }\n      for (let i = 1; i < focusableContainers.length; i++) {\n        if (this.focusService.focusInto(focusableContainers[i].getGui())) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return this.focusService.focusFirstHeader();\n  }\n  forceFocusOutOfContainer(up = false) {\n    this.view.forceFocusOutOfContainer(up);\n  }\n  addFocusableContainer(container) {\n    this.additionalFocusableContainers.add(container);\n  }\n  removeFocusableContainer(container) {\n    this.additionalFocusableContainers.delete(container);\n  }\n  allowFocusForNextCoreContainer(up) {\n    const coreContainers = this.view.getFocusableContainers();\n    const { nextIndex, indexWithFocus } = this.getNextFocusableIndex(coreContainers, up);\n    if (indexWithFocus === -1 || nextIndex < 0 || nextIndex >= coreContainers.length) {\n      return;\n    }\n    const comp = coreContainers[nextIndex];\n    comp.setAllowFocus?.(true);\n    setTimeout(() => {\n      comp.setAllowFocus?.(false);\n    });\n  }\n  getNextFocusableIndex(focusableContainers, backwards) {\n    const activeEl = this.gos.getActiveDomElement();\n    const indexWithFocus = focusableContainers.findIndex((container) => container.getGui().contains(activeEl));\n    const nextIndex = indexWithFocus + (backwards ? -1 : 1);\n    return {\n      indexWithFocus,\n      nextIndex\n    };\n  }\n  focusContainer(comp, up) {\n    comp.setAllowFocus?.(true);\n    const result = this.focusService.focusInto(comp.getGui(), up);\n    comp.setAllowFocus?.(false);\n    return result;\n  }\n  getFocusableContainers() {\n    return [...this.view.getFocusableContainers(), ...this.additionalFocusableContainers];\n  }\n  destroy() {\n    this.additionalFocusableContainers.clear();\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/gridComp/gridComp.ts\nvar GridComp = class extends TabGuardComp {\n  constructor(eGridDiv) {\n    super();\n    this.gridBody = RefPlaceholder;\n    this.sideBar = RefPlaceholder;\n    this.pagination = RefPlaceholder;\n    this.rootWrapperBody = RefPlaceholder;\n    this.eGridDiv = eGridDiv;\n  }\n  postConstruct() {\n    const compProxy = {\n      destroyGridUi: () => this.destroyBean(this),\n      setRtlClass: (cssClass) => this.addCssClass(cssClass),\n      forceFocusOutOfContainer: this.forceFocusOutOfContainer.bind(this),\n      updateLayoutClasses: this.updateLayoutClasses.bind(this),\n      getFocusableContainers: this.getFocusableContainers.bind(this),\n      setUserSelect: (value) => {\n        this.getGui().style.userSelect = value != null ? value : \"\";\n        this.getGui().style.webkitUserSelect = value != null ? value : \"\";\n      },\n      setCursor: (value) => {\n        this.getGui().style.cursor = value != null ? value : \"\";\n      }\n    };\n    const ctrl = this.createManagedBean(new GridCtrl());\n    const comps = ctrl.getOptionalSelectors();\n    const template = this.createTemplate(comps);\n    const requiredComps = [GridBodySelector, ...Object.values(comps).filter((c) => !!c)];\n    this.setTemplate(template, requiredComps);\n    ctrl.setComp(compProxy, this.eGridDiv, this.getGui());\n    this.insertGridIntoDom();\n    this.initialiseTabGuard({\n      // we want to override the default behaviour to do nothing for onTabKeyDown\n      onTabKeyDown: () => void 0,\n      focusInnerElement: (fromBottom) => ctrl.focusInnerElement(fromBottom),\n      forceFocusOutWhenTabGuardsAreEmpty: true\n    });\n  }\n  insertGridIntoDom() {\n    const eGui = this.getGui();\n    this.eGridDiv.appendChild(eGui);\n    this.addDestroyFunc(() => {\n      this.eGridDiv.removeChild(eGui);\n      if (this.gos.get(\"debug\")) {\n        _log(\"Grid removed from DOM\");\n      }\n    });\n  }\n  updateLayoutClasses(cssClass, params) {\n    const eRootWrapperBodyClassList = this.rootWrapperBody.classList;\n    eRootWrapperBodyClassList.toggle(\"ag-layout-auto-height\" /* AUTO_HEIGHT */, params.autoHeight);\n    eRootWrapperBodyClassList.toggle(\"ag-layout-normal\" /* NORMAL */, params.normal);\n    eRootWrapperBodyClassList.toggle(\"ag-layout-print\" /* PRINT */, params.print);\n    this.addOrRemoveCssClass(\"ag-layout-auto-height\" /* AUTO_HEIGHT */, params.autoHeight);\n    this.addOrRemoveCssClass(\"ag-layout-normal\" /* NORMAL */, params.normal);\n    this.addOrRemoveCssClass(\"ag-layout-print\" /* PRINT */, params.print);\n  }\n  createTemplate(params) {\n    const dropZones = params.gridHeaderDropZonesSelector ? \"<ag-grid-header-drop-zones></ag-grid-header-drop-zones>\" : \"\";\n    const sideBar = params.sideBarSelector ? '<ag-side-bar data-ref=\"sideBar\"></ag-side-bar>' : \"\";\n    const statusBar = params.statusBarSelector ? \"<ag-status-bar></ag-status-bar>\" : \"\";\n    const watermark = params.watermarkSelector ? \"<ag-watermark></ag-watermark>\" : \"\";\n    const pagination = params.paginationSelector ? '<ag-pagination data-ref=\"pagination\"></ag-pagination>' : \"\";\n    const template = (\n      /* html */\n      `<div class=\"ag-root-wrapper\" role=\"presentation\">\n                ${dropZones}\n                <div class=\"ag-root-wrapper-body\" data-ref=\"rootWrapperBody\" role=\"presentation\">\n                    <ag-grid-body data-ref=\"gridBody\"></ag-grid-body>\n                    ${sideBar}\n                </div>\n                ${statusBar}\n                ${pagination}\n                ${watermark}\n            </div>`\n    );\n    return template;\n  }\n  getFocusableElement() {\n    return this.rootWrapperBody;\n  }\n  forceFocusOutOfContainer(up = false) {\n    if (!up && this.pagination?.isDisplayed()) {\n      this.pagination.forceFocusOutOfContainer(up);\n      return;\n    }\n    super.forceFocusOutOfContainer(up);\n  }\n  getFocusableContainers() {\n    const focusableContainers = [this.gridBody];\n    [this.sideBar, this.pagination].forEach((comp) => {\n      if (comp) {\n        focusableContainers.push(comp);\n      }\n    });\n    return focusableContainers.filter((el) => _isVisible(el.getGui()));\n  }\n};\n\n// community-modules/core/src/alignedGridsService.ts\nvar AlignedGridsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"alignedGridsService\";\n    // flag to mark if we are consuming. to avoid cyclic events (ie other grid firing back to master\n    // while processing a master event) we mark this if consuming an event, and if we are, then\n    // we don't fire back any events.\n    this.consuming = false;\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.columnSizeService = beans.columnSizeService;\n    this.ctrlsService = beans.ctrlsService;\n    this.columnApplyStateService = beans.columnApplyStateService;\n  }\n  getAlignedGridApis() {\n    let alignedGrids = this.gos.get(\"alignedGrids\") ?? [];\n    const isCallbackConfig = typeof alignedGrids === \"function\";\n    if (typeof alignedGrids === \"function\") {\n      alignedGrids = alignedGrids();\n    }\n    const seeUrl = () => `See ${this.getFrameworkOverrides().getDocLink(\"aligned-grids\")}`;\n    const apis = alignedGrids.map((alignedGrid) => {\n      if (!alignedGrid) {\n        _errorOnce(`alignedGrids contains an undefined option.`);\n        if (!isCallbackConfig) {\n          _errorOnce(`You may want to configure via a callback to avoid setup race conditions:\n                     \"alignedGrids: () => [linkedGrid]\"`);\n        }\n        _errorOnce(seeUrl());\n        return;\n      }\n      if (this.isGridApi(alignedGrid)) {\n        return alignedGrid;\n      }\n      const refOrComp = alignedGrid;\n      if (\"current\" in refOrComp) {\n        return refOrComp.current?.api;\n      }\n      if (!refOrComp.api) {\n        _errorOnce(\n          `alignedGrids - No api found on the linked grid. If you are passing gridOptions to alignedGrids since v31 this is no longer valid. ${seeUrl()}`\n        );\n      }\n      return refOrComp.api;\n    }).filter((api) => !!api && !api.isDestroyed());\n    return apis;\n  }\n  isGridApi(ref) {\n    return !!ref && !!ref.dispatchEvent;\n  }\n  postConstruct() {\n    const fireColumnEvent = this.fireColumnEvent.bind(this);\n    this.addManagedEventListeners({\n      columnMoved: fireColumnEvent,\n      columnVisible: fireColumnEvent,\n      columnPinned: fireColumnEvent,\n      columnGroupOpened: fireColumnEvent,\n      columnResized: fireColumnEvent,\n      bodyScroll: this.fireScrollEvent.bind(this),\n      alignedGridColumn: ({ event }) => this.onColumnEvent(event),\n      alignedGridScroll: ({ event }) => this.onScrollEvent(event)\n    });\n  }\n  // common logic across all the fire methods\n  fireEvent(event) {\n    if (this.consuming) {\n      return;\n    }\n    this.getAlignedGridApis().forEach((api) => {\n      if (api.isDestroyed()) {\n        return;\n      }\n      api.dispatchEvent(event);\n    });\n  }\n  // common logic across all consume methods. very little common logic, however extracting\n  // guarantees consistency across the methods.\n  onEvent(callback) {\n    this.consuming = true;\n    callback();\n    this.consuming = false;\n  }\n  fireColumnEvent(columnEvent) {\n    this.fireEvent({\n      type: \"alignedGridColumn\",\n      event: columnEvent\n    });\n  }\n  fireScrollEvent(scrollEvent) {\n    if (scrollEvent.direction !== \"horizontal\") {\n      return;\n    }\n    this.fireEvent({\n      type: \"alignedGridScroll\",\n      event: scrollEvent\n    });\n  }\n  onScrollEvent(event) {\n    this.onEvent(() => {\n      const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n      gridBodyCon.getScrollFeature().setHorizontalScrollPosition(event.left, true);\n    });\n  }\n  extractDataFromEvent(event, func) {\n    const result = [];\n    if (event.columns) {\n      event.columns.forEach((column) => {\n        result.push(func(column));\n      });\n    } else if (event.column) {\n      result.push(func(event.column));\n    }\n    return result;\n  }\n  getMasterColumns(event) {\n    return this.extractDataFromEvent(event, (col) => col);\n  }\n  getColumnIds(event) {\n    return this.extractDataFromEvent(event, (col) => col.getColId());\n  }\n  onColumnEvent(event) {\n    this.onEvent(() => {\n      switch (event.type) {\n        case \"columnMoved\":\n        case \"columnVisible\":\n        case \"columnPinned\":\n        case \"columnResized\": {\n          this.processColumnEvent(event);\n          break;\n        }\n        case \"columnGroupOpened\": {\n          this.processGroupOpenedEvent(event);\n          break;\n        }\n        case \"columnPivotChanged\":\n          _warnOnce(\n            \"pivoting is not supported with aligned grids. You can only use one of these features at a time in a grid.\"\n          );\n          break;\n      }\n    });\n  }\n  processGroupOpenedEvent(groupOpenedEvent) {\n    const { columnModel } = this;\n    groupOpenedEvent.columnGroups.forEach((masterGroup) => {\n      let otherColumnGroup = null;\n      if (masterGroup) {\n        otherColumnGroup = columnModel.getProvidedColGroup(masterGroup.getGroupId());\n      }\n      if (masterGroup && !otherColumnGroup) {\n        return;\n      }\n      columnModel.setColumnGroupOpened(otherColumnGroup, masterGroup.isExpanded(), \"alignedGridChanged\");\n    });\n  }\n  processColumnEvent(colEvent) {\n    const masterColumn = colEvent.column;\n    let otherColumn = null;\n    if (masterColumn) {\n      otherColumn = this.columnModel.getColDefCol(masterColumn.getColId());\n    }\n    if (masterColumn && !otherColumn) {\n      return;\n    }\n    const masterColumns = this.getMasterColumns(colEvent);\n    const { columnApplyStateService, columnSizeService, ctrlsService } = this;\n    switch (colEvent.type) {\n      case \"columnMoved\":\n        {\n          const srcColState = colEvent.api.getColumnState();\n          const destColState = srcColState.map((s) => ({ colId: s.colId }));\n          columnApplyStateService.applyColumnState(\n            { state: destColState, applyOrder: true },\n            \"alignedGridChanged\"\n          );\n        }\n        break;\n      case \"columnVisible\":\n        {\n          const srcColState = colEvent.api.getColumnState();\n          const destColState = srcColState.map((s) => ({ colId: s.colId, hide: s.hide }));\n          columnApplyStateService.applyColumnState({ state: destColState }, \"alignedGridChanged\");\n        }\n        break;\n      case \"columnPinned\":\n        {\n          const srcColState = colEvent.api.getColumnState();\n          const destColState = srcColState.map((s) => ({ colId: s.colId, pinned: s.pinned }));\n          columnApplyStateService.applyColumnState({ state: destColState }, \"alignedGridChanged\");\n        }\n        break;\n      case \"columnResized\": {\n        const resizedEvent = colEvent;\n        const columnWidths = {};\n        masterColumns.forEach((column) => {\n          columnWidths[column.getId()] = { key: column.getColId(), newWidth: column.getActualWidth() };\n        });\n        resizedEvent.flexColumns?.forEach((col) => {\n          if (columnWidths[col.getId()]) {\n            delete columnWidths[col.getId()];\n          }\n        });\n        columnSizeService.setColumnWidths(\n          Object.values(columnWidths),\n          false,\n          resizedEvent.finished,\n          \"alignedGridChanged\"\n        );\n        break;\n      }\n    }\n    const gridBodyCon = ctrlsService.getGridBodyCtrl();\n    const isVerticalScrollShowing = gridBodyCon.isVerticalScrollShowing();\n    this.getAlignedGridApis().forEach((api) => {\n      api.setGridOption(\"alwaysShowVerticalScroll\", isVerticalScrollShowing);\n    });\n  }\n};\n\n// community-modules/core/src/alignedGridsModule.ts\nvar AlignedGridsModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/aligned-grid\",\n  beans: [AlignedGridsService]\n});\n\n// community-modules/core/src/columns/columnApi.ts\nfunction getColumnDef(beans, key) {\n  const column = beans.columnModel.getColDefCol(key);\n  if (column) {\n    return column.getColDef();\n  }\n  return null;\n}\nfunction getColumnDefs(beans) {\n  return beans.columnModel.getColumnDefs();\n}\nfunction sizeColumnsToFit(beans, paramsOrGridWidth) {\n  if (typeof paramsOrGridWidth === \"number\") {\n    beans.columnSizeService.sizeColumnsToFit(paramsOrGridWidth, \"api\");\n  } else {\n    beans.ctrlsService.getGridBodyCtrl().sizeColumnsToFit(paramsOrGridWidth);\n  }\n}\nfunction setColumnGroupOpened(beans, group, newValue) {\n  beans.columnModel.setColumnGroupOpened(group, newValue, \"api\");\n}\nfunction getColumnGroup(beans, name, instanceId) {\n  return beans.visibleColsService.getColumnGroup(name, instanceId);\n}\nfunction getProvidedColumnGroup(beans, name) {\n  return beans.columnModel.getProvidedColGroup(name);\n}\nfunction getDisplayNameForColumn(beans, column, location) {\n  return beans.columnNameService.getDisplayNameForColumn(column, location) || \"\";\n}\nfunction getDisplayNameForColumnGroup(beans, columnGroup, location) {\n  return beans.columnNameService.getDisplayNameForColumnGroup(columnGroup, location) || \"\";\n}\nfunction getColumn(beans, key) {\n  return beans.columnModel.getColDefCol(key);\n}\nfunction getColumns(beans) {\n  return beans.columnModel.getColDefCols();\n}\nfunction applyColumnState(beans, params) {\n  return beans.columnApplyStateService.applyColumnState(params, \"api\");\n}\nfunction getColumnState(beans) {\n  return beans.columnGetStateService.getColumnState();\n}\nfunction resetColumnState(beans) {\n  beans.columnApplyStateService.resetColumnState(\"api\");\n}\nfunction getColumnGroupState(beans) {\n  return beans.columnGroupStateService.getColumnGroupState();\n}\nfunction setColumnGroupState(beans, stateItems) {\n  beans.columnGroupStateService.setColumnGroupState(stateItems, \"api\");\n}\nfunction resetColumnGroupState(beans) {\n  beans.columnGroupStateService.resetColumnGroupState(\"api\");\n}\nfunction isPinning(beans) {\n  return beans.visibleColsService.isPinningLeft() || beans.visibleColsService.isPinningRight();\n}\nfunction isPinningLeft(beans) {\n  return beans.visibleColsService.isPinningLeft();\n}\nfunction isPinningRight(beans) {\n  return beans.visibleColsService.isPinningRight();\n}\nfunction getDisplayedColAfter(beans, col) {\n  return beans.visibleColsService.getColAfter(col);\n}\nfunction getDisplayedColBefore(beans, col) {\n  return beans.visibleColsService.getColBefore(col);\n}\nfunction setColumnVisible(beans, key, visible) {\n  beans.columnModel.setColsVisible([key], visible, \"api\");\n}\nfunction setColumnsVisible(beans, keys, visible) {\n  beans.columnModel.setColsVisible(keys, visible, \"api\");\n}\nfunction setColumnPinned(beans, key, pinned) {\n  beans.columnModel.setColsPinned([key], pinned, \"api\");\n}\nfunction setColumnsPinned(beans, keys, pinned) {\n  beans.columnModel.setColsPinned(keys, pinned, \"api\");\n}\nfunction getAllGridColumns(beans) {\n  return beans.columnModel.getCols();\n}\nfunction getDisplayedLeftColumns(beans) {\n  return beans.visibleColsService.getLeftCols();\n}\nfunction getDisplayedCenterColumns(beans) {\n  return beans.visibleColsService.getCenterCols();\n}\nfunction getDisplayedRightColumns(beans) {\n  return beans.visibleColsService.getRightCols();\n}\nfunction getAllDisplayedColumns(beans) {\n  return beans.visibleColsService.getAllCols();\n}\nfunction getAllDisplayedVirtualColumns(beans) {\n  return beans.columnViewportService.getViewportColumns();\n}\nfunction moveColumn(beans, key, toIndex) {\n  beans.columnMoveService.moveColumns([key], toIndex, \"api\");\n}\nfunction moveColumnByIndex(beans, fromIndex, toIndex) {\n  beans.columnMoveService.moveColumnByIndex(fromIndex, toIndex, \"api\");\n}\nfunction moveColumns2(beans, columnsToMoveKeys, toIndex) {\n  beans.columnMoveService.moveColumns(columnsToMoveKeys, toIndex, \"api\");\n}\nfunction setColumnWidth(beans, key, newWidth, finished = true, source = \"api\") {\n  beans.columnSizeService.setColumnWidths([{ key, newWidth }], false, finished, source);\n}\nfunction setColumnWidths(beans, columnWidths, finished = true, source = \"api\") {\n  beans.columnSizeService.setColumnWidths(columnWidths, false, finished, source);\n}\nfunction getLeftDisplayedColumnGroups(beans) {\n  return beans.visibleColsService.getTreeLeft();\n}\nfunction getCenterDisplayedColumnGroups(beans) {\n  return beans.visibleColsService.getTreeCenter();\n}\nfunction getRightDisplayedColumnGroups(beans) {\n  return beans.visibleColsService.getTreeRight();\n}\nfunction getAllDisplayedColumnGroups(beans) {\n  return beans.visibleColsService.getAllTrees();\n}\nfunction autoSizeColumn(beans, key, skipHeader) {\n  return beans.columnAutosizeService.autoSizeCols({ colKeys: [key], skipHeader, source: \"api\" });\n}\nfunction autoSizeColumns(beans, keys, skipHeader) {\n  beans.columnAutosizeService.autoSizeCols({ colKeys: keys, skipHeader, source: \"api\" });\n}\nfunction autoSizeAllColumns(beans, skipHeader) {\n  beans.columnAutosizeService.autoSizeAllColumns(\"api\", skipHeader);\n}\n\n// community-modules/core/src/columns/dataTypeService.ts\nvar MONTH_LOCALE_TEXT = {\n  january: \"January\",\n  february: \"February\",\n  march: \"March\",\n  april: \"April\",\n  may: \"May\",\n  june: \"June\",\n  july: \"July\",\n  august: \"August\",\n  september: \"September\",\n  october: \"October\",\n  november: \"November\",\n  december: \"December\"\n};\nvar MONTH_KEYS = [\n  \"january\",\n  \"february\",\n  \"march\",\n  \"april\",\n  \"may\",\n  \"june\",\n  \"july\",\n  \"august\",\n  \"september\",\n  \"october\",\n  \"november\",\n  \"december\"\n];\nvar DataTypeService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"dataTypeService\";\n    this.dataTypeDefinitions = {};\n    this.isWaitingForRowData = false;\n    this.isColumnTypeOverrideInDataTypeDefinitions = false;\n    // keep track of any column state updates whilst waiting for data types to be inferred\n    this.columnStateUpdatesPendingInference = {};\n    this.columnStateUpdateListenerDestroyFuncs = [];\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n    this.columnModel = beans.columnModel;\n    this.funcColsService = beans.funcColsService;\n    this.valueService = beans.valueService;\n    this.columnApplyStateService = beans.columnApplyStateService;\n  }\n  postConstruct() {\n    this.groupHideOpenParents = this.gos.get(\"groupHideOpenParents\");\n    this.addManagedPropertyListener(\"groupHideOpenParents\", () => {\n      this.groupHideOpenParents = this.gos.get(\"groupHideOpenParents\");\n    });\n    this.processDataTypeDefinitions();\n    this.addManagedPropertyListener(\"dataTypeDefinitions\", (event) => {\n      this.processDataTypeDefinitions();\n      this.columnModel.recreateColumnDefs(convertSourceType(event.source));\n    });\n  }\n  processDataTypeDefinitions() {\n    const defaultDataTypes = this.getDefaultDataTypes();\n    this.dataTypeDefinitions = {};\n    this.formatValueFuncs = {};\n    const generateFormatValueFunc = (dataTypeDefinition) => {\n      return (params) => {\n        const { column, node, value } = params;\n        let valueFormatter = column.getColDef().valueFormatter;\n        if (valueFormatter === dataTypeDefinition.groupSafeValueFormatter) {\n          valueFormatter = dataTypeDefinition.valueFormatter;\n        }\n        return this.valueService.formatValue(column, node, value, valueFormatter);\n      };\n    };\n    Object.entries(defaultDataTypes).forEach(([cellDataType, dataTypeDefinition]) => {\n      const mergedDataTypeDefinition = {\n        ...dataTypeDefinition,\n        groupSafeValueFormatter: this.createGroupSafeValueFormatter(dataTypeDefinition)\n      };\n      this.dataTypeDefinitions[cellDataType] = mergedDataTypeDefinition;\n      this.formatValueFuncs[cellDataType] = generateFormatValueFunc(mergedDataTypeDefinition);\n    });\n    const dataTypeDefinitions = this.gos.get(\"dataTypeDefinitions\") ?? {};\n    this.dataTypeMatchers = {};\n    Object.entries(dataTypeDefinitions).forEach(([cellDataType, dataTypeDefinition]) => {\n      const mergedDataTypeDefinition = this.processDataTypeDefinition(\n        dataTypeDefinition,\n        dataTypeDefinitions,\n        [cellDataType],\n        defaultDataTypes\n      );\n      if (mergedDataTypeDefinition) {\n        this.dataTypeDefinitions[cellDataType] = mergedDataTypeDefinition;\n        if (dataTypeDefinition.dataTypeMatcher) {\n          this.dataTypeMatchers[cellDataType] = dataTypeDefinition.dataTypeMatcher;\n        }\n        this.formatValueFuncs[cellDataType] = generateFormatValueFunc(mergedDataTypeDefinition);\n      }\n    });\n    this.checkObjectValueHandlers(defaultDataTypes);\n    [\"dateString\", \"text\", \"number\", \"boolean\", \"date\"].forEach((cellDataType) => {\n      const overriddenDataTypeMatcher = this.dataTypeMatchers[cellDataType];\n      if (overriddenDataTypeMatcher) {\n        delete this.dataTypeMatchers[cellDataType];\n      }\n      this.dataTypeMatchers[cellDataType] = overriddenDataTypeMatcher ?? defaultDataTypes[cellDataType].dataTypeMatcher;\n    });\n  }\n  mergeDataTypeDefinitions(parentDataTypeDefinition, childDataTypeDefinition) {\n    const mergedDataTypeDefinition = {\n      ...parentDataTypeDefinition,\n      ...childDataTypeDefinition\n    };\n    if (parentDataTypeDefinition.columnTypes && childDataTypeDefinition.columnTypes && childDataTypeDefinition.appendColumnTypes) {\n      mergedDataTypeDefinition.columnTypes = [\n        ...convertColumnTypes(parentDataTypeDefinition.columnTypes),\n        ...convertColumnTypes(childDataTypeDefinition.columnTypes)\n      ];\n    }\n    return mergedDataTypeDefinition;\n  }\n  processDataTypeDefinition(dataTypeDefinition, dataTypeDefinitions, alreadyProcessedDataTypes, defaultDataTypes) {\n    let mergedDataTypeDefinition;\n    const extendsCellDataType = dataTypeDefinition.extendsDataType;\n    if (dataTypeDefinition.columnTypes) {\n      this.isColumnTypeOverrideInDataTypeDefinitions = true;\n    }\n    if (dataTypeDefinition.extendsDataType === dataTypeDefinition.baseDataType) {\n      let baseDataTypeDefinition = defaultDataTypes[extendsCellDataType];\n      const overriddenBaseDataTypeDefinition = dataTypeDefinitions[extendsCellDataType];\n      if (baseDataTypeDefinition && overriddenBaseDataTypeDefinition) {\n        baseDataTypeDefinition = overriddenBaseDataTypeDefinition;\n      }\n      if (!this.validateDataTypeDefinition(dataTypeDefinition, baseDataTypeDefinition, extendsCellDataType)) {\n        return void 0;\n      }\n      mergedDataTypeDefinition = this.mergeDataTypeDefinitions(baseDataTypeDefinition, dataTypeDefinition);\n    } else {\n      if (alreadyProcessedDataTypes.includes(extendsCellDataType)) {\n        _warnOnce(\n          'Data type definition hierarchies (via the \"extendsDataType\" property) cannot contain circular references.'\n        );\n        return void 0;\n      }\n      const extendedDataTypeDefinition = dataTypeDefinitions[extendsCellDataType];\n      if (!this.validateDataTypeDefinition(dataTypeDefinition, extendedDataTypeDefinition, extendsCellDataType)) {\n        return void 0;\n      }\n      const mergedExtendedDataTypeDefinition = this.processDataTypeDefinition(\n        extendedDataTypeDefinition,\n        dataTypeDefinitions,\n        [...alreadyProcessedDataTypes, extendsCellDataType],\n        defaultDataTypes\n      );\n      if (!mergedExtendedDataTypeDefinition) {\n        return void 0;\n      }\n      mergedDataTypeDefinition = this.mergeDataTypeDefinitions(\n        mergedExtendedDataTypeDefinition,\n        dataTypeDefinition\n      );\n    }\n    return {\n      ...mergedDataTypeDefinition,\n      groupSafeValueFormatter: this.createGroupSafeValueFormatter(mergedDataTypeDefinition)\n    };\n  }\n  validateDataTypeDefinition(dataTypeDefinition, parentDataTypeDefinition, parentCellDataType) {\n    if (!parentDataTypeDefinition) {\n      _warnOnce(`The data type definition ${parentCellDataType} does not exist.`);\n      return false;\n    }\n    if (parentDataTypeDefinition.baseDataType !== dataTypeDefinition.baseDataType) {\n      _warnOnce('The \"baseDataType\" property of a data type definition must match that of its parent.');\n      return false;\n    }\n    return true;\n  }\n  createGroupSafeValueFormatter(dataTypeDefinition) {\n    if (!dataTypeDefinition.valueFormatter) {\n      return void 0;\n    }\n    return (params) => {\n      if (params.node?.group) {\n        const aggFunc = params.column.getAggFunc();\n        if (aggFunc) {\n          if (aggFunc === \"first\" || aggFunc === \"last\") {\n            return dataTypeDefinition.valueFormatter(params);\n          }\n          if (dataTypeDefinition.baseDataType === \"number\" && aggFunc !== \"count\") {\n            if (typeof params.value === \"number\") {\n              return dataTypeDefinition.valueFormatter(params);\n            }\n            if (typeof params.value === \"object\") {\n              if (!params.value) {\n                return void 0;\n              }\n              if (\"toNumber\" in params.value) {\n                return dataTypeDefinition.valueFormatter({\n                  ...params,\n                  value: params.value.toNumber()\n                });\n              }\n              if (\"value\" in params.value) {\n                return dataTypeDefinition.valueFormatter({\n                  ...params,\n                  value: params.value.value\n                });\n              }\n            }\n          }\n        }\n        if (!this.gos.get(\"suppressGroupMaintainValueType\")) {\n          return void 0;\n        }\n      } else if (this.groupHideOpenParents && params.column.isRowGroupActive()) {\n        if (typeof params.value !== \"string\" || dataTypeDefinition.dataTypeMatcher?.(params.value)) {\n          return dataTypeDefinition.valueFormatter(params);\n        }\n        if (!this.gos.get(\"suppressGroupMaintainValueType\")) {\n          return void 0;\n        }\n      }\n      return dataTypeDefinition.valueFormatter(params);\n    };\n  }\n  updateColDefAndGetColumnType(colDef, userColDef, colId) {\n    let { cellDataType } = userColDef;\n    const { field } = userColDef;\n    if (cellDataType === void 0) {\n      cellDataType = colDef.cellDataType;\n    }\n    if (cellDataType == null || cellDataType === true) {\n      cellDataType = this.canInferCellDataType(colDef, userColDef) ? this.inferCellDataType(field, colId) : false;\n    }\n    if (!cellDataType) {\n      colDef.cellDataType = false;\n      return void 0;\n    }\n    const dataTypeDefinition = this.dataTypeDefinitions[cellDataType];\n    if (!dataTypeDefinition) {\n      _warnOnce(`Missing data type definition - \"${cellDataType}\"`);\n      return void 0;\n    }\n    colDef.cellDataType = cellDataType;\n    if (dataTypeDefinition.groupSafeValueFormatter) {\n      colDef.valueFormatter = dataTypeDefinition.groupSafeValueFormatter;\n    }\n    if (dataTypeDefinition.valueParser) {\n      colDef.valueParser = dataTypeDefinition.valueParser;\n    }\n    if (!dataTypeDefinition.suppressDefaultProperties) {\n      this.setColDefPropertiesForBaseDataType(colDef, cellDataType, dataTypeDefinition, colId);\n    }\n    return dataTypeDefinition.columnTypes;\n  }\n  addColumnListeners(column) {\n    if (!this.isWaitingForRowData) {\n      return;\n    }\n    const columnStateUpdates = this.columnStateUpdatesPendingInference[column.getColId()];\n    if (!columnStateUpdates) {\n      return;\n    }\n    const columnListener = (event) => {\n      columnStateUpdates.add(event.key);\n    };\n    column.addEventListener(\"columnStateUpdated\", columnListener);\n    this.columnStateUpdateListenerDestroyFuncs.push(\n      () => column.removeEventListener(\"columnStateUpdated\", columnListener)\n    );\n  }\n  canInferCellDataType(colDef, userColDef) {\n    if (this.rowModel.getType() !== \"clientSide\") {\n      return false;\n    }\n    const propsToCheckForInference = { cellRenderer: true, valueGetter: true, valueParser: true, refData: true };\n    if (this.doColDefPropsPreventInference(userColDef, propsToCheckForInference)) {\n      return false;\n    }\n    const columnTypes = userColDef.type === null ? colDef.type : userColDef.type;\n    if (columnTypes) {\n      const columnTypeDefs = this.gos.get(\"columnTypes\") ?? {};\n      const hasPropsPreventingInference = convertColumnTypes(columnTypes).some((columnType) => {\n        const columnTypeDef = columnTypeDefs[columnType.trim()];\n        return columnTypeDef && this.doColDefPropsPreventInference(columnTypeDef, propsToCheckForInference);\n      });\n      if (hasPropsPreventingInference) {\n        return false;\n      }\n    }\n    return !this.doColDefPropsPreventInference(colDef, propsToCheckForInference);\n  }\n  doColDefPropsPreventInference(colDef, propsToCheckForInference) {\n    return [\n      [\"cellRenderer\", \"agSparklineCellRenderer\"],\n      [\"valueGetter\", void 0],\n      [\"valueParser\", void 0],\n      [\"refData\", void 0]\n    ].some(\n      ([prop, comparisonValue]) => this.doesColDefPropPreventInference(colDef, propsToCheckForInference, prop, comparisonValue)\n    );\n  }\n  doesColDefPropPreventInference(colDef, checkProps, prop, comparisonValue) {\n    if (!checkProps[prop]) {\n      return false;\n    }\n    const value = colDef[prop];\n    if (value === null) {\n      checkProps[prop] = false;\n      return false;\n    } else {\n      return comparisonValue === void 0 ? !!value : value === comparisonValue;\n    }\n  }\n  inferCellDataType(field, colId) {\n    if (!field) {\n      return void 0;\n    }\n    let value;\n    const initialData = this.getInitialData();\n    if (initialData) {\n      const fieldContainsDots = field.indexOf(\".\") >= 0 && !this.gos.get(\"suppressFieldDotNotation\");\n      value = _getValueUsingField(initialData, field, fieldContainsDots);\n    } else {\n      this.initWaitForRowData(colId);\n    }\n    if (value == null) {\n      return void 0;\n    }\n    const [cellDataType] = Object.entries(this.dataTypeMatchers).find(\n      ([_cellDataType, dataTypeMatcher]) => dataTypeMatcher(value)\n    ) ?? [\"object\"];\n    return cellDataType;\n  }\n  getInitialData() {\n    const rowData = this.gos.get(\"rowData\");\n    if (rowData?.length) {\n      return rowData[0];\n    } else if (this.initialData) {\n      return this.initialData;\n    } else {\n      const rowNodes = this.rowModel.getRootNode().allLeafChildren;\n      if (rowNodes?.length) {\n        return rowNodes[0].data;\n      }\n    }\n    return null;\n  }\n  initWaitForRowData(colId) {\n    this.columnStateUpdatesPendingInference[colId] = /* @__PURE__ */ new Set();\n    if (this.isWaitingForRowData) {\n      return;\n    }\n    this.isWaitingForRowData = true;\n    const columnTypeOverridesExist = this.isColumnTypeOverrideInDataTypeDefinitions;\n    if (columnTypeOverridesExist) {\n      this.columnModel.queueResizeOperations();\n    }\n    const [destroyFunc] = this.addManagedEventListeners({\n      rowDataUpdateStarted: (event) => {\n        const { firstRowData } = event;\n        if (!firstRowData) {\n          return;\n        }\n        destroyFunc?.();\n        this.isWaitingForRowData = false;\n        this.processColumnsPendingInference(firstRowData, columnTypeOverridesExist);\n        this.columnStateUpdatesPendingInference = {};\n        if (columnTypeOverridesExist) {\n          this.columnModel.processResizeOperations();\n        }\n        this.eventService.dispatchEvent({\n          type: \"dataTypesInferred\"\n        });\n      }\n    });\n  }\n  isPendingInference() {\n    return this.isWaitingForRowData;\n  }\n  processColumnsPendingInference(firstRowData, columnTypeOverridesExist) {\n    this.initialData = firstRowData;\n    const state = [];\n    this.destroyColumnStateUpdateListeners();\n    const newRowGroupColumnStateWithoutIndex = {};\n    const newPivotColumnStateWithoutIndex = {};\n    Object.entries(this.columnStateUpdatesPendingInference).forEach(([colId, columnStateUpdates]) => {\n      const column = this.columnModel.getCol(colId);\n      if (!column) {\n        return;\n      }\n      const oldColDef = column.getColDef();\n      if (!this.columnModel.resetColDefIntoCol(column, \"cellDataTypeInferred\")) {\n        return;\n      }\n      const newColDef = column.getColDef();\n      if (columnTypeOverridesExist && newColDef.type && newColDef.type !== oldColDef.type) {\n        const updatedColumnState = this.getUpdatedColumnState(column, columnStateUpdates);\n        if (updatedColumnState.rowGroup && updatedColumnState.rowGroupIndex == null) {\n          newRowGroupColumnStateWithoutIndex[colId] = updatedColumnState;\n        }\n        if (updatedColumnState.pivot && updatedColumnState.pivotIndex == null) {\n          newPivotColumnStateWithoutIndex[colId] = updatedColumnState;\n        }\n        state.push(updatedColumnState);\n      }\n    });\n    if (columnTypeOverridesExist) {\n      state.push(\n        ...this.funcColsService.generateColumnStateForRowGroupAndPivotIndexes(\n          newRowGroupColumnStateWithoutIndex,\n          newPivotColumnStateWithoutIndex\n        )\n      );\n    }\n    if (state.length) {\n      this.columnApplyStateService.applyColumnState({ state }, \"cellDataTypeInferred\");\n    }\n    this.initialData = null;\n  }\n  getUpdatedColumnState(column, columnStateUpdates) {\n    const columnState = this.columnApplyStateService.getColumnStateFromColDef(column);\n    columnStateUpdates.forEach((key) => {\n      delete columnState[key];\n      if (key === \"rowGroup\") {\n        delete columnState.rowGroupIndex;\n      } else if (key === \"pivot\") {\n        delete columnState.pivotIndex;\n      }\n    });\n    return columnState;\n  }\n  checkObjectValueHandlers(defaultDataTypes) {\n    const resolvedObjectDataTypeDefinition = this.dataTypeDefinitions.object;\n    const defaultObjectDataTypeDefinition = defaultDataTypes.object;\n    this.hasObjectValueParser = resolvedObjectDataTypeDefinition.valueParser !== defaultObjectDataTypeDefinition.valueParser;\n    this.hasObjectValueFormatter = resolvedObjectDataTypeDefinition.valueFormatter !== defaultObjectDataTypeDefinition.valueFormatter;\n  }\n  getDateStringTypeDefinition(column) {\n    if (!column) {\n      return this.dataTypeDefinitions.dateString;\n    }\n    return this.getDataTypeDefinition(column) ?? this.dataTypeDefinitions.dateString;\n  }\n  getDateParserFunction(column) {\n    return this.getDateStringTypeDefinition(column).dateParser;\n  }\n  getDateFormatterFunction(column) {\n    return this.getDateStringTypeDefinition(column).dateFormatter;\n  }\n  getDataTypeDefinition(column) {\n    const colDef = column.getColDef();\n    if (!colDef.cellDataType) {\n      return void 0;\n    }\n    return this.dataTypeDefinitions[colDef.cellDataType];\n  }\n  getBaseDataType(column) {\n    return this.getDataTypeDefinition(column)?.baseDataType;\n  }\n  checkType(column, value) {\n    if (value == null) {\n      return true;\n    }\n    const dataTypeMatcher = this.getDataTypeDefinition(column)?.dataTypeMatcher;\n    if (!dataTypeMatcher) {\n      return true;\n    }\n    return dataTypeMatcher(value);\n  }\n  validateColDef(colDef) {\n    const warning = (property) => _warnOnce(\n      `Cell data type is \"object\" but no Value ${property} has been provided. Please either provide an object data type definition with a Value ${property}, or set \"colDef.value${property}\"`\n    );\n    if (colDef.cellDataType === \"object\") {\n      if (colDef.valueFormatter === this.dataTypeDefinitions.object.groupSafeValueFormatter && !this.hasObjectValueFormatter) {\n        warning(\"Formatter\");\n      }\n      if (colDef.editable && colDef.valueParser === this.dataTypeDefinitions.object.valueParser && !this.hasObjectValueParser) {\n        warning(\"Parser\");\n      }\n    }\n  }\n  getFormatValue(cellDataType) {\n    return this.formatValueFuncs[cellDataType];\n  }\n  setColDefPropertiesForBaseDataType(colDef, cellDataType, dataTypeDefinition, colId) {\n    const formatValue = this.formatValueFuncs[cellDataType];\n    const usingSetFilter = ModuleRegistry.__isRegistered(\"@ag-grid-enterprise/set-filter\" /* SetFilterModule */, this.gridId);\n    const translate = this.localeService.getLocaleTextFunc();\n    const mergeFilterParams = (params) => {\n      const { filterParams } = colDef;\n      colDef.filterParams = typeof filterParams === \"object\" ? {\n        ...filterParams,\n        ...params\n      } : params;\n    };\n    switch (dataTypeDefinition.baseDataType) {\n      case \"number\": {\n        colDef.cellEditor = \"agNumberCellEditor\";\n        if (usingSetFilter) {\n          mergeFilterParams({\n            comparator: (a, b) => {\n              const valA = a == null ? 0 : parseInt(a);\n              const valB = b == null ? 0 : parseInt(b);\n              if (valA === valB)\n                return 0;\n              return valA > valB ? 1 : -1;\n            }\n          });\n        }\n        break;\n      }\n      case \"boolean\": {\n        colDef.cellEditor = \"agCheckboxCellEditor\";\n        colDef.cellRenderer = \"agCheckboxCellRenderer\";\n        colDef.suppressKeyboardEvent = (params) => !!params.colDef.editable && params.event.key === KeyCode.SPACE;\n        if (usingSetFilter) {\n          mergeFilterParams({\n            valueFormatter: (params) => {\n              if (!_exists(params.value)) {\n                return translate(\"blanks\", \"(Blanks)\");\n              }\n              return translate(String(params.value), params.value ? \"True\" : \"False\");\n            }\n          });\n        } else {\n          mergeFilterParams({\n            maxNumConditions: 1,\n            debounceMs: 0,\n            filterOptions: [\n              \"empty\",\n              {\n                displayKey: \"true\",\n                displayName: \"True\",\n                predicate: (_filterValues, cellValue) => cellValue,\n                numberOfInputs: 0\n              },\n              {\n                displayKey: \"false\",\n                displayName: \"False\",\n                predicate: (_filterValues, cellValue) => cellValue === false,\n                numberOfInputs: 0\n              }\n            ]\n          });\n        }\n        break;\n      }\n      case \"date\": {\n        colDef.cellEditor = \"agDateCellEditor\";\n        colDef.keyCreator = formatValue;\n        if (usingSetFilter) {\n          mergeFilterParams({\n            valueFormatter: (params) => {\n              const valueFormatted = formatValue(params);\n              return _exists(valueFormatted) ? valueFormatted : translate(\"blanks\", \"(Blanks)\");\n            },\n            treeList: true,\n            treeListFormatter: (pathKey, level) => {\n              if (level === 1 && pathKey != null) {\n                const monthKey = MONTH_KEYS[Number(pathKey) - 1];\n                return translate(monthKey, MONTH_LOCALE_TEXT[monthKey]);\n              }\n              return pathKey ?? translate(\"blanks\", \"(Blanks)\");\n            }\n          });\n        }\n        break;\n      }\n      case \"dateString\": {\n        colDef.cellEditor = \"agDateStringCellEditor\";\n        colDef.keyCreator = formatValue;\n        const convertToDate = dataTypeDefinition.dateParser;\n        if (usingSetFilter) {\n          mergeFilterParams({\n            valueFormatter: (params) => {\n              const valueFormatted = formatValue(params);\n              return _exists(valueFormatted) ? valueFormatted : translate(\"blanks\", \"(Blanks)\");\n            },\n            treeList: true,\n            treeListPathGetter: (value) => {\n              const date = convertToDate(value ?? void 0);\n              return date ? [String(date.getFullYear()), String(date.getMonth() + 1), String(date.getDate())] : null;\n            },\n            treeListFormatter: (pathKey, level) => {\n              if (level === 1 && pathKey != null) {\n                const monthKey = MONTH_KEYS[Number(pathKey) - 1];\n                return translate(monthKey, MONTH_LOCALE_TEXT[monthKey]);\n              }\n              return pathKey ?? translate(\"blanks\", \"(Blanks)\");\n            }\n          });\n        } else {\n          mergeFilterParams({\n            comparator: (filterDate, cellValue) => {\n              const cellAsDate = convertToDate(cellValue);\n              if (cellValue == null || cellAsDate < filterDate) {\n                return -1;\n              }\n              if (cellAsDate > filterDate) {\n                return 1;\n              }\n              return 0;\n            }\n          });\n        }\n        break;\n      }\n      case \"object\": {\n        colDef.cellEditorParams = {\n          useFormatter: true\n        };\n        colDef.comparator = (a, b) => {\n          const column = this.columnModel.getColDefCol(colId);\n          const colDef2 = column?.getColDef();\n          if (!column || !colDef2) {\n            return 0;\n          }\n          const valA = a == null ? \"\" : formatValue({ column, node: null, value: a });\n          const valB = b == null ? \"\" : formatValue({ column, node: null, value: b });\n          if (valA === valB)\n            return 0;\n          return valA > valB ? 1 : -1;\n        };\n        colDef.keyCreator = formatValue;\n        if (usingSetFilter) {\n          mergeFilterParams({\n            valueFormatter: (params) => {\n              const valueFormatted = formatValue(params);\n              return _exists(valueFormatted) ? valueFormatted : translate(\"blanks\", \"(Blanks)\");\n            }\n          });\n        } else {\n          colDef.filterValueGetter = (params) => formatValue({\n            column: params.column,\n            node: params.node,\n            value: this.valueService.getValue(params.column, params.node)\n          });\n        }\n        break;\n      }\n    }\n  }\n  getDefaultDataTypes() {\n    const defaultDateFormatMatcher = (value) => !!value.match(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\");\n    const translate = this.localeService.getLocaleTextFunc();\n    return {\n      number: {\n        baseDataType: \"number\",\n        // can be empty space with legacy copy\n        valueParser: (params) => params.newValue?.trim?.() === \"\" ? null : Number(params.newValue),\n        valueFormatter: (params) => {\n          if (params.value == null) {\n            return \"\";\n          }\n          if (typeof params.value !== \"number\" || isNaN(params.value)) {\n            return translate(\"invalidNumber\", \"Invalid Number\");\n          }\n          return String(params.value);\n        },\n        dataTypeMatcher: (value) => typeof value === \"number\"\n      },\n      text: {\n        baseDataType: \"text\",\n        valueParser: (params) => params.newValue === \"\" ? null : _toStringOrNull(params.newValue),\n        dataTypeMatcher: (value) => typeof value === \"string\"\n      },\n      boolean: {\n        baseDataType: \"boolean\",\n        valueParser: (params) => {\n          if (params.newValue == null) {\n            return params.newValue;\n          }\n          return params.newValue?.trim?.() === \"\" ? null : String(params.newValue).toLowerCase() === \"true\";\n        },\n        valueFormatter: (params) => params.value == null ? \"\" : String(params.value),\n        dataTypeMatcher: (value) => typeof value === \"boolean\"\n      },\n      date: {\n        baseDataType: \"date\",\n        valueParser: (params) => _parseDateTimeFromString(params.newValue == null ? null : String(params.newValue)),\n        valueFormatter: (params) => {\n          if (params.value == null) {\n            return \"\";\n          }\n          if (!(params.value instanceof Date) || isNaN(params.value.getTime())) {\n            return translate(\"invalidDate\", \"Invalid Date\");\n          }\n          return _serialiseDate(params.value, false) ?? \"\";\n        },\n        dataTypeMatcher: (value) => value instanceof Date\n      },\n      dateString: {\n        baseDataType: \"dateString\",\n        dateParser: (value) => _parseDateTimeFromString(value) ?? void 0,\n        dateFormatter: (value) => _serialiseDate(value ?? null, false) ?? void 0,\n        valueParser: (params) => defaultDateFormatMatcher(String(params.newValue)) ? params.newValue : null,\n        valueFormatter: (params) => defaultDateFormatMatcher(String(params.value)) ? params.value : \"\",\n        dataTypeMatcher: (value) => typeof value === \"string\" && defaultDateFormatMatcher(value)\n      },\n      object: {\n        baseDataType: \"object\",\n        valueParser: () => null,\n        valueFormatter: (params) => _toStringOrNull(params.value) ?? \"\"\n      }\n    };\n  }\n  destroyColumnStateUpdateListeners() {\n    this.columnStateUpdateListenerDestroyFuncs.forEach((destroyFunc) => destroyFunc());\n    this.columnStateUpdateListenerDestroyFuncs = [];\n  }\n  destroy() {\n    this.dataTypeDefinitions = {};\n    this.dataTypeMatchers = {};\n    this.formatValueFuncs = {};\n    this.columnStateUpdatesPendingInference = {};\n    this.destroyColumnStateUpdateListeners();\n    super.destroy();\n  }\n};\n\n// community-modules/core/src/columns/columnModule.ts\nvar DataTypeModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/data-type\",\n  beans: [DataTypeService]\n});\nvar ColumnApiModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/column-api\",\n  apiFunctions: {\n    getColumnDef,\n    getColumnDefs,\n    sizeColumnsToFit,\n    setColumnGroupOpened,\n    getColumnGroup,\n    getProvidedColumnGroup,\n    getDisplayNameForColumn,\n    getDisplayNameForColumnGroup,\n    getColumn,\n    getColumns,\n    applyColumnState,\n    getColumnState,\n    resetColumnState,\n    getColumnGroupState,\n    setColumnGroupState,\n    resetColumnGroupState,\n    isPinning,\n    isPinningLeft,\n    isPinningRight,\n    getDisplayedColAfter,\n    getDisplayedColBefore,\n    setColumnVisible,\n    setColumnsVisible,\n    setColumnPinned,\n    setColumnsPinned,\n    getAllGridColumns,\n    getDisplayedLeftColumns,\n    getDisplayedCenterColumns,\n    getDisplayedRightColumns,\n    getAllDisplayedColumns,\n    getAllDisplayedVirtualColumns,\n    moveColumn,\n    moveColumnByIndex,\n    moveColumns: moveColumns2,\n    setColumnWidth,\n    setColumnWidths,\n    getLeftDisplayedColumnGroups,\n    getCenterDisplayedColumnGroups,\n    getRightDisplayedColumnGroups,\n    getAllDisplayedColumnGroups,\n    autoSizeColumn,\n    autoSizeColumns,\n    autoSizeAllColumns\n  }\n});\n\n// community-modules/core/src/dragAndDrop/dragApi.ts\nfunction addRowDropZone(beans, params) {\n  beans.ctrlsService.getGridBodyCtrl().getRowDragFeature().addRowDropZone(params);\n}\nfunction removeRowDropZone(beans, params) {\n  const activeDropTarget = beans.dragAndDropService.findExternalZone(params);\n  if (activeDropTarget) {\n    beans.dragAndDropService.removeDropTarget(activeDropTarget);\n  }\n}\nfunction getRowDropZoneParams(beans, events) {\n  return beans.ctrlsService.getGridBodyCtrl().getRowDragFeature().getRowDropZone(events);\n}\n\n// community-modules/core/src/dragAndDrop/dragModule.ts\nvar DragApiModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/drag-api\",\n  apiFunctions: {\n    addRowDropZone,\n    removeRowDropZone,\n    getRowDropZoneParams\n  }\n});\n\n// community-modules/core/src/pinnedRowModel/pinnedRowApi.ts\nfunction getPinnedTopRowCount(beans) {\n  return beans.pinnedRowModel.getPinnedTopRowCount();\n}\nfunction getPinnedBottomRowCount(beans) {\n  return beans.pinnedRowModel.getPinnedBottomRowCount();\n}\nfunction getPinnedTopRow(beans, index) {\n  return beans.pinnedRowModel.getPinnedTopRow(index);\n}\nfunction getPinnedBottomRow(beans, index) {\n  return beans.pinnedRowModel.getPinnedBottomRow(index);\n}\n\n// community-modules/core/src/pinnedRowModel/pinnedRowModule.ts\nvar PinnedRowApiModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/pinned-row-api\",\n  apiFunctions: {\n    getPinnedTopRowCount,\n    getPinnedBottomRowCount,\n    getPinnedTopRow,\n    getPinnedBottomRow\n  }\n});\n\n// community-modules/core/src/rendering/overlays/overlayApi.ts\nfunction showLoadingOverlay(beans) {\n  beans.overlayService.showLoadingOverlay();\n}\nfunction showNoRowsOverlay(beans) {\n  beans.overlayService.showNoRowsOverlay();\n}\nfunction hideOverlay(beans) {\n  beans.overlayService.hideOverlay();\n}\n\n// community-modules/core/src/rendering/overlays/overlayModule.ts\nvar OverlayApiModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/overlay-api\",\n  apiFunctions: {\n    showLoadingOverlay,\n    showNoRowsOverlay,\n    hideOverlay\n  }\n});\n\n// community-modules/core/src/rendering/renderApi.ts\nfunction setGridAriaProperty(beans, property, value) {\n  if (!property) {\n    return;\n  }\n  const eGrid = beans.ctrlsService.getGridBodyCtrl().getGui();\n  const ariaProperty = `aria-${property}`;\n  if (value === null) {\n    eGrid.removeAttribute(ariaProperty);\n  } else {\n    eGrid.setAttribute(ariaProperty, value);\n  }\n}\nfunction refreshCells(beans, params = {}) {\n  beans.frameworkOverrides.wrapIncoming(() => beans.rowRenderer.refreshCells(params));\n}\nfunction flashCells(beans, params = {}) {\n  const warning = (prop) => _warnOnce(\n    `Since v31.1 api.flashCells parameter '${prop}Delay' is deprecated. Please use '${prop}Duration' instead.`\n  );\n  if (_exists(params.fadeDelay)) {\n    warning(\"fade\");\n  }\n  if (_exists(params.flashDelay)) {\n    warning(\"flash\");\n  }\n  beans.frameworkOverrides.wrapIncoming(() => beans.rowRenderer.flashCells(params));\n}\nfunction refreshHeader(beans) {\n  beans.frameworkOverrides.wrapIncoming(\n    () => beans.ctrlsService.getHeaderRowContainerCtrls().forEach((c) => c.refresh())\n  );\n}\nfunction isAnimationFrameQueueEmpty(beans) {\n  return beans.animationFrameService.isQueueEmpty();\n}\nfunction flushAllAnimationFrames(beans) {\n  beans.animationFrameService.flushAllFrames();\n}\nfunction getSizesForCurrentTheme(beans) {\n  return {\n    rowHeight: beans.gos.getRowHeightAsNumber(),\n    headerHeight: beans.columnModel.getHeaderHeight()\n  };\n}\nfunction getCellRendererInstances(beans, params = {}) {\n  const res = beans.rowRenderer.getCellRendererInstances(params);\n  const unwrapped = res.map(_unwrapUserComp);\n  return unwrapped;\n}\n\n// community-modules/core/src/rendering/renderModule.ts\nvar RenderApiModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/render-api\",\n  apiFunctions: {\n    setGridAriaProperty,\n    refreshCells,\n    flashCells,\n    refreshHeader,\n    isAnimationFrameQueueEmpty,\n    flushAllAnimationFrames,\n    getSizesForCurrentTheme,\n    getCellRendererInstances\n  }\n});\n\n// community-modules/core/src/api/cellApi.ts\nfunction expireValueCache(beans) {\n  beans.valueCache.expire();\n}\nfunction getValue(beans, colKey, rowNode) {\n  return getCellValue(beans, { colKey, rowNode });\n}\nfunction getCellValue(beans, params) {\n  const { colKey, rowNode, useFormatter } = params;\n  const column = beans.columnModel.getColDefCol(colKey) ?? beans.columnModel.getCol(colKey);\n  if (_missing(column)) {\n    return null;\n  }\n  const value = beans.valueService.getValue(column, rowNode);\n  if (useFormatter) {\n    const formattedValue = beans.valueService.formatValue(column, rowNode, value);\n    return formattedValue ?? _escapeString(value, true);\n  }\n  return value;\n}\n\n// community-modules/core/src/api/coreApi.ts\nfunction getGridId(beans) {\n  return beans.context.getGridId();\n}\nfunction destroy(beans) {\n  beans.gridDestroyService.destroy();\n}\nfunction isDestroyed(beans) {\n  return beans.gridDestroyService.isDestroyCalled();\n}\nfunction getGridOption(beans, key) {\n  return beans.gos.get(key);\n}\nfunction setGridOption(beans, key, value) {\n  updateGridOptions(beans, { [key]: value });\n}\nfunction updateGridOptions(beans, options) {\n  beans.gos.updateGridOptions({ options });\n}\n\n// community-modules/core/src/api/eventApi.ts\nfunction addEventListener(beans, eventType, listener) {\n  beans.apiEventService.addEventListener(eventType, listener);\n}\nfunction removeEventListener(beans, eventType, listener) {\n  beans.apiEventService.removeEventListener(eventType, listener);\n}\nfunction addGlobalListener(beans, listener) {\n  beans.apiEventService.addGlobalListener(listener);\n}\nfunction removeGlobalListener(beans, listener) {\n  beans.apiEventService.removeGlobalListener(listener);\n}\n\n// community-modules/core/src/api/keyboardNavigationApi.ts\nfunction getFocusedCell(beans) {\n  return beans.focusService.getFocusedCell();\n}\nfunction clearFocusedCell(beans) {\n  return beans.focusService.clearFocusedCell();\n}\nfunction setFocusedCell(beans, rowIndex, colKey, rowPinned) {\n  beans.focusService.setFocusedCell({ rowIndex, column: colKey, rowPinned, forceBrowserFocus: true });\n}\nfunction tabToNextCell(beans, event) {\n  return beans.navigationService.tabToNextCell(false, event);\n}\nfunction tabToPreviousCell(beans, event) {\n  return beans.navigationService.tabToNextCell(true, event);\n}\nfunction setFocusedHeader(beans, colKey, floatingFilter = false) {\n  const headerPosition = beans.headerNavigationService.getHeaderPositionForColumn(colKey, floatingFilter);\n  if (!headerPosition) {\n    return;\n  }\n  beans.focusService.focusHeaderPosition({ headerPosition });\n}\n\n// community-modules/core/src/api/menuApi.ts\nfunction showColumnMenuAfterButtonClick(beans, colKey, buttonElement) {\n  const column = beans.columnModel.getCol(colKey);\n  beans.menuService.showColumnMenu({\n    column,\n    buttonElement,\n    positionBy: \"button\"\n  });\n}\nfunction showColumnMenuAfterMouseClick(beans, colKey, mouseEvent) {\n  let column = beans.columnModel.getCol(colKey);\n  if (!column) {\n    column = beans.columnModel.getColDefCol(colKey);\n  }\n  if (!column) {\n    _errorOnce(`column '${colKey}' not found`);\n    return;\n  }\n  beans.menuService.showColumnMenu({\n    column,\n    mouseEvent,\n    positionBy: \"mouse\"\n  });\n}\nfunction showColumnMenu(beans, colKey) {\n  const column = beans.columnModel.getCol(colKey);\n  if (!column) {\n    _errorOnce(`column '${colKey}' not found`);\n    return;\n  }\n  beans.menuService.showColumnMenu({\n    column,\n    positionBy: \"auto\"\n  });\n}\nfunction hidePopupMenu(beans) {\n  beans.menuService.hidePopupMenu();\n}\n\n// community-modules/core/src/api/rowApi.ts\nfunction redrawRows(beans, params = {}) {\n  const rowNodes = params ? params.rowNodes : void 0;\n  beans.frameworkOverrides.wrapIncoming(() => beans.rowRenderer.redrawRows(rowNodes));\n}\nfunction setRowNodeExpanded(beans, rowNode, expanded, expandParents, forceSync) {\n  beans.expansionService.setRowNodeExpanded(rowNode, expanded, expandParents, forceSync);\n}\nfunction getRowNode(beans, id) {\n  return beans.rowModel.getRowNode(id);\n}\nfunction addRenderedRowListener(beans, eventName, rowIndex, callback) {\n  beans.rowRenderer.addRenderedRowListener(eventName, rowIndex, callback);\n}\nfunction getRenderedNodes(beans) {\n  return beans.rowRenderer.getRenderedNodes();\n}\nfunction forEachNode(beans, callback, includeFooterNodes) {\n  beans.rowModel.forEachNode(callback, includeFooterNodes);\n}\nfunction getFirstDisplayedRow(beans) {\n  return getFirstDisplayedRowIndex(beans);\n}\nfunction getFirstDisplayedRowIndex(beans) {\n  return beans.rowRenderer.getFirstVirtualRenderedRow();\n}\nfunction getLastDisplayedRow(beans) {\n  return getLastDisplayedRowIndex(beans);\n}\nfunction getLastDisplayedRowIndex(beans) {\n  return beans.rowRenderer.getLastVirtualRenderedRow();\n}\nfunction getDisplayedRowAtIndex(beans, index) {\n  return beans.rowModel.getRow(index);\n}\nfunction getDisplayedRowCount(beans) {\n  return beans.rowModel.getRowCount();\n}\nfunction getModel(beans) {\n  return beans.rowModel;\n}\n\n// community-modules/core/src/api/rowSelectionApi.ts\nfunction setNodesSelected(beans, params) {\n  const allNodesValid = params.nodes.every((node) => {\n    if (node.rowPinned) {\n      _warnOnce(\"cannot select pinned rows\");\n      return false;\n    }\n    if (node.id === void 0) {\n      _warnOnce(\"cannot select node until id for node is known\");\n      return false;\n    }\n    return true;\n  });\n  if (!allNodesValid) {\n    return;\n  }\n  const { nodes, source, newValue } = params;\n  const nodesAsRowNode = nodes;\n  beans.selectionService.setNodesSelected({ nodes: nodesAsRowNode, source: source ?? \"api\", newValue });\n}\nfunction selectAll(beans, source = \"apiSelectAll\") {\n  beans.selectionService.selectAllRowNodes({ source });\n}\nfunction deselectAll(beans, source = \"apiSelectAll\") {\n  beans.selectionService.deselectAllRowNodes({ source });\n}\nfunction selectAllFiltered(beans, source = \"apiSelectAllFiltered\") {\n  beans.selectionService.selectAllRowNodes({ source, justFiltered: true });\n}\nfunction deselectAllFiltered(beans, source = \"apiSelectAllFiltered\") {\n  beans.selectionService.deselectAllRowNodes({ source, justFiltered: true });\n}\nfunction selectAllOnCurrentPage(beans, source = \"apiSelectAllCurrentPage\") {\n  beans.selectionService.selectAllRowNodes({ source, justCurrentPage: true });\n}\nfunction deselectAllOnCurrentPage(beans, source = \"apiSelectAllCurrentPage\") {\n  beans.selectionService.deselectAllRowNodes({ source, justCurrentPage: true });\n}\nfunction getSelectedNodes(beans) {\n  return beans.selectionService.getSelectedNodes();\n}\nfunction getSelectedRows(beans) {\n  return beans.selectionService.getSelectedRows();\n}\n\n// community-modules/core/src/api/sortApi.ts\nfunction onSortChanged(beans) {\n  beans.sortController.onSortChanged(\"api\");\n}\n\n// community-modules/core/src/api/apiModule.ts\nvar CoreApiModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/core-api\",\n  apiFunctions: {\n    getGridId,\n    destroy,\n    isDestroyed,\n    getGridOption,\n    setGridOption,\n    updateGridOptions\n  }\n});\nvar RowSelectionApiModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/row-selection-api\",\n  apiFunctions: {\n    setNodesSelected,\n    selectAll,\n    deselectAll,\n    selectAllFiltered,\n    deselectAllFiltered,\n    selectAllOnCurrentPage,\n    deselectAllOnCurrentPage,\n    getSelectedNodes,\n    getSelectedRows\n  }\n});\nvar RowApiModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/row-api\",\n  apiFunctions: {\n    redrawRows,\n    setRowNodeExpanded,\n    getRowNode,\n    addRenderedRowListener,\n    getRenderedNodes,\n    forEachNode,\n    getFirstDisplayedRow,\n    getFirstDisplayedRowIndex,\n    getLastDisplayedRow,\n    getLastDisplayedRowIndex,\n    getDisplayedRowAtIndex,\n    getDisplayedRowCount,\n    getModel\n  }\n});\nvar ScrollApiModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/scroll-api\",\n  apiFunctions: {\n    getVerticalPixelRange,\n    getHorizontalPixelRange,\n    ensureColumnVisible,\n    ensureIndexVisible,\n    ensureNodeVisible\n  }\n});\nvar KeyboardNavigationApiModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/keyboard-navigation-api\",\n  apiFunctions: {\n    getFocusedCell,\n    clearFocusedCell,\n    setFocusedCell,\n    setFocusedHeader,\n    tabToNextCell,\n    tabToPreviousCell\n  }\n});\nvar EventApiModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/event-api\",\n  apiFunctions: {\n    addEventListener,\n    addGlobalListener,\n    removeEventListener,\n    removeGlobalListener\n  }\n});\nvar CellApiModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/cell-api\",\n  apiFunctions: {\n    expireValueCache,\n    getValue,\n    getCellValue\n  }\n});\nvar CommunityMenuApiModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/menu-api\",\n  apiFunctions: {\n    showColumnMenuAfterButtonClick,\n    showColumnMenuAfterMouseClick,\n    showColumnMenu,\n    hidePopupMenu\n  }\n});\nvar SortApiModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/sort-api\",\n  apiFunctions: {\n    onSortChanged\n  }\n});\nvar CommunityApiModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/api\",\n  dependantModules: [\n    CoreApiModule,\n    PinnedRowApiModule,\n    RowSelectionApiModule,\n    ColumnApiModule,\n    RowApiModule,\n    DragApiModule,\n    ScrollApiModule,\n    OverlayApiModule,\n    KeyboardNavigationApiModule,\n    EventApiModule,\n    RenderApiModule,\n    CellApiModule,\n    CommunityMenuApiModule,\n    SortApiModule\n  ]\n});\n\n// community-modules/core/src/misc/state/stateApi.ts\nfunction getState(beans) {\n  return beans.stateService?.getState() ?? {};\n}\n\n// community-modules/core/src/misc/state/stateService.ts\nvar StateService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"stateService\";\n    this.suppressEvents = true;\n    this.queuedUpdateSources = /* @__PURE__ */ new Set();\n    this.dispatchStateUpdateEventDebounced = _debounce(() => this.dispatchQueuedStateUpdateEvents(), 0);\n    // If user is doing a manual expand all node by node, we don't want to process one at a time.\n    // EVENT_ROW_GROUP_OPENED is already async, so no impact of making the state async here.\n    this.onRowGroupOpenedDebounced = _debounce(\n      () => this.updateCachedState(\"rowGroupExpansion\", this.getRowGroupExpansionState()),\n      0\n    );\n    // similar to row expansion, want to debounce. However, selection is synchronous, so need to mark as stale in case `getState` is called.\n    this.onRowSelectedDebounced = _debounce(() => {\n      this.staleStateKeys.delete(\"rowSelection\");\n      this.updateCachedState(\"rowSelection\", this.getRowSelectionState());\n    }, 0);\n    this.staleStateKeys = /* @__PURE__ */ new Set();\n  }\n  wireBeans(beans) {\n    this.filterManager = beans.filterManager;\n    this.ctrlsService = beans.ctrlsService;\n    this.pivotResultColsService = beans.pivotResultColsService;\n    this.focusService = beans.focusService;\n    this.columnModel = beans.columnModel;\n    this.visibleColsService = beans.visibleColsService;\n    this.columnGroupStateService = beans.columnGroupStateService;\n    this.columnGetStateService = beans.columnGetStateService;\n    this.paginationService = beans.paginationService;\n    this.rowModel = beans.rowModel;\n    this.selectionService = beans.selectionService;\n    this.expansionService = beans.expansionService;\n    this.columnAnimationService = beans.columnAnimationService;\n    this.columnApplyStateService = beans.columnApplyStateService;\n    this.sideBarService = beans.sideBarService;\n    this.rangeService = beans.rangeService;\n  }\n  postConstruct() {\n    this.isClientSideRowModel = this.rowModel.getType() === \"clientSide\";\n    this.cachedState = this.gos.get(\"initialState\") ?? {};\n    this.ctrlsService.whenReady(() => this.suppressEventsAndDispatchInitEvent(() => this.setupStateOnGridReady()));\n    const [newColumnsLoadedDestroyFunc, rowCountReadyDestroyFunc, firstDataRenderedDestroyFunc] = this.addManagedEventListeners({\n      newColumnsLoaded: ({ source }) => {\n        if (source === \"gridInitializing\") {\n          newColumnsLoadedDestroyFunc();\n          this.suppressEventsAndDispatchInitEvent(() => this.setupStateOnColumnsInitialised());\n        }\n      },\n      rowCountReady: () => {\n        rowCountReadyDestroyFunc?.();\n        this.suppressEventsAndDispatchInitEvent(() => this.setupStateOnRowCountReady());\n      },\n      firstDataRendered: () => {\n        firstDataRenderedDestroyFunc?.();\n        this.suppressEventsAndDispatchInitEvent(() => this.setupStateOnFirstDataRendered());\n      }\n    });\n  }\n  getState() {\n    if (this.staleStateKeys.size) {\n      this.refreshStaleState();\n    }\n    return this.cachedState;\n  }\n  setupStateOnGridReady() {\n    this.updateCachedState(\"sideBar\", this.getSideBarState());\n    const stateUpdater = () => this.updateCachedState(\"sideBar\", this.getSideBarState());\n    this.addManagedEventListeners({\n      toolPanelVisibleChanged: stateUpdater,\n      sideBarUpdated: stateUpdater\n    });\n  }\n  setupStateOnColumnsInitialised() {\n    const initialState = this.gos.get(\"initialState\") ?? {};\n    this.setColumnState(initialState);\n    this.setColumnGroupState(initialState);\n    this.updateColumnState([\n      \"aggregation\",\n      \"columnOrder\",\n      \"columnPinning\",\n      \"columnSizing\",\n      \"columnVisibility\",\n      \"pivot\",\n      \"pivot\",\n      \"rowGroup\",\n      \"sort\"\n    ]);\n    this.updateCachedState(\"columnGroup\", this.getColumnGroupState());\n    const onUpdate = (state) => () => this.updateColumnState([state]);\n    this.addManagedEventListeners({\n      columnValueChanged: onUpdate(\"aggregation\"),\n      columnMoved: onUpdate(\"columnOrder\"),\n      columnPinned: onUpdate(\"columnPinning\"),\n      columnResized: onUpdate(\"columnSizing\"),\n      columnVisible: onUpdate(\"columnVisibility\"),\n      columnPivotChanged: onUpdate(\"pivot\"),\n      columnPivotModeChanged: onUpdate(\"pivot\"),\n      columnRowGroupChanged: onUpdate(\"rowGroup\"),\n      sortChanged: onUpdate(\"sort\"),\n      newColumnsLoaded: () => this.updateColumnState([\n        \"aggregation\",\n        \"columnOrder\",\n        \"columnPinning\",\n        \"columnSizing\",\n        \"columnVisibility\",\n        \"pivot\",\n        \"rowGroup\",\n        \"sort\"\n      ]),\n      columnGroupOpened: () => this.updateCachedState(\"columnGroup\", this.getColumnGroupState())\n    });\n  }\n  setupStateOnRowCountReady() {\n    const {\n      filter: filterState,\n      rowGroupExpansion: rowGroupExpansionState,\n      rowSelection: rowSelectionState,\n      pagination: paginationState\n    } = this.gos.get(\"initialState\") ?? {};\n    const advancedFilterModel = this.gos.get(\"advancedFilterModel\");\n    if (filterState || advancedFilterModel) {\n      this.setFilterState(filterState, advancedFilterModel);\n    }\n    if (rowGroupExpansionState) {\n      this.setRowGroupExpansionState(rowGroupExpansionState);\n    }\n    if (rowSelectionState) {\n      this.setRowSelectionState(rowSelectionState);\n    }\n    if (paginationState) {\n      this.setPaginationState(paginationState);\n    }\n    this.updateCachedState(\"filter\", this.getFilterState());\n    this.updateCachedState(\"rowGroupExpansion\", this.getRowGroupExpansionState());\n    this.updateCachedState(\"rowSelection\", this.getRowSelectionState());\n    this.updateCachedState(\"pagination\", this.getPaginationState());\n    const updateRowGroupExpansionState = () => this.updateCachedState(\"rowGroupExpansion\", this.getRowGroupExpansionState());\n    this.addManagedEventListeners({\n      filterChanged: () => this.updateCachedState(\"filter\", this.getFilterState()),\n      rowGroupOpened: () => this.onRowGroupOpenedDebounced(),\n      expandOrCollapseAll: updateRowGroupExpansionState,\n      // `groupDefaultExpanded` updates expansion state without an expansion event\n      columnRowGroupChanged: updateRowGroupExpansionState,\n      rowDataUpdated: () => {\n        if (this.gos.get(\"groupDefaultExpanded\") !== 0) {\n          setTimeout(() => {\n            updateRowGroupExpansionState();\n          });\n        }\n      },\n      selectionChanged: () => {\n        this.staleStateKeys.add(\"rowSelection\");\n        this.onRowSelectedDebounced();\n      },\n      paginationChanged: (event) => {\n        if (event.newPage || event.newPageSize) {\n          this.updateCachedState(\"pagination\", this.getPaginationState());\n        }\n      }\n    });\n  }\n  setupStateOnFirstDataRendered() {\n    const {\n      scroll: scrollState,\n      rangeSelection: rangeSelectionState,\n      focusedCell: focusedCellState,\n      columnOrder: columnOrderState\n    } = this.gos.get(\"initialState\") ?? {};\n    if (focusedCellState) {\n      this.setFocusedCellState(focusedCellState);\n    }\n    if (rangeSelectionState) {\n      this.setRangeSelectionState(rangeSelectionState);\n    }\n    if (scrollState) {\n      this.setScrollState(scrollState);\n    }\n    this.setColumnPivotState(!!columnOrderState?.orderedColIds);\n    this.updateCachedState(\"sideBar\", this.getSideBarState());\n    this.updateCachedState(\"focusedCell\", this.getFocusedCellState());\n    this.updateCachedState(\"rangeSelection\", this.getRangeSelectionState());\n    this.updateCachedState(\"scroll\", this.getScrollState());\n    this.addManagedEventListeners({\n      cellFocused: () => this.updateCachedState(\"focusedCell\", this.getFocusedCellState()),\n      rangeSelectionChanged: (event) => {\n        if (event.finished) {\n          this.updateCachedState(\"rangeSelection\", this.getRangeSelectionState());\n        }\n      },\n      bodyScrollEnd: () => this.updateCachedState(\"scroll\", this.getScrollState())\n    });\n  }\n  getColumnState() {\n    const pivotMode = this.columnModel.isPivotMode();\n    const sortColumns = [];\n    const groupColIds = [];\n    const aggregationColumns = [];\n    const pivotColIds = [];\n    const leftColIds = [];\n    const rightColIds = [];\n    const hiddenColIds = [];\n    const columnSizes = [];\n    const columns = [];\n    let defaultSortIndex = 0;\n    const columnState = this.columnGetStateService.getColumnState();\n    for (let i = 0; i < columnState.length; i++) {\n      const {\n        colId,\n        sort,\n        sortIndex,\n        rowGroup,\n        rowGroupIndex,\n        aggFunc,\n        pivot,\n        pivotIndex,\n        pinned,\n        hide,\n        width,\n        flex\n      } = columnState[i];\n      columns.push(colId);\n      if (sort) {\n        sortColumns[sortIndex ?? defaultSortIndex++] = { colId, sort };\n      }\n      if (rowGroup) {\n        groupColIds[rowGroupIndex ?? 0] = colId;\n      }\n      if (typeof aggFunc === \"string\") {\n        aggregationColumns.push({ colId, aggFunc });\n      }\n      if (pivot) {\n        pivotColIds[pivotIndex ?? 0] = colId;\n      }\n      if (pinned) {\n        (pinned === \"right\" ? rightColIds : leftColIds).push(colId);\n      }\n      if (hide) {\n        hiddenColIds.push(colId);\n      }\n      if (flex || width) {\n        columnSizes.push({ colId, flex: flex ?? void 0, width });\n      }\n    }\n    return {\n      sort: sortColumns.length ? { sortModel: sortColumns } : void 0,\n      rowGroup: groupColIds.length ? { groupColIds } : void 0,\n      aggregation: aggregationColumns.length ? { aggregationModel: aggregationColumns } : void 0,\n      pivot: pivotColIds.length || pivotMode ? { pivotMode, pivotColIds } : void 0,\n      columnPinning: leftColIds.length || rightColIds.length ? { leftColIds, rightColIds } : void 0,\n      columnVisibility: hiddenColIds.length ? { hiddenColIds } : void 0,\n      columnSizing: columnSizes.length ? { columnSizingModel: columnSizes } : void 0,\n      columnOrder: columns.length ? { orderedColIds: columns } : void 0\n    };\n  }\n  setColumnState(initialState) {\n    const {\n      sort: sortState,\n      rowGroup: groupState,\n      aggregation: aggregationState,\n      pivot: pivotState,\n      columnPinning: columnPinningState,\n      columnVisibility: columnVisibilityState,\n      columnSizing: columnSizingState,\n      columnOrder: columnOrderState\n    } = initialState;\n    const columnStateMap = {};\n    const getColumnState2 = (colId) => {\n      let columnState = columnStateMap[colId];\n      if (columnState) {\n        return columnState;\n      }\n      columnState = { colId };\n      columnStateMap[colId] = columnState;\n      return columnState;\n    };\n    if (sortState) {\n      sortState.sortModel.forEach(({ colId, sort }, sortIndex) => {\n        const columnState = getColumnState2(colId);\n        columnState.sort = sort;\n        columnState.sortIndex = sortIndex;\n      });\n    }\n    if (groupState) {\n      groupState.groupColIds.forEach((colId, rowGroupIndex) => {\n        const columnState = getColumnState2(colId);\n        columnState.rowGroup = true;\n        columnState.rowGroupIndex = rowGroupIndex;\n      });\n    }\n    if (aggregationState) {\n      aggregationState.aggregationModel.forEach(({ colId, aggFunc }) => {\n        getColumnState2(colId).aggFunc = aggFunc;\n      });\n    }\n    if (pivotState) {\n      pivotState.pivotColIds.forEach((colId, pivotIndex) => {\n        const columnState = getColumnState2(colId);\n        columnState.pivot = true;\n        columnState.pivotIndex = pivotIndex;\n      });\n      this.gos.updateGridOptions({\n        options: { pivotMode: pivotState.pivotMode },\n        source: \"gridInitializing\"\n      });\n    }\n    if (columnPinningState) {\n      columnPinningState.leftColIds.forEach((colId) => {\n        getColumnState2(colId).pinned = \"left\";\n      });\n      columnPinningState.rightColIds.forEach((colId) => {\n        getColumnState2(colId).pinned = \"right\";\n      });\n    }\n    if (columnVisibilityState) {\n      columnVisibilityState.hiddenColIds.forEach((colId) => {\n        getColumnState2(colId).hide = true;\n      });\n    }\n    if (columnSizingState) {\n      columnSizingState.columnSizingModel.forEach(({ colId, flex, width }) => {\n        const columnState = getColumnState2(colId);\n        columnState.flex = flex ?? null;\n        columnState.width = width;\n      });\n    }\n    const columns = columnOrderState?.orderedColIds;\n    const applyOrder = !!columns?.length;\n    const columnStates = applyOrder ? columns.map((colId) => getColumnState2(colId)) : Object.values(columnStateMap);\n    if (columnStates.length) {\n      this.columnStates = columnStates;\n      const defaultState = {\n        sort: null,\n        sortIndex: null,\n        rowGroup: null,\n        rowGroupIndex: null,\n        aggFunc: null,\n        pivot: null,\n        pivotIndex: null,\n        pinned: null,\n        hide: null,\n        flex: null\n      };\n      this.columnApplyStateService.applyColumnState(\n        {\n          state: columnStates,\n          applyOrder,\n          defaultState\n        },\n        \"gridInitializing\"\n      );\n    }\n  }\n  setColumnPivotState(applyOrder) {\n    const columnStates = this.columnStates;\n    this.columnStates = void 0;\n    const columnGroupStates = this.columnGroupStates;\n    this.columnGroupStates = void 0;\n    if (!this.pivotResultColsService.isPivotResultColsPresent()) {\n      return;\n    }\n    if (columnStates) {\n      const secondaryColumnStates = [];\n      for (const columnState of columnStates) {\n        if (this.pivotResultColsService.getPivotResultCol(columnState.colId)) {\n          secondaryColumnStates.push(columnState);\n        }\n      }\n      this.columnApplyStateService.applyColumnState(\n        {\n          state: secondaryColumnStates,\n          applyOrder\n        },\n        \"gridInitializing\"\n      );\n    }\n    if (columnGroupStates) {\n      this.columnGroupStateService.setColumnGroupState(columnGroupStates, \"gridInitializing\");\n    }\n  }\n  getColumnGroupState() {\n    const columnGroupState = this.columnGroupStateService.getColumnGroupState();\n    const openColumnGroups = [];\n    columnGroupState.forEach(({ groupId, open }) => {\n      if (open) {\n        openColumnGroups.push(groupId);\n      }\n    });\n    return openColumnGroups.length ? { openColumnGroupIds: openColumnGroups } : void 0;\n  }\n  setColumnGroupState(initialState) {\n    if (!Object.prototype.hasOwnProperty.call(initialState, \"columnGroup\")) {\n      return;\n    }\n    const openColumnGroups = new Set(initialState.columnGroup?.openColumnGroupIds);\n    const existingColumnGroupState = this.columnGroupStateService.getColumnGroupState();\n    const stateItems = existingColumnGroupState.map(({ groupId }) => {\n      const open = openColumnGroups.has(groupId);\n      if (open) {\n        openColumnGroups.delete(groupId);\n      }\n      return {\n        groupId,\n        open\n      };\n    });\n    openColumnGroups.forEach((groupId) => {\n      stateItems.push({\n        groupId,\n        open: true\n      });\n    });\n    if (stateItems.length) {\n      this.columnGroupStates = stateItems;\n    }\n    this.columnGroupStateService.setColumnGroupState(stateItems, \"gridInitializing\");\n  }\n  getFilterState() {\n    let filterModel = this.filterManager?.getFilterModel();\n    if (filterModel && Object.keys(filterModel).length === 0) {\n      filterModel = void 0;\n    }\n    const advancedFilterModel = this.filterManager?.getAdvancedFilterModel() ?? void 0;\n    return filterModel || advancedFilterModel ? { filterModel, advancedFilterModel } : void 0;\n  }\n  setFilterState(filterState, gridOptionAdvancedFilterModel) {\n    const { filterModel, advancedFilterModel } = filterState ?? {\n      advancedFilterModel: gridOptionAdvancedFilterModel\n    };\n    if (filterModel) {\n      this.filterManager?.setFilterModel(filterModel, \"columnFilter\");\n    }\n    if (advancedFilterModel) {\n      this.filterManager?.setAdvancedFilterModel(advancedFilterModel);\n    }\n  }\n  getRangeSelectionState() {\n    const cellRanges = this.rangeService?.getCellRanges().map((cellRange) => {\n      const { id, type, startRow, endRow, columns, startColumn } = cellRange;\n      return {\n        id,\n        type,\n        startRow,\n        endRow,\n        colIds: columns.map((column) => column.getColId()),\n        startColId: startColumn.getColId()\n      };\n    });\n    return cellRanges?.length ? { cellRanges } : void 0;\n  }\n  setRangeSelectionState(rangeSelectionState) {\n    if (!this.gos.get(\"enableRangeSelection\") || !this.rangeService) {\n      return;\n    }\n    const cellRanges = [];\n    rangeSelectionState.cellRanges.forEach((cellRange) => {\n      const columns = [];\n      cellRange.colIds.forEach((colId) => {\n        const column = this.columnModel.getCol(colId);\n        if (column) {\n          columns.push(column);\n        }\n      });\n      if (!columns.length) {\n        return;\n      }\n      let startColumn = this.columnModel.getCol(cellRange.startColId);\n      if (!startColumn) {\n        const allColumns = this.visibleColsService.getAllCols();\n        const columnSet = new Set(columns);\n        startColumn = allColumns.find((column) => columnSet.has(column));\n      }\n      cellRanges.push({\n        ...cellRange,\n        columns,\n        startColumn\n      });\n    });\n    this.rangeService.setCellRanges(cellRanges);\n  }\n  getScrollState() {\n    if (!this.isClientSideRowModel) {\n      return void 0;\n    }\n    const scrollFeature = this.ctrlsService.getGridBodyCtrl()?.getScrollFeature();\n    const { left } = scrollFeature?.getHScrollPosition() ?? { left: 0 };\n    const { top } = scrollFeature?.getVScrollPosition() ?? { top: 0 };\n    return top || left ? {\n      top,\n      left\n    } : void 0;\n  }\n  setScrollState(scrollState) {\n    if (!this.isClientSideRowModel) {\n      return;\n    }\n    const { top, left } = scrollState;\n    this.ctrlsService.getGridBodyCtrl()?.getScrollFeature().setScrollPosition(top, left);\n  }\n  getSideBarState() {\n    return this.sideBarService?.getSideBarComp()?.getState();\n  }\n  getFocusedCellState() {\n    if (!this.isClientSideRowModel) {\n      return void 0;\n    }\n    const focusedCell = this.focusService.getFocusedCell();\n    if (focusedCell) {\n      const { column, rowIndex, rowPinned } = focusedCell;\n      return {\n        colId: column.getColId(),\n        rowIndex,\n        rowPinned\n      };\n    }\n    return void 0;\n  }\n  setFocusedCellState(focusedCellState) {\n    if (!this.isClientSideRowModel) {\n      return;\n    }\n    const { colId, rowIndex, rowPinned } = focusedCellState;\n    this.focusService.setFocusedCell({\n      column: this.columnModel.getCol(colId),\n      rowIndex,\n      rowPinned,\n      forceBrowserFocus: true,\n      preventScrollOnBrowserFocus: true\n    });\n  }\n  getPaginationState() {\n    if (!this.paginationService) {\n      return void 0;\n    }\n    const page = this.paginationService.getCurrentPage();\n    const pageSize = !this.gos.get(\"paginationAutoPageSize\") ? this.paginationService.getPageSize() : void 0;\n    if (!page && !pageSize) {\n      return;\n    }\n    return { page, pageSize };\n  }\n  setPaginationState(paginationState) {\n    if (!this.paginationService) {\n      return;\n    }\n    if (paginationState.pageSize && !this.gos.get(\"paginationAutoPageSize\")) {\n      this.paginationService.setPageSize(paginationState.pageSize, \"initialState\");\n    }\n    if (typeof paginationState.page === \"number\") {\n      this.paginationService.setPage(paginationState.page);\n    }\n  }\n  getRowSelectionState() {\n    const selectionState = this.selectionService.getSelectionState();\n    const noSelections = !selectionState || !Array.isArray(selectionState) && (selectionState.selectAll === false || selectionState.selectAllChildren === false) && !selectionState?.toggledNodes?.length;\n    return noSelections ? void 0 : selectionState;\n  }\n  setRowSelectionState(rowSelectionState) {\n    this.selectionService.setSelectionState(rowSelectionState, \"gridInitializing\");\n  }\n  getRowGroupExpansionState() {\n    const expandedRowGroups = this.expansionService.getExpandedRows();\n    return expandedRowGroups.length ? {\n      expandedRowGroupIds: expandedRowGroups\n    } : void 0;\n  }\n  setRowGroupExpansionState(rowGroupExpansionState) {\n    this.expansionService.expandRows(rowGroupExpansionState.expandedRowGroupIds);\n  }\n  updateColumnState(features) {\n    const newColumnState = this.getColumnState();\n    let hasChanged = false;\n    Object.entries(newColumnState).forEach(([key, value]) => {\n      if (!_jsonEquals(value, this.cachedState[key])) {\n        hasChanged = true;\n      }\n    });\n    this.cachedState = {\n      ...this.cachedState,\n      ...newColumnState\n    };\n    if (hasChanged) {\n      this.dispatchStateUpdateEvent(features);\n    }\n  }\n  updateCachedState(key, value) {\n    const existingValue = this.cachedState[key];\n    this.setCachedStateValue(key, value);\n    if (!_jsonEquals(value, existingValue)) {\n      this.dispatchStateUpdateEvent([key]);\n    }\n  }\n  setCachedStateValue(key, value) {\n    this.cachedState = {\n      ...this.cachedState,\n      [key]: value\n    };\n  }\n  refreshStaleState() {\n    this.staleStateKeys.forEach((key) => {\n      switch (key) {\n        case \"rowSelection\":\n          this.setCachedStateValue(key, this.getRowSelectionState());\n          break;\n      }\n    });\n    this.staleStateKeys.clear();\n  }\n  dispatchStateUpdateEvent(sources) {\n    if (this.suppressEvents) {\n      return;\n    }\n    sources.forEach((source) => this.queuedUpdateSources.add(source));\n    this.dispatchStateUpdateEventDebounced();\n  }\n  dispatchQueuedStateUpdateEvents() {\n    const sources = Array.from(this.queuedUpdateSources);\n    this.queuedUpdateSources.clear();\n    this.eventService.dispatchEvent({\n      type: \"stateUpdated\",\n      sources,\n      state: this.cachedState\n    });\n  }\n  suppressEventsAndDispatchInitEvent(updateFunc) {\n    this.suppressEvents = true;\n    this.columnAnimationService.setSuppressAnimation(true);\n    updateFunc();\n    setTimeout(() => {\n      this.suppressEvents = false;\n      this.queuedUpdateSources.clear();\n      if (!this.isAlive()) {\n        return;\n      }\n      this.columnAnimationService.setSuppressAnimation(false);\n      this.dispatchStateUpdateEvent([\"gridInitializing\"]);\n    });\n  }\n};\n\n// community-modules/core/src/misc/state/stateModule.ts\nvar StateCoreModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/state-core\",\n  beans: [StateService]\n});\nvar StateApiModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/state-api\",\n  apiFunctions: {\n    getState\n  },\n  dependantModules: [StateCoreModule]\n});\nvar StateModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/state\",\n  dependantModules: [StateCoreModule, StateApiModule]\n});\n\n// community-modules/core/src/pagination/paginationApi.ts\nfunction paginationIsLastPageFound(beans) {\n  return beans.rowModel.isLastRowIndexKnown();\n}\nfunction paginationGetPageSize(beans) {\n  return beans.paginationService?.getPageSize() ?? 100;\n}\nfunction paginationGetCurrentPage(beans) {\n  return beans.paginationService?.getCurrentPage() ?? 0;\n}\nfunction paginationGetTotalPages(beans) {\n  return beans.paginationService?.getTotalPages() ?? 1;\n}\nfunction paginationGetRowCount(beans) {\n  return beans.paginationService ? beans.paginationService.getMasterRowCount() : beans.rowModel.getRowCount();\n}\nfunction paginationGoToNextPage(beans) {\n  beans.paginationService?.goToNextPage();\n}\nfunction paginationGoToPreviousPage(beans) {\n  beans.paginationService?.goToPreviousPage();\n}\nfunction paginationGoToFirstPage(beans) {\n  beans.paginationService?.goToFirstPage();\n}\nfunction paginationGoToLastPage(beans) {\n  beans.paginationService?.goToLastPage();\n}\nfunction paginationGoToPage(beans, page) {\n  beans.paginationService?.goToPage(page);\n}\n\n// community-modules/core/src/pagination/paginationAutoPageSizeService.ts\nvar PaginationAutoPageSizeService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"paginationAutoPageSizeService\";\n  }\n  wireBeans(beans) {\n    this.ctrlsService = beans.ctrlsService;\n    this.paginationService = beans.paginationService;\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady((p) => {\n      this.centerRowsCtrl = p.center;\n      const listener = this.checkPageSize.bind(this);\n      this.addManagedEventListeners({\n        bodyHeightChanged: listener,\n        scrollVisibilityChanged: listener\n      });\n      this.addManagedPropertyListener(\"paginationAutoPageSize\", this.onPaginationAutoSizeChanged.bind(this));\n      this.checkPageSize();\n    });\n  }\n  notActive() {\n    return !this.gos.get(\"paginationAutoPageSize\") || this.centerRowsCtrl == null;\n  }\n  onPaginationAutoSizeChanged() {\n    if (this.notActive()) {\n      this.paginationService.unsetAutoCalculatedPageSize();\n    } else {\n      this.checkPageSize();\n    }\n  }\n  checkPageSize() {\n    if (this.notActive()) {\n      return;\n    }\n    const bodyHeight = this.centerRowsCtrl.getViewportSizeFeature().getBodyHeight();\n    if (bodyHeight > 0) {\n      const update = () => {\n        const rowHeight = Math.max(this.gos.getRowHeightAsNumber(), 1);\n        const newPageSize = Math.floor(bodyHeight / rowHeight);\n        this.paginationService.setPageSize(newPageSize, \"autoCalculated\");\n      };\n      if (!this.isBodyRendered) {\n        update();\n        this.isBodyRendered = true;\n      } else {\n        _debounce(() => update(), 50)();\n      }\n    } else {\n      this.isBodyRendered = false;\n    }\n  }\n};\n\n// community-modules/core/src/utils/focus.ts\nfunction _addFocusableContainerListener(comp, eGui, focusService) {\n  comp.addManagedElementListeners(eGui, {\n    keydown: (e) => {\n      if (!e.defaultPrevented && e.key === KeyCode.TAB) {\n        const backwards = e.shiftKey;\n        if (!focusService.findNextFocusableElement(eGui, false, backwards)) {\n          if (focusService.focusNextGridCoreContainer(backwards)) {\n            e.preventDefault();\n          }\n        }\n      }\n    }\n  });\n}\n\n// community-modules/core/src/pagination/pageSizeSelector/pageSizeSelectorComp.ts\nvar PageSizeSelectorComp = class extends Component {\n  constructor() {\n    super(\n      /* html */\n      `<span class=\"ag-paging-page-size\"></span>`\n    );\n    this.hasEmptyOption = false;\n    this.handlePageSizeItemSelected = () => {\n      if (!this.selectPageSizeComp) {\n        return;\n      }\n      const newValue = this.selectPageSizeComp.getValue();\n      if (!newValue) {\n        return;\n      }\n      const paginationPageSize = Number(newValue);\n      if (isNaN(paginationPageSize) || paginationPageSize < 1 || paginationPageSize === this.paginationService.getPageSize()) {\n        return;\n      }\n      this.paginationService.setPageSize(paginationPageSize, \"pageSizeSelector\");\n      if (this.hasEmptyOption) {\n        this.toggleSelectDisplay(true);\n      }\n      this.selectPageSizeComp.getFocusableElement().focus();\n    };\n  }\n  wireBeans(beans) {\n    this.paginationService = beans.paginationService;\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(\"paginationPageSizeSelector\", () => {\n      this.onPageSizeSelectorValuesChange();\n    });\n    this.addManagedEventListeners({ paginationChanged: (event) => this.handlePaginationChanged(event) });\n  }\n  handlePaginationChanged(paginationChangedEvent) {\n    if (!this.selectPageSizeComp || !paginationChangedEvent?.newPageSize) {\n      return;\n    }\n    const paginationPageSize = this.paginationService.getPageSize();\n    if (this.getPageSizeSelectorValues().includes(paginationPageSize)) {\n      this.selectPageSizeComp.setValue(paginationPageSize.toString());\n    } else {\n      if (this.hasEmptyOption) {\n        this.selectPageSizeComp.setValue(\"\");\n      } else {\n        this.toggleSelectDisplay(true);\n      }\n    }\n  }\n  toggleSelectDisplay(show) {\n    if (this.selectPageSizeComp) {\n      this.reset();\n    }\n    if (!show) {\n      return;\n    }\n    this.reloadPageSizesSelector();\n    if (!this.selectPageSizeComp) {\n      return;\n    }\n    this.appendChild(this.selectPageSizeComp);\n  }\n  reset() {\n    _clearElement(this.getGui());\n    if (!this.selectPageSizeComp) {\n      return;\n    }\n    this.selectPageSizeComp = this.destroyBean(this.selectPageSizeComp);\n  }\n  onPageSizeSelectorValuesChange() {\n    if (!this.selectPageSizeComp) {\n      return;\n    }\n    if (this.shouldShowPageSizeSelector()) {\n      this.reloadPageSizesSelector();\n    }\n  }\n  shouldShowPageSizeSelector() {\n    return this.gos.get(\"pagination\") && !this.gos.get(\"suppressPaginationPanel\") && !this.gos.get(\"paginationAutoPageSize\") && this.gos.get(\"paginationPageSizeSelector\") !== false;\n  }\n  reloadPageSizesSelector() {\n    const pageSizeOptions = this.getPageSizeSelectorValues();\n    const paginationPageSizeOption = this.paginationService.getPageSize();\n    const shouldAddAndSelectEmptyOption = !paginationPageSizeOption || !pageSizeOptions.includes(paginationPageSizeOption);\n    if (shouldAddAndSelectEmptyOption) {\n      pageSizeOptions.unshift(\"\");\n      _warnOnce(\n        `The paginationPageSize grid option is set to a value that is not in the list of page size options.\n                Please make sure that the paginationPageSize grid option is set to one of the values in the \n                paginationPageSizeSelector array, or set the paginationPageSizeSelector to false to hide the page size selector.`\n      );\n    }\n    if (this.selectPageSizeComp) {\n      this.selectPageSizeComp = this.destroyBean(this.selectPageSizeComp);\n    }\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    const localisedLabel = localeTextFunc(\"pageSizeSelectorLabel\", \"Page Size:\");\n    const options = pageSizeOptions.map((value) => ({\n      value: String(value),\n      text: String(value)\n    }));\n    const localisedAriaLabel = localeTextFunc(\"ariaPageSizeSelectorLabel\", \"Page Size\");\n    this.selectPageSizeComp = this.createManagedBean(new AgSelect()).addOptions(options).setValue(String(shouldAddAndSelectEmptyOption ? \"\" : paginationPageSizeOption)).setAriaLabel(localisedAriaLabel).setLabel(localisedLabel).onValueChange(() => this.handlePageSizeItemSelected());\n    this.hasEmptyOption = shouldAddAndSelectEmptyOption;\n  }\n  getPageSizeSelectorValues() {\n    const defaultValues = [20, 50, 100];\n    const paginationPageSizeSelectorValues = this.gos.get(\"paginationPageSizeSelector\");\n    if (!Array.isArray(paginationPageSizeSelectorValues) || !this.validateValues(paginationPageSizeSelectorValues)) {\n      return defaultValues;\n    }\n    return [...paginationPageSizeSelectorValues].sort((a, b) => a - b);\n  }\n  validateValues(values) {\n    if (!values.length) {\n      _warnOnce(\n        `The paginationPageSizeSelector grid option is an empty array. This is most likely a mistake.\n                If you want to hide the page size selector, please set the paginationPageSizeSelector to false.`\n      );\n      return false;\n    }\n    for (let i = 0; i < values.length; i++) {\n      const value = values[i];\n      const isNumber = typeof value === \"number\";\n      const isPositive = value > 0;\n      if (!isNumber) {\n        _warnOnce(\n          `The paginationPageSizeSelector grid option contains a non-numeric value.\n                    Please make sure that all values in the paginationPageSizeSelector array are numbers.`\n        );\n        return false;\n      }\n      if (!isPositive) {\n        _warnOnce(\n          `The paginationPageSizeSelector grid option contains a negative number or zero.\n                    Please make sure that all values in the paginationPageSizeSelector array are positive.`\n        );\n        return false;\n      }\n    }\n    return true;\n  }\n  destroy() {\n    this.toggleSelectDisplay(false);\n    super.destroy();\n  }\n};\nvar PageSizeSelectorSelector = {\n  selector: \"AG-PAGE-SIZE-SELECTOR\",\n  component: PageSizeSelectorComp\n};\n\n// community-modules/core/src/pagination/paginationComp.ts\nvar PaginationComp = class extends TabGuardComp {\n  constructor() {\n    super();\n    this.btFirst = RefPlaceholder;\n    this.btPrevious = RefPlaceholder;\n    this.btNext = RefPlaceholder;\n    this.btLast = RefPlaceholder;\n    this.lbRecordCount = RefPlaceholder;\n    this.lbFirstRowOnPage = RefPlaceholder;\n    this.lbLastRowOnPage = RefPlaceholder;\n    this.lbCurrent = RefPlaceholder;\n    this.lbTotal = RefPlaceholder;\n    this.pageSizeComp = RefPlaceholder;\n    this.previousAndFirstButtonsDisabled = false;\n    this.nextButtonDisabled = false;\n    this.lastButtonDisabled = false;\n    this.areListenersSetup = false;\n    this.allowFocusInnerElement = false;\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n    this.paginationService = beans.paginationService;\n    this.focusService = beans.focusService;\n    this.ariaAnnouncementService = beans.ariaAnnouncementService;\n  }\n  postConstruct() {\n    const isRtl = this.gos.get(\"enableRtl\");\n    this.setTemplate(this.getTemplate(), [PageSizeSelectorSelector]);\n    const { btFirst, btPrevious, btNext, btLast } = this;\n    this.activateTabIndex([btFirst, btPrevious, btNext, btLast]);\n    btFirst.insertAdjacentElement(\"afterbegin\", _createIconNoSpan(isRtl ? \"last\" : \"first\", this.gos));\n    btPrevious.insertAdjacentElement(\"afterbegin\", _createIconNoSpan(isRtl ? \"next\" : \"previous\", this.gos));\n    btNext.insertAdjacentElement(\"afterbegin\", _createIconNoSpan(isRtl ? \"previous\" : \"next\", this.gos));\n    btLast.insertAdjacentElement(\"afterbegin\", _createIconNoSpan(isRtl ? \"first\" : \"last\", this.gos));\n    this.addManagedPropertyListener(\"pagination\", this.onPaginationChanged.bind(this));\n    this.addManagedPropertyListener(\"suppressPaginationPanel\", this.onPaginationChanged.bind(this));\n    this.addManagedPropertyListeners(\n      [\"paginationPageSizeSelector\", \"paginationAutoPageSize\", \"suppressPaginationPanel\"],\n      () => this.onPageSizeRelatedOptionsChange()\n    );\n    this.pageSizeComp.toggleSelectDisplay(this.pageSizeComp.shouldShowPageSizeSelector());\n    this.initialiseTabGuard({\n      // prevent tab guard default logic\n      onTabKeyDown: () => {\n      },\n      focusInnerElement: (fromBottom) => {\n        if (this.allowFocusInnerElement) {\n          this.tabGuardFeature.getTabGuardCtrl().focusInnerElement(fromBottom);\n        } else {\n          this.focusService.focusGridInnerElement(fromBottom);\n        }\n      },\n      forceFocusOutWhenTabGuardsAreEmpty: true\n    });\n    this.onPaginationChanged();\n  }\n  setAllowFocus(allowFocus) {\n    this.allowFocusInnerElement = allowFocus;\n  }\n  onPaginationChanged() {\n    const isPaging = this.gos.get(\"pagination\");\n    const paginationPanelEnabled = isPaging && !this.gos.get(\"suppressPaginationPanel\");\n    this.setDisplayed(paginationPanelEnabled);\n    if (!paginationPanelEnabled) {\n      return;\n    }\n    this.setupListeners();\n    this.enableOrDisableButtons();\n    this.updateLabels();\n    this.onPageSizeRelatedOptionsChange();\n  }\n  onPageSizeRelatedOptionsChange() {\n    this.pageSizeComp.toggleSelectDisplay(this.pageSizeComp.shouldShowPageSizeSelector());\n  }\n  setupListeners() {\n    if (!this.areListenersSetup) {\n      this.addManagedEventListeners({ paginationChanged: this.onPaginationChanged.bind(this) });\n      [\n        { el: this.btFirst, fn: this.onBtFirst.bind(this) },\n        { el: this.btPrevious, fn: this.onBtPrevious.bind(this) },\n        { el: this.btNext, fn: this.onBtNext.bind(this) },\n        { el: this.btLast, fn: this.onBtLast.bind(this) }\n      ].forEach((item) => {\n        const { el, fn } = item;\n        this.addManagedListeners(el, {\n          click: fn,\n          keydown: (e) => {\n            if (e.key === KeyCode.ENTER || e.key === KeyCode.SPACE) {\n              e.preventDefault();\n              fn();\n            }\n          }\n        });\n      });\n      _addFocusableContainerListener(this, this.getGui(), this.focusService);\n      this.areListenersSetup = true;\n    }\n  }\n  onBtFirst() {\n    if (!this.previousAndFirstButtonsDisabled) {\n      this.paginationService.goToFirstPage();\n    }\n  }\n  formatNumber(value) {\n    const userFunc = this.gos.getCallback(\"paginationNumberFormatter\");\n    if (userFunc) {\n      const params = { value };\n      return userFunc(params);\n    }\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    const thousandSeparator = localeTextFunc(\"thousandSeparator\", \",\");\n    const decimalSeparator = localeTextFunc(\"decimalSeparator\", \".\");\n    return _formatNumberCommas(value, thousandSeparator, decimalSeparator);\n  }\n  getTemplate() {\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    const strPage = localeTextFunc(\"page\", \"Page\");\n    const strTo = localeTextFunc(\"to\", \"to\");\n    const strOf = localeTextFunc(\"of\", \"of\");\n    const strFirst = localeTextFunc(\"firstPage\", \"First Page\");\n    const strPrevious = localeTextFunc(\"previousPage\", \"Previous Page\");\n    const strNext = localeTextFunc(\"nextPage\", \"Next Page\");\n    const strLast = localeTextFunc(\"lastPage\", \"Last Page\");\n    const compId = this.getCompId();\n    return (\n      /* html */\n      `<div class=\"ag-paging-panel ag-unselectable\" id=\"ag-${compId}\">\n                <ag-page-size-selector data-ref=\"pageSizeComp\"></ag-page-size-selector>\n                <span class=\"ag-paging-row-summary-panel\">\n                    <span id=\"ag-${compId}-first-row\" data-ref=\"lbFirstRowOnPage\" class=\"ag-paging-row-summary-panel-number\"></span>\n                    <span id=\"ag-${compId}-to\">${strTo}</span>\n                    <span id=\"ag-${compId}-last-row\" data-ref=\"lbLastRowOnPage\" class=\"ag-paging-row-summary-panel-number\"></span>\n                    <span id=\"ag-${compId}-of\">${strOf}</span>\n                    <span id=\"ag-${compId}-row-count\" data-ref=\"lbRecordCount\" class=\"ag-paging-row-summary-panel-number\"></span>\n                </span>\n                <span class=\"ag-paging-page-summary-panel\" role=\"presentation\">\n                    <div data-ref=\"btFirst\" class=\"ag-button ag-paging-button\" role=\"button\" aria-label=\"${strFirst}\"></div>\n                    <div data-ref=\"btPrevious\" class=\"ag-button ag-paging-button\" role=\"button\" aria-label=\"${strPrevious}\"></div>\n                    <span class=\"ag-paging-description\">\n                        <span id=\"ag-${compId}-start-page\">${strPage}</span>\n                        <span id=\"ag-${compId}-start-page-number\" data-ref=\"lbCurrent\" class=\"ag-paging-number\"></span>\n                        <span id=\"ag-${compId}-of-page\">${strOf}</span>\n                        <span id=\"ag-${compId}-of-page-number\" data-ref=\"lbTotal\" class=\"ag-paging-number\"></span>\n                    </span>\n                    <div data-ref=\"btNext\" class=\"ag-button ag-paging-button\" role=\"button\" aria-label=\"${strNext}\"></div>\n                    <div data-ref=\"btLast\" class=\"ag-button ag-paging-button\" role=\"button\" aria-label=\"${strLast}\"></div>\n                </span>\n            </div>`\n    );\n  }\n  onBtNext() {\n    if (!this.nextButtonDisabled) {\n      this.paginationService.goToNextPage();\n    }\n  }\n  onBtPrevious() {\n    if (!this.previousAndFirstButtonsDisabled) {\n      this.paginationService.goToPreviousPage();\n    }\n  }\n  onBtLast() {\n    if (!this.lastButtonDisabled) {\n      this.paginationService.goToLastPage();\n    }\n  }\n  enableOrDisableButtons() {\n    const currentPage = this.paginationService.getCurrentPage();\n    const maxRowFound = this.rowModel.isLastRowIndexKnown();\n    const totalPages = this.paginationService.getTotalPages();\n    this.previousAndFirstButtonsDisabled = currentPage === 0;\n    this.toggleButtonDisabled(this.btFirst, this.previousAndFirstButtonsDisabled);\n    this.toggleButtonDisabled(this.btPrevious, this.previousAndFirstButtonsDisabled);\n    const zeroPagesToDisplay = this.isZeroPagesToDisplay();\n    const onLastPage = currentPage === totalPages - 1;\n    this.nextButtonDisabled = onLastPage || zeroPagesToDisplay;\n    this.lastButtonDisabled = !maxRowFound || zeroPagesToDisplay || currentPage === totalPages - 1;\n    this.toggleButtonDisabled(this.btNext, this.nextButtonDisabled);\n    this.toggleButtonDisabled(this.btLast, this.lastButtonDisabled);\n  }\n  toggleButtonDisabled(button, disabled) {\n    _setAriaDisabled(button, disabled);\n    button.classList.toggle(\"ag-disabled\", disabled);\n  }\n  isZeroPagesToDisplay() {\n    const maxRowFound = this.rowModel.isLastRowIndexKnown();\n    const totalPages = this.paginationService.getTotalPages();\n    return maxRowFound && totalPages === 0;\n  }\n  updateLabels() {\n    const lastPageFound = this.rowModel.isLastRowIndexKnown();\n    const totalPages = this.paginationService.getTotalPages();\n    const masterRowCount = this.paginationService.getMasterRowCount();\n    const rowCount = lastPageFound ? masterRowCount : null;\n    if (rowCount === 1) {\n      const firstRow = this.rowModel.getRow(0);\n      const hiddenGroupRow = firstRow && firstRow.group && !(firstRow.groupData || firstRow.aggData);\n      if (hiddenGroupRow) {\n        this.setTotalLabelsToZero();\n        return;\n      }\n    }\n    const currentPage = this.paginationService.getCurrentPage();\n    const pageSize = this.paginationService.getPageSize();\n    let startRow;\n    let endRow;\n    if (this.isZeroPagesToDisplay()) {\n      startRow = endRow = 0;\n    } else {\n      startRow = pageSize * currentPage + 1;\n      endRow = startRow + pageSize - 1;\n      if (lastPageFound && endRow > rowCount) {\n        endRow = rowCount;\n      }\n    }\n    const theoreticalEndRow = startRow + pageSize - 1;\n    const isLoadingPageSize = !lastPageFound && masterRowCount < theoreticalEndRow;\n    const lbFirstRowOnPage = this.formatNumber(startRow);\n    this.lbFirstRowOnPage.textContent = lbFirstRowOnPage;\n    let lbLastRowOnPage;\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    if (isLoadingPageSize) {\n      lbLastRowOnPage = localeTextFunc(\"pageLastRowUnknown\", \"?\");\n    } else {\n      lbLastRowOnPage = this.formatNumber(endRow);\n    }\n    this.lbLastRowOnPage.textContent = lbLastRowOnPage;\n    const pagesExist = totalPages > 0;\n    const toDisplay = pagesExist ? currentPage + 1 : 0;\n    const lbCurrent = this.formatNumber(toDisplay);\n    this.lbCurrent.textContent = lbCurrent;\n    let lbTotal;\n    let lbRecordCount;\n    if (lastPageFound) {\n      lbTotal = this.formatNumber(totalPages);\n      lbRecordCount = this.formatNumber(rowCount);\n    } else {\n      const moreText = localeTextFunc(\"more\", \"more\");\n      lbTotal = moreText;\n      lbRecordCount = moreText;\n    }\n    this.lbTotal.textContent = lbTotal;\n    this.lbRecordCount.textContent = lbRecordCount;\n    this.announceAriaStatus(lbFirstRowOnPage, lbLastRowOnPage, lbRecordCount, lbCurrent, lbTotal);\n  }\n  announceAriaStatus(lbFirstRowOnPage, lbLastRowOnPage, lbRecordCount, lbCurrent, lbTotal) {\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    const strPage = localeTextFunc(\"page\", \"Page\");\n    const strTo = localeTextFunc(\"to\", \"to\");\n    const strOf = localeTextFunc(\"of\", \"of\");\n    const ariaRowStatus = `${lbFirstRowOnPage} ${strTo} ${lbLastRowOnPage} ${strOf} ${lbRecordCount}`;\n    const ariaPageStatus = `${strPage} ${lbCurrent} ${strOf} ${lbTotal}`;\n    if (ariaRowStatus !== this.ariaRowStatus) {\n      this.ariaRowStatus = ariaRowStatus;\n      this.ariaAnnouncementService.announceValue(ariaRowStatus, \"paginationRow\");\n    }\n    if (ariaPageStatus !== this.ariaPageStatus) {\n      this.ariaPageStatus = ariaPageStatus;\n      this.ariaAnnouncementService.announceValue(ariaPageStatus, \"paginationPage\");\n    }\n  }\n  setTotalLabelsToZero() {\n    const strZero = this.formatNumber(0);\n    this.lbFirstRowOnPage.textContent = strZero;\n    this.lbCurrent.textContent = strZero;\n    this.lbLastRowOnPage.textContent = strZero;\n    this.lbTotal.textContent = strZero;\n    this.lbRecordCount.textContent = strZero;\n    this.announceAriaStatus(strZero, strZero, strZero, strZero, strZero);\n  }\n};\nvar PaginationSelector = {\n  selector: \"AG-PAGINATION\",\n  component: PaginationComp\n};\n\n// community-modules/core/src/pagination/paginationService.ts\nvar PaginationService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"paginationService\";\n    this.currentPage = 0;\n    this.topDisplayedRowIndex = 0;\n    this.bottomDisplayedRowIndex = 0;\n    this.masterRowCount = 0;\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n    this.pageBoundsService = beans.pageBoundsService;\n  }\n  postConstruct() {\n    this.active = this.gos.get(\"pagination\");\n    this.pageSizeFromGridOptions = this.gos.get(\"paginationPageSize\");\n    this.paginateChildRows = this.isPaginateChildRows();\n    this.addManagedPropertyListener(\"pagination\", this.onPaginationGridOptionChanged.bind(this));\n    this.addManagedPropertyListener(\"paginationPageSize\", this.onPageSizeGridOptionChanged.bind(this));\n  }\n  getPaginationSelector() {\n    return PaginationSelector;\n  }\n  isPaginateChildRows() {\n    const shouldPaginate = this.gos.get(\"groupRemoveSingleChildren\") || this.gos.get(\"groupRemoveLowestSingleChildren\");\n    if (shouldPaginate) {\n      return true;\n    }\n    return this.gos.get(\"paginateChildRows\");\n  }\n  onPaginationGridOptionChanged() {\n    this.active = this.gos.get(\"pagination\");\n    this.calculatePages();\n    this.dispatchPaginationChangedEvent({ keepRenderedRows: true });\n  }\n  onPageSizeGridOptionChanged() {\n    this.setPageSize(this.gos.get(\"paginationPageSize\"), \"gridOptions\");\n  }\n  goToPage(page) {\n    if (!this.active || this.currentPage === page || typeof this.currentPage !== \"number\") {\n      return;\n    }\n    this.currentPage = page;\n    this.calculatePages();\n    this.dispatchPaginationChangedEvent({ newPage: true });\n  }\n  isRowPresent(rowNode) {\n    const nodeIsInPage = rowNode.rowIndex >= this.topDisplayedRowIndex && rowNode.rowIndex <= this.bottomDisplayedRowIndex;\n    return nodeIsInPage;\n  }\n  getPageForIndex(index) {\n    return Math.floor(index / this.pageSize);\n  }\n  goToPageWithIndex(index) {\n    if (!this.active) {\n      return;\n    }\n    const pageNumber = this.getPageForIndex(index);\n    this.goToPage(pageNumber);\n  }\n  isRowInPage(row) {\n    if (!this.active) {\n      return true;\n    }\n    const rowPage = this.getPageForIndex(row.rowIndex);\n    return rowPage === this.currentPage;\n  }\n  getCurrentPage() {\n    return this.currentPage;\n  }\n  goToNextPage() {\n    this.goToPage(this.currentPage + 1);\n  }\n  goToPreviousPage() {\n    this.goToPage(this.currentPage - 1);\n  }\n  goToFirstPage() {\n    this.goToPage(0);\n  }\n  goToLastPage() {\n    const rowCount = this.rowModel.getRowCount();\n    const lastPage = Math.floor(rowCount / this.pageSize);\n    this.goToPage(lastPage);\n  }\n  getPageSize() {\n    return this.pageSize;\n  }\n  getTotalPages() {\n    return this.totalPages;\n  }\n  /** This is only for state setting before data has been loaded */\n  setPage(page) {\n    this.currentPage = page;\n  }\n  get pageSize() {\n    if (_exists(this.pageSizeAutoCalculated)) {\n      return this.pageSizeAutoCalculated;\n    }\n    if (_exists(this.pageSizeFromPageSizeSelector)) {\n      return this.pageSizeFromPageSizeSelector;\n    }\n    if (_exists(this.pageSizeFromInitialState)) {\n      return this.pageSizeFromInitialState;\n    }\n    if (_exists(this.pageSizeFromGridOptions)) {\n      return this.pageSizeFromGridOptions;\n    }\n    return this.defaultPageSize;\n  }\n  calculatePages() {\n    if (this.active) {\n      if (this.paginateChildRows) {\n        this.calculatePagesAllRows();\n      } else {\n        this.calculatePagesMasterRowsOnly();\n      }\n    } else {\n      this.calculatedPagesNotActive();\n    }\n    this.pageBoundsService.calculateBounds(this.topDisplayedRowIndex, this.bottomDisplayedRowIndex);\n  }\n  unsetAutoCalculatedPageSize() {\n    if (this.pageSizeAutoCalculated === void 0) {\n      return;\n    }\n    const oldPageSize = this.pageSizeAutoCalculated;\n    this.pageSizeAutoCalculated = void 0;\n    if (this.pageSize === oldPageSize) {\n      return;\n    }\n    this.calculatePages();\n    this.dispatchPaginationChangedEvent({ newPageSize: true });\n  }\n  setPageSize(size, source) {\n    const currentSize = this.pageSize;\n    switch (source) {\n      case \"autoCalculated\":\n        this.pageSizeAutoCalculated = size;\n        break;\n      case \"pageSizeSelector\":\n        this.pageSizeFromPageSizeSelector = size;\n        if (this.currentPage !== 0) {\n          this.goToFirstPage();\n        }\n        break;\n      case \"initialState\":\n        this.pageSizeFromInitialState = size;\n        break;\n      case \"gridOptions\":\n        this.pageSizeFromGridOptions = size;\n        this.pageSizeFromInitialState = void 0;\n        this.pageSizeFromPageSizeSelector = void 0;\n        if (this.currentPage !== 0) {\n          this.goToFirstPage();\n        }\n        break;\n    }\n    if (currentSize !== this.pageSize) {\n      this.calculatePages();\n      this.dispatchPaginationChangedEvent({ newPageSize: true, keepRenderedRows: true });\n    }\n  }\n  setZeroRows() {\n    this.masterRowCount = 0;\n    this.topDisplayedRowIndex = 0;\n    this.bottomDisplayedRowIndex = -1;\n    this.currentPage = 0;\n    this.totalPages = 0;\n  }\n  adjustCurrentPageIfInvalid() {\n    if (this.currentPage >= this.totalPages) {\n      this.currentPage = this.totalPages - 1;\n    }\n    if (!isFinite(this.currentPage) || isNaN(this.currentPage) || this.currentPage < 0) {\n      this.currentPage = 0;\n    }\n  }\n  calculatePagesMasterRowsOnly() {\n    this.masterRowCount = this.rowModel.getTopLevelRowCount();\n    if (this.masterRowCount <= 0) {\n      this.setZeroRows();\n      return;\n    }\n    const masterLastRowIndex = this.masterRowCount - 1;\n    this.totalPages = Math.floor(masterLastRowIndex / this.pageSize) + 1;\n    this.adjustCurrentPageIfInvalid();\n    const masterPageStartIndex = this.pageSize * this.currentPage;\n    let masterPageEndIndex = this.pageSize * (this.currentPage + 1) - 1;\n    if (masterPageEndIndex > masterLastRowIndex) {\n      masterPageEndIndex = masterLastRowIndex;\n    }\n    this.topDisplayedRowIndex = this.rowModel.getTopLevelRowDisplayedIndex(masterPageStartIndex);\n    if (masterPageEndIndex === masterLastRowIndex) {\n      this.bottomDisplayedRowIndex = this.rowModel.getRowCount() - 1;\n    } else {\n      const firstIndexNotToShow = this.rowModel.getTopLevelRowDisplayedIndex(masterPageEndIndex + 1);\n      this.bottomDisplayedRowIndex = firstIndexNotToShow - 1;\n    }\n  }\n  getMasterRowCount() {\n    return this.masterRowCount;\n  }\n  calculatePagesAllRows() {\n    this.masterRowCount = this.rowModel.getRowCount();\n    if (this.masterRowCount === 0) {\n      this.setZeroRows();\n      return;\n    }\n    const maxRowIndex = this.masterRowCount - 1;\n    this.totalPages = Math.floor(maxRowIndex / this.pageSize) + 1;\n    this.adjustCurrentPageIfInvalid();\n    this.topDisplayedRowIndex = this.pageSize * this.currentPage;\n    this.bottomDisplayedRowIndex = this.pageSize * (this.currentPage + 1) - 1;\n    if (this.bottomDisplayedRowIndex > maxRowIndex) {\n      this.bottomDisplayedRowIndex = maxRowIndex;\n    }\n  }\n  calculatedPagesNotActive() {\n    this.setPageSize(void 0, \"autoCalculated\");\n    this.totalPages = 1;\n    this.currentPage = 0;\n    this.topDisplayedRowIndex = 0;\n    this.bottomDisplayedRowIndex = this.rowModel.getRowCount() - 1;\n  }\n  dispatchPaginationChangedEvent(params) {\n    const { keepRenderedRows = false, newPage = false, newPageSize = false } = params;\n    this.eventService.dispatchEvent({\n      type: \"paginationChanged\",\n      animate: false,\n      newData: false,\n      newPage,\n      newPageSize,\n      keepRenderedRows\n    });\n  }\n};\n\n// community-modules/core/src/pagination/paginationModule.ts\nvar PaginationCoreModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/pagination-core\",\n  beans: [PaginationService, PaginationAutoPageSizeService]\n});\nvar PaginationApiModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/pagination-api\",\n  dependantModules: [PaginationCoreModule],\n  apiFunctions: {\n    paginationIsLastPageFound,\n    paginationGetPageSize,\n    paginationGetCurrentPage,\n    paginationGetTotalPages,\n    paginationGetRowCount,\n    paginationGoToNextPage,\n    paginationGoToPreviousPage,\n    paginationGoToFirstPage,\n    paginationGoToLastPage,\n    paginationGoToPage\n  }\n});\nvar PaginationModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/pagination\",\n  dependantModules: [PaginationCoreModule, PaginationApiModule]\n});\n\n// community-modules/core/src/validation/apiFunctionValidator.ts\nvar clientSide = \"clientSide\";\nvar serverSide = \"serverSide\";\nvar infinite = \"infinite\";\nvar functionRowModels = {\n  onGroupExpandedOrCollapsed: [clientSide],\n  refreshClientSideRowModel: [clientSide],\n  forEachLeafNode: [clientSide],\n  forEachNodeAfterFilter: [clientSide],\n  forEachNodeAfterFilterAndSort: [clientSide],\n  resetRowHeights: [clientSide],\n  applyTransaction: [clientSide],\n  applyTransactionAsync: [clientSide],\n  flushAsyncTransactions: [clientSide],\n  getBestCostNodeSelection: [clientSide],\n  getServerSideSelectionState: [serverSide],\n  setServerSideSelectionState: [serverSide],\n  applyServerSideTransaction: [serverSide],\n  applyServerSideTransactionAsync: [serverSide],\n  applyServerSideRowData: [serverSide],\n  retryServerSideLoads: [serverSide],\n  flushServerSideAsyncTransactions: [serverSide],\n  refreshServerSide: [serverSide],\n  getServerSideGroupLevelState: [serverSide],\n  refreshInfiniteCache: [infinite],\n  purgeInfiniteCache: [infinite],\n  getInfiniteRowCount: [infinite],\n  isLastRowIndexKnown: [infinite],\n  expandAll: [clientSide, serverSide],\n  collapseAll: [clientSide, serverSide],\n  onRowHeightChanged: [clientSide, serverSide],\n  setRowCount: [infinite, serverSide],\n  getCacheBlockState: [infinite, serverSide]\n};\nvar deprecatedFunctions = {\n  getValue: {\n    version: \"v31.3\",\n    new: \"getCellValue\"\n  },\n  getFirstDisplayedRow: {\n    version: \"v31.1\",\n    new: \"getFirstDisplayedRowIndex\"\n  },\n  getLastDisplayedRow: {\n    version: \"v31.1\",\n    new: \"getLastDisplayedRowIndex\"\n  },\n  getModel: {\n    version: \"v31.1\",\n    message: \"Please use the appropriate grid API methods instead.\"\n  },\n  setColumnVisible: {\n    version: \"v31.1\",\n    old: \"setColumnVisible(key,visible)\",\n    new: \"setColumnsVisible([key],visible)\"\n  },\n  setColumnPinned: {\n    version: \"v31.1\",\n    old: \"setColumnPinned(key,pinned)\",\n    new: \"setColumnsPinned([key],pinned)\"\n  },\n  moveColumn: {\n    version: \"v31.1\",\n    old: \"moveColumn(key, toIndex)\",\n    new: \"moveColumns([key], toIndex)\"\n  },\n  setColumnWidth: {\n    version: \"v31.1\",\n    old: \"setColumnWidth(col, width)\",\n    new: \"setColumnWidths([{key: col, newWidth: width}])\"\n  },\n  autoSizeColumn: {\n    version: \"v31.1\",\n    old: \"autoSizeColumn(key, skipHeader)\",\n    new: \"autoSizeColumns([key], skipHeader)\"\n  },\n  addAggFunc: {\n    version: \"v31.1\",\n    old: \"addAggFunc(key, func)\",\n    new: \"addAggFuncs({ key: func })\"\n  },\n  removeValueColumn: {\n    version: \"v31.1\",\n    old: \"removeValueColumn(colKey)\",\n    new: \"removeValueColumns([colKey])\"\n  },\n  addValueColumn: {\n    version: \"v31.1\",\n    old: \"addValueColumn(colKey)\",\n    new: \"addValueColumns([colKey])\"\n  },\n  removeRowGroupColumn: {\n    version: \"v31.1\",\n    old: \"removeRowGroupColumn(colKey)\",\n    new: \"removeRowGroupColumns([colKey])\"\n  },\n  addRowGroupColumn: {\n    version: \"v31.1\",\n    old: \"addRowGroupColumn(colKey)\",\n    new: \"addRowGroupColumns([colKey])\"\n  },\n  removePivotColumn: {\n    version: \"v31.1\",\n    old: \"removePivotColumn(colKey)\",\n    new: \"removePivotColumns([colKey])\"\n  },\n  addPivotColumn: {\n    version: \"v31.1\",\n    old: \"addPivotColumn(colKey)\",\n    new: \"addPivotColumns([colKey])\"\n  },\n  showColumnMenuAfterButtonClick: {\n    version: \"v31.1\",\n    message: `Use 'IHeaderParams.showColumnMenu' within a header component, or 'api.showColumnMenu' elsewhere.`\n  },\n  showColumnMenuAfterMouseClick: {\n    version: \"v31.1\",\n    message: `Use 'IHeaderParams.showColumnMenuAfterMouseClick' within a header component, or 'api.showColumnMenu' elsewhere.`\n  },\n  getFilterInstance: {\n    version: \"v31.1\",\n    message: `'getFilterInstance' is deprecated. To get/set individual filter models, use 'getColumnFilterModel' or 'setColumnFilterModel' instead. To get hold of the filter instance, use 'getColumnFilterInstance' which returns the instance asynchronously.`\n  },\n  showLoadingOverlay: {\n    version: \"v32\",\n    message: '`showLoadingOverlay` is deprecated. Use the grid option \"loading\"=true instead or setGridOption(\"loading\", true).'\n  }\n};\nfunction validateApiFunction(functionName, apiFunction, beans) {\n  const deprecation = deprecatedFunctions[functionName];\n  if (deprecation) {\n    const { version, new: replacement, old, message } = deprecation;\n    const apiMethod = old ?? functionName;\n    return (...args) => {\n      const replacementMessage = replacement ? `Please use ${replacement} instead. ` : \"\";\n      _warnOnce(`Since ${version} api.${apiMethod} is deprecated. ${replacementMessage}${message ?? \"\"}`);\n      return apiFunction.apply(apiFunction, args);\n    };\n  }\n  const rowModels = functionRowModels[functionName];\n  if (rowModels) {\n    return (...args) => {\n      const rowModel = beans.rowModel.getType();\n      if (!rowModels.includes(rowModel)) {\n        _errorOnce(\n          `api.${functionName} can only be called when gridOptions.rowModelType is ${rowModels.join(\" or \")}`\n        );\n        return void 0;\n      }\n      return apiFunction.apply(apiFunction, args);\n    };\n  }\n  return apiFunction;\n}\n\n// community-modules/core/src/validation/rules/colDefValidations.ts\nvar COLUMN_DEFINITION_DEPRECATIONS = {\n  columnsMenuParams: { version: \"31.1\", message: \"Use `columnChooserParams` instead.\" },\n  suppressMenu: { version: \"31.1\", message: \"Use `suppressHeaderMenuButton` instead.\" },\n  suppressCellFlash: { version: \"31.2\", message: \"Use `enableCellChangeFlash={false}` in the ColDef\" }\n};\nvar CSRM_REQUIRES_ROW_GROUP_MODULE = (_options, gridOptions) => {\n  if ((gridOptions.rowModelType ?? \"clientSide\") === \"clientSide\") {\n    return { module: \"@ag-grid-enterprise/row-grouping\" /* RowGroupingModule */ };\n  }\n  return null;\n};\nvar COLUMN_DEFINITION_VALIDATIONS = {\n  // supported on all row models, but need module for client side.\n  enableRowGroup: CSRM_REQUIRES_ROW_GROUP_MODULE,\n  rowGroup: CSRM_REQUIRES_ROW_GROUP_MODULE,\n  rowGroupIndex: CSRM_REQUIRES_ROW_GROUP_MODULE,\n  enablePivot: CSRM_REQUIRES_ROW_GROUP_MODULE,\n  enableValue: CSRM_REQUIRES_ROW_GROUP_MODULE,\n  pivot: CSRM_REQUIRES_ROW_GROUP_MODULE,\n  pivotIndex: CSRM_REQUIRES_ROW_GROUP_MODULE,\n  aggFunc: CSRM_REQUIRES_ROW_GROUP_MODULE,\n  cellEditor: (options) => {\n    if (options.cellEditor === \"agRichSelect\" || options.cellEditor === \"agRichSelectCellEditor\") {\n      return { module: \"@ag-grid-enterprise/rich-select\" /* RichSelectModule */ };\n    }\n    return null;\n  },\n  menuTabs: (options) => {\n    const enterpriseMenuTabs = [\"columnsMenuTab\", \"generalMenuTab\"];\n    if (options.menuTabs?.some((tab) => enterpriseMenuTabs.includes(tab))) {\n      return {\n        module: \"@ag-grid-enterprise/menu\" /* MenuModule */\n      };\n    }\n    return null;\n  },\n  columnsMenuParams: {\n    module: [\"@ag-grid-enterprise/menu\" /* MenuModule */, \"@ag-grid-enterprise/column-tool-panel\" /* ColumnsToolPanelModule */]\n  },\n  columnChooserParams: {\n    module: [\"@ag-grid-enterprise/menu\" /* MenuModule */, \"@ag-grid-enterprise/column-tool-panel\" /* ColumnsToolPanelModule */]\n  },\n  headerCheckboxSelection: {\n    supportedRowModels: [\"clientSide\", \"serverSide\"],\n    dependencies: (_options, { rowSelection }) => rowSelection === \"multiple\" ? null : \"headerCheckboxSelection is only supported with rowSelection=multiple\"\n  },\n  headerCheckboxSelectionFilteredOnly: {\n    supportedRowModels: [\"clientSide\"],\n    dependencies: (_options, { rowSelection }) => rowSelection === \"multiple\" ? null : \"headerCheckboxSelectionFilteredOnly is only supported with rowSelection=multiple\"\n  },\n  headerCheckboxSelectionCurrentPageOnly: {\n    supportedRowModels: [\"clientSide\"],\n    dependencies: (_options, { rowSelection }) => rowSelection === \"multiple\" ? null : \"headerCheckboxSelectionCurrentPageOnly is only supported with rowSelection=multiple\"\n  },\n  children: () => COL_DEF_VALIDATORS\n};\nvar colDefPropertyMap = {\n  headerName: void 0,\n  columnGroupShow: void 0,\n  headerClass: void 0,\n  toolPanelClass: void 0,\n  headerValueGetter: void 0,\n  pivotKeys: void 0,\n  groupId: void 0,\n  colId: void 0,\n  sort: void 0,\n  initialSort: void 0,\n  field: void 0,\n  type: void 0,\n  cellDataType: void 0,\n  tooltipComponent: void 0,\n  tooltipField: void 0,\n  headerTooltip: void 0,\n  cellClass: void 0,\n  showRowGroup: void 0,\n  filter: void 0,\n  initialAggFunc: void 0,\n  defaultAggFunc: void 0,\n  aggFunc: void 0,\n  pinned: void 0,\n  initialPinned: void 0,\n  chartDataType: void 0,\n  cellAriaRole: void 0,\n  cellEditorPopupPosition: void 0,\n  headerGroupComponent: void 0,\n  headerGroupComponentParams: void 0,\n  cellStyle: void 0,\n  cellRenderer: void 0,\n  cellRendererParams: void 0,\n  cellEditor: void 0,\n  cellEditorParams: void 0,\n  filterParams: void 0,\n  pivotValueColumn: void 0,\n  headerComponent: void 0,\n  headerComponentParams: void 0,\n  floatingFilterComponent: void 0,\n  floatingFilterComponentParams: void 0,\n  tooltipComponentParams: void 0,\n  refData: void 0,\n  columnsMenuParams: void 0,\n  columnChooserParams: void 0,\n  children: void 0,\n  sortingOrder: void 0,\n  allowedAggFuncs: void 0,\n  menuTabs: void 0,\n  pivotTotalColumnIds: void 0,\n  cellClassRules: void 0,\n  icons: void 0,\n  sortIndex: void 0,\n  initialSortIndex: void 0,\n  flex: void 0,\n  initialFlex: void 0,\n  width: void 0,\n  initialWidth: void 0,\n  minWidth: void 0,\n  maxWidth: void 0,\n  rowGroupIndex: void 0,\n  initialRowGroupIndex: void 0,\n  pivotIndex: void 0,\n  initialPivotIndex: void 0,\n  suppressCellFlash: void 0,\n  suppressColumnsToolPanel: void 0,\n  suppressFiltersToolPanel: void 0,\n  openByDefault: void 0,\n  marryChildren: void 0,\n  suppressStickyLabel: void 0,\n  hide: void 0,\n  initialHide: void 0,\n  rowGroup: void 0,\n  initialRowGroup: void 0,\n  pivot: void 0,\n  initialPivot: void 0,\n  checkboxSelection: void 0,\n  showDisabledCheckboxes: void 0,\n  headerCheckboxSelection: void 0,\n  headerCheckboxSelectionFilteredOnly: void 0,\n  headerCheckboxSelectionCurrentPageOnly: void 0,\n  suppressMenu: void 0,\n  suppressHeaderMenuButton: void 0,\n  suppressMovable: void 0,\n  lockPosition: void 0,\n  lockVisible: void 0,\n  lockPinned: void 0,\n  unSortIcon: void 0,\n  suppressSizeToFit: void 0,\n  suppressAutoSize: void 0,\n  enableRowGroup: void 0,\n  enablePivot: void 0,\n  enableValue: void 0,\n  editable: void 0,\n  suppressPaste: void 0,\n  suppressNavigable: void 0,\n  enableCellChangeFlash: void 0,\n  rowDrag: void 0,\n  dndSource: void 0,\n  autoHeight: void 0,\n  wrapText: void 0,\n  sortable: void 0,\n  resizable: void 0,\n  singleClickEdit: void 0,\n  floatingFilter: void 0,\n  cellEditorPopup: void 0,\n  suppressFillHandle: void 0,\n  wrapHeaderText: void 0,\n  autoHeaderHeight: void 0,\n  dndSourceOnRowDrag: void 0,\n  valueGetter: void 0,\n  valueSetter: void 0,\n  filterValueGetter: void 0,\n  keyCreator: void 0,\n  valueFormatter: void 0,\n  valueParser: void 0,\n  comparator: void 0,\n  equals: void 0,\n  pivotComparator: void 0,\n  suppressKeyboardEvent: void 0,\n  suppressHeaderKeyboardEvent: void 0,\n  colSpan: void 0,\n  rowSpan: void 0,\n  getQuickFilterText: void 0,\n  onCellValueChanged: void 0,\n  onCellClicked: void 0,\n  onCellDoubleClicked: void 0,\n  onCellContextMenu: void 0,\n  rowDragText: void 0,\n  tooltipValueGetter: void 0,\n  cellRendererSelector: void 0,\n  cellEditorSelector: void 0,\n  suppressSpanHeaderHeight: void 0,\n  useValueFormatterForExport: void 0,\n  useValueParserForImport: void 0,\n  mainMenuItems: void 0,\n  contextMenuItems: void 0,\n  suppressFloatingFilterButton: void 0,\n  suppressHeaderFilterButton: void 0,\n  suppressHeaderContextMenu: void 0,\n  loadingCellRenderer: void 0,\n  loadingCellRendererParams: void 0,\n  loadingCellRendererSelector: void 0,\n  context: void 0\n};\nvar ALL_PROPERTIES = Object.keys(colDefPropertyMap);\nvar COL_DEF_VALIDATORS = {\n  objectName: \"colDef\",\n  allProperties: ALL_PROPERTIES,\n  docsUrl: \"column-properties/\",\n  deprecations: COLUMN_DEFINITION_DEPRECATIONS,\n  validations: COLUMN_DEFINITION_VALIDATIONS\n};\n\n// community-modules/core/src/validation/rules/gridOptionsValidations.ts\nvar GRID_OPTION_DEPRECATIONS = () => ({\n  advancedFilterModel: { version: \"31\", message: \"Use `initialState.filter.advancedFilterModel` instead.\" },\n  suppressAsyncEvents: { version: \"31\", message: \"Events should be handled asynchronously.\" },\n  cellFadeDelay: { version: \"31.1\", renamed: \"cellFadeDuration\" },\n  cellFlashDelay: { version: \"31.1\", renamed: \"cellFlashDuration\" },\n  suppressServerSideInfiniteScroll: { version: \"31.1\" },\n  serverSideSortOnServer: { version: \"31.1\" },\n  serverSideFilterOnServer: { version: \"31.1\" },\n  enableCellChangeFlash: {\n    version: \"31.2\",\n    message: \"Use `enableCellChangeFlash` in the `ColDef` or `defaultColDef` for all columns.\"\n  },\n  groupIncludeFooter: { version: \"31.3\", message: \"Use `groupTotalRow` instead.\" },\n  groupIncludeTotalFooter: { version: \"31.3\", message: \"Use `grandTotalRow` instead.\" },\n  suppressLoadingOverlay: { version: \"32\", message: \"Use `loading`=false instead.\" }\n});\nvar GRID_OPTION_DEFAULTS = {\n  suppressContextMenu: false,\n  preventDefaultOnContextMenu: false,\n  allowContextMenuWithControlKey: false,\n  suppressMenuHide: true,\n  enableBrowserTooltips: false,\n  tooltipTrigger: \"hover\",\n  tooltipShowDelay: 2e3,\n  tooltipHideDelay: 1e4,\n  tooltipMouseTrack: false,\n  tooltipShowMode: \"standard\",\n  tooltipInteraction: false,\n  copyHeadersToClipboard: false,\n  copyGroupHeadersToClipboard: false,\n  clipboardDelimiter: \"\t\",\n  suppressCopyRowsToClipboard: false,\n  suppressCopySingleCellRanges: false,\n  suppressLastEmptyLineOnPaste: false,\n  suppressClipboardPaste: false,\n  suppressClipboardApi: false,\n  suppressCutToClipboard: false,\n  maintainColumnOrder: false,\n  suppressFieldDotNotation: false,\n  allowDragFromColumnsToolPanel: false,\n  suppressMovableColumns: false,\n  suppressColumnMoveAnimation: false,\n  suppressDragLeaveHidesColumns: false,\n  suppressRowGroupHidesColumns: false,\n  suppressAutoSize: false,\n  autoSizePadding: 20,\n  skipHeaderOnAutoSize: false,\n  singleClickEdit: false,\n  suppressClickEdit: false,\n  readOnlyEdit: false,\n  stopEditingWhenCellsLoseFocus: false,\n  enterNavigatesVertically: false,\n  enterNavigatesVerticallyAfterEdit: false,\n  enableCellEditingOnBackspace: false,\n  undoRedoCellEditing: false,\n  undoRedoCellEditingLimit: 10,\n  suppressCsvExport: false,\n  suppressExcelExport: false,\n  cacheQuickFilter: false,\n  includeHiddenColumnsInQuickFilter: false,\n  excludeChildrenWhenTreeDataFiltering: false,\n  enableAdvancedFilter: false,\n  includeHiddenColumnsInAdvancedFilter: false,\n  enableCharts: false,\n  masterDetail: false,\n  keepDetailRows: false,\n  keepDetailRowsCount: 10,\n  detailRowAutoHeight: false,\n  tabIndex: 0,\n  rowBuffer: 10,\n  valueCache: false,\n  valueCacheNeverExpires: false,\n  enableCellExpressions: false,\n  suppressTouch: false,\n  suppressFocusAfterRefresh: false,\n  suppressAsyncEvents: false,\n  suppressBrowserResizeObserver: false,\n  suppressPropertyNamesCheck: false,\n  suppressChangeDetection: false,\n  debug: false,\n  suppressLoadingOverlay: false,\n  suppressNoRowsOverlay: false,\n  pagination: false,\n  paginationPageSize: 100,\n  paginationPageSizeSelector: true,\n  paginationAutoPageSize: false,\n  paginateChildRows: false,\n  suppressPaginationPanel: false,\n  pivotMode: false,\n  pivotPanelShow: \"never\",\n  pivotDefaultExpanded: 0,\n  pivotSuppressAutoColumn: false,\n  suppressExpandablePivotGroups: false,\n  functionsReadOnly: false,\n  suppressAggFuncInHeader: false,\n  alwaysAggregateAtRootLevel: false,\n  aggregateOnlyChangedColumns: false,\n  suppressAggFilteredOnly: false,\n  removePivotHeaderRowWhenSingleValueColumn: false,\n  animateRows: true,\n  enableCellChangeFlash: false,\n  cellFlashDelay: 500,\n  cellFlashDuration: 500,\n  cellFadeDelay: 1e3,\n  cellFadeDuration: 1e3,\n  allowShowChangeAfterFilter: false,\n  domLayout: \"normal\",\n  ensureDomOrder: false,\n  enableRtl: false,\n  suppressColumnVirtualisation: false,\n  suppressMaxRenderedRowRestriction: false,\n  suppressRowVirtualisation: false,\n  rowDragManaged: false,\n  suppressRowDrag: false,\n  suppressMoveWhenRowDragging: false,\n  rowDragEntireRow: false,\n  rowDragMultiRow: false,\n  embedFullWidthRows: false,\n  groupDisplayType: \"singleColumn\",\n  groupDefaultExpanded: 0,\n  groupMaintainOrder: false,\n  groupSelectsChildren: false,\n  groupIncludeTotalFooter: false,\n  groupSuppressBlankHeader: false,\n  groupSelectsFiltered: false,\n  showOpenedGroup: false,\n  groupRemoveSingleChildren: false,\n  groupRemoveLowestSingleChildren: false,\n  groupHideOpenParents: false,\n  groupAllowUnbalanced: false,\n  rowGroupPanelShow: \"never\",\n  suppressMakeColumnVisibleAfterUnGroup: false,\n  treeData: false,\n  rowGroupPanelSuppressSort: false,\n  suppressGroupRowsSticky: false,\n  rowModelType: \"clientSide\",\n  asyncTransactionWaitMillis: 50,\n  suppressModelUpdateAfterUpdateTransaction: false,\n  cacheOverflowSize: 1,\n  infiniteInitialRowCount: 1,\n  serverSideInitialRowCount: 1,\n  suppressServerSideInfiniteScroll: false,\n  cacheBlockSize: 100,\n  maxBlocksInCache: -1,\n  maxConcurrentDatasourceRequests: 2,\n  blockLoadDebounceMillis: 0,\n  purgeClosedRowNodes: false,\n  serverSideSortAllLevels: false,\n  serverSideOnlyRefreshFilteredGroups: false,\n  serverSideSortOnServer: false,\n  serverSideFilterOnServer: false,\n  serverSidePivotResultFieldSeparator: \"_\",\n  viewportRowModelPageSize: 5,\n  viewportRowModelBufferSize: 5,\n  alwaysShowHorizontalScroll: false,\n  alwaysShowVerticalScroll: false,\n  debounceVerticalScrollbar: false,\n  suppressHorizontalScroll: false,\n  suppressScrollOnNewData: false,\n  suppressScrollWhenPopupsAreOpen: false,\n  suppressAnimationFrame: false,\n  suppressMiddleClickScrolls: false,\n  suppressPreventDefaultOnMouseWheel: false,\n  rowMultiSelectWithClick: false,\n  suppressRowDeselection: false,\n  suppressRowClickSelection: false,\n  suppressCellFocus: false,\n  suppressHeaderFocus: false,\n  suppressMultiRangeSelection: false,\n  enableCellTextSelection: false,\n  enableRangeSelection: false,\n  enableRangeHandle: false,\n  enableFillHandle: false,\n  fillHandleDirection: \"xy\",\n  suppressClearOnFillReduction: false,\n  accentedSort: false,\n  unSortIcon: false,\n  suppressMultiSort: false,\n  alwaysMultiSort: false,\n  suppressMaintainUnsortedOrder: false,\n  suppressRowHoverHighlight: false,\n  suppressRowTransform: false,\n  columnHoverHighlight: false,\n  deltaSort: false,\n  enableGroupEdit: false,\n  suppressGroupMaintainValueType: false,\n  groupLockGroupColumns: 0,\n  serverSideEnableClientSideSort: false,\n  suppressServerSideFullWidthLoadingRow: false,\n  pivotMaxGeneratedColumns: -1,\n  columnMenu: \"new\",\n  reactiveCustomComponents: true\n};\nvar GRID_OPTION_VALIDATIONS = () => ({\n  sideBar: { module: \"@ag-grid-enterprise/side-bar\" /* SideBarModule */ },\n  statusBar: { module: \"@ag-grid-enterprise/status-bar\" /* StatusBarModule */ },\n  enableCharts: { module: \"@ag-grid-enterprise/charts\" /* GridChartsModule */ },\n  getMainMenuItems: { module: \"@ag-grid-enterprise/menu\" /* MenuModule */ },\n  getContextMenuItems: { module: \"@ag-grid-enterprise/menu\" /* MenuModule */ },\n  allowContextMenuWithControlKey: { module: \"@ag-grid-enterprise/menu\" /* MenuModule */ },\n  enableAdvancedFilter: { module: \"@ag-grid-enterprise/advanced-filter\" /* AdvancedFilterModule */ },\n  treeData: {\n    supportedRowModels: [\"clientSide\", \"serverSide\"],\n    module: \"@ag-grid-enterprise/row-grouping\" /* RowGroupingModule */,\n    dependencies: (options) => {\n      const rowModel = options.rowModelType ?? \"clientSide\";\n      switch (rowModel) {\n        case \"clientSide\": {\n          const csrmWarning = `treeData requires 'getDataPath' in the ${rowModel} row model.`;\n          return options.getDataPath ? null : csrmWarning;\n        }\n        case \"serverSide\": {\n          const ssrmWarning = `treeData requires 'isServerSideGroup' and 'getServerSideGroupKey' in the ${rowModel} row model.`;\n          return options.isServerSideGroup && options.getServerSideGroupKey ? null : ssrmWarning;\n        }\n      }\n      return null;\n    }\n  },\n  masterDetail: { module: \"@ag-grid-enterprise/master-detail\" /* MasterDetailModule */ },\n  enableRangeSelection: { module: \"@ag-grid-enterprise/range-selection\" /* RangeSelectionModule */ },\n  enableRangeHandle: {\n    dependencies: {\n      enableRangeSelection: [true]\n    }\n  },\n  enableFillHandle: {\n    dependencies: {\n      enableRangeSelection: [true]\n    }\n  },\n  groupDefaultExpanded: {\n    supportedRowModels: [\"clientSide\"]\n  },\n  groupIncludeFooter: {\n    supportedRowModels: [\"clientSide\", \"serverSide\"],\n    dependencies: (options) => {\n      const rowModel = options.rowModelType ?? \"clientSide\";\n      switch (rowModel) {\n        case \"clientSide\":\n          return null;\n        case \"serverSide\": {\n          const warning = \"groupIncludeFooter is not supported alongside suppressServerSideInfiniteScroll\";\n          return options.suppressServerSideInfiniteScroll ? warning : null;\n        }\n      }\n      return null;\n    }\n  },\n  groupHideOpenParents: {\n    supportedRowModels: [\"clientSide\", \"serverSide\"],\n    dependencies: {\n      groupTotalRow: [void 0, \"bottom\"]\n    }\n  },\n  groupIncludeTotalFooter: {\n    supportedRowModels: [\"clientSide\"]\n  },\n  groupRemoveSingleChildren: {\n    dependencies: {\n      groupHideOpenParents: [void 0, false],\n      groupRemoveLowestSingleChildren: [void 0, false]\n    }\n  },\n  groupRemoveLowestSingleChildren: {\n    dependencies: {\n      groupHideOpenParents: [void 0, false],\n      groupRemoveSingleChildren: [void 0, false]\n    }\n  },\n  groupSelectsChildren: {\n    dependencies: {\n      rowSelection: [\"multiple\"]\n    }\n  },\n  viewportDatasource: {\n    supportedRowModels: [\"viewport\"],\n    module: \"@ag-grid-enterprise/viewport-row-model\" /* ViewportRowModelModule */\n  },\n  serverSideDatasource: {\n    supportedRowModels: [\"serverSide\"],\n    module: \"@ag-grid-enterprise/server-side-row-model\" /* ServerSideRowModelModule */\n  },\n  cacheBlockSize: {\n    supportedRowModels: [\"serverSide\", \"infinite\"]\n  },\n  datasource: {\n    supportedRowModels: [\"infinite\"],\n    module: \"@ag-grid-community/infinite-row-model\" /* InfiniteRowModelModule */\n  },\n  rowData: {\n    supportedRowModels: [\"clientSide\"],\n    module: \"@ag-grid-community/client-side-row-model\" /* ClientSideRowModelModule */\n  },\n  columnDefs: () => COL_DEF_VALIDATORS,\n  defaultColDef: () => COL_DEF_VALIDATORS,\n  defaultColGroupDef: () => COL_DEF_VALIDATORS,\n  autoGroupColumnDef: () => COL_DEF_VALIDATORS\n});\nvar GRID_OPTIONS_VALIDATORS = () => ({\n  objectName: \"gridOptions\",\n  allProperties: [...PropertyKeys.ALL_PROPERTIES, ...ComponentUtil.EVENT_CALLBACKS],\n  propertyExceptions: [\"api\"],\n  docsUrl: \"grid-options/\",\n  deprecations: GRID_OPTION_DEPRECATIONS(),\n  validations: GRID_OPTION_VALIDATIONS()\n});\n\n// community-modules/core/src/validation/validationService.ts\nvar ValidationService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"validationService\";\n  }\n  wireBeans(beans) {\n    this.beans = beans;\n    this.gridOptions = beans.gridOptions;\n  }\n  postConstruct() {\n    this.processGridOptions(this.gridOptions);\n  }\n  processGridOptions(options) {\n    this.processOptions(options, GRID_OPTIONS_VALIDATORS());\n  }\n  processColumnDefs(options) {\n    this.processOptions(options, COL_DEF_VALIDATORS);\n  }\n  validateApiFunction(functionName, apiFunction) {\n    return validateApiFunction(functionName, apiFunction, this.beans);\n  }\n  processOptions(options, validator) {\n    const { validations, deprecations, allProperties, propertyExceptions, objectName, docsUrl } = validator;\n    if (allProperties && this.gridOptions.suppressPropertyNamesCheck !== true) {\n      this.checkProperties(\n        options,\n        [...propertyExceptions ?? [], ...Object.keys(deprecations)],\n        allProperties,\n        objectName,\n        docsUrl\n      );\n    }\n    const warnings = /* @__PURE__ */ new Set();\n    const optionKeys = Object.keys(options);\n    optionKeys.forEach((key) => {\n      const deprecation = deprecations[key];\n      if (deprecation) {\n        if (\"renamed\" in deprecation) {\n          const { renamed, version } = deprecation;\n          warnings.add(\n            `As of v${version}, ${String(key)} is deprecated. Please use ${String(renamed)} instead.`\n          );\n          options[renamed] = options[key];\n        } else {\n          const { message, version } = deprecation;\n          warnings.add(`As of v${version}, ${String(key)} is deprecated. ${message ?? \"\"}`);\n        }\n      }\n      const value = options[key];\n      if (value == null || value === false) {\n        return;\n      }\n      const rulesOrGetter = validations[key];\n      let rules;\n      if (!rulesOrGetter) {\n        return;\n      } else if (typeof rulesOrGetter === \"function\") {\n        const fromGetter = rulesOrGetter(options, this.gridOptions);\n        if (!fromGetter) {\n          return;\n        }\n        if (\"objectName\" in fromGetter) {\n          const value2 = options[key];\n          if (Array.isArray(value2)) {\n            value2.forEach((item) => {\n              this.processOptions(item, fromGetter);\n            });\n            return;\n          }\n          this.processOptions(options[key], fromGetter);\n          return;\n        }\n        rules = fromGetter;\n      } else {\n        rules = rulesOrGetter;\n      }\n      const { module, dependencies, supportedRowModels } = rules;\n      if (supportedRowModels) {\n        const rowModel = this.gridOptions.rowModelType ?? \"clientSide\";\n        if (!supportedRowModels.includes(rowModel)) {\n          warnings.add(`${String(key)} is not supported with the '${rowModel}' row model.`);\n          return;\n        }\n      }\n      if (module) {\n        const modules = Array.isArray(module) ? module : [module];\n        let allRegistered = true;\n        modules.forEach((m) => {\n          if (!ModuleRegistry.__assertRegistered(m, String(key), this.gridId)) {\n            allRegistered = false;\n            warnings.add(`${String(key)} is only available when ${m} is loaded.`);\n          }\n        });\n        if (!allRegistered) {\n          return;\n        }\n      }\n      if (dependencies) {\n        const warning = this.checkForWarning(key, dependencies, options);\n        if (warning) {\n          warnings.add(warning);\n          return;\n        }\n      }\n    });\n    if (warnings.size > 0) {\n      warnings.forEach((warning) => {\n        _warnOnce(warning);\n      });\n    }\n  }\n  checkForWarning(key, validator, options) {\n    if (typeof validator === \"function\") {\n      return validator(options, this.gridOptions);\n    }\n    const optionEntries = Object.entries(validator);\n    const failed = optionEntries.find(([key2, value]) => {\n      const gridOptionValue = options[key2];\n      return !value.includes(gridOptionValue);\n    });\n    if (!failed) {\n      return null;\n    }\n    const [failedKey, possibleOptions] = failed;\n    if (possibleOptions.length > 1) {\n      return `'${String(key)}' requires '${failedKey}' to be one of [${possibleOptions.join(\", \")}].`;\n    }\n    return `'${String(key)}' requires '${failedKey}' to be ${possibleOptions[0]}.`;\n  }\n  checkProperties(object, exceptions, validProperties, containerName, docsUrl) {\n    const VUE_FRAMEWORK_PROPS = [\"__ob__\", \"__v_skip\", \"__metadata__\"];\n    const invalidProperties = _fuzzyCheckStrings(\n      Object.getOwnPropertyNames(object),\n      [...VUE_FRAMEWORK_PROPS, ...exceptions, ...validProperties],\n      validProperties\n    );\n    _iterateObject(invalidProperties, (key, value) => {\n      let message = `invalid ${containerName} property '${key}' did you mean any of these: ${value.slice(0, 8).join(\", \")}.`;\n      if (validProperties.includes(\"context\")) {\n        message += `\nIf you are trying to annotate ${containerName} with application data, use the '${containerName}.context' property instead.`;\n      }\n      _warnOnce(message);\n    });\n    if (Object.keys(invalidProperties).length > 0 && docsUrl) {\n      const url = this.getFrameworkOverrides().getDocLink(docsUrl);\n      _warnOnce(`to see all the valid ${containerName} properties please check: ${url}`);\n    }\n  }\n};\n\n// community-modules/core/src/gridCoreModule.ts\nvar GridCoreModule = {\n  version: VERSION,\n  moduleName: \"@ag-grid-community/core\" /* CommunityCoreModule */\n};\nvar ValidationsModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/core-validations\",\n  beans: [ValidationService]\n});\nvar CommunityFeaturesModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/core-community-features\",\n  dependantModules: [\n    GridCoreModule,\n    ValidationsModule,\n    EditModule,\n    FilterModule,\n    StateModule,\n    DataTypeModule,\n    AlignedGridsModule,\n    PaginationModule,\n    CommunityApiModule\n  ]\n});\n\n// community-modules/core/src/gridDestroyService.ts\nvar GridDestroyService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"gridDestroyService\";\n    this.destroyCalled = false;\n  }\n  wireBeans(beans) {\n    this.beans = beans;\n  }\n  destroy() {\n    if (this.destroyCalled) {\n      return;\n    }\n    this.eventService.dispatchEvent({\n      type: \"gridPreDestroyed\",\n      state: this.beans.stateService?.getState() ?? {}\n    });\n    this.destroyCalled = true;\n    this.beans.ctrlsService.get(\"gridCtrl\")?.destroyGridUi();\n    this.beans.context.destroy();\n    super.destroy();\n  }\n  isDestroyCalled() {\n    return this.destroyCalled;\n  }\n};\n\n// community-modules/core/src/events.ts\nvar ALWAYS_SYNC_GLOBAL_EVENTS = /* @__PURE__ */ new Set([\"gridPreDestroyed\", \"fillStart\", \"pasteStart\"]);\nvar isSelectionUIEvent = (source) => {\n  return source === \"checkboxSelected\" || source === \"rowClicked\" || source === \"spaceKey\" || source === \"uiSelectAll\" || source === \"uiSelectAllCurrentPage\" || source === \"uiSelectAllFiltered\";\n};\n\n// community-modules/core/src/gridOptionsService.ts\nvar PROPERTY_COERCIONS = new Map([\n  ...PropertyKeys.BOOLEAN_PROPERTIES.map((key) => [key, toBoolean]),\n  ...PropertyKeys.NUMBER_PROPERTIES.map((key) => [key, toNumber]),\n  [\"groupAggFiltering\", (val) => typeof val === \"function\" ? val : toBoolean(val)],\n  [\"pageSize\", toConstrainedNum(1)],\n  [\"autoSizePadding\", toConstrainedNum(0)],\n  [\"keepDetailRowsCount\", toConstrainedNum(1)],\n  [\"rowBuffer\", toConstrainedNum(0)],\n  [\"infiniteInitialRowCount\", toConstrainedNum(1)],\n  [\"cacheOverflowSize\", toConstrainedNum(1)],\n  [\"cacheBlockSize\", toConstrainedNum(1)],\n  [\"serverSideInitialRowCount\", toConstrainedNum(1)],\n  [\"viewportRowModelPageSize\", toConstrainedNum(1)],\n  [\"viewportRowModelBufferSize\", toConstrainedNum(0)]\n]);\nfunction getCoercedValue(key, value) {\n  const coerceFunc = PROPERTY_COERCIONS.get(key);\n  if (!coerceFunc) {\n    return value;\n  }\n  return coerceFunc(value);\n}\nfunction getCoercedGridOptions(gridOptions) {\n  const newGo = {};\n  Object.entries(gridOptions).forEach(([key, value]) => {\n    const coercedValue = getCoercedValue(key, value);\n    newGo[key] = coercedValue;\n  });\n  return newGo;\n}\nvar _GridOptionsService = class _GridOptionsService extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"gos\";\n    this.domDataKey = \"__AG_\" + Math.random().toString();\n    this.propertyEventService = new LocalEventService();\n    // responsible for calling the onXXX functions on gridOptions\n    // It forces events defined in GridOptionsService.alwaysSyncGlobalEvents to be fired synchronously.\n    // This is required for events such as GridPreDestroyed.\n    // Other events can be fired asynchronously or synchronously depending on config.\n    this.globalEventHandlerFactory = (restrictToSyncOnly) => {\n      return (eventName, event) => {\n        if (!this.isAlive()) {\n          return;\n        }\n        const alwaysSync = ALWAYS_SYNC_GLOBAL_EVENTS.has(eventName);\n        if (alwaysSync && !restrictToSyncOnly || !alwaysSync && restrictToSyncOnly) {\n          return;\n        }\n        const eventHandlerName = ComponentUtil.getCallbackForEvent(eventName);\n        const eventHandler = this.gridOptions[eventHandlerName];\n        if (typeof eventHandler === \"function\") {\n          this.frameworkOverrides.wrapOutgoing(() => {\n            eventHandler(event);\n          });\n        }\n      };\n    };\n  }\n  wireBeans(beans) {\n    this.gridOptions = beans.gridOptions;\n    this.eGridDiv = beans.eGridDiv;\n    this.validationService = beans.validationService;\n    this.environment = beans.environment;\n    this.api = beans.gridApi;\n  }\n  // This is quicker then having code call gridOptionsService.get('context')\n  get gridOptionsContext() {\n    return this.gridOptions[\"context\"];\n  }\n  postConstruct() {\n    const async = !this.get(\"suppressAsyncEvents\");\n    this.eventService.addGlobalListener(this.globalEventHandlerFactory().bind(this), async);\n    this.eventService.addGlobalListener(this.globalEventHandlerFactory(true).bind(this), false);\n    this.propertyEventService.setFrameworkOverrides(this.frameworkOverrides);\n    this.getScrollbarWidth();\n    this.addManagedEventListeners({\n      gridOptionsChanged: ({ options }) => {\n        this.updateGridOptions({ options, force: true, source: \"gridOptionsUpdated\" });\n      }\n    });\n  }\n  /**\n   * Get the raw value of the GridOptions property provided.\n   * @param property\n   */\n  get(property) {\n    return this.gridOptions[property] ?? GRID_OPTION_DEFAULTS[property];\n  }\n  /**\n   * Get the GridOption callback but wrapped so that the common params of api and context are automatically applied to the params.\n   * @param property GridOption callback properties based on the fact that this property has a callback with params extending AgGridCommon\n   */\n  getCallback(property) {\n    return this.mergeGridCommonParams(this.gridOptions[property]);\n  }\n  /**\n   * Returns `true` if a value has been specified for this GridOption.\n   * @param property GridOption property\n   */\n  exists(property) {\n    return _exists(this.gridOptions[property]);\n  }\n  /**\n   * Wrap the user callback and attach the api and context to the params object on the way through.\n   * @param callback User provided callback\n   * @returns Wrapped callback where the params object not require api and context\n   */\n  mergeGridCommonParams(callback) {\n    if (callback) {\n      const wrapped = (callbackParams) => {\n        const mergedParams = callbackParams;\n        mergedParams.api = this.api;\n        mergedParams.context = this.gridOptionsContext;\n        return callback(mergedParams);\n      };\n      return wrapped;\n    }\n    return callback;\n  }\n  updateGridOptions({\n    options,\n    force,\n    source = \"api\"\n  }) {\n    const changeSet = { id: _GridOptionsService.changeSetId++, properties: [] };\n    const events = [];\n    Object.entries(options).forEach(([key, value]) => {\n      if (source === \"api\" && INITIAL_GRID_OPTION_KEYS[key]) {\n        _warnOnce(`${key} is an initial property and cannot be updated.`);\n      }\n      const coercedValue = getCoercedValue(key, value);\n      const shouldForce = force || typeof coercedValue === \"object\" && source === \"api\";\n      const previousValue = this.gridOptions[key];\n      if (shouldForce || previousValue !== coercedValue) {\n        this.gridOptions[key] = coercedValue;\n        const event = {\n          type: key,\n          currentValue: coercedValue,\n          previousValue,\n          changeSet,\n          source\n        };\n        events.push(event);\n      }\n    });\n    this.validationService?.processGridOptions(this.gridOptions);\n    changeSet.properties = events.map((event) => event.type);\n    events.forEach((event) => {\n      if (this.gridOptions.debug) {\n        _log(`Updated property ${event.type} from`, event.previousValue, ` to `, event.currentValue);\n      }\n      this.propertyEventService.dispatchEvent(event);\n    });\n  }\n  addPropertyEventListener(key, listener) {\n    this.propertyEventService.addEventListener(key, listener);\n  }\n  removePropertyEventListener(key, listener) {\n    this.propertyEventService.removeEventListener(key, listener);\n  }\n  // *************** Helper methods ************************** //\n  // Methods to share common GridOptions related logic that goes above accessing a single property\n  // the user might be using some non-standard scrollbar, eg a scrollbar that has zero\n  // width and overlays (like the Safari scrollbar, but presented in Chrome). so we\n  // allow the user to provide the scroll width before we work it out.\n  getScrollbarWidth() {\n    if (this.scrollbarWidth == null) {\n      const useGridOptions = typeof this.gridOptions.scrollbarWidth === \"number\" && this.gridOptions.scrollbarWidth >= 0;\n      const scrollbarWidth = useGridOptions ? this.gridOptions.scrollbarWidth : _getScrollbarWidth();\n      if (scrollbarWidth != null) {\n        this.scrollbarWidth = scrollbarWidth;\n        this.eventService.dispatchEvent({\n          type: \"scrollbarWidthChanged\"\n        });\n      }\n    }\n    return this.scrollbarWidth;\n  }\n  isRowModelType(rowModelType) {\n    return this.gridOptions.rowModelType === rowModelType || rowModelType === \"clientSide\" && _missing(this.gridOptions.rowModelType);\n  }\n  isDomLayout(domLayout) {\n    const gridLayout = this.gridOptions.domLayout ?? \"normal\";\n    return gridLayout === domLayout;\n  }\n  isRowSelection() {\n    return this.gridOptions.rowSelection === \"single\" || this.gridOptions.rowSelection === \"multiple\";\n  }\n  useAsyncEvents() {\n    return !this.get(\"suppressAsyncEvents\");\n  }\n  isGetRowHeightFunction() {\n    return typeof this.gridOptions.getRowHeight === \"function\";\n  }\n  getRowHeightForNode(rowNode, allowEstimate = false, defaultRowHeight) {\n    if (defaultRowHeight == null) {\n      defaultRowHeight = this.environment.getDefaultRowHeight();\n    }\n    if (this.isGetRowHeightFunction()) {\n      if (allowEstimate) {\n        return { height: defaultRowHeight, estimated: true };\n      }\n      const params = {\n        node: rowNode,\n        data: rowNode.data\n      };\n      const height = this.getCallback(\"getRowHeight\")(params);\n      if (this.isNumeric(height)) {\n        if (height === 0) {\n          _warnOnce(\n            \"The return of `getRowHeight` cannot be zero. If the intention is to hide rows, use a filter instead.\"\n          );\n        }\n        return { height: Math.max(1, height), estimated: false };\n      }\n    }\n    if (rowNode.detail && this.get(\"masterDetail\")) {\n      return this.getMasterDetailRowHeight();\n    }\n    const rowHeight = this.gridOptions.rowHeight && this.isNumeric(this.gridOptions.rowHeight) ? this.gridOptions.rowHeight : defaultRowHeight;\n    return { height: rowHeight, estimated: false };\n  }\n  getMasterDetailRowHeight() {\n    if (this.get(\"detailRowAutoHeight\")) {\n      return { height: 1, estimated: false };\n    }\n    if (this.isNumeric(this.gridOptions.detailRowHeight)) {\n      return { height: this.gridOptions.detailRowHeight, estimated: false };\n    }\n    return { height: 300, estimated: false };\n  }\n  // we don't allow dynamic row height for virtual paging\n  getRowHeightAsNumber() {\n    if (!this.gridOptions.rowHeight || _missing(this.gridOptions.rowHeight)) {\n      return this.environment.getDefaultRowHeight();\n    }\n    const rowHeight = this.environment.refreshRowHeightVariable();\n    if (rowHeight !== -1) {\n      return rowHeight;\n    }\n    _warnOnce(\"row height must be a number if not using standard row model\");\n    return this.environment.getDefaultRowHeight();\n  }\n  isNumeric(value) {\n    return !isNaN(value) && typeof value === \"number\" && isFinite(value);\n  }\n  getDomDataKey() {\n    return this.domDataKey;\n  }\n  // returns the dom data, or undefined if not found\n  getDomData(element, key) {\n    const domData = element[this.getDomDataKey()];\n    return domData ? domData[key] : void 0;\n  }\n  setDomData(element, key, value) {\n    const domDataKey = this.getDomDataKey();\n    let domData = element[domDataKey];\n    if (_missing(domData)) {\n      domData = {};\n      element[domDataKey] = domData;\n    }\n    domData[key] = value;\n  }\n  getDocument() {\n    let result = null;\n    if (this.gridOptions.getDocument && _exists(this.gridOptions.getDocument)) {\n      result = this.gridOptions.getDocument();\n    } else if (this.eGridDiv) {\n      result = this.eGridDiv.ownerDocument;\n    }\n    if (result && _exists(result)) {\n      return result;\n    }\n    return document;\n  }\n  getWindow() {\n    const eDocument = this.getDocument();\n    return eDocument.defaultView || window;\n  }\n  getRootNode() {\n    return this.eGridDiv.getRootNode();\n  }\n  getActiveDomElement() {\n    return this.getRootNode().activeElement;\n  }\n  isNothingFocused() {\n    const eDocument = this.getDocument();\n    const activeEl = this.getActiveDomElement();\n    return activeEl === null || activeEl === eDocument.body;\n  }\n  getAsyncTransactionWaitMillis() {\n    return _exists(this.gridOptions.asyncTransactionWaitMillis) ? this.gridOptions.asyncTransactionWaitMillis : 50;\n  }\n  isAnimateRows() {\n    if (this.get(\"ensureDomOrder\")) {\n      return false;\n    }\n    return this.get(\"animateRows\");\n  }\n  isGroupRowsSticky() {\n    if (this.get(\"paginateChildRows\") || this.get(\"groupHideOpenParents\") || this.isDomLayout(\"print\")) {\n      return false;\n    }\n    return true;\n  }\n  isColumnsSortingCoupledToGroup() {\n    const autoGroupColumnDef = this.gridOptions.autoGroupColumnDef;\n    return !autoGroupColumnDef?.comparator && !this.get(\"treeData\");\n  }\n  getGroupAggFiltering() {\n    const userValue = this.gridOptions.groupAggFiltering;\n    if (typeof userValue === \"function\") {\n      return this.getCallback(\"groupAggFiltering\");\n    }\n    if (userValue === true) {\n      return () => true;\n    }\n    return void 0;\n  }\n  getGrandTotalRow() {\n    const userValue = this.gridOptions.grandTotalRow;\n    if (userValue) {\n      return userValue;\n    }\n    const legacyValue = this.gridOptions.groupIncludeTotalFooter;\n    if (legacyValue) {\n      return \"bottom\";\n    }\n    return void 0;\n  }\n  getGroupTotalRowCallback() {\n    const userValue = this.get(\"groupTotalRow\");\n    if (typeof userValue === \"function\") {\n      return this.getCallback(\"groupTotalRow\");\n    }\n    if (userValue) {\n      return () => userValue;\n    }\n    const legacyValue = this.get(\"groupIncludeFooter\");\n    if (typeof legacyValue === \"function\") {\n      const legacyCallback = this.getCallback(\"groupIncludeFooter\");\n      return (p) => {\n        return legacyCallback(p) ? \"bottom\" : void 0;\n      };\n    }\n    return () => legacyValue ? \"bottom\" : void 0;\n  }\n  isGroupMultiAutoColumn() {\n    if (this.gridOptions.groupDisplayType) {\n      return this.gridOptions.groupDisplayType === \"multipleColumns\";\n    }\n    return this.get(\"groupHideOpenParents\");\n  }\n  isGroupUseEntireRow(pivotMode) {\n    if (pivotMode) {\n      return false;\n    }\n    return this.gridOptions.groupDisplayType === \"groupRows\";\n  }\n  getGridCommonParams() {\n    return {\n      api: this.api,\n      context: this.gridOptionsContext\n    };\n  }\n  addGridCommonParams(params) {\n    const updatedParams = params;\n    updatedParams.api = this.api;\n    updatedParams.context = this.gridOptionsContext;\n    return updatedParams;\n  }\n  // AG-9259 Can't use `WrappedCallback<'getRowId', ...>` here because of a strange typescript bug\n  getRowIdCallback() {\n    const getRowId = this.getCallback(\"getRowId\");\n    if (getRowId === void 0) {\n      return getRowId;\n    }\n    return (params) => {\n      let id = getRowId(params);\n      if (typeof id !== \"string\") {\n        _warnOnce(`The getRowId callback must return a string. The ID `, id, ` is being cast to a string.`);\n        id = String(id);\n      }\n      return id;\n    };\n  }\n};\n_GridOptionsService.changeSetId = 0;\nvar GridOptionsService = _GridOptionsService;\n\n// community-modules/core/src/headerRendering/common/headerPosition.ts\nvar HeaderPositionUtils = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"headerPositionUtils\";\n  }\n  wireBeans(beans) {\n    this.visibleColsService = beans.visibleColsService;\n    this.ctrlsService = beans.ctrlsService;\n  }\n  findHeader(focusedHeader, direction) {\n    let nextColumn;\n    let getColMethod;\n    if (isColumnGroup(focusedHeader.column)) {\n      nextColumn = this.visibleColsService.getGroupAtDirection(focusedHeader.column, direction);\n    } else {\n      getColMethod = `getCol${direction}`;\n      nextColumn = this.visibleColsService[getColMethod](focusedHeader.column);\n    }\n    if (!nextColumn) {\n      return;\n    }\n    const { headerRowIndex } = focusedHeader;\n    if (this.getHeaderRowType(headerRowIndex) !== \"filter\" /* FLOATING_FILTER */) {\n      const columnsInPath = [nextColumn];\n      while (nextColumn.getParent()) {\n        nextColumn = nextColumn.getParent();\n        columnsInPath.push(nextColumn);\n      }\n      nextColumn = columnsInPath[columnsInPath.length - 1 - headerRowIndex];\n    }\n    const { column, headerRowIndex: indexToFocus } = this.getHeaderIndexToFocus(nextColumn, headerRowIndex);\n    return {\n      column,\n      headerRowIndex: indexToFocus\n    };\n  }\n  getHeaderIndexToFocus(column, currentIndex) {\n    let nextColumn;\n    if (isColumnGroup(column) && this.isAnyChildSpanningHeaderHeight(column) && column.isPadding()) {\n      const targetColumn = column;\n      nextColumn = targetColumn.getLeafColumns()[0];\n      let col = nextColumn;\n      while (col !== targetColumn) {\n        currentIndex++;\n        col = col.getParent();\n      }\n    }\n    return {\n      column: nextColumn || column,\n      headerRowIndex: currentIndex\n    };\n  }\n  isAnyChildSpanningHeaderHeight(columnGroup) {\n    if (!columnGroup) {\n      return false;\n    }\n    return columnGroup.getLeafColumns().some((col) => col.isSpanHeaderHeight());\n  }\n  getColumnVisibleParent(currentColumn, currentIndex) {\n    const currentRowType = this.getHeaderRowType(currentIndex);\n    const isFloatingFilter = currentRowType === \"filter\" /* FLOATING_FILTER */;\n    const isColumn2 = currentRowType === \"column\" /* COLUMN */;\n    let nextFocusColumn = isFloatingFilter ? currentColumn : currentColumn.getParent();\n    let nextRow = currentIndex - 1;\n    let headerRowIndexWithoutSpan = nextRow;\n    if (isColumn2 && this.isAnyChildSpanningHeaderHeight(currentColumn.getParent())) {\n      while (nextFocusColumn && nextFocusColumn.isPadding()) {\n        nextFocusColumn = nextFocusColumn.getParent();\n        nextRow--;\n      }\n      headerRowIndexWithoutSpan = nextRow;\n      if (nextRow < 0) {\n        nextFocusColumn = currentColumn;\n        nextRow = currentIndex;\n        headerRowIndexWithoutSpan = void 0;\n      }\n    }\n    return { column: nextFocusColumn, headerRowIndex: nextRow, headerRowIndexWithoutSpan };\n  }\n  getColumnVisibleChild(column, currentIndex, direction = \"After\") {\n    const currentRowType = this.getHeaderRowType(currentIndex);\n    let nextFocusColumn = column;\n    let nextRow = currentIndex + 1;\n    const headerRowIndexWithoutSpan = nextRow;\n    if (currentRowType === \"group\" /* COLUMN_GROUP */) {\n      const leafColumns = column.getDisplayedLeafColumns();\n      const leafColumn = direction === \"After\" ? leafColumns[0] : _last(leafColumns);\n      const columnsInTheWay = [];\n      let currentColumn = leafColumn;\n      while (currentColumn.getParent() !== column) {\n        currentColumn = currentColumn.getParent();\n        columnsInTheWay.push(currentColumn);\n      }\n      nextFocusColumn = leafColumn;\n      if (leafColumn.isSpanHeaderHeight()) {\n        for (let i = columnsInTheWay.length - 1; i >= 0; i--) {\n          const colToFocus = columnsInTheWay[i];\n          if (!colToFocus.isPadding()) {\n            nextFocusColumn = colToFocus;\n            break;\n          }\n          nextRow++;\n        }\n      } else {\n        nextFocusColumn = _last(columnsInTheWay);\n        if (!nextFocusColumn) {\n          nextFocusColumn = leafColumn;\n        }\n      }\n    }\n    return { column: nextFocusColumn, headerRowIndex: nextRow, headerRowIndexWithoutSpan };\n  }\n  getHeaderRowType(rowIndex) {\n    const centerHeaderContainer = this.ctrlsService.getHeaderRowContainerCtrl();\n    if (centerHeaderContainer) {\n      return centerHeaderContainer.getRowType(rowIndex);\n    }\n  }\n  findColAtEdgeForHeaderRow(level, position) {\n    const displayedColumns = this.visibleColsService.getAllCols();\n    const column = displayedColumns[position === \"start\" ? 0 : displayedColumns.length - 1];\n    if (!column) {\n      return;\n    }\n    const childContainer = this.ctrlsService.getHeaderRowContainerCtrl(column.getPinned());\n    const type = childContainer?.getRowType(level);\n    if (type == \"group\" /* COLUMN_GROUP */) {\n      const columnGroup = this.visibleColsService.getColGroupAtLevel(column, level);\n      return {\n        headerRowIndex: level,\n        column: columnGroup\n      };\n    }\n    return {\n      // if type==null, means the header level didn't exist\n      headerRowIndex: type == null ? -1 : level,\n      column\n    };\n  }\n};\n\n// community-modules/core/src/localeService.ts\nvar LocaleService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"localeService\";\n  }\n  getLocaleTextFunc() {\n    const getLocaleText = this.gos.getCallback(\"getLocaleText\");\n    if (getLocaleText) {\n      return (key, defaultValue, variableValues) => {\n        const params = {\n          key,\n          defaultValue,\n          variableValues\n        };\n        return getLocaleText(params);\n      };\n    }\n    const localeText = this.gos.get(\"localeText\");\n    return (key, defaultValue, variableValues) => {\n      let localisedText = localeText && localeText[key];\n      if (localisedText && variableValues && variableValues.length) {\n        let found = 0;\n        while (true) {\n          if (found >= variableValues.length) {\n            break;\n          }\n          const idx = localisedText.indexOf(\"${variable}\");\n          if (idx === -1) {\n            break;\n          }\n          localisedText = localisedText.replace(\"${variable}\", variableValues[found++]);\n        }\n      }\n      return localisedText ?? defaultValue;\n    };\n  }\n};\n\n// community-modules/core/src/misc/apiEventService.ts\nvar ApiEventService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"apiEventService\";\n    this.syncEventListeners = /* @__PURE__ */ new Map();\n    this.asyncEventListeners = /* @__PURE__ */ new Map();\n    this.syncGlobalEventListeners = /* @__PURE__ */ new Set();\n    this.globalEventListenerPairs = /* @__PURE__ */ new Map();\n  }\n  postConstruct() {\n    this.frameworkEventWrappingService = new FrameworkEventListenerService(this.getFrameworkOverrides());\n  }\n  addEventListener(eventType, userListener) {\n    const listener = this.frameworkEventWrappingService.wrap(userListener);\n    const async = this.gos.useAsyncEvents() && !ALWAYS_SYNC_GLOBAL_EVENTS.has(eventType);\n    const listeners = async ? this.asyncEventListeners : this.syncEventListeners;\n    if (!listeners.has(eventType)) {\n      listeners.set(eventType, /* @__PURE__ */ new Set());\n    }\n    listeners.get(eventType).add(listener);\n    this.eventService.addEventListener(eventType, listener, async);\n  }\n  removeEventListener(eventType, userListener) {\n    const listener = this.frameworkEventWrappingService.unwrap(userListener);\n    const asyncListeners = this.asyncEventListeners.get(eventType);\n    const hasAsync = !!asyncListeners?.delete(listener);\n    if (!hasAsync) {\n      this.syncEventListeners.get(eventType)?.delete(listener);\n    }\n    this.eventService.removeEventListener(eventType, listener, hasAsync);\n  }\n  addGlobalListener(userListener) {\n    const listener = this.frameworkEventWrappingService.wrapGlobal(userListener);\n    const async = this.gos.useAsyncEvents();\n    if (async) {\n      const syncListener = (eventType, event) => {\n        if (ALWAYS_SYNC_GLOBAL_EVENTS.has(eventType)) {\n          listener(eventType, event);\n        }\n      };\n      const asyncListener = (eventType, event) => {\n        if (!ALWAYS_SYNC_GLOBAL_EVENTS.has(eventType)) {\n          listener(eventType, event);\n        }\n      };\n      this.globalEventListenerPairs.set(userListener, { syncListener, asyncListener });\n      this.eventService.addGlobalListener(syncListener, false);\n      this.eventService.addGlobalListener(asyncListener, true);\n    } else {\n      this.syncGlobalEventListeners.add(listener);\n      this.eventService.addGlobalListener(listener, false);\n    }\n  }\n  removeGlobalListener(userListener) {\n    const listener = this.frameworkEventWrappingService.unwrapGlobal(userListener);\n    const hasAsync = this.globalEventListenerPairs.has(listener);\n    if (hasAsync) {\n      const { syncListener, asyncListener } = this.globalEventListenerPairs.get(listener);\n      this.eventService.removeGlobalListener(syncListener, false);\n      this.eventService.removeGlobalListener(asyncListener, true);\n      this.globalEventListenerPairs.delete(userListener);\n    } else {\n      this.syncGlobalEventListeners.delete(listener);\n      this.eventService.removeGlobalListener(listener, false);\n    }\n  }\n  destroyEventListeners(map, async) {\n    map.forEach((listeners, eventType) => {\n      listeners.forEach((listener) => this.eventService.removeEventListener(eventType, listener, async));\n      listeners.clear();\n    });\n    map.clear();\n  }\n  destroyGlobalListeners(set, async) {\n    set.forEach((listener) => this.eventService.removeGlobalListener(listener, async));\n    set.clear();\n  }\n  destroy() {\n    super.destroy();\n    this.destroyEventListeners(this.syncEventListeners, false);\n    this.destroyEventListeners(this.asyncEventListeners, true);\n    this.destroyGlobalListeners(this.syncGlobalEventListeners, false);\n    this.globalEventListenerPairs.forEach(({ syncListener, asyncListener }) => {\n      this.eventService.removeGlobalListener(syncListener, false);\n      this.eventService.removeGlobalListener(asyncListener, true);\n    });\n    this.globalEventListenerPairs.clear();\n  }\n};\n\n// community-modules/core/src/pagination/pageBoundsListener.ts\nvar PageBoundsListener = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"pageBoundsListener\";\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n    this.paginationService = beans.paginationService;\n    this.pageBoundsService = beans.pageBoundsService;\n  }\n  postConstruct() {\n    this.addManagedEventListeners({\n      modelUpdated: this.onModelUpdated.bind(this),\n      recalculateRowBounds: this.calculatePages.bind(this)\n    });\n    this.onModelUpdated();\n  }\n  onModelUpdated(modelUpdatedEvent) {\n    this.calculatePages();\n    this.eventService.dispatchEvent({\n      type: \"paginationChanged\",\n      animate: modelUpdatedEvent?.animate ?? false,\n      newData: modelUpdatedEvent?.newData ?? false,\n      newPage: modelUpdatedEvent?.newPage ?? false,\n      newPageSize: modelUpdatedEvent?.newPageSize ?? false,\n      keepRenderedRows: modelUpdatedEvent?.keepRenderedRows ?? false\n    });\n  }\n  calculatePages() {\n    if (this.paginationService) {\n      this.paginationService.calculatePages();\n    } else {\n      this.pageBoundsService.calculateBounds(0, this.rowModel.getRowCount() - 1);\n    }\n  }\n};\n\n// community-modules/core/src/pagination/pageBoundsService.ts\nvar PageBoundsService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"pageBoundsService\";\n    this.pixelOffset = 0;\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n  }\n  getFirstRow() {\n    return this.topRowBounds ? this.topRowBounds.rowIndex : -1;\n  }\n  getLastRow() {\n    return this.bottomRowBounds ? this.bottomRowBounds.rowIndex : -1;\n  }\n  getCurrentPageHeight() {\n    if (_missing(this.topRowBounds) || _missing(this.bottomRowBounds)) {\n      return 0;\n    }\n    return Math.max(this.bottomRowBounds.rowTop + this.bottomRowBounds.rowHeight - this.topRowBounds.rowTop, 0);\n  }\n  getCurrentPagePixelRange() {\n    const pageFirstPixel = this.topRowBounds ? this.topRowBounds.rowTop : 0;\n    const pageLastPixel = this.bottomRowBounds ? this.bottomRowBounds.rowTop + this.bottomRowBounds.rowHeight : 0;\n    return { pageFirstPixel, pageLastPixel };\n  }\n  calculateBounds(topDisplayedRowIndex, bottomDisplayedRowIndex) {\n    this.topRowBounds = this.rowModel.getRowBounds(topDisplayedRowIndex);\n    if (this.topRowBounds) {\n      this.topRowBounds.rowIndex = topDisplayedRowIndex;\n    }\n    this.bottomRowBounds = this.rowModel.getRowBounds(bottomDisplayedRowIndex);\n    if (this.bottomRowBounds) {\n      this.bottomRowBounds.rowIndex = bottomDisplayedRowIndex;\n    }\n    this.calculatePixelOffset();\n  }\n  getPixelOffset() {\n    return this.pixelOffset;\n  }\n  calculatePixelOffset() {\n    const value = _exists(this.topRowBounds) ? this.topRowBounds.rowTop : 0;\n    if (this.pixelOffset === value) {\n      return;\n    }\n    this.pixelOffset = value;\n    this.eventService.dispatchEvent({ type: \"paginationPixelOffsetChanged\" });\n  }\n};\n\n// community-modules/core/src/rendering/ariaAnnouncementService.ts\nvar AriaAnnouncementService = class extends BeanStub {\n  constructor() {\n    super();\n    this.beanName = \"ariaAnnouncementService\";\n    this.descriptionContainer = null;\n    this.pendingAnnouncements = /* @__PURE__ */ new Map();\n    this.updateAnnouncement = _debounce(this.updateAnnouncement.bind(this), 200);\n  }\n  wireBeans(beans) {\n    this.eGridDiv = beans.eGridDiv;\n  }\n  postConstruct() {\n    const eDocument = this.gos.getDocument();\n    const div = this.descriptionContainer = eDocument.createElement(\"div\");\n    div.classList.add(\"ag-aria-description-container\");\n    _setAriaLive(div, \"polite\");\n    _setAriaRelevant(div, \"additions text\");\n    _setAriaAtomic(div, true);\n    this.eGridDiv.appendChild(div);\n  }\n  /**\n   * @param key used for debouncing calls\n   */\n  announceValue(value, key) {\n    this.pendingAnnouncements.set(key, value);\n    this.updateAnnouncement();\n  }\n  updateAnnouncement() {\n    if (!this.descriptionContainer) {\n      return;\n    }\n    const value = Array.from(this.pendingAnnouncements.values()).join(\". \");\n    this.pendingAnnouncements.clear();\n    this.descriptionContainer.textContent = \"\";\n    setTimeout(() => {\n      if (this.isAlive() && this.descriptionContainer) {\n        this.descriptionContainer.textContent = value;\n      }\n    }, 50);\n  }\n  destroy() {\n    super.destroy();\n    const { descriptionContainer } = this;\n    if (descriptionContainer) {\n      _clearElement(descriptionContainer);\n      if (descriptionContainer.parentElement) {\n        descriptionContainer.parentElement.removeChild(descriptionContainer);\n      }\n    }\n    this.descriptionContainer = null;\n    this.eGridDiv = null;\n    this.pendingAnnouncements.clear();\n  }\n};\n\n// community-modules/core/src/rendering/columnAnimationService.ts\nvar ColumnAnimationService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnAnimationService\";\n    this.executeNextFuncs = [];\n    this.executeLaterFuncs = [];\n    this.active = false;\n    // activeNext starts with active but it is reset earlier after the nextFuncs are cleared\n    // to prevent calls made to executeNextVMTurn from queuing functions after executeNextFuncs has already been flushed,\n    this.activeNext = false;\n    this.suppressAnimation = false;\n    this.animationThreadCount = 0;\n  }\n  wireBeans(beans) {\n    this.ctrlsService = beans.ctrlsService;\n  }\n  postConstruct() {\n    this.ctrlsService.whenReady((p) => this.gridBodyCtrl = p.gridBodyCtrl);\n  }\n  isActive() {\n    return this.active && !this.suppressAnimation;\n  }\n  setSuppressAnimation(suppress) {\n    this.suppressAnimation = suppress;\n  }\n  start() {\n    if (this.active) {\n      return;\n    }\n    if (this.gos.get(\"suppressColumnMoveAnimation\")) {\n      return;\n    }\n    if (this.gos.get(\"enableRtl\")) {\n      return;\n    }\n    this.ensureAnimationCssClassPresent();\n    this.active = true;\n    this.activeNext = true;\n  }\n  finish() {\n    if (!this.active) {\n      return;\n    }\n    this.flush(\n      () => this.activeNext = false,\n      () => this.active = false\n    );\n  }\n  executeNextVMTurn(func) {\n    if (this.activeNext) {\n      this.executeNextFuncs.push(func);\n    } else {\n      func();\n    }\n  }\n  executeLaterVMTurn(func) {\n    if (this.active) {\n      this.executeLaterFuncs.push(func);\n    } else {\n      func();\n    }\n  }\n  ensureAnimationCssClassPresent() {\n    this.animationThreadCount++;\n    const animationThreadCountCopy = this.animationThreadCount;\n    this.gridBodyCtrl.setColumnMovingCss(true);\n    this.executeLaterFuncs.push(() => {\n      if (this.animationThreadCount === animationThreadCountCopy) {\n        this.gridBodyCtrl.setColumnMovingCss(false);\n      }\n    });\n  }\n  flush(callbackNext, callbackLater) {\n    if (this.executeNextFuncs.length === 0 && this.executeLaterFuncs.length === 0) {\n      callbackNext();\n      callbackLater();\n      return;\n    }\n    const runFuncs = (queue) => {\n      while (queue.length) {\n        const func = queue.pop();\n        if (func) {\n          func();\n        }\n      }\n    };\n    this.getFrameworkOverrides().wrapIncoming(() => {\n      window.setTimeout(() => {\n        callbackNext();\n        runFuncs(this.executeNextFuncs);\n      }, 0);\n      window.setTimeout(() => {\n        callbackLater();\n        runFuncs(this.executeLaterFuncs);\n      }, 200);\n    });\n  }\n};\n\n// community-modules/core/src/rendering/columnHoverService.ts\nvar ColumnHoverService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"columnHoverService\";\n  }\n  setMouseOver(columns) {\n    this.updateState(columns);\n  }\n  clearMouseOver() {\n    this.updateState(null);\n  }\n  isHovered(column) {\n    return !!this.selectedColumns && this.selectedColumns.indexOf(column) >= 0;\n  }\n  updateState(columns) {\n    this.selectedColumns = columns;\n    this.eventService.dispatchEvent({\n      type: \"columnHoverChanged\"\n    });\n  }\n};\n\n// community-modules/core/src/rendering/overlays/overlayService.ts\nvar OverlayService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"overlayService\";\n    this.state = 0 /* Hidden */;\n    this.showInitialOverlay = true;\n    this.wrapperPadding = 0;\n  }\n  wireBeans(beans) {\n    this.userComponentFactory = beans.userComponentFactory;\n    this.rowModel = beans.rowModel;\n    this.columnModel = beans.columnModel;\n    this.ctrlsService = beans.ctrlsService;\n  }\n  postConstruct() {\n    this.isClientSide = this.gos.isRowModelType(\"clientSide\");\n    const updateOverlayVisibility = () => this.updateOverlayVisibility();\n    this.addManagedEventListeners({\n      newColumnsLoaded: updateOverlayVisibility,\n      rowDataUpdated: updateOverlayVisibility,\n      gridSizeChanged: this.onGridSizeChanged.bind(this),\n      rowCountReady: () => {\n        this.showInitialOverlay = false;\n        this.updateOverlayVisibility();\n      }\n    });\n    this.addManagedPropertyListener(\"loading\", updateOverlayVisibility);\n  }\n  registerOverlayWrapperComp(overlayWrapperComp) {\n    this.overlayWrapperComp = overlayWrapperComp;\n    this.updateOverlayVisibility();\n  }\n  /** Returns true if the overlay is visible. */\n  isVisible() {\n    return this.state !== 0 /* Hidden */;\n  }\n  /** Returns true if the overlay is visible and is exclusive (popup over the grid) */\n  isExclusive() {\n    return this.state === 1 /* Loading */;\n  }\n  /** Gets the overlay wrapper component */\n  getOverlayWrapper() {\n    return this.overlayWrapperComp;\n  }\n  showLoadingOverlay() {\n    this.showInitialOverlay = false;\n    const loading = this.gos.get(\"loading\");\n    if (!loading && (loading !== void 0 || this.gos.get(\"suppressLoadingOverlay\"))) {\n      return;\n    }\n    this.doShowLoadingOverlay();\n  }\n  showNoRowsOverlay() {\n    this.showInitialOverlay = false;\n    if (this.gos.get(\"loading\") || this.gos.get(\"suppressNoRowsOverlay\")) {\n      return;\n    }\n    this.doShowNoRowsOverlay();\n  }\n  hideOverlay() {\n    this.showInitialOverlay = false;\n    if (this.gos.get(\"loading\")) {\n      _warnOnce(\n        \"Since v32, `api.hideOverlay()` does not hide the loading overlay when `loading=true`. Set `loading=false` instead.\"\n      );\n      return;\n    }\n    this.doHideOverlay();\n  }\n  updateOverlayVisibility() {\n    let loading = this.gos.get(\"loading\");\n    if (this.showInitialOverlay && loading === void 0 && !this.gos.get(\"suppressLoadingOverlay\")) {\n      loading = !this.gos.get(\"columnDefs\") || !this.columnModel.isReady() || !this.gos.get(\"rowData\") && this.isClientSide;\n    }\n    if (loading) {\n      if (this.state !== 1 /* Loading */) {\n        this.doShowLoadingOverlay();\n      }\n    } else {\n      this.showInitialOverlay = false;\n      if (this.rowModel.isEmpty() && !this.gos.get(\"suppressNoRowsOverlay\") && this.isClientSide) {\n        if (this.state !== 2 /* NoRows */) {\n          this.doShowNoRowsOverlay();\n        }\n      } else if (this.state !== 0 /* Hidden */) {\n        this.doHideOverlay();\n      }\n    }\n  }\n  doShowLoadingOverlay() {\n    this.state = 1 /* Loading */;\n    this.showOverlay(\n      this.userComponentFactory.getLoadingOverlayCompDetails({}),\n      \"ag-overlay-loading-wrapper\",\n      \"loadingOverlayComponentParams\"\n    );\n    this.updateExclusive();\n  }\n  doShowNoRowsOverlay() {\n    this.state = 2 /* NoRows */;\n    this.showOverlay(\n      this.userComponentFactory.getNoRowsOverlayCompDetails({}),\n      \"ag-overlay-no-rows-wrapper\",\n      \"noRowsOverlayComponentParams\"\n    );\n    this.updateExclusive();\n  }\n  doHideOverlay() {\n    this.state = 0 /* Hidden */;\n    this.overlayWrapperComp.hideOverlay();\n    this.updateExclusive();\n  }\n  showOverlay(compDetails, wrapperCssClass, gridOption) {\n    const promise = compDetails.newAgStackInstance();\n    this.overlayWrapperComp.showOverlay(promise, wrapperCssClass, this.isExclusive(), gridOption);\n    this.refreshWrapperPadding();\n  }\n  updateExclusive() {\n    const wasExclusive = this.exclusive;\n    this.exclusive = this.isExclusive();\n    if (this.exclusive !== wasExclusive) {\n      this.eventService.dispatchEvent({\n        type: \"overlayExclusiveChanged\"\n      });\n    }\n  }\n  onGridSizeChanged() {\n    this.refreshWrapperPadding();\n  }\n  refreshWrapperPadding() {\n    let newPadding = 0;\n    if (this.state === 2 /* NoRows */) {\n      const headerCtrl = this.ctrlsService.get(\"gridHeaderCtrl\");\n      const headerHeight = headerCtrl?.getHeaderHeight() || 0;\n      newPadding = headerHeight;\n    } else if (this.wrapperPadding !== 0) {\n      newPadding = 0;\n    }\n    if (this.wrapperPadding === newPadding) {\n      return;\n    }\n    this.wrapperPadding = newPadding;\n    this.overlayWrapperComp.updateOverlayWrapperPaddingTop(newPadding);\n  }\n};\n\n// community-modules/core/src/rendering/row/rowCssClassCalculator.ts\nvar RowCssClassCalculator = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowCssClassCalculator\";\n  }\n  wireBeans(beans) {\n    this.stylingService = beans.stylingService;\n  }\n  getInitialRowClasses(params) {\n    const classes = [];\n    if (_exists(params.extraCssClass)) {\n      classes.push(params.extraCssClass);\n    }\n    classes.push(\"ag-row\");\n    classes.push(params.rowFocused ? \"ag-row-focus\" : \"ag-row-no-focus\");\n    if (params.fadeRowIn) {\n      classes.push(\"ag-opacity-zero\");\n    }\n    classes.push(params.rowIsEven ? \"ag-row-even\" : \"ag-row-odd\");\n    if (params.rowNode.isRowPinned()) {\n      classes.push(\"ag-row-pinned\");\n    }\n    if (params.rowNode.isSelected()) {\n      classes.push(\"ag-row-selected\");\n    }\n    if (params.rowNode.footer) {\n      classes.push(\"ag-row-footer\");\n    }\n    classes.push(\"ag-row-level-\" + params.rowLevel);\n    if (params.rowNode.stub) {\n      classes.push(\"ag-row-loading\");\n    }\n    if (params.fullWidthRow) {\n      classes.push(\"ag-full-width-row\");\n    }\n    if (params.expandable) {\n      classes.push(\"ag-row-group\");\n      classes.push(params.rowNode.expanded ? \"ag-row-group-expanded\" : \"ag-row-group-contracted\");\n    }\n    if (params.rowNode.dragging) {\n      classes.push(\"ag-row-dragging\");\n    }\n    _pushAll(classes, this.processClassesFromGridOptions(params.rowNode));\n    _pushAll(classes, this.preProcessRowClassRules(params.rowNode));\n    classes.push(params.printLayout ? \"ag-row-position-relative\" : \"ag-row-position-absolute\");\n    if (params.firstRowOnPage) {\n      classes.push(\"ag-row-first\");\n    }\n    if (params.lastRowOnPage) {\n      classes.push(\"ag-row-last\");\n    }\n    if (params.fullWidthRow) {\n      if (params.pinned === \"left\") {\n        classes.push(\"ag-cell-last-left-pinned\");\n      }\n      if (params.pinned === \"right\") {\n        classes.push(\"ag-cell-first-right-pinned\");\n      }\n    }\n    return classes;\n  }\n  processClassesFromGridOptions(rowNode) {\n    const res = [];\n    const process = (rowCls) => {\n      if (typeof rowCls === \"string\") {\n        res.push(rowCls);\n      } else if (Array.isArray(rowCls)) {\n        rowCls.forEach((e) => res.push(e));\n      }\n    };\n    const rowClass = this.gos.get(\"rowClass\");\n    if (rowClass) {\n      if (typeof rowClass === \"function\") {\n        _warnOnce(\"rowClass should not be a function, please use getRowClass instead\");\n        return [];\n      }\n      process(rowClass);\n    }\n    const rowClassFunc = this.gos.getCallback(\"getRowClass\");\n    if (rowClassFunc) {\n      const params = {\n        data: rowNode.data,\n        node: rowNode,\n        rowIndex: rowNode.rowIndex\n      };\n      const rowClassFuncResult = rowClassFunc(params);\n      process(rowClassFuncResult);\n    }\n    return res;\n  }\n  preProcessRowClassRules(rowNode) {\n    const res = [];\n    this.processRowClassRules(\n      rowNode,\n      (className) => {\n        res.push(className);\n      },\n      () => {\n      }\n    );\n    return res;\n  }\n  processRowClassRules(rowNode, onApplicableClass, onNotApplicableClass) {\n    const rowClassParams = this.gos.addGridCommonParams({\n      data: rowNode.data,\n      node: rowNode,\n      rowIndex: rowNode.rowIndex\n    });\n    this.stylingService.processClassRules(\n      void 0,\n      this.gos.get(\"rowClassRules\"),\n      rowClassParams,\n      onApplicableClass,\n      onNotApplicableClass\n    );\n  }\n  calculateRowLevel(rowNode) {\n    if (rowNode.group) {\n      return rowNode.level;\n    }\n    return rowNode.parent ? rowNode.parent.level + 1 : 0;\n  }\n};\n\n// community-modules/core/src/rendering/rowContainerHeightService.ts\nvar RowContainerHeightService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowContainerHeightService\";\n    // the scrollY position\n    this.scrollY = 0;\n    // how tall the body is\n    this.uiBodyHeight = 0;\n  }\n  wireBeans(beans) {\n    this.ctrlsService = beans.ctrlsService;\n  }\n  postConstruct() {\n    this.addManagedEventListeners({ bodyHeightChanged: this.updateOffset.bind(this) });\n    this.maxDivHeight = _getMaxDivHeight();\n    if (this.gos.get(\"debug\")) {\n      _log(\"RowContainerHeightService - maxDivHeight = \" + this.maxDivHeight);\n    }\n  }\n  isStretching() {\n    return this.stretching;\n  }\n  getDivStretchOffset() {\n    return this.divStretchOffset;\n  }\n  updateOffset() {\n    if (!this.stretching) {\n      return;\n    }\n    const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    const newScrollY = gridBodyCon.getScrollFeature().getVScrollPosition().top;\n    const newBodyHeight = this.getUiBodyHeight();\n    const atLeastOneChanged = newScrollY !== this.scrollY || newBodyHeight !== this.uiBodyHeight;\n    if (atLeastOneChanged) {\n      this.scrollY = newScrollY;\n      this.uiBodyHeight = newBodyHeight;\n      this.calculateOffset();\n    }\n  }\n  calculateOffset() {\n    this.setUiContainerHeight(this.maxDivHeight);\n    this.pixelsToShave = this.modelHeight - this.uiContainerHeight;\n    this.maxScrollY = this.uiContainerHeight - this.uiBodyHeight;\n    const scrollPercent = this.scrollY / this.maxScrollY;\n    const divStretchOffset = scrollPercent * this.pixelsToShave;\n    if (this.gos.get(\"debug\")) {\n      _log(\n        `RowContainerHeightService - Div Stretch Offset = ${divStretchOffset} (${this.pixelsToShave} * ${scrollPercent})`\n      );\n    }\n    this.setDivStretchOffset(divStretchOffset);\n  }\n  setUiContainerHeight(height) {\n    if (height !== this.uiContainerHeight) {\n      this.uiContainerHeight = height;\n      this.eventService.dispatchEvent({ type: \"rowContainerHeightChanged\" });\n    }\n  }\n  clearOffset() {\n    this.setUiContainerHeight(this.modelHeight);\n    this.pixelsToShave = 0;\n    this.setDivStretchOffset(0);\n  }\n  setDivStretchOffset(newOffset) {\n    const newOffsetFloor = typeof newOffset === \"number\" ? Math.floor(newOffset) : null;\n    if (this.divStretchOffset === newOffsetFloor) {\n      return;\n    }\n    this.divStretchOffset = newOffsetFloor;\n    this.eventService.dispatchEvent({ type: \"heightScaleChanged\" });\n  }\n  setModelHeight(modelHeight) {\n    this.modelHeight = modelHeight;\n    this.stretching = modelHeight != null && // null happens when in print layout\n    this.maxDivHeight > 0 && modelHeight > this.maxDivHeight;\n    if (this.stretching) {\n      this.calculateOffset();\n    } else {\n      this.clearOffset();\n    }\n  }\n  getUiContainerHeight() {\n    return this.uiContainerHeight;\n  }\n  getRealPixelPosition(modelPixel) {\n    return modelPixel - this.divStretchOffset;\n  }\n  getUiBodyHeight() {\n    const gridBodyCon = this.ctrlsService.getGridBodyCtrl();\n    const pos = gridBodyCon.getScrollFeature().getVScrollPosition();\n    return pos.bottom - pos.top;\n  }\n  getScrollPositionForPixel(rowTop) {\n    if (this.pixelsToShave <= 0) {\n      return rowTop;\n    }\n    const modelMaxScroll = this.modelHeight - this.getUiBodyHeight();\n    const scrollPercent = rowTop / modelMaxScroll;\n    const scrollPixel = this.maxScrollY * scrollPercent;\n    return scrollPixel;\n  }\n};\n\n// community-modules/core/src/rowNodes/rowNodeSorter.ts\nvar RowNodeSorter = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowNodeSorter\";\n  }\n  wireBeans(beans) {\n    this.valueService = beans.valueService;\n    this.columnModel = beans.columnModel;\n    this.showRowGroupColsService = beans.showRowGroupColsService;\n  }\n  postConstruct() {\n    this.isAccentedSort = this.gos.get(\"accentedSort\");\n    this.primaryColumnsSortGroups = this.gos.isColumnsSortingCoupledToGroup();\n    this.addManagedPropertyListener(\n      \"accentedSort\",\n      (propChange) => this.isAccentedSort = propChange.currentValue\n    );\n    this.addManagedPropertyListener(\n      \"autoGroupColumnDef\",\n      () => this.primaryColumnsSortGroups = this.gos.isColumnsSortingCoupledToGroup()\n    );\n  }\n  doFullSort(rowNodes, sortOptions) {\n    const mapper = (rowNode, pos) => ({ currentPos: pos, rowNode });\n    const sortedRowNodes = rowNodes.map(mapper);\n    sortedRowNodes.sort(this.compareRowNodes.bind(this, sortOptions));\n    return sortedRowNodes.map((item) => item.rowNode);\n  }\n  compareRowNodes(sortOptions, sortedNodeA, sortedNodeB) {\n    const nodeA = sortedNodeA.rowNode;\n    const nodeB = sortedNodeB.rowNode;\n    for (let i = 0, len = sortOptions.length; i < len; i++) {\n      const sortOption = sortOptions[i];\n      const isDescending = sortOption.sort === \"desc\";\n      const valueA = this.getValue(nodeA, sortOption.column);\n      const valueB = this.getValue(nodeB, sortOption.column);\n      let comparatorResult;\n      const providedComparator = this.getComparator(sortOption, nodeA);\n      if (providedComparator) {\n        comparatorResult = providedComparator(valueA, valueB, nodeA, nodeB, isDescending);\n      } else {\n        comparatorResult = _defaultComparator(valueA, valueB, this.isAccentedSort);\n      }\n      const validResult = !isNaN(comparatorResult);\n      if (validResult && comparatorResult !== 0) {\n        return sortOption.sort === \"asc\" ? comparatorResult : comparatorResult * -1;\n      }\n    }\n    return sortedNodeA.currentPos - sortedNodeB.currentPos;\n  }\n  getComparator(sortOption, rowNode) {\n    const column = sortOption.column;\n    const comparatorOnCol = column.getColDef().comparator;\n    if (comparatorOnCol != null) {\n      return comparatorOnCol;\n    }\n    if (!column.getColDef().showRowGroup) {\n      return;\n    }\n    const groupLeafField = !rowNode.group && column.getColDef().field;\n    if (!groupLeafField) {\n      return;\n    }\n    const primaryColumn = this.columnModel.getColDefCol(groupLeafField);\n    if (!primaryColumn) {\n      return;\n    }\n    return primaryColumn.getColDef().comparator;\n  }\n  getValue(node, column) {\n    if (!this.primaryColumnsSortGroups) {\n      return this.valueService.getValue(column, node, false, false);\n    }\n    const isNodeGroupedAtLevel = node.rowGroupColumn === column;\n    if (isNodeGroupedAtLevel) {\n      const isGroupRows = this.gos.isGroupUseEntireRow(this.columnModel.isPivotActive());\n      if (isGroupRows) {\n        const leafChild = node.allLeafChildren?.[0];\n        if (leafChild) {\n          return this.valueService.getValue(column, leafChild, false, false);\n        }\n        return void 0;\n      }\n      const displayCol = this.showRowGroupColsService?.getShowRowGroupCol(column.getId());\n      if (!displayCol) {\n        return void 0;\n      }\n      return node.groupData?.[displayCol.getId()];\n    }\n    if (node.group && column.getColDef().showRowGroup) {\n      return void 0;\n    }\n    return this.valueService.getValue(column, node, false, false);\n  }\n};\n\n// community-modules/core/src/utils/changedPath.ts\nvar ChangedPath = class {\n  constructor(keepingColumns, rootNode) {\n    // whether changed path is active of not. it is active when a) doing\n    // a transaction update or b) doing change detection. if we are doing\n    // a CSRM refresh for other reasons (after sort or filter, or user calling\n    // setRowData() without delta mode) then we are not active. we are also\n    // marked as not active if secondary columns change in pivot (as this impacts\n    // aggregations)\n    this.active = true;\n    // for each node in the change path, we also store which columns need\n    // to be re-aggregated.\n    this.nodeIdsToColumns = {};\n    // for quick lookup, all items in the change path are mapped by nodeId\n    this.mapToItems = {};\n    this.keepingColumns = keepingColumns;\n    this.pathRoot = {\n      rowNode: rootNode,\n      children: null\n    };\n    this.mapToItems[rootNode.id] = this.pathRoot;\n  }\n  // can be set inactive by:\n  // a) ClientSideRowModel, if no transactions or\n  // b) PivotService, if secondary columns changed\n  setInactive() {\n    this.active = false;\n  }\n  isActive() {\n    return this.active;\n  }\n  depthFirstSearchChangedPath(pathItem, callback) {\n    if (pathItem.children) {\n      for (let i = 0; i < pathItem.children.length; i++) {\n        this.depthFirstSearchChangedPath(pathItem.children[i], callback);\n      }\n    }\n    callback(pathItem.rowNode);\n  }\n  depthFirstSearchEverything(rowNode, callback, traverseEverything) {\n    if (rowNode.childrenAfterGroup) {\n      for (let i = 0; i < rowNode.childrenAfterGroup.length; i++) {\n        const childNode = rowNode.childrenAfterGroup[i];\n        if (childNode.childrenAfterGroup) {\n          this.depthFirstSearchEverything(rowNode.childrenAfterGroup[i], callback, traverseEverything);\n        } else if (traverseEverything) {\n          callback(childNode);\n        }\n      }\n    }\n    callback(rowNode);\n  }\n  // traverseLeafNodes -> used when NOT doing changed path, ie traversing everything. the callback\n  // will be called for child nodes in addition to parent nodes.\n  forEachChangedNodeDepthFirst(callback, traverseLeafNodes = false, includeUnchangedNodes = false) {\n    if (this.active && !includeUnchangedNodes) {\n      this.depthFirstSearchChangedPath(this.pathRoot, callback);\n    } else {\n      this.depthFirstSearchEverything(this.pathRoot.rowNode, callback, traverseLeafNodes);\n    }\n  }\n  executeFromRootNode(callback) {\n    callback(this.pathRoot.rowNode);\n  }\n  createPathItems(rowNode) {\n    let pointer = rowNode;\n    let newEntryCount = 0;\n    while (!this.mapToItems[pointer.id]) {\n      const newEntry = {\n        rowNode: pointer,\n        children: null\n      };\n      this.mapToItems[pointer.id] = newEntry;\n      newEntryCount++;\n      pointer = pointer.parent;\n    }\n    return newEntryCount;\n  }\n  populateColumnsMap(rowNode, columns) {\n    if (!this.keepingColumns || !columns) {\n      return;\n    }\n    let pointer = rowNode;\n    while (pointer) {\n      if (!this.nodeIdsToColumns[pointer.id]) {\n        this.nodeIdsToColumns[pointer.id] = {};\n      }\n      columns.forEach((col) => this.nodeIdsToColumns[pointer.id][col.getId()] = true);\n      pointer = pointer.parent;\n    }\n  }\n  linkPathItems(rowNode, newEntryCount) {\n    let pointer = rowNode;\n    for (let i = 0; i < newEntryCount; i++) {\n      const thisItem = this.mapToItems[pointer.id];\n      const parentItem = this.mapToItems[pointer.parent.id];\n      if (!parentItem.children) {\n        parentItem.children = [];\n      }\n      parentItem.children.push(thisItem);\n      pointer = pointer.parent;\n    }\n  }\n  // called by\n  // 1) change detection (provides cols) and\n  // 2) groupStage if doing transaction update (doesn't provide cols)\n  addParentNode(rowNode, columns) {\n    if (!rowNode || rowNode.isRowPinned()) {\n      return;\n    }\n    const newEntryCount = this.createPathItems(rowNode);\n    this.linkPathItems(rowNode, newEntryCount);\n    this.populateColumnsMap(rowNode, columns);\n  }\n  canSkip(rowNode) {\n    return this.active && !this.mapToItems[rowNode.id];\n  }\n  getValueColumnsForNode(rowNode, valueColumns) {\n    if (!this.keepingColumns) {\n      return valueColumns;\n    }\n    const colsForThisNode = this.nodeIdsToColumns[rowNode.id];\n    const result = valueColumns.filter((col) => colsForThisNode[col.getId()]);\n    return result;\n  }\n  getNotValueColumnsForNode(rowNode, valueColumns) {\n    if (!this.keepingColumns) {\n      return null;\n    }\n    const colsForThisNode = this.nodeIdsToColumns[rowNode.id];\n    const result = valueColumns.filter((col) => !colsForThisNode[col.getId()]);\n    return result;\n  }\n};\n\n// community-modules/core/src/selection/selectionService.ts\nvar SelectionService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"selectionService\";\n    this.selectedNodes = /* @__PURE__ */ new Map();\n    this.selectionCtx = new RowRangeSelectionContext();\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n    this.pageBoundsService = beans.pageBoundsService;\n  }\n  postConstruct() {\n    this.selectionCtx.init(this.rowModel);\n    this.rowSelection = this.gos.get(\"rowSelection\");\n    this.groupSelectsChildren = this.gos.get(\"groupSelectsChildren\");\n    this.addManagedPropertyListeners([\"groupSelectsChildren\", \"rowSelection\"], () => {\n      this.groupSelectsChildren = this.gos.get(\"groupSelectsChildren\");\n      this.rowSelection = this.gos.get(\"rowSelection\");\n      this.deselectAllRowNodes({ source: \"api\" });\n    });\n    this.addManagedEventListeners({ rowSelected: this.onRowSelected.bind(this) });\n  }\n  destroy() {\n    super.destroy();\n    this.resetNodes();\n    this.selectionCtx.reset();\n  }\n  isMultiselect() {\n    return this.rowSelection === \"multiple\";\n  }\n  /**\n   * We override the selection value for UI-triggered events because it's the\n   * current selection state that should determine the next selection state. This\n   * is a stepping stone towards removing selection logic from event listeners and\n   * other code external to the selection service(s).\n   */\n  overrideSelectionValue(newValue, source) {\n    if (!isSelectionUIEvent(source)) {\n      return newValue;\n    }\n    const root = this.selectionCtx.getRoot();\n    return root ? root.isSelected() ?? false : true;\n  }\n  setNodesSelected(params) {\n    const { newValue, clearSelection, suppressFinishActions, rangeSelect, nodes, event, source } = params;\n    if (nodes.length === 0)\n      return 0;\n    if (nodes.length > 1 && !this.isMultiselect()) {\n      _warnOnce(`cannot multi select while rowSelection='single'`);\n      return 0;\n    }\n    const groupSelectsFiltered = this.groupSelectsChildren && params.groupSelectsFiltered === true;\n    const filteredNodes = nodes.map((node) => node.footer ? node.sibling : node);\n    if (rangeSelect) {\n      if (filteredNodes.length > 1) {\n        _warnOnce(\"cannot range select while selecting multiple rows\");\n        return 0;\n      }\n      const node = filteredNodes[0];\n      const newSelectionValue = this.overrideSelectionValue(newValue, source);\n      if (!this.isMultiselect()) {\n      } else if (this.selectionCtx.isInRange(node)) {\n        const partition = this.selectionCtx.truncate(node);\n        if (newSelectionValue) {\n          this.selectRange(partition.discard, false, source);\n        }\n        return this.selectRange(partition.keep, newSelectionValue, source);\n      } else {\n        const fromNode = this.selectionCtx.getRoot();\n        const toNode = node;\n        if (fromNode !== toNode) {\n          const partition = this.selectionCtx.extend(node, this.groupSelectsChildren);\n          if (newSelectionValue) {\n            this.selectRange(partition.discard, false, source);\n          }\n          return this.selectRange(partition.keep, newSelectionValue, source);\n        }\n      }\n    }\n    if (!suppressFinishActions) {\n      this.selectionCtx.setRoot(filteredNodes[0]);\n    }\n    let updatedCount = 0;\n    for (let i = 0; i < filteredNodes.length; i++) {\n      const node = filteredNodes[i];\n      const skipThisNode = groupSelectsFiltered && node.group;\n      if (!skipThisNode) {\n        const thisNodeWasSelected = node.selectThisNode(newValue, event, source);\n        if (thisNodeWasSelected) {\n          updatedCount++;\n        }\n      }\n      if (this.groupSelectsChildren && node.childrenAfterGroup?.length) {\n        updatedCount += this.selectChildren(node, newValue, groupSelectsFiltered, source);\n      }\n    }\n    if (!suppressFinishActions) {\n      const clearOtherNodes = newValue && (clearSelection || !this.isMultiselect());\n      if (clearOtherNodes) {\n        updatedCount += this.clearOtherNodes(filteredNodes[0], source);\n      }\n      if (updatedCount > 0) {\n        this.updateGroupsFromChildrenSelections(source);\n        this.dispatchSelectionChanged(source);\n      }\n    }\n    return updatedCount;\n  }\n  // not to be mixed up with 'cell range selection' where you drag the mouse, this is row range selection, by\n  // holding down 'shift'.\n  selectRange(nodesToSelect, value, source) {\n    let updatedCount = 0;\n    nodesToSelect.forEach((rowNode) => {\n      if (rowNode.group && this.groupSelectsChildren) {\n        return;\n      }\n      const nodeWasSelected = rowNode.selectThisNode(value, void 0, source);\n      if (nodeWasSelected) {\n        updatedCount++;\n      }\n    });\n    if (updatedCount > 0) {\n      this.updateGroupsFromChildrenSelections(source);\n      this.dispatchSelectionChanged(source);\n    }\n    return updatedCount;\n  }\n  selectChildren(node, newValue, groupSelectsFiltered, source) {\n    const children = groupSelectsFiltered ? node.childrenAfterAggFilter : node.childrenAfterGroup;\n    if (_missing(children)) {\n      return 0;\n    }\n    return this.setNodesSelected({\n      newValue,\n      clearSelection: false,\n      suppressFinishActions: true,\n      groupSelectsFiltered,\n      source,\n      nodes: children\n    });\n  }\n  getSelectedNodes() {\n    const selectedNodes = [];\n    this.selectedNodes.forEach((rowNode) => {\n      if (rowNode) {\n        selectedNodes.push(rowNode);\n      }\n    });\n    return selectedNodes;\n  }\n  getSelectedRows() {\n    const selectedRows = [];\n    this.selectedNodes.forEach((rowNode) => {\n      if (rowNode && rowNode.data) {\n        selectedRows.push(rowNode.data);\n      }\n    });\n    return selectedRows;\n  }\n  getSelectionCount() {\n    return this.selectedNodes.size;\n  }\n  /**\n   * This method is used by the CSRM to remove groups which are being disposed of,\n   * events do not need fired in this case\n   */\n  filterFromSelection(predicate) {\n    const newSelectedNodes = /* @__PURE__ */ new Map();\n    this.selectedNodes.forEach((rowNode, key) => {\n      const passesPredicate = rowNode && predicate(rowNode);\n      if (passesPredicate) {\n        newSelectedNodes.set(key, rowNode);\n      }\n    });\n    this.selectedNodes = newSelectedNodes;\n  }\n  // should only be called if groupSelectsChildren=true\n  updateGroupsFromChildrenSelections(source, changedPath) {\n    if (!this.groupSelectsChildren) {\n      return false;\n    }\n    if (this.rowModel.getType() !== \"clientSide\") {\n      return false;\n    }\n    const clientSideRowModel = this.rowModel;\n    const rootNode = clientSideRowModel.getRootNode();\n    if (!changedPath) {\n      changedPath = new ChangedPath(true, rootNode);\n      changedPath.setInactive();\n    }\n    let selectionChanged = false;\n    changedPath.forEachChangedNodeDepthFirst((rowNode) => {\n      if (rowNode !== rootNode) {\n        const selected = rowNode.calculateSelectedFromChildren();\n        selectionChanged = rowNode.selectThisNode(selected === null ? false : selected, void 0, source) || selectionChanged;\n      }\n    });\n    return selectionChanged;\n  }\n  clearOtherNodes(rowNodeToKeepSelected, source) {\n    const groupsToRefresh = /* @__PURE__ */ new Map();\n    let updatedCount = 0;\n    this.selectedNodes.forEach((otherRowNode) => {\n      if (otherRowNode && otherRowNode.id !== rowNodeToKeepSelected.id) {\n        const rowNode = this.selectedNodes.get(otherRowNode.id);\n        updatedCount += rowNode.setSelectedParams({\n          newValue: false,\n          clearSelection: false,\n          suppressFinishActions: true,\n          source\n        });\n        if (this.groupSelectsChildren && otherRowNode.parent) {\n          groupsToRefresh.set(otherRowNode.parent.id, otherRowNode.parent);\n        }\n      }\n    });\n    groupsToRefresh.forEach((group) => {\n      const selected = group.calculateSelectedFromChildren();\n      group.selectThisNode(selected === null ? false : selected, void 0, source);\n    });\n    return updatedCount;\n  }\n  onRowSelected(event) {\n    const rowNode = event.node;\n    if (this.groupSelectsChildren && rowNode.group) {\n      return;\n    }\n    if (rowNode.isSelected()) {\n      this.selectedNodes.set(rowNode.id, rowNode);\n    } else {\n      this.selectedNodes.delete(rowNode.id);\n    }\n  }\n  syncInRowNode(rowNode, oldNode) {\n    this.syncInOldRowNode(rowNode, oldNode);\n    this.syncInNewRowNode(rowNode);\n  }\n  // if the id has changed for the node, then this means the rowNode\n  // is getting used for a different data item, which breaks\n  // our selectedNodes, as the node now is mapped by the old id\n  // which is inconsistent. so to keep the old node as selected,\n  // we swap in the clone (with the old id and old data). this means\n  // the oldNode is effectively a daemon we keep a reference to,\n  // so if client calls api.getSelectedNodes(), it gets the daemon\n  // in the result. when the client un-selects, the reference to the\n  // daemon is removed. the daemon, because it's an oldNode, is not\n  // used by the grid for rendering, it's a copy of what the node used\n  // to be like before the id was changed.\n  syncInOldRowNode(rowNode, oldNode) {\n    const oldNodeHasDifferentId = _exists(oldNode) && rowNode.id !== oldNode.id;\n    if (oldNodeHasDifferentId && oldNode) {\n      const id = oldNode.id;\n      const oldNodeSelected = this.selectedNodes.get(id) == rowNode;\n      if (oldNodeSelected) {\n        this.selectedNodes.set(oldNode.id, oldNode);\n      }\n    }\n  }\n  syncInNewRowNode(rowNode) {\n    if (this.selectedNodes.has(rowNode.id)) {\n      rowNode.setSelectedInitialValue(true);\n      this.selectedNodes.set(rowNode.id, rowNode);\n    } else {\n      rowNode.setSelectedInitialValue(false);\n    }\n  }\n  reset(source) {\n    const selectionCount = this.getSelectionCount();\n    this.resetNodes();\n    if (selectionCount) {\n      this.dispatchSelectionChanged(source);\n    }\n  }\n  resetNodes() {\n    this.selectedNodes?.clear();\n  }\n  // returns a list of all nodes at 'best cost' - a feature to be used\n  // with groups / trees. if a group has all it's children selected,\n  // then the group appears in the result, but not the children.\n  // Designed for use with 'children' as the group selection type,\n  // where groups don't actually appear in the selection normally.\n  getBestCostNodeSelection() {\n    if (this.rowModel.getType() !== \"clientSide\") {\n      return;\n    }\n    const clientSideRowModel = this.rowModel;\n    const topLevelNodes = clientSideRowModel.getTopLevelNodes();\n    if (topLevelNodes === null) {\n      return;\n    }\n    const result = [];\n    function traverse(nodes) {\n      for (let i = 0, l = nodes.length; i < l; i++) {\n        const node = nodes[i];\n        if (node.isSelected()) {\n          result.push(node);\n        } else {\n          const maybeGroup = node;\n          if (maybeGroup.group && maybeGroup.children) {\n            traverse(maybeGroup.children);\n          }\n        }\n      }\n    }\n    traverse(topLevelNodes);\n    return result;\n  }\n  isEmpty() {\n    let count = 0;\n    this.selectedNodes.forEach((rowNode) => {\n      if (rowNode) {\n        count++;\n      }\n    });\n    return count === 0;\n  }\n  deselectAllRowNodes(params) {\n    const callback = (rowNode) => rowNode.selectThisNode(false, void 0, source);\n    const rowModelClientSide = this.rowModel.getType() === \"clientSide\";\n    const { source, justFiltered, justCurrentPage } = params;\n    if (justCurrentPage || justFiltered) {\n      if (!rowModelClientSide) {\n        _errorOnce(\"selecting just filtered only works when gridOptions.rowModelType='clientSide'\");\n        return;\n      }\n      this.getNodesToSelect(justFiltered, justCurrentPage).forEach(callback);\n    } else {\n      this.selectedNodes.forEach((rowNode) => {\n        if (rowNode) {\n          callback(rowNode);\n        }\n      });\n      this.reset(source);\n    }\n    this.selectionCtx.reset();\n    if (rowModelClientSide && this.groupSelectsChildren) {\n      this.updateGroupsFromChildrenSelections(source);\n    }\n    this.dispatchSelectionChanged(source);\n  }\n  getSelectedCounts(justFiltered, justCurrentPage) {\n    let selectedCount = 0;\n    let notSelectedCount = 0;\n    const callback = (node) => {\n      if (this.groupSelectsChildren && node.group) {\n        return;\n      }\n      if (node.isSelected()) {\n        selectedCount++;\n      } else if (!node.selectable) {\n      } else {\n        notSelectedCount++;\n      }\n    };\n    this.getNodesToSelect(justFiltered, justCurrentPage).forEach(callback);\n    return { selectedCount, notSelectedCount };\n  }\n  getSelectAllState(justFiltered, justCurrentPage) {\n    const { selectedCount, notSelectedCount } = this.getSelectedCounts(justFiltered, justCurrentPage);\n    if (selectedCount === 0 && notSelectedCount === 0) {\n      return false;\n    }\n    if (selectedCount > 0 && notSelectedCount > 0) {\n      return null;\n    }\n    return selectedCount > 0;\n  }\n  hasNodesToSelect(justFiltered = false, justCurrentPage = false) {\n    return this.getNodesToSelect(justFiltered, justCurrentPage).filter((node) => node.selectable).length > 0;\n  }\n  /**\n   * @param justFiltered whether to just include nodes which have passed the filter\n   * @param justCurrentPage whether to just include nodes on the current page\n   * @returns all nodes including unselectable nodes which are the target of this selection attempt\n   */\n  getNodesToSelect(justFiltered = false, justCurrentPage = false) {\n    if (this.rowModel.getType() !== \"clientSide\") {\n      throw new Error(\n        `selectAll only available when rowModelType='clientSide', ie not ${this.rowModel.getType()}`\n      );\n    }\n    const nodes = [];\n    if (justCurrentPage) {\n      this.forEachNodeOnPage((node) => {\n        if (!node.group) {\n          nodes.push(node);\n          return;\n        }\n        if (!node.expanded) {\n          const recursivelyAddChildren = (child) => {\n            nodes.push(child);\n            if (child.childrenAfterFilter?.length) {\n              child.childrenAfterFilter.forEach(recursivelyAddChildren);\n            }\n          };\n          recursivelyAddChildren(node);\n          return;\n        }\n        if (!this.groupSelectsChildren) {\n          nodes.push(node);\n        }\n      });\n      return nodes;\n    }\n    const clientSideRowModel = this.rowModel;\n    if (justFiltered) {\n      clientSideRowModel.forEachNodeAfterFilter((node) => {\n        nodes.push(node);\n      });\n      return nodes;\n    }\n    clientSideRowModel.forEachNode((node) => {\n      nodes.push(node);\n    });\n    return nodes;\n  }\n  forEachNodeOnPage(callback) {\n    const firstRow = this.pageBoundsService.getFirstRow();\n    const lastRow = this.pageBoundsService.getLastRow();\n    for (let i = firstRow; i <= lastRow; i++) {\n      const node = this.rowModel.getRow(i);\n      if (node) {\n        callback(node);\n      }\n    }\n  }\n  selectAllRowNodes(params) {\n    if (this.rowModel.getType() !== \"clientSide\") {\n      throw new Error(\n        `selectAll only available when rowModelType='clientSide', ie not ${this.rowModel.getType()}`\n      );\n    }\n    const { source, justFiltered, justCurrentPage } = params;\n    const nodes = this.getNodesToSelect(justFiltered, justCurrentPage);\n    nodes.forEach((rowNode) => rowNode.selectThisNode(true, void 0, source));\n    this.selectionCtx.setRoot(nodes[0] ?? null);\n    this.selectionCtx.setEndRange(_last(nodes) ?? null);\n    if (this.rowModel.getType() === \"clientSide\" && this.groupSelectsChildren) {\n      this.updateGroupsFromChildrenSelections(source);\n    }\n    this.dispatchSelectionChanged(source);\n  }\n  getSelectionState() {\n    const selectedIds = [];\n    this.selectedNodes.forEach((node) => {\n      if (node?.id) {\n        selectedIds.push(node.id);\n      }\n    });\n    return selectedIds.length ? selectedIds : null;\n  }\n  setSelectionState(state, source) {\n    if (!Array.isArray(state)) {\n      return;\n    }\n    const rowIds = new Set(state);\n    const nodes = [];\n    this.rowModel.forEachNode((node) => {\n      if (rowIds.has(node.id)) {\n        nodes.push(node);\n      }\n    });\n    this.setNodesSelected({\n      newValue: true,\n      nodes,\n      source\n    });\n  }\n  dispatchSelectionChanged(source) {\n    this.eventService.dispatchEvent({\n      type: \"selectionChanged\",\n      source\n    });\n  }\n};\n\n// community-modules/core/src/rowNodes/selectableService.ts\nvar SelectableService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"selectableService\";\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n    this.selectionService = beans.selectionService;\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(\"isRowSelectable\", () => this.updateSelectable());\n  }\n  /**\n   * Used by CSRM only, to update selectable state after group state changes.\n   */\n  updateSelectableAfterGrouping() {\n    this.updateSelectable(true);\n  }\n  updateSelectable(skipLeafNodes = false) {\n    const isRowSelecting = !!this.gos.get(\"rowSelection\");\n    const isRowSelectable = this.gos.get(\"isRowSelectable\");\n    if (!isRowSelecting || !isRowSelectable) {\n      return;\n    }\n    const isGroupSelectsChildren = this.gos.get(\"groupSelectsChildren\");\n    const isCsrmGroupSelectsChildren = this.rowModel.getType() === \"clientSide\" && isGroupSelectsChildren;\n    const nodesToDeselect = [];\n    const nodeCallback = (node) => {\n      if (skipLeafNodes && !node.group) {\n        return;\n      }\n      if (isCsrmGroupSelectsChildren && node.group) {\n        const hasSelectableChild = node.childrenAfterGroup.some((rowNode) => rowNode.selectable === true);\n        node.setRowSelectable(hasSelectableChild, true);\n        return;\n      }\n      const rowSelectable = isRowSelectable ? isRowSelectable(node) : true;\n      node.setRowSelectable(rowSelectable, true);\n      if (!rowSelectable && node.isSelected()) {\n        nodesToDeselect.push(node);\n      }\n    };\n    if (isCsrmGroupSelectsChildren) {\n      const csrm = this.rowModel;\n      const changedPath = new ChangedPath(false, csrm.getRootNode());\n      changedPath.forEachChangedNodeDepthFirst(nodeCallback, true, true);\n    } else {\n      this.rowModel.forEachNode(nodeCallback);\n    }\n    if (nodesToDeselect.length) {\n      this.selectionService.setNodesSelected({\n        nodes: nodesToDeselect,\n        newValue: false,\n        source: \"selectableChanged\"\n      });\n    }\n    if (isCsrmGroupSelectsChildren && this.selectionService instanceof SelectionService) {\n      this.selectionService.updateGroupsFromChildrenSelections(\"selectableChanged\");\n    }\n  }\n};\n\n// community-modules/core/src/sortController.ts\nvar DEFAULT_SORTING_ORDER = [\"asc\", \"desc\", null];\nvar SortController = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"sortController\";\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.funcColsService = beans.funcColsService;\n    this.showRowGroupColsService = beans.showRowGroupColsService;\n  }\n  progressSort(column, multiSort, source) {\n    const nextDirection = this.getNextSortDirection(column);\n    this.setSortForColumn(column, nextDirection, multiSort, source);\n  }\n  setSortForColumn(column, sort, multiSort, source) {\n    if (sort !== \"asc\" && sort !== \"desc\") {\n      sort = null;\n    }\n    const isColumnsSortingCoupledToGroup = this.gos.isColumnsSortingCoupledToGroup();\n    let columnsToUpdate = [column];\n    if (isColumnsSortingCoupledToGroup) {\n      if (column.getColDef().showRowGroup) {\n        const rowGroupColumns = this.funcColsService.getSourceColumnsForGroupColumn(column);\n        const sortableRowGroupColumns = rowGroupColumns?.filter((col) => col.isSortable());\n        if (sortableRowGroupColumns) {\n          columnsToUpdate = [column, ...sortableRowGroupColumns];\n        }\n      }\n    }\n    columnsToUpdate.forEach((col) => col.setSort(sort, source));\n    const doingMultiSort = (multiSort || this.gos.get(\"alwaysMultiSort\")) && !this.gos.get(\"suppressMultiSort\");\n    const updatedColumns = [];\n    if (!doingMultiSort) {\n      const clearedColumns = this.clearSortBarTheseColumns(columnsToUpdate, source);\n      updatedColumns.push(...clearedColumns);\n    }\n    this.updateSortIndex(column);\n    updatedColumns.push(...columnsToUpdate);\n    this.dispatchSortChangedEvents(source, updatedColumns);\n  }\n  updateSortIndex(lastColToChange) {\n    const isCoupled = this.gos.isColumnsSortingCoupledToGroup();\n    const groupParent = this.showRowGroupColsService?.getShowRowGroupCol(lastColToChange.getId());\n    const lastSortIndexCol = isCoupled ? groupParent || lastColToChange : lastColToChange;\n    const allSortedCols = this.getColumnsWithSortingOrdered();\n    this.columnModel.getAllCols().forEach((col) => col.setSortIndex(null));\n    const allSortedColsWithoutChangesOrGroups = allSortedCols.filter((col) => {\n      if (isCoupled && col.getColDef().showRowGroup) {\n        return false;\n      }\n      return col !== lastSortIndexCol;\n    });\n    const sortedColsWithIndices = lastSortIndexCol.getSort() ? [...allSortedColsWithoutChangesOrGroups, lastSortIndexCol] : allSortedColsWithoutChangesOrGroups;\n    sortedColsWithIndices.forEach((col, idx) => {\n      col.setSortIndex(idx);\n    });\n  }\n  // gets called by API, so if data changes, use can call this, which will end up\n  // working out the sort order again of the rows.\n  onSortChanged(source, columns) {\n    this.dispatchSortChangedEvents(source, columns);\n  }\n  isSortActive() {\n    const allCols = this.columnModel.getAllCols();\n    const sortedCols = allCols.filter((column) => !!column.getSort());\n    return sortedCols && sortedCols.length > 0;\n  }\n  dispatchSortChangedEvents(source, columns) {\n    const event = {\n      type: \"sortChanged\",\n      source\n    };\n    if (columns) {\n      event.columns = columns;\n    }\n    this.eventService.dispatchEvent(event);\n  }\n  clearSortBarTheseColumns(columnsToSkip, source) {\n    const clearedColumns = [];\n    this.columnModel.getAllCols().forEach((columnToClear) => {\n      if (!columnsToSkip.includes(columnToClear)) {\n        if (columnToClear.getSort()) {\n          clearedColumns.push(columnToClear);\n        }\n        columnToClear.setSort(void 0, source);\n      }\n    });\n    return clearedColumns;\n  }\n  getNextSortDirection(column) {\n    let sortingOrder;\n    if (column.getColDef().sortingOrder) {\n      sortingOrder = column.getColDef().sortingOrder;\n    } else if (this.gos.get(\"sortingOrder\")) {\n      sortingOrder = this.gos.get(\"sortingOrder\");\n    } else {\n      sortingOrder = DEFAULT_SORTING_ORDER;\n    }\n    if (!Array.isArray(sortingOrder) || sortingOrder.length <= 0) {\n      _warnOnce(`sortingOrder must be an array with at least one element, currently it's ${sortingOrder}`);\n      return null;\n    }\n    const currentIndex = sortingOrder.indexOf(column.getSort());\n    const notInArray = currentIndex < 0;\n    const lastItemInArray = currentIndex == sortingOrder.length - 1;\n    let result;\n    if (notInArray || lastItemInArray) {\n      result = sortingOrder[0];\n    } else {\n      result = sortingOrder[currentIndex + 1];\n    }\n    if (DEFAULT_SORTING_ORDER.indexOf(result) < 0) {\n      _warnOnce(\"invalid sort type \", result);\n      return null;\n    }\n    return result;\n  }\n  /**\n   * @returns a map of sort indexes for every sorted column, if groups sort primaries then they will have equivalent indices\n   */\n  getIndexedSortMap() {\n    let allSortedCols = this.columnModel.getAllCols().filter((col) => !!col.getSort());\n    if (this.columnModel.isPivotMode()) {\n      const isSortingLinked = this.gos.isColumnsSortingCoupledToGroup();\n      allSortedCols = allSortedCols.filter((col) => {\n        const isAggregated = !!col.getAggFunc();\n        const isSecondary = !col.isPrimary();\n        const isGroup = isSortingLinked ? this.showRowGroupColsService?.getShowRowGroupCol(col.getId()) : col.getColDef().showRowGroup;\n        return isAggregated || isSecondary || isGroup;\n      });\n    }\n    const sortedRowGroupCols = this.funcColsService.getRowGroupColumns().filter((col) => !!col.getSort());\n    const allColsIndexes = {};\n    allSortedCols.forEach((col, index) => allColsIndexes[col.getId()] = index);\n    allSortedCols.sort((a, b) => {\n      const iA = a.getSortIndex();\n      const iB = b.getSortIndex();\n      if (iA != null && iB != null) {\n        return iA - iB;\n      } else if (iA == null && iB == null) {\n        const posA = allColsIndexes[a.getId()];\n        const posB = allColsIndexes[b.getId()];\n        return posA > posB ? 1 : -1;\n      } else if (iB == null) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n    const isSortLinked = this.gos.isColumnsSortingCoupledToGroup() && !!sortedRowGroupCols.length;\n    if (isSortLinked) {\n      allSortedCols = [\n        ...new Set(\n          // if linked sorting, replace all columns with the display group column for index purposes, and ensure uniqueness\n          allSortedCols.map((col) => this.showRowGroupColsService?.getShowRowGroupCol(col.getId()) ?? col)\n        )\n      ];\n    }\n    const indexMap = /* @__PURE__ */ new Map();\n    allSortedCols.forEach((col, idx) => indexMap.set(col, idx));\n    if (isSortLinked) {\n      sortedRowGroupCols.forEach((col) => {\n        const groupDisplayCol = this.showRowGroupColsService.getShowRowGroupCol(col.getId());\n        indexMap.set(col, indexMap.get(groupDisplayCol));\n      });\n    }\n    return indexMap;\n  }\n  getColumnsWithSortingOrdered() {\n    return [...this.getIndexedSortMap().entries()].sort(([col1, idx1], [col2, idx2]) => idx1 - idx2).map(([col]) => col);\n  }\n  // used by server side row models, to sent sort to server\n  getSortModel() {\n    return this.getColumnsWithSortingOrdered().filter((column) => column.getSort()).map((column) => ({\n      sort: column.getSort(),\n      colId: column.getId()\n    }));\n  }\n  getSortOptions() {\n    return this.getColumnsWithSortingOrdered().filter((column) => column.getSort()).map((column) => ({\n      sort: column.getSort(),\n      column\n    }));\n  }\n  canColumnDisplayMixedSort(column) {\n    const isColumnSortCouplingActive = this.gos.isColumnsSortingCoupledToGroup();\n    const isGroupDisplayColumn = !!column.getColDef().showRowGroup;\n    return isColumnSortCouplingActive && isGroupDisplayColumn;\n  }\n  getDisplaySortForColumn(column) {\n    const linkedColumns = this.funcColsService.getSourceColumnsForGroupColumn(column);\n    if (!this.canColumnDisplayMixedSort(column) || !linkedColumns?.length) {\n      return column.getSort();\n    }\n    const columnHasUniqueData = column.getColDef().field != null || !!column.getColDef().valueGetter;\n    const sortableColumns = columnHasUniqueData ? [column, ...linkedColumns] : linkedColumns;\n    const firstSort = sortableColumns[0].getSort();\n    const allMatch = sortableColumns.every((col) => col.getSort() == firstSort);\n    if (!allMatch) {\n      return \"mixed\";\n    }\n    return firstSort;\n  }\n  getDisplaySortIndexForColumn(column) {\n    return this.getIndexedSortMap().get(column);\n  }\n};\n\n// community-modules/core/src/syncService.ts\nvar SyncService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"syncService\";\n    this.waitingForColumns = false;\n  }\n  wireBeans(beans) {\n    this.ctrlsService = beans.ctrlsService;\n    this.columnModel = beans.columnModel;\n    this.rowModel = beans.rowModel;\n  }\n  postConstruct() {\n    this.addManagedPropertyListener(\"columnDefs\", (event) => this.setColumnDefs(event));\n  }\n  start() {\n    this.ctrlsService.whenReady(() => {\n      const columnDefs = this.gos.get(\"columnDefs\");\n      if (columnDefs) {\n        this.setColumnsAndData(columnDefs);\n      } else {\n        this.waitingForColumns = true;\n      }\n      this.gridReady();\n    });\n  }\n  setColumnsAndData(columnDefs) {\n    this.columnModel.setColumnDefs(columnDefs ?? [], \"gridInitializing\");\n    this.rowModel.start();\n  }\n  gridReady() {\n    this.dispatchGridReadyEvent();\n    const isEnterprise = ModuleRegistry.__isRegistered(\"@ag-grid-enterprise/core\" /* EnterpriseCoreModule */, this.gridId);\n    if (this.gos.get(\"debug\")) {\n      _log(`initialised successfully, enterprise = ${isEnterprise}`);\n    }\n  }\n  dispatchGridReadyEvent() {\n    this.eventService.dispatchEvent({\n      type: \"gridReady\"\n    });\n  }\n  setColumnDefs(event) {\n    const columnDefs = this.gos.get(\"columnDefs\");\n    if (!columnDefs) {\n      return;\n    }\n    if (this.waitingForColumns) {\n      this.waitingForColumns = false;\n      this.setColumnsAndData(columnDefs);\n      return;\n    }\n    this.columnModel.setColumnDefs(columnDefs, convertSourceType(event.source));\n  }\n};\n\n// community-modules/core/src/valueService/changeDetectionService.ts\nvar SOURCE_PASTE = \"paste\";\nvar ChangeDetectionService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"changeDetectionService\";\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n    this.rowRenderer = beans.rowRenderer;\n  }\n  postConstruct() {\n    if (this.rowModel.getType() === \"clientSide\") {\n      this.clientSideRowModel = this.rowModel;\n    }\n    this.addManagedEventListeners({ cellValueChanged: this.onCellValueChanged.bind(this) });\n  }\n  onCellValueChanged(event) {\n    if (event.source === SOURCE_PASTE) {\n      return;\n    }\n    this.doChangeDetection(event.node, event.column);\n  }\n  doChangeDetection(rowNode, column) {\n    if (this.gos.get(\"suppressChangeDetection\")) {\n      return;\n    }\n    const nodesToRefresh = [rowNode];\n    if (this.clientSideRowModel && !rowNode.isRowPinned()) {\n      const onlyChangedColumns = this.gos.get(\"aggregateOnlyChangedColumns\");\n      const changedPath = new ChangedPath(onlyChangedColumns, this.clientSideRowModel.getRootNode());\n      changedPath.addParentNode(rowNode.parent, [column]);\n      this.clientSideRowModel.doAggregate(changedPath);\n      changedPath.forEachChangedNodeDepthFirst((rowNode2) => {\n        nodesToRefresh.push(rowNode2);\n      });\n    }\n    this.rowRenderer.refreshCells({ rowNodes: nodesToRefresh });\n  }\n};\n\n// community-modules/core/src/valueService/expressionService.ts\nvar ExpressionService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"expressionService\";\n    this.expressionToFunctionCache = {};\n  }\n  evaluate(expression, params) {\n    if (typeof expression === \"string\") {\n      return this.evaluateExpression(expression, params);\n    } else {\n      _errorOnce(\"value should be either a string or a function\", expression);\n    }\n  }\n  evaluateExpression(expression, params) {\n    try {\n      const javaScriptFunction = this.createExpressionFunction(expression);\n      const result = javaScriptFunction(\n        params.value,\n        params.context,\n        params.oldValue,\n        params.newValue,\n        params.value,\n        params.node,\n        params.data,\n        params.colDef,\n        params.rowIndex,\n        params.api,\n        params.getValue,\n        params.column,\n        params.columnGroup\n      );\n      return result;\n    } catch (e) {\n      _log(\"Processing of the expression failed\");\n      _log(\"Expression = \", expression);\n      _log(\"Params = \", params);\n      _log(\"Exception = \", e);\n      return null;\n    }\n  }\n  createExpressionFunction(expression) {\n    if (this.expressionToFunctionCache[expression]) {\n      return this.expressionToFunctionCache[expression];\n    }\n    const functionBody = this.createFunctionBody(expression);\n    const theFunction = new Function(\n      \"x, ctx, oldValue, newValue, value, node, data, colDef, rowIndex, api, getValue, column, columnGroup\",\n      functionBody\n    );\n    this.expressionToFunctionCache[expression] = theFunction;\n    return theFunction;\n  }\n  createFunctionBody(expression) {\n    if (expression.indexOf(\"return\") >= 0) {\n      return expression;\n    } else {\n      return \"return \" + expression + \";\";\n    }\n  }\n};\n\n// community-modules/core/src/valueService/valueCache.ts\nvar ValueCache = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"valueCache\";\n    this.cacheVersion = 0;\n  }\n  postConstruct() {\n    this.active = this.gos.get(\"valueCache\");\n    this.neverExpires = this.gos.get(\"valueCacheNeverExpires\");\n  }\n  onDataChanged() {\n    if (this.neverExpires) {\n      return;\n    }\n    this.expire();\n  }\n  expire() {\n    this.cacheVersion++;\n  }\n  setValue(rowNode, colId, value) {\n    if (this.active) {\n      if (rowNode.__cacheVersion !== this.cacheVersion) {\n        rowNode.__cacheVersion = this.cacheVersion;\n        rowNode.__cacheData = {};\n      }\n      rowNode.__cacheData[colId] = value;\n    }\n  }\n  getValue(rowNode, colId) {\n    if (!this.active || rowNode.__cacheVersion !== this.cacheVersion) {\n      return void 0;\n    }\n    return rowNode.__cacheData[colId];\n  }\n};\n\n// community-modules/core/src/valueService/valueService.ts\nvar ValueService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"valueService\";\n    this.initialised = false;\n    this.isSsrm = false;\n  }\n  wireBeans(beans) {\n    this.expressionService = beans.expressionService;\n    this.columnModel = beans.columnModel;\n    this.valueCache = beans.valueCache;\n    this.dataTypeService = beans.dataTypeService;\n  }\n  postConstruct() {\n    if (!this.initialised) {\n      this.init();\n    }\n  }\n  init() {\n    this.isSsrm = this.gos.isRowModelType(\"serverSide\");\n    this.cellExpressions = this.gos.get(\"enableCellExpressions\");\n    this.isTreeData = this.gos.get(\"treeData\");\n    this.initialised = true;\n    const listener = (event) => this.callColumnCellValueChangedHandler(event);\n    const async = this.gos.useAsyncEvents();\n    this.eventService.addEventListener(\"cellValueChanged\", listener, async);\n    this.addDestroyFunc(() => this.eventService.removeEventListener(\"cellValueChanged\", listener, async));\n    this.addManagedPropertyListener(\"treeData\", (propChange) => this.isTreeData = propChange.currentValue);\n  }\n  getValue(column, rowNode, forFilter = false, ignoreAggData = false) {\n    if (!this.initialised) {\n      this.init();\n    }\n    if (!rowNode) {\n      return;\n    }\n    const colDef = column.getColDef();\n    const field = colDef.field;\n    const colId = column.getColId();\n    const data = rowNode.data;\n    let result;\n    const groupDataExists = rowNode.groupData && rowNode.groupData[colId] !== void 0;\n    const aggDataExists = !ignoreAggData && rowNode.aggData && rowNode.aggData[colId] !== void 0;\n    const ignoreSsrmAggData = this.isSsrm && ignoreAggData && !!column.getColDef().aggFunc;\n    const ssrmFooterGroupCol = this.isSsrm && rowNode.footer && rowNode.field && (column.getColDef().showRowGroup === true || column.getColDef().showRowGroup === rowNode.field);\n    if (forFilter && colDef.filterValueGetter) {\n      result = this.executeFilterValueGetter(colDef.filterValueGetter, data, column, rowNode);\n    } else if (this.isTreeData && aggDataExists) {\n      result = rowNode.aggData[colId];\n    } else if (this.isTreeData && colDef.valueGetter) {\n      result = this.executeValueGetter(colDef.valueGetter, data, column, rowNode);\n    } else if (this.isTreeData && field && data) {\n      result = _getValueUsingField(data, field, column.isFieldContainsDots());\n    } else if (groupDataExists) {\n      result = rowNode.groupData[colId];\n    } else if (aggDataExists) {\n      result = rowNode.aggData[colId];\n    } else if (colDef.valueGetter) {\n      result = this.executeValueGetter(colDef.valueGetter, data, column, rowNode);\n    } else if (ssrmFooterGroupCol) {\n      result = _getValueUsingField(data, rowNode.field, column.isFieldContainsDots());\n    } else if (field && data && !ignoreSsrmAggData) {\n      result = _getValueUsingField(data, field, column.isFieldContainsDots());\n    }\n    if (this.cellExpressions && typeof result === \"string\" && result.indexOf(\"=\") === 0) {\n      const cellValueGetter = result.substring(1);\n      result = this.executeValueGetter(cellValueGetter, data, column, rowNode);\n    }\n    if (result == null) {\n      const openedGroup = this.getOpenedGroup(rowNode, column);\n      if (openedGroup != null) {\n        return openedGroup;\n      }\n    }\n    return result;\n  }\n  parseValue(column, rowNode, newValue, oldValue) {\n    const colDef = column.getColDef();\n    const params = this.gos.addGridCommonParams({\n      node: rowNode,\n      data: rowNode?.data,\n      oldValue,\n      newValue,\n      colDef,\n      column\n    });\n    const valueParser = colDef.valueParser;\n    if (_exists(valueParser)) {\n      if (typeof valueParser === \"function\") {\n        return valueParser(params);\n      }\n      return this.expressionService.evaluate(valueParser, params);\n    }\n    return newValue;\n  }\n  formatValue(column, node, value, suppliedFormatter, useFormatterFromColumn = true) {\n    let result = null;\n    let formatter;\n    const colDef = column.getColDef();\n    if (suppliedFormatter) {\n      formatter = suppliedFormatter;\n    } else if (useFormatterFromColumn) {\n      formatter = colDef.valueFormatter;\n    }\n    if (formatter) {\n      const params = this.gos.addGridCommonParams({\n        value,\n        node,\n        data: node ? node.data : null,\n        colDef,\n        column\n      });\n      if (typeof formatter === \"function\") {\n        result = formatter(params);\n      } else {\n        result = this.expressionService.evaluate(formatter, params);\n      }\n    } else if (colDef.refData) {\n      return colDef.refData[value] || \"\";\n    }\n    if (result == null && Array.isArray(value)) {\n      result = value.join(\", \");\n    }\n    return result;\n  }\n  getOpenedGroup(rowNode, column) {\n    if (!this.gos.get(\"showOpenedGroup\")) {\n      return;\n    }\n    const colDef = column.getColDef();\n    if (!colDef.showRowGroup) {\n      return;\n    }\n    const showRowGroup = column.getColDef().showRowGroup;\n    let pointer = rowNode.parent;\n    while (pointer != null) {\n      if (pointer.rowGroupColumn && (showRowGroup === true || showRowGroup === pointer.rowGroupColumn.getColId())) {\n        return pointer.key;\n      }\n      pointer = pointer.parent;\n    }\n    return void 0;\n  }\n  /**\n   * Sets the value of a GridCell\n   * @param rowNode The `RowNode` to be updated\n   * @param colKey The `Column` to be updated\n   * @param newValue The new value to be set\n   * @param eventSource The event source\n   * @returns `True` if the value has been updated, otherwise`False`.\n   */\n  setValue(rowNode, colKey, newValue, eventSource) {\n    const column = this.columnModel.getColDefCol(colKey);\n    if (!rowNode || !column) {\n      return false;\n    }\n    if (_missing(rowNode.data)) {\n      rowNode.data = {};\n    }\n    const { field, valueSetter } = column.getColDef();\n    if (_missing(field) && _missing(valueSetter)) {\n      _warnOnce(`you need either field or valueSetter set on colDef for editing to work`);\n      return false;\n    }\n    if (this.dataTypeService && !this.dataTypeService.checkType(column, newValue)) {\n      _warnOnce(`Data type of the new value does not match the cell data type of the column`);\n      return false;\n    }\n    const params = this.gos.addGridCommonParams({\n      node: rowNode,\n      data: rowNode.data,\n      oldValue: this.getValue(column, rowNode),\n      newValue,\n      colDef: column.getColDef(),\n      column\n    });\n    params.newValue = newValue;\n    let valueWasDifferent;\n    if (_exists(valueSetter)) {\n      if (typeof valueSetter === \"function\") {\n        valueWasDifferent = valueSetter(params);\n      } else {\n        valueWasDifferent = this.expressionService.evaluate(valueSetter, params);\n      }\n    } else {\n      valueWasDifferent = this.setValueUsingField(rowNode.data, field, newValue, column.isFieldContainsDots());\n    }\n    if (valueWasDifferent === void 0) {\n      valueWasDifferent = true;\n    }\n    if (!valueWasDifferent) {\n      return false;\n    }\n    rowNode.resetQuickFilterAggregateText();\n    this.valueCache.onDataChanged();\n    params.newValue = this.getValue(column, rowNode);\n    this.eventService.dispatchEvent({\n      type: \"cellValueChanged\",\n      event: null,\n      rowIndex: rowNode.rowIndex,\n      rowPinned: rowNode.rowPinned,\n      column: params.column,\n      colDef: params.colDef,\n      data: rowNode.data,\n      node: rowNode,\n      oldValue: params.oldValue,\n      newValue: params.newValue,\n      value: params.newValue,\n      source: eventSource\n    });\n    return true;\n  }\n  callColumnCellValueChangedHandler(event) {\n    const onCellValueChanged = event.colDef.onCellValueChanged;\n    if (typeof onCellValueChanged === \"function\") {\n      this.getFrameworkOverrides().wrapOutgoing(() => {\n        onCellValueChanged({\n          node: event.node,\n          data: event.data,\n          oldValue: event.oldValue,\n          newValue: event.newValue,\n          colDef: event.colDef,\n          column: event.column,\n          api: event.api,\n          context: event.context\n        });\n      });\n    }\n  }\n  setValueUsingField(data, field, newValue, isFieldContainsDots) {\n    if (!field) {\n      return false;\n    }\n    let valuesAreSame = false;\n    if (!isFieldContainsDots) {\n      valuesAreSame = data[field] === newValue;\n      if (!valuesAreSame) {\n        data[field] = newValue;\n      }\n    } else {\n      const fieldPieces = field.split(\".\");\n      let currentObject = data;\n      while (fieldPieces.length > 0 && currentObject) {\n        const fieldPiece = fieldPieces.shift();\n        if (fieldPieces.length === 0) {\n          valuesAreSame = currentObject[fieldPiece] === newValue;\n          if (!valuesAreSame) {\n            currentObject[fieldPiece] = newValue;\n          }\n        } else {\n          currentObject = currentObject[fieldPiece];\n        }\n      }\n    }\n    return !valuesAreSame;\n  }\n  executeFilterValueGetter(valueGetter, data, column, rowNode) {\n    const params = this.gos.addGridCommonParams({\n      data,\n      node: rowNode,\n      column,\n      colDef: column.getColDef(),\n      getValue: this.getValueCallback.bind(this, rowNode)\n    });\n    if (typeof valueGetter === \"function\") {\n      return valueGetter(params);\n    }\n    return this.expressionService.evaluate(valueGetter, params);\n  }\n  executeValueGetter(valueGetter, data, column, rowNode) {\n    const colId = column.getColId();\n    const valueFromCache = this.valueCache.getValue(rowNode, colId);\n    if (valueFromCache !== void 0) {\n      return valueFromCache;\n    }\n    const params = this.gos.addGridCommonParams({\n      data,\n      node: rowNode,\n      column,\n      colDef: column.getColDef(),\n      getValue: this.getValueCallback.bind(this, rowNode)\n    });\n    let result;\n    if (typeof valueGetter === \"function\") {\n      result = valueGetter(params);\n    } else {\n      result = this.expressionService.evaluate(valueGetter, params);\n    }\n    this.valueCache.setValue(rowNode, colId, result);\n    return result;\n  }\n  getValueCallback(node, field) {\n    const otherColumn = this.columnModel.getColDefCol(field);\n    if (otherColumn) {\n      return this.getValue(otherColumn, node);\n    }\n    return null;\n  }\n  // used by row grouping and pivot, to get key for a row. col can be a pivot col or a row grouping col\n  getKeyForNode(col, rowNode) {\n    const value = this.getValue(col, rowNode);\n    const keyCreator = col.getColDef().keyCreator;\n    let result = value;\n    if (keyCreator) {\n      const keyParams = this.gos.addGridCommonParams({\n        value,\n        colDef: col.getColDef(),\n        column: col,\n        node: rowNode,\n        data: rowNode.data\n      });\n      result = keyCreator(keyParams);\n    }\n    if (typeof result === \"string\" || result == null) {\n      return result;\n    }\n    result = String(result);\n    if (result === \"[object Object]\") {\n      _warnOnce(\n        \"a column you are grouping or pivoting by has objects as values. If you want to group by complex objects then either a) use a colDef.keyCreator (se AG Grid docs) or b) to toString() on the object to return a key\"\n      );\n    }\n    return result;\n  }\n};\n\n// community-modules/core/src/grid.ts\nvar GlobalGridOptions = class {\n};\nGlobalGridOptions.gridOptions = void 0;\nfunction provideGlobalGridOptions(gridOptions) {\n  GlobalGridOptions.gridOptions = gridOptions;\n}\nfunction createGrid(eGridDiv, gridOptions, params) {\n  if (!gridOptions) {\n    _errorOnce(\"No gridOptions provided to createGrid\");\n    return {};\n  }\n  const api = new GridCoreCreator().create(\n    eGridDiv,\n    gridOptions,\n    (context) => {\n      const gridComp = new GridComp(eGridDiv);\n      context.createBean(gridComp);\n    },\n    void 0,\n    params\n  );\n  if (!Object.isFrozen(gridOptions) && !params?.frameworkOverrides) {\n    const apiUrl = \"https://ag-grid.com/javascript-data-grid/grid-interface/#grid-api\";\n    Object.defineProperty(gridOptions, \"api\", {\n      get: () => {\n        _errorOnce(`gridOptions.api is no longer supported. See ${apiUrl}.`);\n        return void 0;\n      },\n      configurable: true\n    });\n  }\n  return api;\n}\nvar Grid = class {\n  // Not typed to enable setting api for backwards compatibility\n  constructor(eGridDiv, gridOptions, params) {\n    _warnOnce(\n      \"Since v31 new Grid(...) is deprecated. Use createGrid instead: `const gridApi = createGrid(...)`. The grid api is returned from createGrid and will not be available on gridOptions.\"\n    );\n    if (!gridOptions) {\n      _errorOnce(\"No gridOptions provided to the grid\");\n      return;\n    }\n    this.gridOptions = gridOptions;\n    const api = new GridCoreCreator().create(\n      eGridDiv,\n      gridOptions,\n      (context) => {\n        const gridComp = new GridComp(eGridDiv);\n        const bean = context.createBean(gridComp);\n        bean.addDestroyFunc(() => {\n          this.destroy();\n        });\n      },\n      void 0,\n      params\n    );\n    this.gridOptions.api = api;\n  }\n  destroy() {\n    if (this.gridOptions) {\n      this.gridOptions.api?.destroy();\n      delete this.gridOptions.api;\n    }\n  }\n};\nvar nextGridId = 1;\nvar GridCoreCreator = class {\n  create(eGridDiv, providedOptions, createUi, acceptChanges, params) {\n    let mergedGridOps = {};\n    if (GlobalGridOptions.gridOptions) {\n      _mergeDeep(mergedGridOps, GlobalGridOptions.gridOptions, true, true);\n      mergedGridOps = { ...mergedGridOps, ...providedOptions };\n    } else {\n      mergedGridOps = providedOptions;\n    }\n    const gridOptions = getCoercedGridOptions(mergedGridOps);\n    const gridId = gridOptions.gridId ?? String(nextGridId++);\n    const registeredModules = this.getRegisteredModules(params, gridId);\n    const beanClasses = this.createBeansList(gridOptions.rowModelType, registeredModules, gridId);\n    const providedBeanInstances = this.createProvidedBeans(eGridDiv, gridOptions, params);\n    if (!beanClasses) {\n      _errorOnce(\"Failed to create grid.\");\n      return void 0;\n    }\n    const contextParams = {\n      providedBeanInstances,\n      beanClasses,\n      gridId,\n      beanInitComparator: gridBeanInitComparator,\n      beanDestroyComparator: gridBeanDestroyComparator,\n      derivedBeans: [createGridApi]\n    };\n    const context = new Context(contextParams);\n    this.registerModuleUserComponents(context, registeredModules);\n    this.registerControllers(context, registeredModules);\n    this.registerModuleApiFunctions(context, registeredModules);\n    createUi(context);\n    context.getBean(\"syncService\").start();\n    if (acceptChanges) {\n      acceptChanges(context);\n    }\n    return context.getBean(\"gridApi\");\n  }\n  registerControllers(context, registeredModules) {\n    const factory = context.getBean(\"ctrlsFactory\");\n    registeredModules.forEach((module) => {\n      if (module.controllers) {\n        module.controllers.forEach((meta) => factory.register(meta));\n      }\n    });\n  }\n  getRegisteredModules(params, gridId) {\n    const passedViaConstructor = params ? params.modules : null;\n    const registered = ModuleRegistry.__getRegisteredModules(gridId);\n    const allModules = [];\n    const mapNames = {};\n    const addModule = (moduleBased, mod2, gridId2) => {\n      const addIndividualModule = (currentModule) => {\n        if (!mapNames[currentModule.moduleName]) {\n          mapNames[currentModule.moduleName] = true;\n          allModules.push(currentModule);\n          ModuleRegistry.__register(currentModule, moduleBased, gridId2);\n        }\n      };\n      addIndividualModule(mod2);\n      if (mod2.dependantModules) {\n        mod2.dependantModules.forEach((m) => addModule(moduleBased, m, gridId2));\n      }\n    };\n    addModule(\n      !!passedViaConstructor?.length || !ModuleRegistry.__isPackageBased(),\n      CommunityFeaturesModule,\n      void 0\n    );\n    if (passedViaConstructor) {\n      passedViaConstructor.forEach((m) => addModule(true, m, gridId));\n    }\n    if (registered) {\n      registered.forEach((m) => addModule(!ModuleRegistry.__isPackageBased(), m, void 0));\n    }\n    return allModules;\n  }\n  registerModuleUserComponents(context, registeredModules) {\n    const moduleUserComps = this.extractModuleEntity(\n      registeredModules,\n      (module) => module.userComponents ? module.userComponents : []\n    );\n    const registry = context.getBean(\"userComponentRegistry\");\n    moduleUserComps.forEach((compMeta) => {\n      registry.registerDefaultComponent(compMeta.name, compMeta.classImp);\n    });\n  }\n  registerModuleApiFunctions(context, registeredModules) {\n    const apiFunctionService = context.getBean(\"apiFunctionService\");\n    registeredModules.forEach((module) => {\n      const apiFunctions = module.apiFunctions;\n      if (apiFunctions) {\n        const names = Object.keys(apiFunctions);\n        names.forEach((name) => {\n          apiFunctionService?.addFunction(name, apiFunctions[name]);\n        });\n      }\n    });\n  }\n  createProvidedBeans(eGridDiv, gridOptions, params) {\n    let frameworkOverrides = params ? params.frameworkOverrides : null;\n    if (_missing(frameworkOverrides)) {\n      frameworkOverrides = new VanillaFrameworkOverrides();\n    }\n    const seed = {\n      gridOptions,\n      eGridDiv,\n      globalEventListener: params ? params.globalEventListener : null,\n      globalSyncEventListener: params ? params.globalSyncEventListener : null,\n      frameworkOverrides\n    };\n    if (params && params.providedBeanInstances) {\n      Object.assign(seed, params.providedBeanInstances);\n    }\n    return seed;\n  }\n  createBeansList(rowModelType = \"clientSide\", registeredModules, gridId) {\n    const rowModelModules = registeredModules.filter(\n      (module) => !module.rowModel || module.rowModel === rowModelType\n    );\n    const rowModelModuleNames = {\n      clientSide: \"@ag-grid-community/client-side-row-model\" /* ClientSideRowModelModule */,\n      infinite: \"@ag-grid-community/infinite-row-model\" /* InfiniteRowModelModule */,\n      serverSide: \"@ag-grid-enterprise/server-side-row-model\" /* ServerSideRowModelModule */,\n      viewport: \"@ag-grid-enterprise/viewport-row-model\" /* ViewportRowModelModule */\n    };\n    if (!rowModelModuleNames[rowModelType]) {\n      _errorOnce(\"Could not find row model for rowModelType = \", rowModelType);\n      return;\n    }\n    if (!ModuleRegistry.__assertRegistered(\n      rowModelModuleNames[rowModelType],\n      `rowModelType = '${rowModelType}'`,\n      gridId\n    )) {\n      return;\n    }\n    const beans = [\n      RowPositionUtils,\n      CellPositionUtils,\n      HeaderPositionUtils,\n      GridDestroyService,\n      ApiFunctionService,\n      UserComponentRegistry,\n      AgComponentUtils,\n      ComponentMetadataProvider,\n      ResizeObserverService,\n      UserComponentFactory,\n      RowContainerHeightService,\n      HorizontalResizeService,\n      LocaleService,\n      PinnedRowModel,\n      DragService,\n      VisibleColsService,\n      EventService,\n      GridOptionsService,\n      PopupService,\n      SelectionService,\n      ColumnModel,\n      HeaderNavigationService,\n      PageBoundsService,\n      PageBoundsListener,\n      RowRenderer,\n      ExpressionService,\n      ColumnFactory,\n      NavigationService,\n      ValueCache,\n      ValueService,\n      AutoWidthCalculator,\n      StandardMenuFactory,\n      DragAndDropService,\n      FocusService,\n      MouseEventService,\n      Environment,\n      CellNavigationService,\n      StylingService,\n      ScrollVisibleService,\n      SortController,\n      ColumnHoverService,\n      ColumnAnimationService,\n      SelectableService,\n      ChangeDetectionService,\n      AnimationFrameService,\n      ColumnDefFactory,\n      RowCssClassCalculator,\n      RowNodeSorter,\n      CtrlsService,\n      PinnedWidthService,\n      RowNodeEventThrottle,\n      CtrlsFactory,\n      SyncService,\n      OverlayService,\n      ExpansionService,\n      ApiEventService,\n      AriaAnnouncementService,\n      MenuService,\n      ColumnApplyStateService,\n      ColumnEventDispatcher,\n      ColumnMoveService,\n      ColumnAutosizeService,\n      ColumnGetStateService,\n      ColumnGroupStateService,\n      ColumnSizeService,\n      FuncColsService,\n      ColumnNameService,\n      ColumnViewportService,\n      PivotResultColsService\n    ];\n    const moduleBeans = this.extractModuleEntity(rowModelModules, (module) => module.beans ? module.beans : []);\n    beans.push(...moduleBeans);\n    const beansNoDuplicates = [];\n    beans.forEach((bean) => {\n      if (beansNoDuplicates.indexOf(bean) < 0) {\n        beansNoDuplicates.push(bean);\n      }\n    });\n    return beansNoDuplicates;\n  }\n  extractModuleEntity(moduleEntities, extractor) {\n    return [].concat(...moduleEntities.map(extractor));\n  }\n};\n\n// community-modules/core/src/api/rowModelHelperService.ts\nvar RowModelHelperService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowModelHelperService\";\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n  }\n  postConstruct() {\n    const rowModel = this.rowModel;\n    switch (rowModel.getType()) {\n      case \"clientSide\":\n        this.clientSideRowModel = rowModel;\n        break;\n      case \"infinite\":\n        this.infiniteRowModel = rowModel;\n        break;\n      case \"serverSide\":\n        this.serverSideRowModel = rowModel;\n        break;\n    }\n  }\n  getClientSideRowModel() {\n    return this.clientSideRowModel;\n  }\n  getInfiniteRowModel() {\n    return this.infiniteRowModel;\n  }\n  getServerSideRowModel() {\n    return this.serverSideRowModel;\n  }\n};\n\n// community-modules/core/src/api/csrmSsrmSharedApi.ts\nfunction expandAll(beans) {\n  beans.expansionService.expandAll(true);\n}\nfunction collapseAll(beans) {\n  beans.expansionService.expandAll(false);\n}\nfunction onRowHeightChanged(beans) {\n  const clientSideRowModel = beans.rowModelHelperService?.getClientSideRowModel();\n  const serverSideRowModel = beans.rowModelHelperService?.getServerSideRowModel();\n  if (clientSideRowModel) {\n    clientSideRowModel.onRowHeightChanged();\n  } else if (serverSideRowModel) {\n    serverSideRowModel.onRowHeightChanged();\n  }\n}\n\n// community-modules/core/src/api/ssrmInfiniteSharedApi.ts\nfunction setRowCount(beans, rowCount, maxRowFound) {\n  const serverSideRowModel = beans.rowModelHelperService?.getServerSideRowModel();\n  if (serverSideRowModel) {\n    if (beans.funcColsService.isRowGroupEmpty()) {\n      serverSideRowModel.setRowCount(rowCount, maxRowFound);\n      return;\n    }\n    _errorOnce(\"setRowCount cannot be used while using row grouping.\");\n    return;\n  }\n  const infiniteRowModel = beans.rowModelHelperService?.getInfiniteRowModel();\n  if (infiniteRowModel) {\n    infiniteRowModel.setRowCount(rowCount, maxRowFound);\n    return;\n  }\n}\nfunction getCacheBlockState(beans) {\n  return beans.rowNodeBlockLoader?.getBlockState() ?? {};\n}\n\n// community-modules/core/src/api/sharedApiModule.ts\nvar CsrmSsrmSharedApiModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/csrm-ssrm-shared-api\",\n  apiFunctions: {\n    expandAll,\n    collapseAll,\n    onRowHeightChanged\n  }\n});\nvar SsrmInfiniteSharedApiModule = _defineModule({\n  version: VERSION,\n  moduleName: \"@ag-grid-community/ssrm-infinite-shared-api\",\n  apiFunctions: {\n    setRowCount,\n    getCacheBlockState\n  }\n});\n\n// community-modules/core/src/components/framework/frameworkComponentWrapper.ts\nvar BaseComponentWrapper = class {\n  wrap(OriginalConstructor, mandatoryMethodList, optionalMethodList = [], componentType) {\n    const wrapper = this.createWrapper(OriginalConstructor, componentType);\n    mandatoryMethodList.forEach((methodName) => {\n      this.createMethod(wrapper, methodName, true);\n    });\n    optionalMethodList.forEach((methodName) => {\n      this.createMethod(wrapper, methodName, false);\n    });\n    return wrapper;\n  }\n  unwrap(comp) {\n    return comp;\n  }\n  createMethod(wrapper, methodName, mandatory) {\n    wrapper.addMethod(methodName, this.createMethodProxy(wrapper, methodName, mandatory));\n  }\n  createMethodProxy(wrapper, methodName, mandatory) {\n    return function() {\n      if (wrapper.hasMethod(methodName)) {\n        return wrapper.callMethod(methodName, arguments);\n      }\n      if (mandatory) {\n        _warnOnce(\"Framework component is missing the method \" + methodName + \"()\");\n      }\n      return null;\n    };\n  }\n};\n\n// community-modules/core/src/utils/rowNode.ts\nfunction _sortRowNodesByOrder(rowNodes, rowNodeOrder) {\n  if (!rowNodes) {\n    return false;\n  }\n  const comparator = (nodeA, nodeB) => {\n    const positionA = rowNodeOrder[nodeA.id];\n    const positionB = rowNodeOrder[nodeB.id];\n    const aHasIndex = positionA !== void 0;\n    const bHasIndex = positionB !== void 0;\n    const bothNodesAreUserNodes = aHasIndex && bHasIndex;\n    const bothNodesAreFillerNodes = !aHasIndex && !bHasIndex;\n    if (bothNodesAreUserNodes) {\n      return positionA - positionB;\n    }\n    if (bothNodesAreFillerNodes) {\n      return nodeA.__objectId - nodeB.__objectId;\n    }\n    if (aHasIndex) {\n      return 1;\n    }\n    return -1;\n  };\n  let rowNodeA;\n  let rowNodeB;\n  let atLeastOneOutOfOrder = false;\n  for (let i = 0; i < rowNodes.length - 1; i++) {\n    rowNodeA = rowNodes[i];\n    rowNodeB = rowNodes[i + 1];\n    if (comparator(rowNodeA, rowNodeB) > 0) {\n      atLeastOneOutOfOrder = true;\n      break;\n    }\n  }\n  if (atLeastOneOutOfOrder) {\n    rowNodes.sort(comparator);\n    return true;\n  }\n  return false;\n}\n\n// community-modules/core/src/interfaces/iChartOptions.ts\nvar ChartMappings = class {\n};\nChartMappings.CHART_TYPE_TO_SERIES_TYPE = {\n  column: \"bar\",\n  groupedColumn: \"bar\",\n  stackedColumn: \"bar\",\n  normalizedColumn: \"bar\",\n  bar: \"bar\",\n  groupedBar: \"bar\",\n  stackedBar: \"bar\",\n  normalizedBar: \"bar\",\n  line: \"line\",\n  scatter: \"scatter\",\n  bubble: \"bubble\",\n  pie: \"pie\",\n  donut: \"donut\",\n  doughnut: \"donut\",\n  area: \"area\",\n  stackedArea: \"area\",\n  normalizedArea: \"area\",\n  histogram: \"histogram\",\n  radarLine: \"radar-line\",\n  radarArea: \"radar-area\",\n  nightingale: \"nightingale\",\n  radialColumn: \"radial-column\",\n  radialBar: \"radial-bar\",\n  sunburst: \"sunburst\",\n  rangeBar: \"range-bar\",\n  rangeArea: \"range-area\",\n  boxPlot: \"box-plot\",\n  treemap: \"treemap\",\n  heatmap: \"heatmap\",\n  waterfall: \"waterfall\"\n};\nChartMappings.COMBO_CHART_TYPES = [\"columnLineCombo\", \"areaColumnCombo\", \"customCombo\"];\nChartMappings.SERIES_GROUP_TYPES = [\"grouped\", \"stacked\", \"normalized\"];\n\n// community-modules/core/src/interfaces/iSparklineCellRendererParams.ts\nvar BarColumnLabelPlacement = /* @__PURE__ */ ((BarColumnLabelPlacement2) => {\n  BarColumnLabelPlacement2[\"InsideBase\"] = \"insideBase\";\n  BarColumnLabelPlacement2[\"InsideEnd\"] = \"insideEnd\";\n  BarColumnLabelPlacement2[\"Center\"] = \"center\";\n  BarColumnLabelPlacement2[\"OutsideEnd\"] = \"outsideEnd\";\n  return BarColumnLabelPlacement2;\n})(BarColumnLabelPlacement || {});\n\n// community-modules/core/src/main.ts\nvar globalObj = typeof global === \"undefined\" ? {} : global;\nglobalObj.HTMLElement = typeof HTMLElement === \"undefined\" ? {} : HTMLElement;\nglobalObj.HTMLButtonElement = typeof HTMLButtonElement === \"undefined\" ? {} : HTMLButtonElement;\nglobalObj.HTMLSelectElement = typeof HTMLSelectElement === \"undefined\" ? {} : HTMLSelectElement;\nglobalObj.HTMLInputElement = typeof HTMLInputElement === \"undefined\" ? {} : HTMLInputElement;\nglobalObj.Node = typeof Node === \"undefined\" ? {} : Node;\nglobalObj.MouseEvent = typeof MouseEvent === \"undefined\" ? {} : MouseEvent;\n\n// community-modules/client-side-row-model/src/clientSideRowModel/clientSideNodeManager.ts\nvar ROOT_NODE_ID = \"ROOT_NODE_ID\";\nvar TOP_LEVEL = 0;\nvar ClientSideNodeManager = class {\n  constructor(rootNode, gos, eventService, funcColsService, selectionService, beans) {\n    this.nextId = 0;\n    // has row data actually been set\n    this.rowCountReady = false;\n    // when user is provide the id's, we also keep a map of ids to row nodes for convenience\n    this.allNodesMap = {};\n    this.rootNode = rootNode;\n    this.gos = gos;\n    this.eventService = eventService;\n    this.funcColsService = funcColsService;\n    this.beans = beans;\n    this.selectionService = selectionService;\n    this.rootNode.group = true;\n    this.rootNode.level = -1;\n    this.rootNode.id = ROOT_NODE_ID;\n    this.rootNode.allLeafChildren = [];\n    this.rootNode.childrenAfterGroup = [];\n    this.rootNode.childrenAfterSort = [];\n    this.rootNode.childrenAfterAggFilter = [];\n    this.rootNode.childrenAfterFilter = [];\n  }\n  getCopyOfNodesMap() {\n    return _cloneObject(this.allNodesMap);\n  }\n  getRowNode(id) {\n    return this.allNodesMap[id];\n  }\n  setRowData(rowData) {\n    if (typeof rowData === \"string\") {\n      _warnOnce(\"rowData must be an array.\");\n      return;\n    }\n    this.rowCountReady = true;\n    this.dispatchRowDataUpdateStartedEvent(rowData);\n    const rootNode = this.rootNode;\n    const sibling = this.rootNode.sibling;\n    rootNode.childrenAfterFilter = null;\n    rootNode.childrenAfterGroup = null;\n    rootNode.childrenAfterAggFilter = null;\n    rootNode.childrenAfterSort = null;\n    rootNode.childrenMapped = null;\n    rootNode.updateHasChildren();\n    this.nextId = 0;\n    this.allNodesMap = {};\n    if (rowData) {\n      rootNode.allLeafChildren = rowData.map((dataItem) => this.createNode(dataItem, this.rootNode, TOP_LEVEL));\n    } else {\n      rootNode.allLeafChildren = [];\n      rootNode.childrenAfterGroup = [];\n    }\n    if (sibling) {\n      sibling.childrenAfterFilter = rootNode.childrenAfterFilter;\n      sibling.childrenAfterGroup = rootNode.childrenAfterGroup;\n      sibling.childrenAfterAggFilter = rootNode.childrenAfterAggFilter;\n      sibling.childrenAfterSort = rootNode.childrenAfterSort;\n      sibling.childrenMapped = rootNode.childrenMapped;\n      sibling.allLeafChildren = rootNode.allLeafChildren;\n    }\n  }\n  updateRowData(rowDataTran, rowNodeOrder) {\n    this.rowCountReady = true;\n    this.dispatchRowDataUpdateStartedEvent(rowDataTran.add);\n    const rowNodeTransaction = {\n      remove: [],\n      update: [],\n      add: []\n    };\n    const nodesToUnselect = [];\n    this.executeRemove(rowDataTran, rowNodeTransaction, nodesToUnselect);\n    this.executeUpdate(rowDataTran, rowNodeTransaction, nodesToUnselect);\n    this.executeAdd(rowDataTran, rowNodeTransaction);\n    this.updateSelection(nodesToUnselect, \"rowDataChanged\");\n    if (rowNodeOrder) {\n      _sortRowNodesByOrder(this.rootNode.allLeafChildren, rowNodeOrder);\n    }\n    return rowNodeTransaction;\n  }\n  isRowCountReady() {\n    return this.rowCountReady;\n  }\n  dispatchRowDataUpdateStartedEvent(rowData) {\n    this.eventService.dispatchEvent({\n      type: \"rowDataUpdateStarted\",\n      firstRowData: rowData?.length ? rowData[0] : null\n    });\n  }\n  updateSelection(nodesToUnselect, source) {\n    const selectionChanged = nodesToUnselect.length > 0;\n    if (selectionChanged) {\n      this.selectionService.setNodesSelected({\n        newValue: false,\n        nodes: nodesToUnselect,\n        suppressFinishActions: true,\n        source\n      });\n    }\n    this.selectionService.updateGroupsFromChildrenSelections(source);\n    if (selectionChanged) {\n      this.eventService.dispatchEvent({\n        type: \"selectionChanged\",\n        source\n      });\n    }\n  }\n  executeAdd(rowDataTran, rowNodeTransaction) {\n    const { add, addIndex } = rowDataTran;\n    if (_missingOrEmpty(add)) {\n      return;\n    }\n    const newNodes = add.map((item) => this.createNode(item, this.rootNode, TOP_LEVEL));\n    const allLeafChildren = this.rootNode.allLeafChildren;\n    if (typeof addIndex === \"number\" && addIndex >= 0) {\n      const len = allLeafChildren.length;\n      let normalisedAddIndex = addIndex;\n      const isTreeData = this.gos.get(\"treeData\");\n      if (isTreeData && addIndex > 0 && len > 0) {\n        for (let i = 0; i < len; i++) {\n          if (allLeafChildren[i]?.rowIndex == addIndex - 1) {\n            normalisedAddIndex = i + 1;\n            break;\n          }\n        }\n      }\n      const nodesBeforeIndex = allLeafChildren.slice(0, normalisedAddIndex);\n      const nodesAfterIndex = allLeafChildren.slice(normalisedAddIndex, allLeafChildren.length);\n      this.rootNode.allLeafChildren = [...nodesBeforeIndex, ...newNodes, ...nodesAfterIndex];\n    } else {\n      this.rootNode.allLeafChildren = [...allLeafChildren, ...newNodes];\n    }\n    if (this.rootNode.sibling) {\n      this.rootNode.sibling.allLeafChildren = allLeafChildren;\n    }\n    rowNodeTransaction.add = newNodes;\n  }\n  executeRemove(rowDataTran, rowNodeTransaction, nodesToUnselect) {\n    const { remove } = rowDataTran;\n    if (_missingOrEmpty(remove)) {\n      return;\n    }\n    const rowIdsRemoved = {};\n    remove.forEach((item) => {\n      const rowNode = this.lookupRowNode(item);\n      if (!rowNode) {\n        return;\n      }\n      if (rowNode.isSelected()) {\n        nodesToUnselect.push(rowNode);\n      }\n      rowNode.clearRowTopAndRowIndex();\n      rowIdsRemoved[rowNode.id] = true;\n      delete this.allNodesMap[rowNode.id];\n      rowNodeTransaction.remove.push(rowNode);\n    });\n    this.rootNode.allLeafChildren = this.rootNode.allLeafChildren?.filter((rowNode) => !rowIdsRemoved[rowNode.id]) ?? null;\n    if (this.rootNode.sibling) {\n      this.rootNode.sibling.allLeafChildren = this.rootNode.allLeafChildren;\n    }\n  }\n  executeUpdate(rowDataTran, rowNodeTransaction, nodesToUnselect) {\n    const { update } = rowDataTran;\n    if (_missingOrEmpty(update)) {\n      return;\n    }\n    update.forEach((item) => {\n      const rowNode = this.lookupRowNode(item);\n      if (!rowNode) {\n        return;\n      }\n      rowNode.updateData(item);\n      if (!rowNode.selectable && rowNode.isSelected()) {\n        nodesToUnselect.push(rowNode);\n      }\n      this.setMasterForRow(rowNode, item, TOP_LEVEL, false);\n      rowNodeTransaction.update.push(rowNode);\n    });\n  }\n  lookupRowNode(data) {\n    const getRowIdFunc = this.gos.getRowIdCallback();\n    let rowNode;\n    if (getRowIdFunc) {\n      const id = getRowIdFunc({ data, level: 0 });\n      rowNode = this.allNodesMap[id];\n      if (!rowNode) {\n        _errorOnce(`could not find row id=${id}, data item was not found for this id`);\n        return null;\n      }\n    } else {\n      rowNode = this.rootNode.allLeafChildren?.find((node) => node.data === data);\n      if (!rowNode) {\n        _errorOnce(`could not find data item as object was not found`, data);\n        _errorOnce(`Consider using getRowId to help the Grid find matching row data`);\n        return null;\n      }\n    }\n    return rowNode || null;\n  }\n  createNode(dataItem, parent, level) {\n    const node = new RowNode(this.beans);\n    node.group = false;\n    this.setMasterForRow(node, dataItem, level, true);\n    if (parent) {\n      node.parent = parent;\n    }\n    node.level = level;\n    node.setDataAndId(dataItem, this.nextId.toString());\n    if (this.allNodesMap[node.id]) {\n      _warnOnce(\n        `duplicate node id '${node.id}' detected from getRowId callback, this could cause issues in your grid.`\n      );\n    }\n    this.allNodesMap[node.id] = node;\n    this.nextId++;\n    return node;\n  }\n  setMasterForRow(rowNode, data, level, setExpanded) {\n    const isTreeData = this.gos.get(\"treeData\");\n    if (isTreeData) {\n      rowNode.setMaster(false);\n      if (setExpanded) {\n        rowNode.expanded = false;\n      }\n    } else {\n      const masterDetail = this.gos.get(\"masterDetail\");\n      if (masterDetail) {\n        const isRowMasterFunc = this.gos.get(\"isRowMaster\");\n        if (isRowMasterFunc) {\n          rowNode.setMaster(isRowMasterFunc(data));\n        } else {\n          rowNode.setMaster(true);\n        }\n      } else {\n        rowNode.setMaster(false);\n      }\n      if (setExpanded) {\n        const rowGroupColumns = this.funcColsService.getRowGroupColumns();\n        const numRowGroupColumns = rowGroupColumns ? rowGroupColumns.length : 0;\n        const masterRowLevel = level + numRowGroupColumns;\n        rowNode.expanded = rowNode.master ? this.isExpanded(masterRowLevel) : false;\n      }\n    }\n  }\n  isExpanded(level) {\n    const expandByDefault = this.gos.get(\"groupDefaultExpanded\");\n    if (expandByDefault === -1) {\n      return true;\n    }\n    return level < expandByDefault;\n  }\n};\n\n// community-modules/client-side-row-model/src/clientSideRowModel/clientSideRowModel.ts\nvar ClientSideRowModel = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowModel\";\n    this.onRowHeightChanged_debounced = _debounce(this.onRowHeightChanged.bind(this), 100);\n    this.rowsToDisplay = [];\n    /** Has the start method been called */\n    this.hasStarted = false;\n    /** E.g. data has been set into the node manager already */\n    this.shouldSkipSettingDataOnStart = false;\n    /**\n     * This is to prevent refresh model being called when it's already being called.\n     * E.g. the group stage can trigger initial state filter model to be applied. This fires onFilterChanged,\n     * which then triggers the listener here that calls refresh model again but at the filter stage\n     * (which is about to be run by the original call).\n     */\n    this.isRefreshingModel = false;\n    this.rowCountReady = false;\n  }\n  wireBeans(beans) {\n    this.beans = beans;\n    this.columnModel = beans.columnModel;\n    this.funcColsService = beans.funcColsService;\n    this.selectionService = beans.selectionService;\n    this.valueCache = beans.valueCache;\n    this.environment = beans.environment;\n    this.filterStage = beans.filterStage;\n    this.sortStage = beans.sortStage;\n    this.flattenStage = beans.flattenStage;\n    this.groupStage = beans.groupStage;\n    this.aggregationStage = beans.aggregationStage;\n    this.pivotStage = beans.pivotStage;\n    this.filterAggregatesStage = beans.filterAggregatesStage;\n  }\n  postConstruct() {\n    const refreshEverythingFunc = this.refreshModel.bind(this, { step: \"group\" /* EVERYTHING */ });\n    const animate = !this.gos.get(\"suppressAnimationFrame\");\n    const refreshEverythingAfterColsChangedFunc = this.refreshModel.bind(this, {\n      step: \"group\" /* EVERYTHING */,\n      // after cols change, row grouping (the first stage) could of changed\n      afterColumnsChanged: true,\n      keepRenderedRows: true,\n      // we want animations cos sorting or filtering could be applied\n      animate\n    });\n    this.addManagedEventListeners({\n      newColumnsLoaded: refreshEverythingAfterColsChangedFunc,\n      columnRowGroupChanged: refreshEverythingFunc,\n      columnValueChanged: this.onValueChanged.bind(this),\n      columnPivotChanged: this.refreshModel.bind(this, { step: \"pivot\" /* PIVOT */ }),\n      filterChanged: this.onFilterChanged.bind(this),\n      sortChanged: this.onSortChanged.bind(this),\n      columnPivotModeChanged: refreshEverythingFunc,\n      gridStylesChanged: this.onGridStylesChanges.bind(this),\n      gridReady: this.onGridReady.bind(this)\n    });\n    this.addPropertyListeners();\n    this.rootNode = new RowNode(this.beans);\n    this.nodeManager = new ClientSideNodeManager(\n      this.rootNode,\n      this.gos,\n      this.eventService,\n      this.funcColsService,\n      this.selectionService,\n      this.beans\n    );\n  }\n  addPropertyListeners() {\n    const resetProps = /* @__PURE__ */ new Set([\"treeData\", \"masterDetail\"]);\n    const groupStageRefreshProps = /* @__PURE__ */ new Set([\n      \"groupDefaultExpanded\",\n      \"groupAllowUnbalanced\",\n      \"initialGroupOrderComparator\",\n      \"groupHideOpenParents\",\n      \"groupDisplayType\"\n    ]);\n    const filterStageRefreshProps = /* @__PURE__ */ new Set([\"excludeChildrenWhenTreeDataFiltering\"]);\n    const pivotStageRefreshProps = /* @__PURE__ */ new Set([\n      \"removePivotHeaderRowWhenSingleValueColumn\",\n      \"pivotRowTotals\",\n      \"pivotColumnGroupTotals\",\n      \"suppressExpandablePivotGroups\"\n    ]);\n    const aggregateStageRefreshProps = /* @__PURE__ */ new Set([\n      \"getGroupRowAgg\",\n      \"alwaysAggregateAtRootLevel\",\n      \"groupIncludeTotalFooter\",\n      \"suppressAggFilteredOnly\",\n      \"grandTotalRow\"\n    ]);\n    const sortStageRefreshProps = /* @__PURE__ */ new Set([\n      \"postSortRows\",\n      \"groupDisplayType\",\n      \"accentedSort\"\n    ]);\n    const filterAggStageRefreshProps = /* @__PURE__ */ new Set([]);\n    const flattenStageRefreshProps = /* @__PURE__ */ new Set([\n      \"groupRemoveSingleChildren\",\n      \"groupRemoveLowestSingleChildren\",\n      \"groupIncludeFooter\",\n      \"groupTotalRow\"\n    ]);\n    const allProps = [\n      ...resetProps,\n      ...groupStageRefreshProps,\n      ...filterStageRefreshProps,\n      ...pivotStageRefreshProps,\n      ...pivotStageRefreshProps,\n      ...aggregateStageRefreshProps,\n      ...sortStageRefreshProps,\n      ...filterAggStageRefreshProps,\n      ...flattenStageRefreshProps\n    ];\n    this.addManagedPropertyListeners(allProps, (params) => {\n      const properties = params.changeSet?.properties;\n      if (!properties) {\n        return;\n      }\n      const arePropertiesImpacted = (propSet) => properties.some((prop) => propSet.has(prop));\n      if (arePropertiesImpacted(resetProps)) {\n        this.setRowData(this.rootNode.allLeafChildren.map((child) => child.data));\n        return;\n      }\n      if (arePropertiesImpacted(groupStageRefreshProps)) {\n        this.refreshModel({ step: \"group\" /* EVERYTHING */ });\n        return;\n      }\n      if (arePropertiesImpacted(filterStageRefreshProps)) {\n        this.refreshModel({ step: \"filter\" /* FILTER */ });\n        return;\n      }\n      if (arePropertiesImpacted(pivotStageRefreshProps)) {\n        this.refreshModel({ step: \"pivot\" /* PIVOT */ });\n        return;\n      }\n      if (arePropertiesImpacted(aggregateStageRefreshProps)) {\n        this.refreshModel({ step: \"aggregate\" /* AGGREGATE */ });\n        return;\n      }\n      if (arePropertiesImpacted(sortStageRefreshProps)) {\n        this.refreshModel({ step: \"sort\" /* SORT */ });\n        return;\n      }\n      if (arePropertiesImpacted(filterAggStageRefreshProps)) {\n        this.refreshModel({ step: \"filter_aggregates\" /* FILTER_AGGREGATES */ });\n        return;\n      }\n      if (arePropertiesImpacted(flattenStageRefreshProps)) {\n        this.refreshModel({ step: \"map\" /* MAP */ });\n      }\n    });\n    this.addManagedPropertyListener(\"rowHeight\", () => this.resetRowHeights());\n  }\n  start() {\n    this.hasStarted = true;\n    if (this.shouldSkipSettingDataOnStart) {\n      this.dispatchUpdateEventsAndRefresh();\n    } else {\n      this.setInitialData();\n    }\n  }\n  setInitialData() {\n    const rowData = this.gos.get(\"rowData\");\n    if (rowData) {\n      this.shouldSkipSettingDataOnStart = true;\n      this.setRowData(rowData);\n    }\n  }\n  ensureRowHeightsValid(startPixel, endPixel, startLimitIndex, endLimitIndex) {\n    let atLeastOneChange;\n    let res = false;\n    do {\n      atLeastOneChange = false;\n      const rowAtStartPixel = this.getRowIndexAtPixel(startPixel);\n      const rowAtEndPixel = this.getRowIndexAtPixel(endPixel);\n      const firstRow = Math.max(rowAtStartPixel, startLimitIndex);\n      const lastRow = Math.min(rowAtEndPixel, endLimitIndex);\n      for (let rowIndex = firstRow; rowIndex <= lastRow; rowIndex++) {\n        const rowNode = this.getRow(rowIndex);\n        if (rowNode.rowHeightEstimated) {\n          const rowHeight = this.gos.getRowHeightForNode(rowNode);\n          rowNode.setRowHeight(rowHeight.height);\n          atLeastOneChange = true;\n          res = true;\n        }\n      }\n      if (atLeastOneChange) {\n        this.setRowTopAndRowIndex();\n      }\n    } while (atLeastOneChange);\n    return res;\n  }\n  setRowTopAndRowIndex() {\n    const defaultRowHeight = this.environment.getDefaultRowHeight();\n    let nextRowTop = 0;\n    const displayedRowsMapped = /* @__PURE__ */ new Set();\n    const allowEstimate = this.gos.isDomLayout(\"normal\");\n    for (let i = 0; i < this.rowsToDisplay.length; i++) {\n      const rowNode = this.rowsToDisplay[i];\n      if (rowNode.id != null) {\n        displayedRowsMapped.add(rowNode.id);\n      }\n      if (rowNode.rowHeight == null) {\n        const rowHeight = this.gos.getRowHeightForNode(rowNode, allowEstimate, defaultRowHeight);\n        rowNode.setRowHeight(rowHeight.height, rowHeight.estimated);\n      }\n      rowNode.setRowTop(nextRowTop);\n      rowNode.setRowIndex(i);\n      nextRowTop += rowNode.rowHeight;\n    }\n    return displayedRowsMapped;\n  }\n  clearRowTopAndRowIndex(changedPath, displayedRowsMapped) {\n    const changedPathActive = changedPath.isActive();\n    const clearIfNotDisplayed = (rowNode) => {\n      if (rowNode && rowNode.id != null && !displayedRowsMapped.has(rowNode.id)) {\n        rowNode.clearRowTopAndRowIndex();\n      }\n    };\n    const recurse = (rowNode) => {\n      clearIfNotDisplayed(rowNode);\n      clearIfNotDisplayed(rowNode.detailNode);\n      clearIfNotDisplayed(rowNode.sibling);\n      if (rowNode.hasChildren()) {\n        if (rowNode.childrenAfterGroup) {\n          const isRootNode = rowNode.level == -1;\n          const skipChildren = changedPathActive && !isRootNode && !rowNode.expanded;\n          if (!skipChildren) {\n            rowNode.childrenAfterGroup.forEach(recurse);\n          }\n        }\n      }\n    };\n    recurse(this.rootNode);\n  }\n  // returns false if row was moved, otherwise true\n  ensureRowsAtPixel(rowNodes, pixel, increment = 0) {\n    const indexAtPixelNow = this.getRowIndexAtPixel(pixel);\n    const rowNodeAtPixelNow = this.getRow(indexAtPixelNow);\n    const animate = !this.gos.get(\"suppressAnimationFrame\");\n    if (rowNodeAtPixelNow === rowNodes[0]) {\n      return false;\n    }\n    rowNodes.forEach((rowNode) => {\n      _removeFromArray(this.rootNode.allLeafChildren, rowNode);\n    });\n    rowNodes.forEach((rowNode, idx) => {\n      _insertIntoArray(this.rootNode.allLeafChildren, rowNode, Math.max(indexAtPixelNow + increment, 0) + idx);\n    });\n    this.refreshModel({\n      step: \"group\" /* EVERYTHING */,\n      keepRenderedRows: true,\n      keepEditingRows: true,\n      animate\n    });\n    return true;\n  }\n  highlightRowAtPixel(rowNode, pixel) {\n    const indexAtPixelNow = pixel != null ? this.getRowIndexAtPixel(pixel) : null;\n    const rowNodeAtPixelNow = indexAtPixelNow != null ? this.getRow(indexAtPixelNow) : null;\n    if (!rowNodeAtPixelNow || !rowNode || rowNodeAtPixelNow === rowNode || pixel == null) {\n      if (this.lastHighlightedRow) {\n        this.lastHighlightedRow.setHighlighted(null);\n        this.lastHighlightedRow = null;\n      }\n      return;\n    }\n    const highlight = this.getHighlightPosition(pixel, rowNodeAtPixelNow);\n    if (this.lastHighlightedRow && this.lastHighlightedRow !== rowNodeAtPixelNow) {\n      this.lastHighlightedRow.setHighlighted(null);\n      this.lastHighlightedRow = null;\n    }\n    rowNodeAtPixelNow.setHighlighted(highlight);\n    this.lastHighlightedRow = rowNodeAtPixelNow;\n  }\n  getHighlightPosition(pixel, rowNode) {\n    if (!rowNode) {\n      const index = this.getRowIndexAtPixel(pixel);\n      rowNode = this.getRow(index || 0);\n      if (!rowNode) {\n        return 1 /* Below */;\n      }\n    }\n    const { rowTop, rowHeight } = rowNode;\n    return pixel - rowTop < rowHeight / 2 ? 0 /* Above */ : 1 /* Below */;\n  }\n  getLastHighlightedRowNode() {\n    return this.lastHighlightedRow;\n  }\n  isLastRowIndexKnown() {\n    return true;\n  }\n  getRowCount() {\n    if (this.rowsToDisplay) {\n      return this.rowsToDisplay.length;\n    }\n    return 0;\n  }\n  getTopLevelRowCount() {\n    const showingRootNode = this.rowsToDisplay && this.rowsToDisplay[0] === this.rootNode;\n    if (showingRootNode) {\n      return 1;\n    }\n    const totalFooterInc = this.rootNode.sibling ? 1 : 0;\n    const filteredChildren = this.rootNode.childrenAfterAggFilter;\n    return (filteredChildren ? filteredChildren.length : 0) + totalFooterInc;\n  }\n  getTopLevelRowDisplayedIndex(topLevelIndex) {\n    const showingRootNode = this.rowsToDisplay && this.rowsToDisplay[0] === this.rootNode;\n    if (showingRootNode) {\n      return topLevelIndex;\n    }\n    let adjustedIndex = topLevelIndex;\n    if (this.rowsToDisplay[0].footer) {\n      if (topLevelIndex === 0) {\n        return 0;\n      }\n      adjustedIndex -= 1;\n    }\n    const lastRow = this.rowsToDisplay[this.rowsToDisplay.length - 1];\n    const indexOutsideGroupBounds = adjustedIndex >= this.rootNode.childrenAfterSort.length;\n    if (lastRow.footer && indexOutsideGroupBounds) {\n      return lastRow.rowIndex;\n    }\n    let rowNode = this.rootNode.childrenAfterSort[adjustedIndex];\n    if (this.gos.get(\"groupHideOpenParents\")) {\n      while (rowNode.expanded && rowNode.childrenAfterSort && rowNode.childrenAfterSort.length > 0) {\n        rowNode = rowNode.childrenAfterSort[0];\n      }\n    }\n    return rowNode.rowIndex;\n  }\n  getRowBounds(index) {\n    if (_missing(this.rowsToDisplay)) {\n      return null;\n    }\n    const rowNode = this.rowsToDisplay[index];\n    if (rowNode) {\n      return {\n        rowTop: rowNode.rowTop,\n        rowHeight: rowNode.rowHeight\n      };\n    }\n    return null;\n  }\n  onRowGroupOpened() {\n    const animate = this.gos.isAnimateRows();\n    this.refreshModel({ step: \"map\" /* MAP */, keepRenderedRows: true, animate });\n  }\n  onFilterChanged(event) {\n    if (event.afterDataChange) {\n      return;\n    }\n    const animate = this.gos.isAnimateRows();\n    const primaryOrQuickFilterChanged = event.columns.length === 0 || event.columns.some((col) => col.isPrimary());\n    const step = primaryOrQuickFilterChanged ? \"filter\" /* FILTER */ : \"filter_aggregates\" /* FILTER_AGGREGATES */;\n    this.refreshModel({ step, keepRenderedRows: true, animate });\n  }\n  onSortChanged() {\n    const animate = this.gos.isAnimateRows();\n    this.refreshModel({\n      step: \"sort\" /* SORT */,\n      keepRenderedRows: true,\n      animate,\n      keepEditingRows: true\n    });\n  }\n  getType() {\n    return \"clientSide\";\n  }\n  onValueChanged() {\n    if (this.columnModel.isPivotActive()) {\n      this.refreshModel({ step: \"pivot\" /* PIVOT */ });\n    } else {\n      this.refreshModel({ step: \"aggregate\" /* AGGREGATE */ });\n    }\n  }\n  createChangePath(rowNodeTransactions) {\n    const noTransactions = _missingOrEmpty(rowNodeTransactions);\n    const changedPath = new ChangedPath(false, this.rootNode);\n    if (noTransactions || this.gos.get(\"treeData\")) {\n      changedPath.setInactive();\n    }\n    return changedPath;\n  }\n  isSuppressModelUpdateAfterUpdateTransaction(params) {\n    if (!this.gos.get(\"suppressModelUpdateAfterUpdateTransaction\")) {\n      return false;\n    }\n    if (params.rowNodeTransactions == null) {\n      return false;\n    }\n    const transWithAddsOrDeletes = params.rowNodeTransactions.filter(\n      (tx) => tx.add != null && tx.add.length > 0 || tx.remove != null && tx.remove.length > 0\n    );\n    const transactionsContainUpdatesOnly = transWithAddsOrDeletes == null || transWithAddsOrDeletes.length == 0;\n    return transactionsContainUpdatesOnly;\n  }\n  buildRefreshModelParams(step) {\n    let paramsStep = \"group\" /* EVERYTHING */;\n    const stepsMapped = {\n      everything: \"group\" /* EVERYTHING */,\n      group: \"group\" /* EVERYTHING */,\n      filter: \"filter\" /* FILTER */,\n      map: \"map\" /* MAP */,\n      aggregate: \"aggregate\" /* AGGREGATE */,\n      sort: \"sort\" /* SORT */,\n      pivot: \"pivot\" /* PIVOT */\n    };\n    if (_exists(step)) {\n      paramsStep = stepsMapped[step];\n    }\n    if (_missing(paramsStep)) {\n      _errorOnce(`invalid step ${step}, available steps are ${Object.keys(stepsMapped).join(\", \")}`);\n      return void 0;\n    }\n    const animate = !this.gos.get(\"suppressAnimationFrame\");\n    const modelParams = {\n      step: paramsStep,\n      keepRenderedRows: true,\n      keepEditingRows: true,\n      animate\n    };\n    return modelParams;\n  }\n  refreshModel(paramsOrStep) {\n    if (!this.hasStarted || this.isRefreshingModel || this.columnModel.isChangeEventsDispatching()) {\n      return;\n    }\n    const params = typeof paramsOrStep === \"object\" && \"step\" in paramsOrStep ? paramsOrStep : this.buildRefreshModelParams(paramsOrStep);\n    if (!params) {\n      return;\n    }\n    if (this.isSuppressModelUpdateAfterUpdateTransaction(params)) {\n      return;\n    }\n    const changedPath = this.createChangePath(params.rowNodeTransactions);\n    this.isRefreshingModel = true;\n    switch (params.step) {\n      case \"group\" /* EVERYTHING */:\n        this.doRowGrouping(\n          params.rowNodeTransactions,\n          params.rowNodeOrder,\n          changedPath,\n          !!params.afterColumnsChanged\n        );\n      case \"filter\" /* FILTER */:\n        this.doFilter(changedPath);\n      case \"pivot\" /* PIVOT */:\n        this.doPivot(changedPath);\n      case \"aggregate\" /* AGGREGATE */:\n        this.doAggregate(changedPath);\n      case \"filter_aggregates\" /* FILTER_AGGREGATES */:\n        this.doFilterAggregates(changedPath);\n      case \"sort\" /* SORT */:\n        this.doSort(params.rowNodeTransactions, changedPath);\n      case \"map\" /* MAP */:\n        this.doRowsToDisplay();\n    }\n    const displayedNodesMapped = this.setRowTopAndRowIndex();\n    this.clearRowTopAndRowIndex(changedPath, displayedNodesMapped);\n    this.isRefreshingModel = false;\n    this.eventService.dispatchEvent({\n      type: \"modelUpdated\",\n      animate: params.animate,\n      keepRenderedRows: params.keepRenderedRows,\n      newData: params.newData,\n      newPage: false,\n      keepUndoRedoStack: params.keepUndoRedoStack\n    });\n  }\n  isEmpty() {\n    const rowsMissing = _missing(this.rootNode.allLeafChildren) || this.rootNode.allLeafChildren.length === 0;\n    return _missing(this.rootNode) || rowsMissing || !this.columnModel.isReady();\n  }\n  isRowsToRender() {\n    return _exists(this.rowsToDisplay) && this.rowsToDisplay.length > 0;\n  }\n  getNodesInRangeForSelection(firstInRange, lastInRange) {\n    let started = false;\n    let finished = false;\n    const result = [];\n    const groupsSelectChildren = this.gos.get(\"groupSelectsChildren\");\n    this.forEachNodeAfterFilterAndSort((rowNode) => {\n      if (finished) {\n        return;\n      }\n      if (started) {\n        if (rowNode === lastInRange || rowNode === firstInRange) {\n          finished = true;\n          if (rowNode.group && groupsSelectChildren) {\n            result.push(...rowNode.allLeafChildren);\n            return;\n          }\n        }\n      }\n      if (!started) {\n        if (rowNode !== lastInRange && rowNode !== firstInRange) {\n          return;\n        }\n        started = true;\n      }\n      const includeThisNode = !rowNode.group || !groupsSelectChildren;\n      if (includeThisNode) {\n        result.push(rowNode);\n        return;\n      }\n    });\n    return result;\n  }\n  // eslint-disable-next-line\n  setDatasource(datasource) {\n    _errorOnce(\"should never call setDatasource on clientSideRowController\");\n  }\n  getTopLevelNodes() {\n    return this.rootNode ? this.rootNode.childrenAfterGroup : null;\n  }\n  getRootNode() {\n    return this.rootNode;\n  }\n  getRow(index) {\n    return this.rowsToDisplay[index];\n  }\n  isRowPresent(rowNode) {\n    return this.rowsToDisplay.indexOf(rowNode) >= 0;\n  }\n  getRowIndexAtPixel(pixelToMatch) {\n    if (this.isEmpty() || this.rowsToDisplay.length === 0) {\n      return -1;\n    }\n    let bottomPointer = 0;\n    let topPointer = this.rowsToDisplay.length - 1;\n    if (pixelToMatch <= 0) {\n      return 0;\n    }\n    const lastNode = _last(this.rowsToDisplay);\n    if (lastNode.rowTop <= pixelToMatch) {\n      return this.rowsToDisplay.length - 1;\n    }\n    let oldBottomPointer = -1;\n    let oldTopPointer = -1;\n    while (true) {\n      const midPointer = Math.floor((bottomPointer + topPointer) / 2);\n      const currentRowNode = this.rowsToDisplay[midPointer];\n      if (this.isRowInPixel(currentRowNode, pixelToMatch)) {\n        return midPointer;\n      }\n      if (currentRowNode.rowTop < pixelToMatch) {\n        bottomPointer = midPointer + 1;\n      } else if (currentRowNode.rowTop > pixelToMatch) {\n        topPointer = midPointer - 1;\n      }\n      const caughtInInfiniteLoop = oldBottomPointer === bottomPointer && oldTopPointer === topPointer;\n      if (caughtInInfiniteLoop) {\n        return midPointer;\n      }\n      oldBottomPointer = bottomPointer;\n      oldTopPointer = topPointer;\n    }\n  }\n  isRowInPixel(rowNode, pixelToMatch) {\n    const topPixel = rowNode.rowTop;\n    const bottomPixel = rowNode.rowTop + rowNode.rowHeight;\n    const pixelInRow = topPixel <= pixelToMatch && bottomPixel > pixelToMatch;\n    return pixelInRow;\n  }\n  forEachLeafNode(callback) {\n    if (this.rootNode.allLeafChildren) {\n      this.rootNode.allLeafChildren.forEach((rowNode, index) => callback(rowNode, index));\n    }\n  }\n  forEachNode(callback, includeFooterNodes = false) {\n    this.recursivelyWalkNodesAndCallback({\n      nodes: [...this.rootNode.childrenAfterGroup || []],\n      callback,\n      recursionType: 0 /* Normal */,\n      index: 0,\n      includeFooterNodes\n    });\n  }\n  forEachNodeAfterFilter(callback, includeFooterNodes = false) {\n    this.recursivelyWalkNodesAndCallback({\n      nodes: [...this.rootNode.childrenAfterAggFilter || []],\n      callback,\n      recursionType: 1 /* AfterFilter */,\n      index: 0,\n      includeFooterNodes\n    });\n  }\n  forEachNodeAfterFilterAndSort(callback, includeFooterNodes = false) {\n    this.recursivelyWalkNodesAndCallback({\n      nodes: [...this.rootNode.childrenAfterSort || []],\n      callback,\n      recursionType: 2 /* AfterFilterAndSort */,\n      index: 0,\n      includeFooterNodes\n    });\n  }\n  forEachPivotNode(callback, includeFooterNodes = false) {\n    this.recursivelyWalkNodesAndCallback({\n      nodes: [this.rootNode],\n      callback,\n      recursionType: 3 /* PivotNodes */,\n      index: 0,\n      includeFooterNodes\n    });\n  }\n  // iterates through each item in memory, and calls the callback function\n  // nodes - the rowNodes to traverse\n  // callback - the user provided callback\n  // recursion type - need this to know what child nodes to recurse, eg if looking at all nodes, or filtered notes etc\n  // index - works similar to the index in forEach in javascript's array function\n  recursivelyWalkNodesAndCallback(params) {\n    const { nodes, callback, recursionType, includeFooterNodes } = params;\n    let { index } = params;\n    const addFooters = (position) => {\n      const parentNode = nodes[0]?.parent;\n      if (!parentNode)\n        return;\n      const grandTotal = includeFooterNodes && this.gos.getGrandTotalRow();\n      const isGroupIncludeFooter = this.gos.getGroupTotalRowCallback();\n      const groupTotal = includeFooterNodes && isGroupIncludeFooter({ node: parentNode });\n      const isRootNode = parentNode === this.rootNode;\n      if (isRootNode) {\n        if (grandTotal === position) {\n          parentNode.createFooter();\n          callback(parentNode.sibling, index++);\n        }\n        return;\n      }\n      if (groupTotal === position) {\n        parentNode.createFooter();\n        callback(parentNode.sibling, index++);\n      }\n    };\n    addFooters(\"top\");\n    for (let i = 0; i < nodes.length; i++) {\n      const node = nodes[i];\n      callback(node, index++);\n      if (node.hasChildren() && !node.footer) {\n        let nodeChildren = null;\n        switch (recursionType) {\n          case 0 /* Normal */:\n            nodeChildren = node.childrenAfterGroup;\n            break;\n          case 1 /* AfterFilter */:\n            nodeChildren = node.childrenAfterAggFilter;\n            break;\n          case 2 /* AfterFilterAndSort */:\n            nodeChildren = node.childrenAfterSort;\n            break;\n          case 3 /* PivotNodes */:\n            nodeChildren = !node.leafGroup ? node.childrenAfterSort : null;\n            break;\n        }\n        if (nodeChildren) {\n          index = this.recursivelyWalkNodesAndCallback({\n            nodes: [...nodeChildren],\n            callback,\n            recursionType,\n            index,\n            includeFooterNodes\n          });\n        }\n      }\n    }\n    addFooters(\"bottom\");\n    return index;\n  }\n  // it's possible to recompute the aggregate without doing the other parts\n  // + api.refreshClientSideRowModel('aggregate')\n  doAggregate(changedPath) {\n    this.aggregationStage?.execute({ rowNode: this.rootNode, changedPath });\n  }\n  doFilterAggregates(changedPath) {\n    if (this.filterAggregatesStage) {\n      this.filterAggregatesStage.execute({ rowNode: this.rootNode, changedPath });\n    } else {\n      this.rootNode.childrenAfterAggFilter = this.rootNode.childrenAfterFilter;\n    }\n  }\n  // + gridApi.expandAll()\n  // + gridApi.collapseAll()\n  expandOrCollapseAll(expand) {\n    const usingTreeData = this.gos.get(\"treeData\");\n    const usingPivotMode = this.columnModel.isPivotActive();\n    const recursiveExpandOrCollapse = (rowNodes) => {\n      if (!rowNodes) {\n        return;\n      }\n      rowNodes.forEach((rowNode) => {\n        const actionRow = () => {\n          rowNode.expanded = expand;\n          recursiveExpandOrCollapse(rowNode.childrenAfterGroup);\n        };\n        if (usingTreeData) {\n          const hasChildren = _exists(rowNode.childrenAfterGroup);\n          if (hasChildren) {\n            actionRow();\n          }\n          return;\n        }\n        if (usingPivotMode) {\n          const notLeafGroup = !rowNode.leafGroup;\n          if (notLeafGroup) {\n            actionRow();\n          }\n          return;\n        }\n        const isRowGroup = rowNode.group;\n        if (isRowGroup) {\n          actionRow();\n        }\n      });\n    };\n    if (this.rootNode) {\n      recursiveExpandOrCollapse(this.rootNode.childrenAfterGroup);\n    }\n    this.refreshModel({ step: \"map\" /* MAP */ });\n    this.eventService.dispatchEvent({\n      type: \"expandOrCollapseAll\",\n      source: expand ? \"expandAll\" : \"collapseAll\"\n    });\n  }\n  doSort(rowNodeTransactions, changedPath) {\n    this.sortStage.execute({\n      rowNode: this.rootNode,\n      rowNodeTransactions,\n      changedPath\n    });\n  }\n  doRowGrouping(rowNodeTransactions, rowNodeOrder, changedPath, afterColumnsChanged) {\n    if (this.groupStage) {\n      if (rowNodeTransactions) {\n        this.groupStage.execute({\n          rowNode: this.rootNode,\n          rowNodeTransactions,\n          rowNodeOrder,\n          changedPath\n        });\n      } else {\n        this.groupStage.execute({\n          rowNode: this.rootNode,\n          changedPath,\n          afterColumnsChanged\n        });\n      }\n      if (this.gos.get(\"groupSelectsChildren\")) {\n        const selectionChanged = this.selectionService.updateGroupsFromChildrenSelections(\n          \"rowGroupChanged\",\n          changedPath\n        );\n        if (selectionChanged) {\n          this.eventService.dispatchEvent({\n            type: \"selectionChanged\",\n            source: \"rowGroupChanged\"\n          });\n        }\n      }\n    } else {\n      this.rootNode.childrenAfterGroup = this.rootNode.allLeafChildren;\n      if (this.rootNode.sibling) {\n        this.rootNode.sibling.childrenAfterGroup = this.rootNode.childrenAfterGroup;\n      }\n      this.rootNode.updateHasChildren();\n    }\n    if (this.nodeManager.isRowCountReady()) {\n      this.rowCountReady = true;\n      this.eventService.dispatchEventOnce({\n        type: \"rowCountReady\"\n      });\n    }\n  }\n  doFilter(changedPath) {\n    this.filterStage.execute({ rowNode: this.rootNode, changedPath });\n  }\n  doPivot(changedPath) {\n    this.pivotStage?.execute({ rowNode: this.rootNode, changedPath });\n  }\n  getCopyOfNodesMap() {\n    return this.nodeManager.getCopyOfNodesMap();\n  }\n  getRowNode(id) {\n    const idIsGroup = typeof id == \"string\" && id.indexOf(RowNode.ID_PREFIX_ROW_GROUP) == 0;\n    if (idIsGroup) {\n      let res = void 0;\n      this.forEachNode((node) => {\n        if (node.id === id) {\n          res = node;\n        }\n      });\n      return res;\n    }\n    return this.nodeManager.getRowNode(id);\n  }\n  // rows: the rows to put into the model\n  setRowData(rowData) {\n    this.selectionService.reset(\"rowDataChanged\");\n    this.nodeManager.setRowData(rowData);\n    if (this.hasStarted) {\n      this.dispatchUpdateEventsAndRefresh();\n    }\n  }\n  dispatchUpdateEventsAndRefresh() {\n    this.eventService.dispatchEvent({\n      type: \"rowDataUpdated\"\n    });\n    this.refreshModel({\n      step: \"group\" /* EVERYTHING */,\n      newData: true\n    });\n  }\n  batchUpdateRowData(rowDataTransaction, callback) {\n    if (this.applyAsyncTransactionsTimeout == null) {\n      this.rowDataTransactionBatch = [];\n      const waitMillis = this.gos.getAsyncTransactionWaitMillis();\n      this.applyAsyncTransactionsTimeout = window.setTimeout(() => {\n        this.executeBatchUpdateRowData();\n      }, waitMillis);\n    }\n    this.rowDataTransactionBatch.push({ rowDataTransaction, callback });\n  }\n  flushAsyncTransactions() {\n    if (this.applyAsyncTransactionsTimeout != null) {\n      clearTimeout(this.applyAsyncTransactionsTimeout);\n      this.executeBatchUpdateRowData();\n    }\n  }\n  executeBatchUpdateRowData() {\n    this.valueCache.onDataChanged();\n    const callbackFuncsBound = [];\n    const rowNodeTrans = [];\n    let forceRowNodeOrder = false;\n    if (this.rowDataTransactionBatch) {\n      this.rowDataTransactionBatch.forEach((tranItem) => {\n        const rowNodeTran = this.nodeManager.updateRowData(tranItem.rowDataTransaction, void 0);\n        rowNodeTrans.push(rowNodeTran);\n        if (tranItem.callback) {\n          callbackFuncsBound.push(tranItem.callback.bind(null, rowNodeTran));\n        }\n        if (typeof tranItem.rowDataTransaction.addIndex === \"number\") {\n          forceRowNodeOrder = true;\n        }\n      });\n    }\n    this.commonUpdateRowData(rowNodeTrans, void 0, forceRowNodeOrder);\n    if (callbackFuncsBound.length > 0) {\n      window.setTimeout(() => {\n        callbackFuncsBound.forEach((func) => func());\n      }, 0);\n    }\n    if (rowNodeTrans.length > 0) {\n      this.eventService.dispatchEvent({\n        type: \"asyncTransactionsFlushed\",\n        results: rowNodeTrans\n      });\n    }\n    this.rowDataTransactionBatch = null;\n    this.applyAsyncTransactionsTimeout = void 0;\n  }\n  updateRowData(rowDataTran, rowNodeOrder) {\n    this.valueCache.onDataChanged();\n    const rowNodeTran = this.nodeManager.updateRowData(rowDataTran, rowNodeOrder);\n    const forceRowNodeOrder = typeof rowDataTran.addIndex === \"number\";\n    this.commonUpdateRowData([rowNodeTran], rowNodeOrder, forceRowNodeOrder);\n    return rowNodeTran;\n  }\n  createRowNodeOrder() {\n    const suppressSortOrder = this.gos.get(\"suppressMaintainUnsortedOrder\");\n    if (suppressSortOrder) {\n      return;\n    }\n    const orderMap = {};\n    if (this.rootNode && this.rootNode.allLeafChildren) {\n      for (let index = 0; index < this.rootNode.allLeafChildren.length; index++) {\n        const node = this.rootNode.allLeafChildren[index];\n        orderMap[node.id] = index;\n      }\n    }\n    return orderMap;\n  }\n  // common to updateRowData and batchUpdateRowData\n  commonUpdateRowData(rowNodeTrans, rowNodeOrder, forceRowNodeOrder) {\n    if (!this.hasStarted) {\n      return;\n    }\n    const animate = !this.gos.get(\"suppressAnimationFrame\");\n    if (forceRowNodeOrder) {\n      rowNodeOrder = this.createRowNodeOrder();\n    }\n    this.eventService.dispatchEvent({\n      type: \"rowDataUpdated\"\n    });\n    this.refreshModel({\n      step: \"group\" /* EVERYTHING */,\n      rowNodeTransactions: rowNodeTrans,\n      rowNodeOrder,\n      keepRenderedRows: true,\n      keepEditingRows: true,\n      animate\n    });\n  }\n  doRowsToDisplay() {\n    this.rowsToDisplay = this.flattenStage.execute({ rowNode: this.rootNode });\n  }\n  onRowHeightChanged() {\n    this.refreshModel({\n      step: \"map\" /* MAP */,\n      keepRenderedRows: true,\n      keepEditingRows: true,\n      keepUndoRedoStack: true\n    });\n  }\n  /** This method is debounced. It is used for row auto-height. If we don't debounce,\n   * then the Row Models will end up recalculating each row position\n   * for each row height change and result in the Row Renderer laying out rows.\n   * This is particularly bad if using print layout, and showing eg 1,000 rows,\n   * each row will change it's height, causing Row Model to update 1,000 times.\n   */\n  onRowHeightChangedDebounced() {\n    this.onRowHeightChanged_debounced();\n  }\n  resetRowHeights() {\n    const atLeastOne = this.resetRowHeightsForAllRowNodes();\n    this.rootNode.setRowHeight(this.rootNode.rowHeight, true);\n    if (this.rootNode.sibling) {\n      this.rootNode.sibling.setRowHeight(this.rootNode.sibling.rowHeight, true);\n    }\n    if (atLeastOne) {\n      this.onRowHeightChanged();\n    }\n  }\n  resetRowHeightsForAllRowNodes() {\n    let atLeastOne = false;\n    this.forEachNode((rowNode) => {\n      rowNode.setRowHeight(rowNode.rowHeight, true);\n      const detailNode = rowNode.detailNode;\n      if (detailNode) {\n        detailNode.setRowHeight(detailNode.rowHeight, true);\n      }\n      if (rowNode.sibling) {\n        rowNode.sibling.setRowHeight(rowNode.sibling.rowHeight, true);\n      }\n      atLeastOne = true;\n    });\n    return atLeastOne;\n  }\n  onGridStylesChanges(e) {\n    if (e.rowHeightChanged) {\n      if (this.columnModel.isAutoRowHeightActive()) {\n        return;\n      }\n      this.resetRowHeights();\n    }\n  }\n  onGridReady() {\n    if (this.hasStarted) {\n      return;\n    }\n    this.setInitialData();\n  }\n  isRowDataLoaded() {\n    return this.rowCountReady;\n  }\n};\n\n// community-modules/client-side-row-model/src/clientSideRowModel/clientSideRowModelApi.ts\nfunction onGroupExpandedOrCollapsed(beans) {\n  beans.expansionService.onGroupExpandedOrCollapsed();\n}\nfunction refreshClientSideRowModel(beans, step) {\n  beans.rowModelHelperService?.getClientSideRowModel()?.refreshModel(step);\n}\nfunction forEachLeafNode(beans, callback) {\n  beans.rowModelHelperService?.getClientSideRowModel()?.forEachLeafNode(callback);\n}\nfunction forEachNodeAfterFilter(beans, callback) {\n  beans.rowModelHelperService?.getClientSideRowModel()?.forEachNodeAfterFilter(callback);\n}\nfunction forEachNodeAfterFilterAndSort(beans, callback) {\n  beans.rowModelHelperService?.getClientSideRowModel()?.forEachNodeAfterFilterAndSort(callback);\n}\nfunction resetRowHeights(beans) {\n  if (beans.columnModel.isAutoRowHeightActive()) {\n    _warnOnce(\"calling gridApi.resetRowHeights() makes no sense when using Auto Row Height.\");\n    return;\n  }\n  beans.rowModelHelperService?.getClientSideRowModel()?.resetRowHeights();\n}\nfunction applyTransaction(beans, rowDataTransaction) {\n  return beans.frameworkOverrides.wrapIncoming(\n    () => beans.rowModelHelperService?.getClientSideRowModel()?.updateRowData(rowDataTransaction)\n  );\n}\nfunction applyTransactionAsync(beans, rowDataTransaction, callback) {\n  beans.frameworkOverrides.wrapIncoming(\n    () => beans.rowModelHelperService?.getClientSideRowModel()?.batchUpdateRowData(rowDataTransaction, callback)\n  );\n}\nfunction flushAsyncTransactions(beans) {\n  beans.frameworkOverrides.wrapIncoming(\n    () => beans.rowModelHelperService?.getClientSideRowModel()?.flushAsyncTransactions()\n  );\n}\nfunction getBestCostNodeSelection(beans) {\n  return beans.selectionService.getBestCostNodeSelection();\n}\n\n// community-modules/client-side-row-model/src/clientSideRowModel/filterStage.ts\nvar FilterStage = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"filterStage\";\n  }\n  wireBeans(beans) {\n    this.filterManager = beans.filterManager;\n  }\n  execute(params) {\n    const { changedPath } = params;\n    this.filter(changedPath);\n  }\n  filter(changedPath) {\n    const filterActive = !!this.filterManager?.isChildFilterPresent();\n    this.filterNodes(filterActive, changedPath);\n  }\n  filterNodes(filterActive, changedPath) {\n    const filterCallback = (rowNode, includeChildNodes) => {\n      if (rowNode.hasChildren()) {\n        if (filterActive && !includeChildNodes) {\n          rowNode.childrenAfterFilter = rowNode.childrenAfterGroup.filter((childNode) => {\n            const passBecauseChildren = childNode.childrenAfterFilter && childNode.childrenAfterFilter.length > 0;\n            const passBecauseDataPasses = childNode.data && this.filterManager.doesRowPassFilter({ rowNode: childNode });\n            return passBecauseChildren || passBecauseDataPasses;\n          });\n        } else {\n          rowNode.childrenAfterFilter = rowNode.childrenAfterGroup;\n        }\n      } else {\n        rowNode.childrenAfterFilter = rowNode.childrenAfterGroup;\n      }\n      if (rowNode.sibling) {\n        rowNode.sibling.childrenAfterFilter = rowNode.childrenAfterFilter;\n      }\n    };\n    if (this.doingTreeDataFiltering()) {\n      const treeDataDepthFirstFilter = (rowNode, alreadyFoundInParent) => {\n        if (rowNode.childrenAfterGroup) {\n          for (let i = 0; i < rowNode.childrenAfterGroup.length; i++) {\n            const childNode = rowNode.childrenAfterGroup[i];\n            const foundInParent = alreadyFoundInParent || this.filterManager.doesRowPassFilter({ rowNode: childNode });\n            if (childNode.childrenAfterGroup) {\n              treeDataDepthFirstFilter(rowNode.childrenAfterGroup[i], foundInParent);\n            } else {\n              filterCallback(childNode, foundInParent);\n            }\n          }\n        }\n        filterCallback(rowNode, alreadyFoundInParent);\n      };\n      const treeDataFilterCallback = (rowNode) => treeDataDepthFirstFilter(rowNode, false);\n      changedPath.executeFromRootNode(treeDataFilterCallback);\n    } else {\n      const defaultFilterCallback = (rowNode) => filterCallback(rowNode, false);\n      changedPath.forEachChangedNodeDepthFirst(defaultFilterCallback, true);\n    }\n  }\n  doingTreeDataFiltering() {\n    return this.gos.get(\"treeData\") && !this.gos.get(\"excludeChildrenWhenTreeDataFiltering\");\n  }\n};\n\n// community-modules/client-side-row-model/src/clientSideRowModel/flattenStage.ts\nvar FlattenStage = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"flattenStage\";\n  }\n  wireBeans(beans) {\n    this.beans = beans;\n    this.columnModel = beans.columnModel;\n  }\n  execute(params) {\n    const rootNode = params.rowNode;\n    const result = [];\n    const skipLeafNodes = this.columnModel.isPivotMode();\n    const showRootNode = skipLeafNodes && rootNode.leafGroup;\n    const topList = showRootNode ? [rootNode] : rootNode.childrenAfterSort;\n    const details = this.getFlattenDetails();\n    this.recursivelyAddToRowsToDisplay(details, topList, result, skipLeafNodes, 0);\n    const atLeastOneRowPresent = result.length > 0;\n    const includeGrandTotalRow = !showRootNode && // don't show total footer when showRootNode is true (i.e. in pivot mode and no groups)\n    atLeastOneRowPresent && details.grandTotalRow;\n    if (includeGrandTotalRow) {\n      rootNode.createFooter();\n      const addToTop = details.grandTotalRow === \"top\";\n      this.addRowNodeToRowsToDisplay(details, rootNode.sibling, result, 0, addToTop);\n    }\n    return result;\n  }\n  getFlattenDetails() {\n    const groupRemoveSingleChildren = this.gos.get(\"groupRemoveSingleChildren\");\n    const groupRemoveLowestSingleChildren = !groupRemoveSingleChildren && this.gos.get(\"groupRemoveLowestSingleChildren\");\n    return {\n      groupRemoveLowestSingleChildren,\n      groupRemoveSingleChildren,\n      isGroupMultiAutoColumn: this.gos.isGroupMultiAutoColumn(),\n      hideOpenParents: this.gos.get(\"groupHideOpenParents\"),\n      grandTotalRow: this.gos.getGrandTotalRow(),\n      groupTotalRow: this.gos.getGroupTotalRowCallback()\n    };\n  }\n  recursivelyAddToRowsToDisplay(details, rowsToFlatten, result, skipLeafNodes, uiLevel) {\n    if (_missingOrEmpty(rowsToFlatten)) {\n      return;\n    }\n    for (let i = 0; i < rowsToFlatten.length; i++) {\n      const rowNode = rowsToFlatten[i];\n      const isParent = rowNode.hasChildren();\n      const isSkippedLeafNode = skipLeafNodes && !isParent;\n      const isRemovedSingleChildrenGroup = details.groupRemoveSingleChildren && isParent && rowNode.childrenAfterGroup.length === 1;\n      const isRemovedLowestSingleChildrenGroup = details.groupRemoveLowestSingleChildren && isParent && rowNode.leafGroup && rowNode.childrenAfterGroup.length === 1;\n      const neverAllowToExpand = skipLeafNodes && rowNode.leafGroup;\n      const isHiddenOpenParent = details.hideOpenParents && rowNode.expanded && !rowNode.master && !neverAllowToExpand;\n      const thisRowShouldBeRendered = !isSkippedLeafNode && !isHiddenOpenParent && !isRemovedSingleChildrenGroup && !isRemovedLowestSingleChildrenGroup;\n      if (thisRowShouldBeRendered) {\n        this.addRowNodeToRowsToDisplay(details, rowNode, result, uiLevel);\n      }\n      if (skipLeafNodes && rowNode.leafGroup) {\n        continue;\n      }\n      if (isParent) {\n        const excludedParent = isRemovedSingleChildrenGroup || isRemovedLowestSingleChildrenGroup;\n        if (rowNode.expanded || excludedParent) {\n          const doesRowShowFooter = details.groupTotalRow({ node: rowNode });\n          if (!doesRowShowFooter) {\n            rowNode.destroyFooter();\n          }\n          const uiLevelForChildren = excludedParent ? uiLevel : uiLevel + 1;\n          if (doesRowShowFooter === \"top\") {\n            rowNode.createFooter();\n            this.addRowNodeToRowsToDisplay(details, rowNode.sibling, result, uiLevelForChildren);\n          }\n          this.recursivelyAddToRowsToDisplay(\n            details,\n            rowNode.childrenAfterSort,\n            result,\n            skipLeafNodes,\n            uiLevelForChildren\n          );\n          if (doesRowShowFooter === \"bottom\") {\n            rowNode.createFooter();\n            this.addRowNodeToRowsToDisplay(details, rowNode.sibling, result, uiLevelForChildren);\n          }\n        }\n      } else if (rowNode.master && rowNode.expanded) {\n        const detailNode = this.createDetailNode(rowNode);\n        this.addRowNodeToRowsToDisplay(details, detailNode, result, uiLevel);\n      }\n    }\n  }\n  // duplicated method, it's also in floatingRowModel\n  addRowNodeToRowsToDisplay(details, rowNode, result, uiLevel, addToTop) {\n    if (addToTop) {\n      result.unshift(rowNode);\n    } else {\n      result.push(rowNode);\n    }\n    rowNode.setUiLevel(details.isGroupMultiAutoColumn ? 0 : uiLevel);\n  }\n  createDetailNode(masterNode) {\n    if (_exists(masterNode.detailNode)) {\n      return masterNode.detailNode;\n    }\n    const detailNode = new RowNode(this.beans);\n    detailNode.detail = true;\n    detailNode.selectable = false;\n    detailNode.parent = masterNode;\n    if (_exists(masterNode.id)) {\n      detailNode.id = \"detail_\" + masterNode.id;\n    }\n    detailNode.data = masterNode.data;\n    detailNode.level = masterNode.level + 1;\n    masterNode.detailNode = detailNode;\n    return detailNode;\n  }\n};\n\n// community-modules/client-side-row-model/src/clientSideRowModel/immutableService.ts\nvar ImmutableService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"immutableService\";\n  }\n  wireBeans(beans) {\n    this.rowModel = beans.rowModel;\n    this.selectionService = beans.selectionService;\n  }\n  postConstruct() {\n    if (this.rowModel.getType() === \"clientSide\") {\n      this.clientSideRowModel = this.rowModel;\n      this.addManagedPropertyListener(\"rowData\", () => this.onRowDataUpdated());\n    }\n  }\n  isActive() {\n    const getRowIdProvided = this.gos.exists(\"getRowId\");\n    const resetRowDataOnUpdate = this.gos.get(\"resetRowDataOnUpdate\");\n    if (resetRowDataOnUpdate) {\n      return false;\n    }\n    return getRowIdProvided;\n  }\n  setRowData(rowData) {\n    const transactionAndMap = this.createTransactionForRowData(rowData);\n    if (!transactionAndMap) {\n      return;\n    }\n    const [transaction, orderIdMap] = transactionAndMap;\n    this.clientSideRowModel.updateRowData(transaction, orderIdMap);\n  }\n  // converts the setRowData() command to a transaction\n  createTransactionForRowData(rowData) {\n    if (_missing(this.clientSideRowModel)) {\n      _errorOnce(\"ImmutableService only works with ClientSideRowModel\");\n      return;\n    }\n    const getRowIdFunc = this.gos.getRowIdCallback();\n    if (getRowIdFunc == null) {\n      _errorOnce(\"ImmutableService requires getRowId() callback to be implemented, your row data needs IDs!\");\n      return;\n    }\n    const transaction = {\n      remove: [],\n      update: [],\n      add: []\n    };\n    const existingNodesMap = this.clientSideRowModel.getCopyOfNodesMap();\n    const suppressSortOrder = this.gos.get(\"suppressMaintainUnsortedOrder\");\n    const orderMap = suppressSortOrder ? void 0 : {};\n    if (_exists(rowData)) {\n      rowData.forEach((data, index) => {\n        const id = getRowIdFunc({ data, level: 0 });\n        const existingNode = existingNodesMap[id];\n        if (orderMap) {\n          orderMap[id] = index;\n        }\n        if (existingNode) {\n          const dataHasChanged = existingNode.data !== data;\n          if (dataHasChanged) {\n            transaction.update.push(data);\n          }\n          existingNodesMap[id] = void 0;\n        } else {\n          transaction.add.push(data);\n        }\n      });\n    }\n    _iterateObject(existingNodesMap, (id, rowNode) => {\n      if (rowNode) {\n        transaction.remove.push(rowNode.data);\n      }\n    });\n    return [transaction, orderMap];\n  }\n  onRowDataUpdated() {\n    const rowData = this.gos.get(\"rowData\");\n    if (!rowData) {\n      return;\n    }\n    if (this.isActive()) {\n      this.setRowData(rowData);\n    } else {\n      this.selectionService.reset(\"rowDataChanged\");\n      this.clientSideRowModel.setRowData(rowData);\n    }\n  }\n};\n\n// community-modules/client-side-row-model/src/clientSideRowModel/sortService.ts\nvar SortService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"sortService\";\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.funcColsService = beans.funcColsService;\n    this.rowNodeSorter = beans.rowNodeSorter;\n    this.showRowGroupColsService = beans.showRowGroupColsService;\n  }\n  sort(sortOptions, sortActive, useDeltaSort, rowNodeTransactions, changedPath, sortContainsGroupColumns) {\n    const groupMaintainOrder = this.gos.get(\"groupMaintainOrder\");\n    const groupColumnsPresent = this.columnModel.getCols().some((c) => c.isRowGroupActive());\n    let allDirtyNodes = {};\n    if (useDeltaSort && rowNodeTransactions) {\n      allDirtyNodes = this.calculateDirtyNodes(rowNodeTransactions);\n    }\n    const isPivotMode = this.columnModel.isPivotMode();\n    const postSortFunc = this.gos.getCallback(\"postSortRows\");\n    const callback = (rowNode) => {\n      this.pullDownGroupDataForHideOpenParents(rowNode.childrenAfterAggFilter, true);\n      const skipSortingPivotLeafs = isPivotMode && rowNode.leafGroup;\n      const skipSortingGroups = groupMaintainOrder && groupColumnsPresent && !rowNode.leafGroup && !sortContainsGroupColumns;\n      if (skipSortingGroups) {\n        const nextGroup = this.funcColsService.getRowGroupColumns()?.[rowNode.level + 1];\n        const wasSortExplicitlyRemoved = nextGroup?.getSort() === null;\n        const childrenToBeSorted = rowNode.childrenAfterAggFilter.slice(0);\n        if (rowNode.childrenAfterSort && !wasSortExplicitlyRemoved) {\n          const indexedOrders = {};\n          rowNode.childrenAfterSort.forEach((node, idx) => {\n            indexedOrders[node.id] = idx;\n          });\n          childrenToBeSorted.sort(\n            (row1, row2) => (indexedOrders[row1.id] ?? 0) - (indexedOrders[row2.id] ?? 0)\n          );\n        }\n        rowNode.childrenAfterSort = childrenToBeSorted;\n      } else if (!sortActive || skipSortingPivotLeafs) {\n        rowNode.childrenAfterSort = rowNode.childrenAfterAggFilter.slice(0);\n      } else if (useDeltaSort) {\n        rowNode.childrenAfterSort = this.doDeltaSort(rowNode, allDirtyNodes, changedPath, sortOptions);\n      } else {\n        rowNode.childrenAfterSort = this.rowNodeSorter.doFullSort(rowNode.childrenAfterAggFilter, sortOptions);\n      }\n      if (rowNode.sibling) {\n        rowNode.sibling.childrenAfterSort = rowNode.childrenAfterSort;\n      }\n      this.updateChildIndexes(rowNode);\n      if (postSortFunc) {\n        const params = { nodes: rowNode.childrenAfterSort };\n        postSortFunc(params);\n      }\n    };\n    if (changedPath) {\n      changedPath.forEachChangedNodeDepthFirst(callback);\n    }\n    this.updateGroupDataForHideOpenParents(changedPath);\n  }\n  calculateDirtyNodes(rowNodeTransactions) {\n    const dirtyNodes = {};\n    const addNodesFunc = (rowNodes) => {\n      if (rowNodes) {\n        rowNodes.forEach((rowNode) => dirtyNodes[rowNode.id] = true);\n      }\n    };\n    if (rowNodeTransactions) {\n      rowNodeTransactions.forEach((tran) => {\n        addNodesFunc(tran.add);\n        addNodesFunc(tran.update);\n        addNodesFunc(tran.remove);\n      });\n    }\n    return dirtyNodes;\n  }\n  doDeltaSort(rowNode, allTouchedNodes, changedPath, sortOptions) {\n    const unsortedRows = rowNode.childrenAfterAggFilter;\n    const oldSortedRows = rowNode.childrenAfterSort;\n    if (!oldSortedRows) {\n      return this.rowNodeSorter.doFullSort(unsortedRows, sortOptions);\n    }\n    const untouchedRowsMap = {};\n    const touchedRows = [];\n    unsortedRows.forEach((row) => {\n      if (allTouchedNodes[row.id] || !changedPath.canSkip(row)) {\n        touchedRows.push(row);\n      } else {\n        untouchedRowsMap[row.id] = true;\n      }\n    });\n    const sortedUntouchedRows = oldSortedRows.filter((child) => untouchedRowsMap[child.id]);\n    const mapNodeToSortedNode = (rowNode2, pos) => ({\n      currentPos: pos,\n      rowNode: rowNode2\n    });\n    const sortedChangedRows = touchedRows.map(mapNodeToSortedNode).sort((a, b) => this.rowNodeSorter.compareRowNodes(sortOptions, a, b));\n    return this.mergeSortedArrays(sortOptions, sortedChangedRows, sortedUntouchedRows.map(mapNodeToSortedNode)).map(\n      ({ rowNode: rowNode2 }) => rowNode2\n    );\n  }\n  // Merge two sorted arrays into each other\n  mergeSortedArrays(sortOptions, arr1, arr2) {\n    const res = [];\n    let i = 0;\n    let j = 0;\n    while (i < arr1.length && j < arr2.length) {\n      const compareResult = this.rowNodeSorter.compareRowNodes(sortOptions, arr1[i], arr2[j]);\n      if (compareResult < 0) {\n        res.push(arr1[i++]);\n      } else {\n        res.push(arr2[j++]);\n      }\n    }\n    while (i < arr1.length) {\n      res.push(arr1[i++]);\n    }\n    while (j < arr2.length) {\n      res.push(arr2[j++]);\n    }\n    return res;\n  }\n  updateChildIndexes(rowNode) {\n    if (_missing(rowNode.childrenAfterSort)) {\n      return;\n    }\n    const listToSort = rowNode.childrenAfterSort;\n    for (let i = 0; i < listToSort.length; i++) {\n      const child = listToSort[i];\n      const firstChild = i === 0;\n      const lastChild = i === rowNode.childrenAfterSort.length - 1;\n      child.setFirstChild(firstChild);\n      child.setLastChild(lastChild);\n      child.setChildIndex(i);\n    }\n  }\n  updateGroupDataForHideOpenParents(changedPath) {\n    if (!this.gos.get(\"groupHideOpenParents\")) {\n      return;\n    }\n    if (this.gos.get(\"treeData\")) {\n      _warnOnce(\n        `The property hideOpenParents dose not work with Tree Data. This is because Tree Data has values at the group level, it doesn't make sense to hide them.`\n      );\n      return false;\n    }\n    const callback = (rowNode) => {\n      this.pullDownGroupDataForHideOpenParents(rowNode.childrenAfterSort, false);\n      rowNode.childrenAfterSort.forEach((child) => {\n        if (child.hasChildren()) {\n          callback(child);\n        }\n      });\n    };\n    if (changedPath) {\n      changedPath.executeFromRootNode((rowNode) => callback(rowNode));\n    }\n  }\n  pullDownGroupDataForHideOpenParents(rowNodes, clearOperation) {\n    if (!this.gos.get(\"groupHideOpenParents\") || _missing(rowNodes)) {\n      return;\n    }\n    rowNodes.forEach((childRowNode) => {\n      const groupDisplayCols = this.showRowGroupColsService?.getShowRowGroupCols() ?? [];\n      groupDisplayCols.forEach((groupDisplayCol) => {\n        const showRowGroup = groupDisplayCol.getColDef().showRowGroup;\n        if (typeof showRowGroup !== \"string\") {\n          _errorOnce(\n            \"groupHideOpenParents only works when specifying specific columns for colDef.showRowGroup\"\n          );\n          return;\n        }\n        const displayingGroupKey = showRowGroup;\n        const rowGroupColumn = this.columnModel.getColDefCol(displayingGroupKey);\n        const thisRowNodeMatches = rowGroupColumn === childRowNode.rowGroupColumn;\n        if (thisRowNodeMatches) {\n          return;\n        }\n        if (clearOperation) {\n          childRowNode.setGroupValue(groupDisplayCol.getId(), void 0);\n        } else {\n          const parentToStealFrom = childRowNode.getFirstChildOfFirstChild(rowGroupColumn);\n          if (parentToStealFrom) {\n            childRowNode.setGroupValue(groupDisplayCol.getId(), parentToStealFrom.key);\n          }\n        }\n      });\n    });\n  }\n};\n\n// community-modules/client-side-row-model/src/clientSideRowModel/sortStage.ts\nvar SortStage = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"sortStage\";\n  }\n  wireBeans(beans) {\n    this.sortService = beans.sortService;\n    this.sortController = beans.sortController;\n  }\n  execute(params) {\n    const sortOptions = this.sortController.getSortOptions();\n    const sortActive = _exists(sortOptions) && sortOptions.length > 0;\n    const deltaSort = sortActive && _exists(params.rowNodeTransactions) && // in time we can remove this check, so that delta sort is always\n    // on if transactions are present. it's off for now so that we can\n    // selectively turn it on and test it with some select users before\n    // rolling out to everyone.\n    this.gos.get(\"deltaSort\");\n    const sortContainsGroupColumns = sortOptions.some((opt) => {\n      const isSortingCoupled = this.gos.isColumnsSortingCoupledToGroup();\n      if (isSortingCoupled) {\n        return opt.column.isPrimary() && opt.column.isRowGroupActive();\n      }\n      return !!opt.column.getColDef().showRowGroup;\n    });\n    this.sortService.sort(\n      sortOptions,\n      sortActive,\n      deltaSort,\n      params.rowNodeTransactions,\n      params.changedPath,\n      sortContainsGroupColumns\n    );\n  }\n};\n\n// community-modules/client-side-row-model/src/version.ts\nvar VERSION2 = \"32.1.0\";\n\n// community-modules/client-side-row-model/src/clientSideRowModelModule.ts\nvar ClientSideRowModelCoreModule = _defineModule({\n  version: VERSION2,\n  moduleName: `${\"@ag-grid-community/client-side-row-model\" /* ClientSideRowModelModule */}-core`,\n  rowModel: \"clientSide\",\n  beans: [ClientSideRowModel, FilterStage, SortStage, FlattenStage, SortService, ImmutableService]\n});\nvar ClientSideRowModelApiModule = _defineModule({\n  version: VERSION2,\n  moduleName: `${\"@ag-grid-community/client-side-row-model\" /* ClientSideRowModelModule */}-api`,\n  beans: [RowModelHelperService],\n  apiFunctions: {\n    onGroupExpandedOrCollapsed,\n    refreshClientSideRowModel,\n    forEachLeafNode,\n    forEachNodeAfterFilter,\n    forEachNodeAfterFilterAndSort,\n    resetRowHeights,\n    applyTransaction,\n    applyTransactionAsync,\n    flushAsyncTransactions,\n    getBestCostNodeSelection\n  },\n  dependantModules: [ClientSideRowModelCoreModule, CsrmSsrmSharedApiModule]\n});\nvar ClientSideRowModelModule = _defineModule({\n  version: VERSION2,\n  moduleName: \"@ag-grid-community/client-side-row-model\" /* ClientSideRowModelModule */,\n  dependantModules: [ClientSideRowModelCoreModule, ClientSideRowModelApiModule]\n});\n\n// community-modules/csv-export/dist/package/main.esm.mjs\nvar BaseCreator = class extends BeanStub {\n  setBeans(beans) {\n    this.beans = beans;\n  }\n  getFileName(fileName) {\n    const extension = this.getDefaultFileExtension();\n    if (fileName == null || !fileName.length) {\n      fileName = this.getDefaultFileName();\n    }\n    return fileName.indexOf(\".\") === -1 ? `${fileName}.${extension}` : fileName;\n  }\n  getData(params) {\n    const serializingSession = this.createSerializingSession(params);\n    return this.beans.gridSerializer.serialize(serializingSession, params);\n  }\n  getDefaultFileName() {\n    return `export.${this.getDefaultFileExtension()}`;\n  }\n};\nvar BaseGridSerializingSession = class {\n  constructor(config) {\n    this.groupColumns = [];\n    const {\n      columnModel,\n      funcColsService,\n      columnNameService,\n      valueService,\n      gos,\n      processCellCallback,\n      processHeaderCallback,\n      processGroupHeaderCallback,\n      processRowGroupCallback\n    } = config;\n    this.columnModel = columnModel;\n    this.funcColsService = funcColsService;\n    this.columnNameService = columnNameService;\n    this.valueService = valueService;\n    this.gos = gos;\n    this.processCellCallback = processCellCallback;\n    this.processHeaderCallback = processHeaderCallback;\n    this.processGroupHeaderCallback = processGroupHeaderCallback;\n    this.processRowGroupCallback = processRowGroupCallback;\n  }\n  prepare(columnsToExport) {\n    this.groupColumns = columnsToExport.filter((col) => !!col.getColDef().showRowGroup);\n  }\n  extractHeaderValue(column) {\n    const value = this.getHeaderName(this.processHeaderCallback, column);\n    return value ?? \"\";\n  }\n  extractRowCellValue(column, index, accumulatedRowIndex, type, node) {\n    const hideOpenParents = this.gos.get(\"groupHideOpenParents\");\n    const value = (!hideOpenParents || node.footer) && this.shouldRenderGroupSummaryCell(node, column, index) ? this.createValueForGroupNode(column, node) : this.valueService.getValue(column, node);\n    const processedValue = this.processCell({\n      accumulatedRowIndex,\n      rowNode: node,\n      column,\n      value,\n      processCellCallback: this.processCellCallback,\n      type\n    });\n    return processedValue;\n  }\n  shouldRenderGroupSummaryCell(node, column, currentColumnIndex) {\n    const isGroupNode = node && node.group;\n    if (!isGroupNode) {\n      return false;\n    }\n    const currentColumnGroupIndex = this.groupColumns.indexOf(column);\n    if (currentColumnGroupIndex !== -1) {\n      if (node.groupData?.[column.getId()] != null) {\n        return true;\n      }\n      if (this.gos.isRowModelType(\"serverSide\") && node.group) {\n        return true;\n      }\n      if (node.footer && node.level === -1) {\n        const colDef = column.getColDef();\n        const isFullWidth = colDef == null || colDef.showRowGroup === true;\n        return isFullWidth || colDef.showRowGroup === this.funcColsService.getRowGroupColumns()[0].getId();\n      }\n    }\n    const isGroupUseEntireRow = this.gos.isGroupUseEntireRow(this.columnModel.isPivotMode());\n    return currentColumnIndex === 0 && isGroupUseEntireRow;\n  }\n  getHeaderName(callback, column) {\n    if (callback) {\n      return callback(this.gos.addGridCommonParams({ column }));\n    }\n    return this.columnNameService.getDisplayNameForColumn(column, \"csv\", true);\n  }\n  createValueForGroupNode(column, node) {\n    if (this.processRowGroupCallback) {\n      return this.processRowGroupCallback(this.gos.addGridCommonParams({ column, node }));\n    }\n    const isTreeData = this.gos.get(\"treeData\");\n    const isSuppressGroupMaintainValueType = this.gos.get(\"suppressGroupMaintainValueType\");\n    const getValueFromNode = (node2) => {\n      if (isTreeData || isSuppressGroupMaintainValueType) {\n        return node2.key;\n      }\n      const value = node2.groupData?.[column.getId()];\n      if (!value || !node2.rowGroupColumn || node2.rowGroupColumn.getColDef().useValueFormatterForExport === false) {\n        return value;\n      }\n      return this.valueService.formatValue(node2.rowGroupColumn, node2, value) ?? value;\n    };\n    const isFooter = node.footer;\n    const keys = [getValueFromNode(node)];\n    if (!this.gos.isGroupMultiAutoColumn()) {\n      while (node.parent) {\n        node = node.parent;\n        keys.push(getValueFromNode(node));\n      }\n    }\n    const groupValue = keys.reverse().join(\" -> \");\n    return isFooter ? `Total ${groupValue}` : groupValue;\n  }\n  processCell(params) {\n    const { accumulatedRowIndex, rowNode, column, value, processCellCallback, type } = params;\n    if (processCellCallback) {\n      return {\n        value: processCellCallback(\n          this.gos.addGridCommonParams({\n            accumulatedRowIndex,\n            column,\n            node: rowNode,\n            value,\n            type,\n            parseValue: (valueToParse) => this.valueService.parseValue(\n              column,\n              rowNode,\n              valueToParse,\n              this.valueService.getValue(column, rowNode)\n            ),\n            formatValue: (valueToFormat) => this.valueService.formatValue(column, rowNode, valueToFormat) ?? valueToFormat\n          })\n        ) ?? \"\"\n      };\n    }\n    if (column.getColDef().useValueFormatterForExport !== false) {\n      return {\n        value: value ?? \"\",\n        valueFormatted: this.valueService.formatValue(column, rowNode, value)\n      };\n    }\n    return { value: value ?? \"\" };\n  }\n};\nvar Downloader = class {\n  static download(fileName, content) {\n    const win = document.defaultView || window;\n    if (!win) {\n      _warnOnce(\"There is no `window` associated with the current `document`\");\n      return;\n    }\n    const element = document.createElement(\"a\");\n    const url = win.URL.createObjectURL(content);\n    element.setAttribute(\"href\", url);\n    element.setAttribute(\"download\", fileName);\n    element.style.display = \"none\";\n    document.body.appendChild(element);\n    element.dispatchEvent(\n      new MouseEvent(\"click\", {\n        bubbles: false,\n        cancelable: true,\n        view: win\n      })\n    );\n    document.body.removeChild(element);\n    win.setTimeout(() => {\n      win.URL.revokeObjectURL(url);\n    }, 0);\n  }\n};\nvar LINE_SEPARATOR = \"\\r\\n\";\nvar CsvSerializingSession = class extends BaseGridSerializingSession {\n  constructor(config) {\n    super(config);\n    this.isFirstLine = true;\n    this.result = \"\";\n    const { suppressQuotes, columnSeparator } = config;\n    this.suppressQuotes = suppressQuotes;\n    this.columnSeparator = columnSeparator;\n  }\n  addCustomContent(content) {\n    if (!content) {\n      return;\n    }\n    if (typeof content === \"string\") {\n      if (!/^\\s*\\n/.test(content)) {\n        this.beginNewLine();\n      }\n      content = content.replace(/\\r?\\n/g, LINE_SEPARATOR);\n      this.result += content;\n    } else {\n      content.forEach((row) => {\n        this.beginNewLine();\n        row.forEach((cell, index) => {\n          if (index !== 0) {\n            this.result += this.columnSeparator;\n          }\n          this.result += this.putInQuotes(cell.data.value || \"\");\n          if (cell.mergeAcross) {\n            this.appendEmptyCells(cell.mergeAcross);\n          }\n        });\n      });\n    }\n  }\n  onNewHeaderGroupingRow() {\n    this.beginNewLine();\n    return {\n      onColumn: this.onNewHeaderGroupingRowColumn.bind(this)\n    };\n  }\n  onNewHeaderGroupingRowColumn(columnGroup, header, index, span) {\n    if (index != 0) {\n      this.result += this.columnSeparator;\n    }\n    this.result += this.putInQuotes(header);\n    this.appendEmptyCells(span);\n  }\n  appendEmptyCells(count) {\n    for (let i = 1; i <= count; i++) {\n      this.result += this.columnSeparator + this.putInQuotes(\"\");\n    }\n  }\n  onNewHeaderRow() {\n    this.beginNewLine();\n    return {\n      onColumn: this.onNewHeaderRowColumn.bind(this)\n    };\n  }\n  onNewHeaderRowColumn(column, index) {\n    if (index != 0) {\n      this.result += this.columnSeparator;\n    }\n    this.result += this.putInQuotes(this.extractHeaderValue(column));\n  }\n  onNewBodyRow() {\n    this.beginNewLine();\n    return {\n      onColumn: this.onNewBodyRowColumn.bind(this)\n    };\n  }\n  onNewBodyRowColumn(column, index, node) {\n    if (index != 0) {\n      this.result += this.columnSeparator;\n    }\n    const rowCellValue = this.extractRowCellValue(column, index, index, \"csv\", node);\n    this.result += this.putInQuotes(rowCellValue.valueFormatted ?? rowCellValue.value);\n  }\n  putInQuotes(value) {\n    if (this.suppressQuotes) {\n      return value;\n    }\n    if (value === null || value === void 0) {\n      return '\"\"';\n    }\n    let stringValue;\n    if (typeof value === \"string\") {\n      stringValue = value;\n    } else if (typeof value.toString === \"function\") {\n      stringValue = value.toString();\n    } else {\n      _warnOnce(\"unknown value type during csv conversion\");\n      stringValue = \"\";\n    }\n    const valueEscaped = stringValue.replace(/\"/g, '\"\"');\n    return '\"' + valueEscaped + '\"';\n  }\n  parse() {\n    return this.result;\n  }\n  beginNewLine() {\n    if (!this.isFirstLine) {\n      this.result += LINE_SEPARATOR;\n    }\n    this.isFirstLine = false;\n  }\n};\nvar CsvCreator = class extends BaseCreator {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"csvCreator\";\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.columnNameService = beans.columnNameService;\n    this.funcColsService = beans.funcColsService;\n    this.valueService = beans.valueService;\n    this.gridSerializer = beans.gridSerializer;\n  }\n  postConstruct() {\n    this.setBeans({\n      gridSerializer: this.gridSerializer,\n      gos: this.gos\n    });\n  }\n  getMergedParams(params) {\n    const baseParams = this.gos.get(\"defaultCsvExportParams\");\n    return Object.assign({}, baseParams, params);\n  }\n  export(userParams) {\n    if (this.isExportSuppressed()) {\n      _warnOnce(`Export cancelled. Export is not allowed as per your configuration.`);\n      return;\n    }\n    const mergedParams = this.getMergedParams(userParams);\n    const data = this.getData(mergedParams);\n    const packagedFile = new Blob([\"\\uFEFF\", data], { type: \"text/plain\" });\n    const fileName = typeof mergedParams.fileName === \"function\" ? mergedParams.fileName(this.gos.getGridCommonParams()) : mergedParams.fileName;\n    Downloader.download(this.getFileName(fileName), packagedFile);\n  }\n  exportDataAsCsv(params) {\n    this.export(params);\n  }\n  getDataAsCsv(params, skipDefaultParams = false) {\n    const mergedParams = skipDefaultParams ? Object.assign({}, params) : this.getMergedParams(params);\n    return this.getData(mergedParams);\n  }\n  getDefaultFileExtension() {\n    return \"csv\";\n  }\n  createSerializingSession(params) {\n    const { columnModel, columnNameService, funcColsService, valueService, gos } = this;\n    const {\n      processCellCallback,\n      processHeaderCallback,\n      processGroupHeaderCallback,\n      processRowGroupCallback,\n      suppressQuotes,\n      columnSeparator\n    } = params;\n    return new CsvSerializingSession({\n      columnModel,\n      columnNameService,\n      funcColsService,\n      valueService,\n      gos,\n      processCellCallback: processCellCallback || void 0,\n      processHeaderCallback: processHeaderCallback || void 0,\n      processGroupHeaderCallback: processGroupHeaderCallback || void 0,\n      processRowGroupCallback: processRowGroupCallback || void 0,\n      suppressQuotes: suppressQuotes || false,\n      columnSeparator: columnSeparator || \",\"\n    });\n  }\n  isExportSuppressed() {\n    return this.gos.get(\"suppressCsvExport\");\n  }\n};\nfunction getDataAsCsv(beans, params) {\n  return beans.csvCreator?.getDataAsCsv(params);\n}\nfunction exportDataAsCsv(beans, params) {\n  beans.csvCreator?.exportDataAsCsv(params);\n}\nvar RowType = /* @__PURE__ */ ((RowType2) => {\n  RowType2[RowType2[\"HEADER_GROUPING\"] = 0] = \"HEADER_GROUPING\";\n  RowType2[RowType2[\"HEADER\"] = 1] = \"HEADER\";\n  RowType2[RowType2[\"BODY\"] = 2] = \"BODY\";\n  return RowType2;\n})(RowType || {});\nvar GridSerializer = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"gridSerializer\";\n  }\n  wireBeans(beans) {\n    this.visibleColsService = beans.visibleColsService;\n    this.columnModel = beans.columnModel;\n    this.columnNameService = beans.columnNameService;\n    this.rowModel = beans.rowModel;\n    this.pinnedRowModel = beans.pinnedRowModel;\n    this.selectionService = beans.selectionService;\n    this.rowNodeSorter = beans.rowNodeSorter;\n    this.sortController = beans.sortController;\n  }\n  serialize(gridSerializingSession, params = {}) {\n    const { allColumns, columnKeys, skipRowGroups } = params;\n    const columnsToExport = this.getColumnsToExport(\n      allColumns,\n      skipRowGroups,\n      columnKeys\n    );\n    const serializeChain = _compose(\n      // first pass, put in the header names of the cols\n      this.prepareSession(columnsToExport),\n      this.prependContent(params),\n      this.exportColumnGroups(params, columnsToExport),\n      this.exportHeaders(params, columnsToExport),\n      this.processPinnedTopRows(params, columnsToExport),\n      this.processRows(params, columnsToExport),\n      this.processPinnedBottomRows(params, columnsToExport),\n      this.appendContent(params)\n    );\n    return serializeChain(gridSerializingSession).parse();\n  }\n  processRow(gridSerializingSession, params, columnsToExport, node) {\n    const rowSkipper = params.shouldRowBeSkipped || (() => false);\n    const skipSingleChildrenGroup = this.gos.get(\"groupRemoveSingleChildren\");\n    const skipLowestSingleChildrenGroup = this.gos.get(\"groupRemoveLowestSingleChildren\");\n    const isClipboardExport = params.rowPositions != null;\n    const isExplicitExportSelection = isClipboardExport || !!params.onlySelected;\n    const hideOpenParents = this.gos.get(\"groupHideOpenParents\") && !isExplicitExportSelection;\n    const isLeafNode = this.columnModel.isPivotMode() ? node.leafGroup : !node.group;\n    const isFooter = !!node.footer;\n    const shouldSkipLowestGroup = skipLowestSingleChildrenGroup && node.leafGroup;\n    const shouldSkipCurrentGroup = node.allChildrenCount === 1 && node.childrenAfterGroup?.length === 1 && (skipSingleChildrenGroup || shouldSkipLowestGroup);\n    if (!isLeafNode && !isFooter && (params.skipRowGroups || shouldSkipCurrentGroup || hideOpenParents) || params.onlySelected && !node.isSelected() || params.skipPinnedTop && node.rowPinned === \"top\" || params.skipPinnedBottom && node.rowPinned === \"bottom\") {\n      return;\n    }\n    const nodeIsRootNode = node.level === -1;\n    if (nodeIsRootNode && !isLeafNode && !isFooter) {\n      return;\n    }\n    const shouldRowBeSkipped = rowSkipper(this.gos.addGridCommonParams({ node }));\n    if (shouldRowBeSkipped) {\n      return;\n    }\n    const rowAccumulator = gridSerializingSession.onNewBodyRow(node);\n    columnsToExport.forEach((column, index) => {\n      rowAccumulator.onColumn(column, index, node);\n    });\n    if (params.getCustomContentBelowRow) {\n      const content = params.getCustomContentBelowRow(this.gos.addGridCommonParams({ node }));\n      if (content) {\n        gridSerializingSession.addCustomContent(content);\n      }\n    }\n  }\n  appendContent(params) {\n    return (gridSerializingSession) => {\n      const appendContent = params.appendContent;\n      if (appendContent) {\n        gridSerializingSession.addCustomContent(appendContent);\n      }\n      return gridSerializingSession;\n    };\n  }\n  prependContent(params) {\n    return (gridSerializingSession) => {\n      const prependContent = params.prependContent;\n      if (prependContent) {\n        gridSerializingSession.addCustomContent(prependContent);\n      }\n      return gridSerializingSession;\n    };\n  }\n  prepareSession(columnsToExport) {\n    return (gridSerializingSession) => {\n      gridSerializingSession.prepare(columnsToExport);\n      return gridSerializingSession;\n    };\n  }\n  exportColumnGroups(params, columnsToExport) {\n    return (gridSerializingSession) => {\n      if (!params.skipColumnGroupHeaders) {\n        const idCreator = new GroupInstanceIdCreator();\n        const displayedGroups = this.visibleColsService.createGroups({\n          columns: columnsToExport,\n          idCreator,\n          pinned: null,\n          isStandaloneStructure: true\n        });\n        this.recursivelyAddHeaderGroups(\n          displayedGroups,\n          gridSerializingSession,\n          params.processGroupHeaderCallback\n        );\n      }\n      return gridSerializingSession;\n    };\n  }\n  exportHeaders(params, columnsToExport) {\n    return (gridSerializingSession) => {\n      if (!params.skipColumnHeaders) {\n        const gridRowIterator = gridSerializingSession.onNewHeaderRow();\n        columnsToExport.forEach((column, index) => {\n          gridRowIterator.onColumn(column, index, void 0);\n        });\n      }\n      return gridSerializingSession;\n    };\n  }\n  processPinnedTopRows(params, columnsToExport) {\n    return (gridSerializingSession) => {\n      const processRow = this.processRow.bind(this, gridSerializingSession, params, columnsToExport);\n      if (params.rowPositions) {\n        params.rowPositions.filter((position) => position.rowPinned === \"top\").sort((a, b) => a.rowIndex - b.rowIndex).map((position) => this.pinnedRowModel.getPinnedTopRow(position.rowIndex)).forEach(processRow);\n      } else {\n        this.pinnedRowModel.forEachPinnedRow(\"top\", processRow);\n      }\n      return gridSerializingSession;\n    };\n  }\n  processRows(params, columnsToExport) {\n    return (gridSerializingSession) => {\n      const rowModel = this.rowModel;\n      const rowModelType = rowModel.getType();\n      const usingCsrm = rowModelType === \"clientSide\";\n      const usingSsrm = rowModelType === \"serverSide\";\n      const onlySelectedNonStandardModel = !usingCsrm && params.onlySelected;\n      const processRow = this.processRow.bind(this, gridSerializingSession, params, columnsToExport);\n      const { exportedRows = \"filteredAndSorted\" } = params;\n      if (params.rowPositions) {\n        params.rowPositions.filter((position) => position.rowPinned == null).sort((a, b) => a.rowIndex - b.rowIndex).map((position) => rowModel.getRow(position.rowIndex)).forEach(processRow);\n      } else if (this.columnModel.isPivotMode()) {\n        if (usingCsrm) {\n          rowModel.forEachPivotNode(processRow, true);\n        } else if (usingSsrm) {\n          rowModel.forEachNodeAfterFilterAndSort(processRow, true);\n        } else {\n          rowModel.forEachNode(processRow);\n        }\n      } else {\n        if (params.onlySelectedAllPages || onlySelectedNonStandardModel) {\n          const selectedNodes = this.selectionService.getSelectedNodes();\n          this.replicateSortedOrder(selectedNodes);\n          selectedNodes.forEach(processRow);\n        } else {\n          if (exportedRows === \"all\") {\n            rowModel.forEachNode(processRow);\n          } else if (usingCsrm) {\n            rowModel.forEachNodeAfterFilterAndSort(processRow, true);\n          } else if (usingSsrm) {\n            rowModel.forEachNodeAfterFilterAndSort(processRow, true);\n          } else {\n            rowModel.forEachNode(processRow);\n          }\n        }\n      }\n      return gridSerializingSession;\n    };\n  }\n  replicateSortedOrder(rows) {\n    const sortOptions = this.sortController.getSortOptions();\n    const compareNodes = (rowA, rowB) => {\n      if (rowA.rowIndex != null && rowB.rowIndex != null) {\n        return rowA.rowIndex - rowB.rowIndex;\n      }\n      if (rowA.level === rowB.level) {\n        if (rowA.parent?.id === rowB.parent?.id) {\n          return this.rowNodeSorter.compareRowNodes(\n            sortOptions,\n            {\n              rowNode: rowA,\n              currentPos: rowA.rowIndex ?? -1\n            },\n            {\n              rowNode: rowB,\n              currentPos: rowB.rowIndex ?? -1\n            }\n          );\n        }\n        return compareNodes(rowA.parent, rowB.parent);\n      }\n      if (rowA.level > rowB.level) {\n        return compareNodes(rowA.parent, rowB);\n      }\n      return compareNodes(rowA, rowB.parent);\n    };\n    rows.sort(compareNodes);\n  }\n  processPinnedBottomRows(params, columnsToExport) {\n    return (gridSerializingSession) => {\n      const processRow = this.processRow.bind(this, gridSerializingSession, params, columnsToExport);\n      if (params.rowPositions) {\n        params.rowPositions.filter((position) => position.rowPinned === \"bottom\").sort((a, b) => a.rowIndex - b.rowIndex).map((position) => this.pinnedRowModel.getPinnedBottomRow(position.rowIndex)).forEach(processRow);\n      } else {\n        this.pinnedRowModel.forEachPinnedRow(\"bottom\", processRow);\n      }\n      return gridSerializingSession;\n    };\n  }\n  getColumnsToExport(allColumns = false, skipRowGroups = false, columnKeys) {\n    const isPivotMode = this.columnModel.isPivotMode();\n    if (columnKeys && columnKeys.length) {\n      return this.columnModel.getColsForKeys(columnKeys);\n    }\n    const isTreeData = this.gos.get(\"treeData\");\n    let columnsToExport = [];\n    if (allColumns && !isPivotMode) {\n      columnsToExport = this.columnModel.getCols();\n    } else {\n      columnsToExport = this.visibleColsService.getAllCols();\n    }\n    if (skipRowGroups && !isTreeData) {\n      columnsToExport = columnsToExport.filter((column) => column.getColId() !== GROUP_AUTO_COLUMN_ID);\n    }\n    return columnsToExport;\n  }\n  recursivelyAddHeaderGroups(displayedGroups, gridSerializingSession, processGroupHeaderCallback) {\n    const directChildrenHeaderGroups = [];\n    displayedGroups.forEach((columnGroupChild) => {\n      const columnGroup = columnGroupChild;\n      if (!columnGroup.getChildren) {\n        return;\n      }\n      columnGroup.getChildren().forEach((it) => directChildrenHeaderGroups.push(it));\n    });\n    if (displayedGroups.length > 0 && isColumnGroup(displayedGroups[0])) {\n      this.doAddHeaderHeader(gridSerializingSession, displayedGroups, processGroupHeaderCallback);\n    }\n    if (directChildrenHeaderGroups && directChildrenHeaderGroups.length > 0) {\n      this.recursivelyAddHeaderGroups(\n        directChildrenHeaderGroups,\n        gridSerializingSession,\n        processGroupHeaderCallback\n      );\n    }\n  }\n  doAddHeaderHeader(gridSerializingSession, displayedGroups, processGroupHeaderCallback) {\n    const gridRowIterator = gridSerializingSession.onNewHeaderGroupingRow();\n    let columnIndex = 0;\n    displayedGroups.forEach((columnGroupChild) => {\n      const columnGroup = columnGroupChild;\n      let name;\n      if (processGroupHeaderCallback) {\n        name = processGroupHeaderCallback(\n          this.gos.addGridCommonParams({\n            columnGroup\n          })\n        );\n      } else {\n        name = this.columnNameService.getDisplayNameForColumnGroup(columnGroup, \"header\");\n      }\n      const collapsibleGroupRanges = columnGroup.getLeafColumns().reduce((collapsibleGroups, currentColumn, currentIdx, arr) => {\n        let lastGroup = _last(collapsibleGroups);\n        const groupShow = currentColumn.getColumnGroupShow() === \"open\";\n        if (!groupShow) {\n          if (lastGroup && lastGroup[1] == null) {\n            lastGroup[1] = currentIdx - 1;\n          }\n        } else if (!lastGroup || lastGroup[1] != null) {\n          lastGroup = [currentIdx];\n          collapsibleGroups.push(lastGroup);\n        }\n        if (currentIdx === arr.length - 1 && lastGroup && lastGroup[1] == null) {\n          lastGroup[1] = currentIdx;\n        }\n        return collapsibleGroups;\n      }, []);\n      gridRowIterator.onColumn(\n        columnGroup,\n        name || \"\",\n        columnIndex++,\n        columnGroup.getLeafColumns().length - 1,\n        collapsibleGroupRanges\n      );\n    });\n  }\n};\nvar VERSION3 = \"32.1.0\";\nvar CsvExportCoreModule = _defineModule({\n  version: VERSION3,\n  moduleName: `${\"@ag-grid-community/csv-export\" /* CsvExportModule */}-core`,\n  beans: [CsvCreator, GridSerializer]\n});\nvar CsvExportApiModule = _defineModule({\n  version: VERSION3,\n  moduleName: `${\"@ag-grid-community/csv-export\" /* CsvExportModule */}-api`,\n  apiFunctions: {\n    getDataAsCsv,\n    exportDataAsCsv\n  },\n  dependantModules: [CsvExportCoreModule]\n});\nvar CsvExportModule = _defineModule({\n  version: VERSION3,\n  moduleName: \"@ag-grid-community/csv-export\" /* CsvExportModule */,\n  dependantModules: [CsvExportCoreModule, CsvExportApiModule]\n});\nvar LINE_SEPARATOR2 = \"\\r\\n\";\nfunction returnAttributeIfPopulated(key, value, booleanTransformer) {\n  if (!value && value !== \"\" && value !== 0) {\n    return \"\";\n  }\n  let xmlValue = value;\n  if (typeof value === \"boolean\") {\n    if (booleanTransformer) {\n      xmlValue = booleanTransformer(value);\n    }\n  }\n  return ` ${key}=\"${xmlValue}\"`;\n}\nvar XmlFactory = class {\n  static createHeader(headerElement = {}) {\n    const headerStart = \"<?\";\n    const headerEnd = \"?>\";\n    const keys = [\"version\"];\n    if (!headerElement.version) {\n      headerElement.version = \"1.0\";\n    }\n    if (headerElement.encoding) {\n      keys.push(\"encoding\");\n    }\n    if (headerElement.standalone) {\n      keys.push(\"standalone\");\n    }\n    const att = keys.map((key) => `${key}=\"${headerElement[key]}\"`).join(\" \");\n    return `${headerStart}xml ${att} ${headerEnd}`;\n  }\n  static createXml(xmlElement, booleanTransformer) {\n    let props = \"\";\n    if (xmlElement.properties) {\n      if (xmlElement.properties.prefixedAttributes) {\n        xmlElement.properties.prefixedAttributes.forEach((prefixedSet) => {\n          Object.keys(prefixedSet.map).forEach((key) => {\n            props += returnAttributeIfPopulated(\n              prefixedSet.prefix + key,\n              prefixedSet.map[key],\n              booleanTransformer\n            );\n          });\n        });\n      }\n      if (xmlElement.properties.rawMap) {\n        Object.keys(xmlElement.properties.rawMap).forEach((key) => {\n          props += returnAttributeIfPopulated(key, xmlElement.properties.rawMap[key], booleanTransformer);\n        });\n      }\n    }\n    let result = \"<\" + xmlElement.name + props;\n    if (!xmlElement.children && xmlElement.textNode == null) {\n      return result + \"/>\" + LINE_SEPARATOR2;\n    }\n    if (xmlElement.textNode != null) {\n      return result + \">\" + xmlElement.textNode + \"</\" + xmlElement.name + \">\" + LINE_SEPARATOR2;\n    }\n    result += \">\" + LINE_SEPARATOR2;\n    if (xmlElement.children) {\n      xmlElement.children.forEach((it) => {\n        result += this.createXml(it, booleanTransformer);\n      });\n    }\n    return result + \"</\" + xmlElement.name + \">\" + LINE_SEPARATOR2;\n  }\n};\nvar compressBlob = async (data) => {\n  let chunksSize = 0;\n  const chunks = [];\n  const writeCompressedData = new WritableStream({\n    write: (chunk) => {\n      chunks.push(chunk);\n      chunksSize += chunk.length;\n    }\n  });\n  const readable = new ReadableStream({\n    start: (controller) => {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        if (e.target?.result) {\n          controller.enqueue(e.target.result);\n        }\n        controller.close();\n      };\n      reader.readAsArrayBuffer(data);\n    }\n  });\n  const compressStream = new window.CompressionStream(\"deflate-raw\");\n  await readable.pipeThrough(compressStream).pipeTo(writeCompressedData);\n  return {\n    size: chunksSize,\n    content: new Blob(chunks)\n  };\n};\nvar deflateLocalFile = async (rawContent) => {\n  const contentAsBlob = new Blob([rawContent]);\n  const { size: compressedSize, content: compressedContent } = await compressBlob(contentAsBlob);\n  const compressedContentAsUint8Array = new Uint8Array(await compressedContent.arrayBuffer());\n  return {\n    size: compressedSize,\n    content: compressedContentAsUint8Array\n  };\n};\nvar convertTime = (date) => {\n  let time = date.getHours();\n  time <<= 6;\n  time = time | date.getMinutes();\n  time <<= 5;\n  time = time | date.getSeconds() / 2;\n  return time;\n};\nvar convertDate = (date) => {\n  let dt = date.getFullYear() - 1980;\n  dt <<= 4;\n  dt = dt | date.getMonth() + 1;\n  dt <<= 5;\n  dt = dt | date.getDate();\n  return dt;\n};\nfunction convertDecToHex(number, bytes) {\n  let hex = \"\";\n  for (let i = 0; i < bytes; i++) {\n    hex += String.fromCharCode(number & 255);\n    number >>>= 8;\n  }\n  return hex;\n}\nvar getCrcFromCrc32TableAndByteArray = (content) => {\n  if (!content.length) {\n    return 0;\n  }\n  let crc = 0 ^ -1;\n  let j = 0;\n  let k = 0;\n  let l = 0;\n  for (let i = 0; i < content.length; i++) {\n    j = content[i];\n    k = (crc ^ j) & 255;\n    l = crcTable[k];\n    crc = crc >>> 8 ^ l;\n  }\n  return crc ^ -1;\n};\nvar getCrcFromCrc32Table = (content) => {\n  if (!content.length) {\n    return 0;\n  }\n  if (typeof content === \"string\") {\n    return getCrcFromCrc32TableAndByteArray(new TextEncoder().encode(content));\n  }\n  return getCrcFromCrc32TableAndByteArray(content);\n};\nvar crcTable = new Uint32Array([\n  0,\n  1996959894,\n  3993919788,\n  2567524794,\n  124634137,\n  1886057615,\n  3915621685,\n  2657392035,\n  249268274,\n  2044508324,\n  3772115230,\n  2547177864,\n  162941995,\n  2125561021,\n  3887607047,\n  2428444049,\n  498536548,\n  1789927666,\n  4089016648,\n  2227061214,\n  450548861,\n  1843258603,\n  4107580753,\n  2211677639,\n  325883990,\n  1684777152,\n  4251122042,\n  2321926636,\n  335633487,\n  1661365465,\n  4195302755,\n  2366115317,\n  997073096,\n  1281953886,\n  3579855332,\n  2724688242,\n  1006888145,\n  1258607687,\n  3524101629,\n  2768942443,\n  901097722,\n  1119000684,\n  3686517206,\n  2898065728,\n  853044451,\n  1172266101,\n  3705015759,\n  2882616665,\n  651767980,\n  1373503546,\n  3369554304,\n  3218104598,\n  565507253,\n  1454621731,\n  3485111705,\n  3099436303,\n  671266974,\n  1594198024,\n  3322730930,\n  2970347812,\n  795835527,\n  1483230225,\n  3244367275,\n  3060149565,\n  1994146192,\n  31158534,\n  2563907772,\n  4023717930,\n  1907459465,\n  112637215,\n  2680153253,\n  3904427059,\n  2013776290,\n  251722036,\n  2517215374,\n  3775830040,\n  2137656763,\n  141376813,\n  2439277719,\n  3865271297,\n  1802195444,\n  476864866,\n  2238001368,\n  4066508878,\n  1812370925,\n  453092731,\n  2181625025,\n  4111451223,\n  1706088902,\n  314042704,\n  2344532202,\n  4240017532,\n  1658658271,\n  366619977,\n  2362670323,\n  4224994405,\n  1303535960,\n  984961486,\n  2747007092,\n  3569037538,\n  1256170817,\n  1037604311,\n  2765210733,\n  3554079995,\n  1131014506,\n  879679996,\n  2909243462,\n  3663771856,\n  1141124467,\n  855842277,\n  2852801631,\n  3708648649,\n  1342533948,\n  654459306,\n  3188396048,\n  3373015174,\n  1466479909,\n  544179635,\n  3110523913,\n  3462522015,\n  1591671054,\n  702138776,\n  2966460450,\n  3352799412,\n  1504918807,\n  783551873,\n  3082640443,\n  3233442989,\n  3988292384,\n  2596254646,\n  62317068,\n  1957810842,\n  3939845945,\n  2647816111,\n  81470997,\n  1943803523,\n  3814918930,\n  2489596804,\n  225274430,\n  2053790376,\n  3826175755,\n  2466906013,\n  167816743,\n  2097651377,\n  4027552580,\n  2265490386,\n  503444072,\n  1762050814,\n  4150417245,\n  2154129355,\n  426522225,\n  1852507879,\n  4275313526,\n  2312317920,\n  282753626,\n  1742555852,\n  4189708143,\n  2394877945,\n  397917763,\n  1622183637,\n  3604390888,\n  2714866558,\n  953729732,\n  1340076626,\n  3518719985,\n  2797360999,\n  1068828381,\n  1219638859,\n  3624741850,\n  2936675148,\n  906185462,\n  1090812512,\n  3747672003,\n  2825379669,\n  829329135,\n  1181335161,\n  3412177804,\n  3160834842,\n  628085408,\n  1382605366,\n  3423369109,\n  3138078467,\n  570562233,\n  1426400815,\n  3317316542,\n  2998733608,\n  733239954,\n  1555261956,\n  3268935591,\n  3050360625,\n  752459403,\n  1541320221,\n  2607071920,\n  3965973030,\n  1969922972,\n  40735498,\n  2617837225,\n  3943577151,\n  1913087877,\n  83908371,\n  2512341634,\n  3803740692,\n  2075208622,\n  213261112,\n  2463272603,\n  3855990285,\n  2094854071,\n  198958881,\n  2262029012,\n  4057260610,\n  1759359992,\n  534414190,\n  2176718541,\n  4139329115,\n  1873836001,\n  414664567,\n  2282248934,\n  4279200368,\n  1711684554,\n  285281116,\n  2405801727,\n  4167216745,\n  1634467795,\n  376229701,\n  2685067896,\n  3608007406,\n  1308918612,\n  956543938,\n  2808555105,\n  3495958263,\n  1231636301,\n  1047427035,\n  2932959818,\n  3654703836,\n  1088359270,\n  936918e3,\n  2847714899,\n  3736837829,\n  1202900863,\n  817233897,\n  3183342108,\n  3401237130,\n  1404277552,\n  615818150,\n  3134207493,\n  3453421203,\n  1423857449,\n  601450431,\n  3009837614,\n  3294710456,\n  1567103746,\n  711928724,\n  3020668471,\n  3272380065,\n  1510334235,\n  755167117\n]);\nvar getHeaders = (currentFile, isCompressed, offset, rawSize, rawContent, deflatedSize) => {\n  const { content, path, created: creationDate } = currentFile;\n  const time = convertTime(creationDate);\n  const dt = convertDate(creationDate);\n  const crcFlag = getCrcFromCrc32Table(rawContent);\n  const zipSize = deflatedSize !== void 0 ? deflatedSize : rawSize;\n  const utfPath = _utf8_encode(path);\n  const isUTF8 = utfPath !== path;\n  let extraFields = \"\";\n  if (isUTF8) {\n    const uExtraFieldPath = convertDecToHex(1, 1) + convertDecToHex(getCrcFromCrc32Table(utfPath), 4) + utfPath;\n    extraFields = \"up\" + convertDecToHex(uExtraFieldPath.length, 2) + uExtraFieldPath;\n  }\n  const commonHeader = \"\u0014\\0\" + // version needed to extract\n  (isUTF8 ? \"\\0\\b\" : \"\\0\\0\") + // Language encoding flag (EFS) (12th bit turned on)\n  convertDecToHex(isCompressed ? 8 : 0, 2) + // As per ECMA-376 Part 2 specs\n  convertDecToHex(time, 2) + // last modified time\n  convertDecToHex(dt, 2) + // last modified date\n  convertDecToHex(zipSize ? crcFlag : 0, 4) + convertDecToHex(deflatedSize ?? rawSize, 4) + // compressed size\n  convertDecToHex(rawSize, 4) + // uncompressed size\n  convertDecToHex(utfPath.length, 2) + // file name length\n  convertDecToHex(extraFields.length, 2);\n  const localFileHeader = \"PK\u0003\u0004\" + commonHeader + utfPath + extraFields;\n  const centralDirectoryHeader = \"PK\u0001\u0002\u0014\\0\" + commonHeader + // file header\n  \"\\0\\0\\0\\0\\0\\0\" + (content ? \"\\0\\0\\0\\0\" : \"\u0010\\0\\0\\0\") + // external file attributes\n  convertDecToHex(offset, 4) + // relative offset of local header\n  utfPath + // file name\n  extraFields;\n  return {\n    localFileHeader: Uint8Array.from(localFileHeader, (c) => c.charCodeAt(0)),\n    centralDirectoryHeader: Uint8Array.from(centralDirectoryHeader, (c) => c.charCodeAt(0))\n  };\n};\nvar getDecodedContent = (content) => {\n  let contentToUse;\n  if (typeof content === \"string\") {\n    const base64String = atob(content.split(\";base64,\")[1]);\n    contentToUse = Uint8Array.from(base64String, (c) => c.charCodeAt(0));\n  } else {\n    contentToUse = content;\n  }\n  return {\n    size: contentToUse.length,\n    content: contentToUse\n  };\n};\nvar getDeflatedHeaderAndContent = async (currentFile, offset) => {\n  const { content } = currentFile;\n  const { size, content: rawContent } = !content ? { size: 0, content: Uint8Array.from([]) } : getDecodedContent(content);\n  let deflatedContent = void 0;\n  let deflatedSize = void 0;\n  let deflationPerformed = false;\n  const shouldDeflate = currentFile.type === \"file\" && rawContent && size > 0;\n  if (shouldDeflate) {\n    const result = await deflateLocalFile(rawContent);\n    deflatedContent = result.content;\n    deflatedSize = result.size;\n    deflationPerformed = true;\n  }\n  const headers = getHeaders(currentFile, deflationPerformed, offset, size, rawContent, deflatedSize);\n  return {\n    ...headers,\n    content: deflatedContent || rawContent,\n    isCompressed: deflationPerformed\n  };\n};\nvar getHeaderAndContent = (currentFile, offset) => {\n  const { content } = currentFile;\n  const { content: rawContent } = !content ? { content: Uint8Array.from([]) } : getDecodedContent(content);\n  const headers = getHeaders(currentFile, false, offset, rawContent.length, rawContent, void 0);\n  return {\n    ...headers,\n    content: rawContent,\n    isCompressed: false\n  };\n};\nvar buildCentralDirectoryEnd = (tLen, cLen, lLen) => {\n  const str = \"PK\u0005\u0006\\0\\0\\0\\0\" + convertDecToHex(tLen, 2) + // total number of entries in the central folder\n  convertDecToHex(tLen, 2) + // total number of entries in the central folder\n  convertDecToHex(cLen, 4) + // size of the central folder\n  convertDecToHex(lLen, 4) + // central folder start offset\n  \"\\0\\0\";\n  return Uint8Array.from(str, (c) => c.charCodeAt(0));\n};\nvar ZipContainer = class {\n  static addFolders(paths) {\n    paths.forEach(this.addFolder.bind(this));\n  }\n  static addFolder(path) {\n    this.folders.push({\n      path,\n      created: /* @__PURE__ */ new Date(),\n      isBase64: false,\n      type: \"folder\"\n    });\n  }\n  static addFile(path, content, isBase64 = false) {\n    this.files.push({\n      path,\n      created: /* @__PURE__ */ new Date(),\n      content: isBase64 ? content : new TextEncoder().encode(content),\n      isBase64,\n      type: \"file\"\n    });\n  }\n  static async getZipFile(mimeType = \"application/zip\") {\n    const textOutput = await this.buildCompressedFileStream();\n    this.clearStream();\n    return new Blob([textOutput], { type: mimeType });\n  }\n  static getUncompressedZipFile(mimeType = \"application/zip\") {\n    const textOutput = this.buildFileStream();\n    this.clearStream();\n    return new Blob([textOutput], { type: mimeType });\n  }\n  static clearStream() {\n    this.folders = [];\n    this.files = [];\n  }\n  static packageFiles(files) {\n    let fileLen = 0;\n    let folderLen = 0;\n    for (const currentFile of files) {\n      const { localFileHeader, centralDirectoryHeader, content } = currentFile;\n      fileLen += localFileHeader.length + content.length;\n      folderLen += centralDirectoryHeader.length;\n    }\n    const fileData = new Uint8Array(fileLen);\n    const folderData = new Uint8Array(folderLen);\n    let fileOffset = 0;\n    let folderOffset = 0;\n    for (const currentFile of files) {\n      const { localFileHeader, centralDirectoryHeader, content } = currentFile;\n      fileData.set(localFileHeader, fileOffset);\n      fileOffset += localFileHeader.length;\n      fileData.set(content, fileOffset);\n      fileOffset += content.length;\n      folderData.set(centralDirectoryHeader, folderOffset);\n      folderOffset += centralDirectoryHeader.length;\n    }\n    const folderEnd = buildCentralDirectoryEnd(files.length, folderLen, fileLen);\n    const result = new Uint8Array(fileData.length + folderData.length + folderEnd.length);\n    result.set(fileData);\n    result.set(folderData, fileData.length);\n    result.set(folderEnd, fileData.length + folderData.length);\n    return result;\n  }\n  static async buildCompressedFileStream() {\n    const totalFiles = [...this.folders, ...this.files];\n    const readyFiles = [];\n    let lL = 0;\n    for (const currentFile of totalFiles) {\n      const output = await getDeflatedHeaderAndContent(currentFile, lL);\n      const { localFileHeader, content } = output;\n      readyFiles.push(output);\n      lL += localFileHeader.length + content.length;\n    }\n    return this.packageFiles(readyFiles);\n  }\n  static buildFileStream() {\n    const totalFiles = [...this.folders, ...this.files];\n    const readyFiles = [];\n    let lL = 0;\n    for (const currentFile of totalFiles) {\n      const readyFile = getHeaderAndContent(currentFile, lL);\n      const { localFileHeader, content } = readyFile;\n      readyFiles.push(readyFile);\n      lL += localFileHeader.length + content.length;\n    }\n    return this.packageFiles(readyFiles);\n  }\n};\nZipContainer.folders = [];\nZipContainer.files = [];\n\n// community-modules/infinite-row-model/dist/package/main.esm.mjs\nvar InfiniteBlock = class extends RowNodeBlock {\n  wireBeans(beans) {\n    this.beans = beans;\n  }\n  constructor(id, parentCache, params) {\n    super(id);\n    this.parentCache = parentCache;\n    this.params = params;\n    this.startRow = id * params.blockSize;\n    this.endRow = this.startRow + params.blockSize;\n  }\n  postConstruct() {\n    this.createRowNodes();\n  }\n  getBlockStateJson() {\n    return {\n      id: \"\" + this.getId(),\n      state: {\n        blockNumber: this.getId(),\n        startRow: this.getStartRow(),\n        endRow: this.getEndRow(),\n        pageStatus: this.getState()\n      }\n    };\n  }\n  setDataAndId(rowNode, data, index) {\n    if (_exists(data)) {\n      rowNode.setDataAndId(data, index.toString());\n    } else {\n      rowNode.setDataAndId(void 0, void 0);\n    }\n  }\n  loadFromDatasource() {\n    const params = this.createLoadParams();\n    if (_missing(this.params.datasource.getRows)) {\n      _warnOnce(`datasource is missing getRows method`);\n      return;\n    }\n    window.setTimeout(() => {\n      this.params.datasource.getRows(params);\n    }, 0);\n  }\n  processServerFail() {\n  }\n  createLoadParams() {\n    const params = {\n      startRow: this.getStartRow(),\n      endRow: this.getEndRow(),\n      successCallback: this.pageLoaded.bind(this, this.getVersion()),\n      failCallback: this.pageLoadFailed.bind(this, this.getVersion()),\n      sortModel: this.params.sortModel,\n      filterModel: this.params.filterModel,\n      context: this.gos.getGridCommonParams().context\n    };\n    return params;\n  }\n  forEachNode(callback, sequence, rowCount) {\n    this.rowNodes.forEach((rowNode, index) => {\n      const rowIndex = this.startRow + index;\n      if (rowIndex < rowCount) {\n        callback(rowNode, sequence.next());\n      }\n    });\n  }\n  getLastAccessed() {\n    return this.lastAccessed;\n  }\n  getRow(rowIndex, dontTouchLastAccessed = false) {\n    if (!dontTouchLastAccessed) {\n      this.lastAccessed = this.params.lastAccessedSequence.next();\n    }\n    const localIndex = rowIndex - this.startRow;\n    return this.rowNodes[localIndex];\n  }\n  getStartRow() {\n    return this.startRow;\n  }\n  getEndRow() {\n    return this.endRow;\n  }\n  // creates empty row nodes, data is missing as not loaded yet\n  createRowNodes() {\n    this.rowNodes = [];\n    for (let i = 0; i < this.params.blockSize; i++) {\n      const rowIndex = this.startRow + i;\n      const rowNode = new RowNode(this.beans);\n      rowNode.setRowHeight(this.params.rowHeight);\n      rowNode.uiLevel = 0;\n      rowNode.setRowIndex(rowIndex);\n      rowNode.setRowTop(this.params.rowHeight * rowIndex);\n      this.rowNodes.push(rowNode);\n    }\n  }\n  processServerResult(params) {\n    this.rowNodes.forEach((rowNode, index) => {\n      const data = params.rowData ? params.rowData[index] : void 0;\n      if (!rowNode.id && rowNode.alreadyRendered && data) {\n        this.rowNodes[index] = new RowNode(this.beans);\n        this.rowNodes[index].setRowIndex(rowNode.rowIndex);\n        this.rowNodes[index].setRowTop(rowNode.rowTop);\n        this.rowNodes[index].setRowHeight(rowNode.rowHeight);\n        rowNode.clearRowTopAndRowIndex();\n      }\n      this.setDataAndId(this.rowNodes[index], data, this.startRow + index);\n    });\n    const finalRowCount = params.rowCount != null && params.rowCount >= 0 ? params.rowCount : void 0;\n    this.parentCache.pageLoaded(this, finalRowCount);\n  }\n  destroy() {\n    this.rowNodes.forEach((rowNode) => {\n      rowNode.clearRowTopAndRowIndex();\n    });\n    super.destroy();\n  }\n};\nvar MAX_EMPTY_BLOCKS_TO_KEEP = 2;\nvar InfiniteCache = class extends BeanStub {\n  constructor(params) {\n    super();\n    this.lastRowIndexKnown = false;\n    this.blocks = {};\n    this.blockCount = 0;\n    this.rowCount = params.initialRowCount;\n    this.params = params;\n  }\n  wireBeans(beans) {\n    this.rowRenderer = beans.rowRenderer;\n    this.focusService = beans.focusService;\n  }\n  // the rowRenderer will not pass dontCreatePage, meaning when rendering the grid,\n  // it will want new pages in the cache as it asks for rows. only when we are inserting /\n  // removing rows via the api is dontCreatePage set, where we move rows between the pages.\n  getRow(rowIndex, dontCreatePage = false) {\n    const blockId = Math.floor(rowIndex / this.params.blockSize);\n    let block = this.blocks[blockId];\n    if (!block) {\n      if (dontCreatePage) {\n        return void 0;\n      }\n      block = this.createBlock(blockId);\n    }\n    return block.getRow(rowIndex);\n  }\n  createBlock(blockNumber) {\n    const newBlock = this.createBean(new InfiniteBlock(blockNumber, this, this.params));\n    this.blocks[newBlock.getId()] = newBlock;\n    this.blockCount++;\n    this.purgeBlocksIfNeeded(newBlock);\n    this.params.rowNodeBlockLoader.addBlock(newBlock);\n    return newBlock;\n  }\n  // we have this on infinite row model only, not server side row model,\n  // because for server side, it would leave the children in inconsistent\n  // state - eg if a node had children, but after the refresh it had data\n  // for a different row, then the children would be with the wrong row node.\n  refreshCache() {\n    const nothingToRefresh = this.blockCount == 0;\n    if (nothingToRefresh) {\n      this.purgeCache();\n      return;\n    }\n    this.getBlocksInOrder().forEach((block) => block.setStateWaitingToLoad());\n    this.params.rowNodeBlockLoader.checkBlockToLoad();\n  }\n  destroy() {\n    this.getBlocksInOrder().forEach((block) => this.destroyBlock(block));\n    super.destroy();\n  }\n  getRowCount() {\n    return this.rowCount;\n  }\n  isLastRowIndexKnown() {\n    return this.lastRowIndexKnown;\n  }\n  // block calls this, when page loaded\n  pageLoaded(block, lastRow) {\n    if (!this.isAlive()) {\n      return;\n    }\n    if (this.gos.get(\"debug\")) {\n      _log(`InfiniteCache - onPageLoaded: page = ${block.getId()}, lastRow = ${lastRow}`);\n    }\n    this.checkRowCount(block, lastRow);\n    this.onCacheUpdated();\n  }\n  purgeBlocksIfNeeded(blockToExclude) {\n    const blocksForPurging = this.getBlocksInOrder().filter((b) => b != blockToExclude);\n    const lastAccessedComparator = (a, b) => b.getLastAccessed() - a.getLastAccessed();\n    blocksForPurging.sort(lastAccessedComparator);\n    const maxBlocksProvided = this.params.maxBlocksInCache > 0;\n    const blocksToKeep = maxBlocksProvided ? this.params.maxBlocksInCache - 1 : null;\n    const emptyBlocksToKeep = MAX_EMPTY_BLOCKS_TO_KEEP - 1;\n    blocksForPurging.forEach((block, index) => {\n      const purgeBecauseBlockEmpty = block.getState() === \"needsLoading\" && index >= emptyBlocksToKeep;\n      const purgeBecauseCacheFull = maxBlocksProvided ? index >= blocksToKeep : false;\n      if (purgeBecauseBlockEmpty || purgeBecauseCacheFull) {\n        if (this.isBlockCurrentlyDisplayed(block)) {\n          return;\n        }\n        if (this.isBlockFocused(block)) {\n          return;\n        }\n        this.removeBlockFromCache(block);\n      }\n    });\n  }\n  isBlockFocused(block) {\n    const focusedCell = this.focusService.getFocusCellToUseAfterRefresh();\n    if (!focusedCell) {\n      return false;\n    }\n    if (focusedCell.rowPinned != null) {\n      return false;\n    }\n    const blockIndexStart = block.getStartRow();\n    const blockIndexEnd = block.getEndRow();\n    const hasFocus = focusedCell.rowIndex >= blockIndexStart && focusedCell.rowIndex < blockIndexEnd;\n    return hasFocus;\n  }\n  isBlockCurrentlyDisplayed(block) {\n    const startIndex = block.getStartRow();\n    const endIndex = block.getEndRow() - 1;\n    return this.rowRenderer.isRangeInRenderedViewport(startIndex, endIndex);\n  }\n  removeBlockFromCache(blockToRemove) {\n    if (!blockToRemove) {\n      return;\n    }\n    this.destroyBlock(blockToRemove);\n  }\n  checkRowCount(block, lastRow) {\n    if (typeof lastRow === \"number\" && lastRow >= 0) {\n      this.rowCount = lastRow;\n      this.lastRowIndexKnown = true;\n    } else if (!this.lastRowIndexKnown) {\n      const lastRowIndex = (block.getId() + 1) * this.params.blockSize;\n      const lastRowIndexPlusOverflow = lastRowIndex + this.params.overflowSize;\n      if (this.rowCount < lastRowIndexPlusOverflow) {\n        this.rowCount = lastRowIndexPlusOverflow;\n      }\n    }\n  }\n  setRowCount(rowCount, lastRowIndexKnown) {\n    this.rowCount = rowCount;\n    if (_exists(lastRowIndexKnown)) {\n      this.lastRowIndexKnown = lastRowIndexKnown;\n    }\n    if (!this.lastRowIndexKnown) {\n      if (this.rowCount % this.params.blockSize === 0) {\n        this.rowCount++;\n      }\n    }\n    this.onCacheUpdated();\n  }\n  forEachNodeDeep(callback) {\n    const sequence = new NumberSequence();\n    this.getBlocksInOrder().forEach((block) => block.forEachNode(callback, sequence, this.rowCount));\n  }\n  getBlocksInOrder() {\n    const blockComparator = (a, b) => a.getId() - b.getId();\n    const blocks = _getAllValuesInObject(this.blocks).sort(blockComparator);\n    return blocks;\n  }\n  destroyBlock(block) {\n    delete this.blocks[block.getId()];\n    this.destroyBean(block);\n    this.blockCount--;\n    this.params.rowNodeBlockLoader.removeBlock(block);\n  }\n  // gets called 1) row count changed 2) cache purged 3) items inserted\n  onCacheUpdated() {\n    if (this.isAlive()) {\n      this.destroyAllBlocksPastVirtualRowCount();\n      this.eventService.dispatchEvent({\n        type: \"storeUpdated\"\n      });\n    }\n  }\n  destroyAllBlocksPastVirtualRowCount() {\n    const blocksToDestroy = [];\n    this.getBlocksInOrder().forEach((block) => {\n      const startRow = block.getId() * this.params.blockSize;\n      if (startRow >= this.rowCount) {\n        blocksToDestroy.push(block);\n      }\n    });\n    if (blocksToDestroy.length > 0) {\n      blocksToDestroy.forEach((block) => this.destroyBlock(block));\n    }\n  }\n  purgeCache() {\n    this.getBlocksInOrder().forEach((block) => this.removeBlockFromCache(block));\n    this.lastRowIndexKnown = false;\n    if (this.rowCount === 0) {\n      this.rowCount = this.params.initialRowCount;\n    }\n    this.onCacheUpdated();\n  }\n  getRowNodesInRange(firstInRange, lastInRange) {\n    const result = [];\n    let lastBlockId = -1;\n    let inActiveRange = false;\n    const numberSequence = new NumberSequence();\n    let foundGapInSelection = false;\n    this.getBlocksInOrder().forEach((block) => {\n      if (foundGapInSelection) {\n        return;\n      }\n      if (inActiveRange && lastBlockId + 1 !== block.getId()) {\n        foundGapInSelection = true;\n        return;\n      }\n      lastBlockId = block.getId();\n      block.forEachNode(\n        (rowNode) => {\n          const hitFirstOrLast = rowNode === firstInRange || rowNode === lastInRange;\n          if (inActiveRange || hitFirstOrLast) {\n            result.push(rowNode);\n          }\n          if (hitFirstOrLast) {\n            inActiveRange = !inActiveRange;\n          }\n        },\n        numberSequence,\n        this.rowCount\n      );\n    });\n    const invalidRange = foundGapInSelection || inActiveRange;\n    return invalidRange ? [] : result;\n  }\n};\nvar InfiniteRowModel = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"rowModel\";\n  }\n  wireBeans(beans) {\n    this.filterManager = beans.filterManager;\n    this.sortController = beans.sortController;\n    this.selectionService = beans.selectionService;\n    this.rowRenderer = beans.rowRenderer;\n    this.rowNodeBlockLoader = beans.rowNodeBlockLoader;\n  }\n  getRowBounds(index) {\n    return {\n      rowHeight: this.rowHeight,\n      rowTop: this.rowHeight * index\n    };\n  }\n  // we don't implement as lazy row heights is not supported in this row model\n  ensureRowHeightsValid() {\n    return false;\n  }\n  postConstruct() {\n    if (!this.gos.isRowModelType(\"infinite\")) {\n      return;\n    }\n    this.rowHeight = this.gos.getRowHeightAsNumber();\n    this.addEventListeners();\n    this.addDestroyFunc(() => this.destroyCache());\n    this.verifyProps();\n  }\n  verifyProps() {\n    if (this.gos.exists(\"initialGroupOrderComparator\")) {\n      _warnOnce(\n        \"initialGroupOrderComparator cannot be used with Infinite Row Model as sorting is done on the server side\"\n      );\n    }\n  }\n  start() {\n    this.setDatasource(this.gos.get(\"datasource\"));\n  }\n  destroy() {\n    this.destroyDatasource();\n    super.destroy();\n  }\n  destroyDatasource() {\n    if (this.datasource) {\n      this.destroyBean(this.datasource);\n      this.rowRenderer.datasourceChanged();\n      this.datasource = null;\n    }\n  }\n  addEventListeners() {\n    this.addManagedEventListeners({\n      filterChanged: this.onFilterChanged.bind(this),\n      sortChanged: this.onSortChanged.bind(this),\n      newColumnsLoaded: this.onColumnEverything.bind(this),\n      storeUpdated: this.onCacheUpdated.bind(this)\n    });\n    this.addManagedPropertyListener(\"datasource\", () => this.setDatasource(this.gos.get(\"datasource\")));\n    this.addManagedPropertyListener(\"cacheBlockSize\", () => this.resetCache());\n    this.addManagedPropertyListener(\"rowHeight\", () => {\n      this.rowHeight = this.gos.getRowHeightAsNumber();\n      this.cacheParams.rowHeight = this.rowHeight;\n      this.updateRowHeights();\n    });\n  }\n  onFilterChanged() {\n    this.reset();\n  }\n  onSortChanged() {\n    this.reset();\n  }\n  onColumnEverything() {\n    let resetRequired;\n    if (this.cacheParams) {\n      resetRequired = this.isSortModelDifferent();\n    } else {\n      resetRequired = true;\n    }\n    if (resetRequired) {\n      this.reset();\n    }\n  }\n  isSortModelDifferent() {\n    return !_jsonEquals(this.cacheParams.sortModel, this.sortController.getSortModel());\n  }\n  getType() {\n    return \"infinite\";\n  }\n  setDatasource(datasource) {\n    this.destroyDatasource();\n    this.datasource = datasource;\n    if (datasource) {\n      this.reset();\n    }\n  }\n  isEmpty() {\n    return !this.infiniteCache;\n  }\n  isRowsToRender() {\n    return !!this.infiniteCache;\n  }\n  getNodesInRangeForSelection(firstInRange, lastInRange) {\n    return this.infiniteCache ? this.infiniteCache.getRowNodesInRange(firstInRange, lastInRange) : [];\n  }\n  reset() {\n    if (!this.datasource) {\n      return;\n    }\n    const getRowIdFunc = this.gos.getRowIdCallback();\n    const userGeneratingIds = getRowIdFunc != null;\n    if (!userGeneratingIds) {\n      this.selectionService.reset(\"rowDataChanged\");\n    }\n    this.resetCache();\n  }\n  dispatchModelUpdatedEvent() {\n    this.eventService.dispatchEvent({\n      type: \"modelUpdated\",\n      // not sure if these should all be false - noticed if after implementing,\n      // maybe they should be true?\n      newPage: false,\n      newPageSize: false,\n      newData: false,\n      keepRenderedRows: true,\n      animate: false\n    });\n  }\n  resetCache() {\n    this.destroyCache();\n    this.cacheParams = {\n      // the user provided datasource\n      datasource: this.datasource,\n      // sort and filter model\n      filterModel: this.filterManager?.getFilterModel() ?? {},\n      sortModel: this.sortController.getSortModel(),\n      rowNodeBlockLoader: this.rowNodeBlockLoader,\n      // properties - this way we take a snapshot of them, so if user changes any, they will be\n      // used next time we create a new cache, which is generally after a filter or sort change,\n      // or a new datasource is set\n      initialRowCount: this.gos.get(\"infiniteInitialRowCount\"),\n      maxBlocksInCache: this.gos.get(\"maxBlocksInCache\"),\n      rowHeight: this.gos.getRowHeightAsNumber(),\n      // if user doesn't provide overflow, we use default overflow of 1, so user can scroll past\n      // the current page and request first row of next page\n      overflowSize: this.gos.get(\"cacheOverflowSize\"),\n      // page size needs to be 1 or greater. having it at 1 would be silly, as you would be hitting the\n      // server for one page at a time. so the default if not specified is 100.\n      blockSize: this.gos.get(\"cacheBlockSize\"),\n      // the cache could create this, however it is also used by the pages, so handy to create it\n      // here as the settings are also passed to the pages\n      lastAccessedSequence: new NumberSequence()\n    };\n    this.infiniteCache = this.createBean(new InfiniteCache(this.cacheParams));\n    this.eventService.dispatchEventOnce({\n      type: \"rowCountReady\"\n    });\n    this.dispatchModelUpdatedEvent();\n  }\n  updateRowHeights() {\n    this.forEachNode((node) => {\n      node.setRowHeight(this.rowHeight);\n      node.setRowTop(this.rowHeight * node.rowIndex);\n    });\n    this.dispatchModelUpdatedEvent();\n  }\n  destroyCache() {\n    if (this.infiniteCache) {\n      this.infiniteCache = this.destroyBean(this.infiniteCache);\n    }\n  }\n  onCacheUpdated() {\n    this.dispatchModelUpdatedEvent();\n  }\n  getRow(rowIndex) {\n    if (!this.infiniteCache) {\n      return void 0;\n    }\n    if (rowIndex >= this.infiniteCache.getRowCount()) {\n      return void 0;\n    }\n    return this.infiniteCache.getRow(rowIndex);\n  }\n  getRowNode(id) {\n    let result;\n    this.forEachNode((rowNode) => {\n      if (rowNode.id === id) {\n        result = rowNode;\n      }\n    });\n    return result;\n  }\n  forEachNode(callback) {\n    if (this.infiniteCache) {\n      this.infiniteCache.forEachNodeDeep(callback);\n    }\n  }\n  getTopLevelRowCount() {\n    return this.getRowCount();\n  }\n  getTopLevelRowDisplayedIndex(topLevelIndex) {\n    return topLevelIndex;\n  }\n  getRowIndexAtPixel(pixel) {\n    if (this.rowHeight !== 0) {\n      const rowIndexForPixel = Math.floor(pixel / this.rowHeight);\n      const lastRowIndex = this.getRowCount() - 1;\n      if (rowIndexForPixel > lastRowIndex) {\n        return lastRowIndex;\n      }\n      return rowIndexForPixel;\n    }\n    return 0;\n  }\n  getRowCount() {\n    return this.infiniteCache ? this.infiniteCache.getRowCount() : 0;\n  }\n  isRowPresent(rowNode) {\n    const foundRowNode = this.getRowNode(rowNode.id);\n    return !!foundRowNode;\n  }\n  refreshCache() {\n    if (this.infiniteCache) {\n      this.infiniteCache.refreshCache();\n    }\n  }\n  purgeCache() {\n    if (this.infiniteCache) {\n      this.infiniteCache.purgeCache();\n    }\n  }\n  // for iRowModel\n  isLastRowIndexKnown() {\n    if (this.infiniteCache) {\n      return this.infiniteCache.isLastRowIndexKnown();\n    }\n    return false;\n  }\n  setRowCount(rowCount, lastRowIndexKnown) {\n    if (this.infiniteCache) {\n      this.infiniteCache.setRowCount(rowCount, lastRowIndexKnown);\n    }\n  }\n};\nfunction refreshInfiniteCache(beans) {\n  beans.rowModelHelperService?.getInfiniteRowModel()?.refreshCache();\n}\nfunction purgeInfiniteCache(beans) {\n  beans.rowModelHelperService?.getInfiniteRowModel()?.purgeCache();\n}\nfunction getInfiniteRowCount(beans) {\n  return beans.rowModelHelperService?.getInfiniteRowModel()?.getRowCount();\n}\nfunction isLastRowIndexKnown(beans) {\n  return beans.rowModelHelperService?.getInfiniteRowModel()?.isLastRowIndexKnown();\n}\nvar VERSION4 = \"32.1.0\";\nvar InfiniteRowModelCoreModule = _defineModule({\n  version: VERSION4,\n  moduleName: `${\"@ag-grid-community/infinite-row-model\" /* InfiniteRowModelModule */}-core`,\n  rowModel: \"infinite\",\n  beans: [InfiniteRowModel],\n  dependantModules: [RowNodeBlockModule]\n});\nvar InfiniteRowModelApiModule = _defineModule({\n  version: VERSION4,\n  moduleName: `${\"@ag-grid-community/infinite-row-model\" /* InfiniteRowModelModule */}-api`,\n  beans: [RowModelHelperService],\n  apiFunctions: {\n    refreshInfiniteCache,\n    purgeInfiniteCache,\n    getInfiniteRowCount,\n    isLastRowIndexKnown\n  },\n  dependantModules: [InfiniteRowModelCoreModule, SsrmInfiniteSharedApiModule]\n});\nvar InfiniteRowModelModule = _defineModule({\n  version: VERSION4,\n  moduleName: \"@ag-grid-community/infinite-row-model\" /* InfiniteRowModelModule */,\n  dependantModules: [InfiniteRowModelCoreModule, InfiniteRowModelApiModule]\n});\n\n// packages/ag-grid-community/src/main.ts\nModuleRegistry.__registerModules(\n  [CommunityFeaturesModule, ClientSideRowModelModule, InfiniteRowModelModule, CsvExportModule],\n  false,\n  void 0\n);\nexport {\n  ALWAYS_SYNC_GLOBAL_EVENTS,\n  AbstractHeaderCellCtrl,\n  AgAbstractField,\n  AgAbstractInputField,\n  AgAbstractLabel,\n  AgCheckbox,\n  AgCheckboxSelector,\n  AgColumn,\n  AgColumnGroup,\n  AgInputDateField,\n  AgInputNumberField,\n  AgInputNumberFieldSelector,\n  AgInputTextArea,\n  AgInputTextField,\n  AgInputTextFieldSelector,\n  AgPickerField,\n  AgPromise,\n  AgProvidedColumnGroup,\n  AgRadioButton,\n  AgSelect,\n  AgSelectSelector,\n  AgToggleButton,\n  AgToggleButtonSelector,\n  AnimateShowChangeCellRenderer,\n  AnimateSlideCellRenderer,\n  AnimationFrameService,\n  AriaAnnouncementService,\n  AutoScrollService,\n  AutoWidthCalculator,\n  BarColumnLabelPlacement,\n  BaseComponentWrapper,\n  BaseCreator,\n  BaseGridSerializingSession,\n  BeanStub,\n  BodyDropPivotTarget,\n  BodyDropTarget,\n  CellComp,\n  CellCtrl,\n  CellNavigationService,\n  CellPositionUtils,\n  CellRangeType,\n  ChangedPath,\n  ChartMappings,\n  CheckboxCellEditor,\n  CheckboxCellRenderer,\n  CheckboxSelectionComponent,\n  ClientSideRowModelModule,\n  ClientSideRowModelSteps,\n  ColumnApplyStateService,\n  ColumnAutosizeService,\n  ColumnFactory,\n  ColumnKeyCreator,\n  ColumnModel,\n  ColumnMoveService,\n  ColumnNameService,\n  ColumnSizeService,\n  CommunityFeaturesModule,\n  Component,\n  ComponentUtil,\n  Context,\n  CssClassManager,\n  CsvCreator,\n  CsvExportModule,\n  CtrlsService,\n  DataTypeService,\n  DateCellEditor,\n  DateFilter,\n  DateStringCellEditor,\n  Downloader,\n  DragAndDropService,\n  DragService,\n  DragSourceType,\n  Environment,\n  EventService,\n  ExcelFactoryMode,\n  ExpansionService,\n  ExpressionService,\n  FakeHScrollComp,\n  FakeVScrollComp,\n  FilterManager,\n  FilterWrapperComp,\n  FocusService,\n  FuncColsService,\n  GROUP_AUTO_COLUMN_ID,\n  Grid,\n  GridBodyComp,\n  GridBodyCtrl,\n  GridComp,\n  GridCoreCreator,\n  GridCoreModule,\n  GridCtrl,\n  GridHeaderComp,\n  GridHeaderCtrl,\n  GridOptionsService,\n  GridSerializer,\n  GroupInstanceIdCreator,\n  HeaderCellCtrl,\n  HeaderFilterCellComp,\n  HeaderFilterCellCtrl,\n  HeaderGroupCellCtrl,\n  HeaderNavigationDirection,\n  HeaderNavigationService,\n  HeaderPositionUtils,\n  HeaderRowComp,\n  HeaderRowContainerComp,\n  HeaderRowContainerCtrl,\n  HeaderRowCtrl,\n  HeaderRowType,\n  HorizontalDirection,\n  HorizontalResizeService,\n  InfiniteRowModelModule,\n  KeyCode,\n  LargeTextCellEditor,\n  LayoutCssClasses,\n  LocalEventService,\n  LocaleService,\n  ManagedFocusFeature,\n  MenuService,\n  ModuleNames,\n  ModuleRegistry,\n  MouseEventService,\n  MoveColumnFeature,\n  NavigationService,\n  NumberCellEditor,\n  NumberFilter,\n  NumberSequence,\n  OverlayWrapperComponent,\n  PinnedRowModel,\n  PivotResultColsService,\n  PopupComponent,\n  PopupEditorWrapper,\n  PopupService,\n  PositionableFeature,\n  PropertyKeys,\n  ProvidedFilter,\n  RefPlaceholder,\n  ResizeObserverService,\n  RowContainerComp,\n  RowContainerCtrl,\n  RowCtrl,\n  RowDragComp,\n  RowHighlightPosition,\n  RowModelHelperService,\n  RowNode,\n  RowNodeBlock,\n  RowNodeBlockLoader,\n  RowNodeSorter,\n  RowPositionUtils,\n  RowRenderer,\n  RowType,\n  ScalarFilter,\n  ScrollVisibleService,\n  SelectCellEditor,\n  SelectableService,\n  SelectionHandleType,\n  ServerSideTransactionResultStatus,\n  SetLeftFeature,\n  SimpleFilter,\n  SortController,\n  SortIndicatorComp,\n  SortIndicatorSelector,\n  StandardMenuFactory,\n  StylingService,\n  TabGuardClassNames,\n  TabGuardComp,\n  TabGuardCtrl,\n  TabGuardFeature,\n  TextCellEditor,\n  TextFilter,\n  TextFloatingFilter,\n  TooltipFeature,\n  TooltipStateManager,\n  TouchListener,\n  UserComponentFactory,\n  UserComponentRegistry,\n  ValueCache,\n  ValueService,\n  VanillaFrameworkOverrides,\n  VerticalDirection,\n  VisibleColsService,\n  XmlFactory,\n  ZipContainer,\n  ColumnFilterModule as _ColumnFilterModule,\n  CommunityMenuApiModule as _CommunityMenuApiModule,\n  CsrmSsrmSharedApiModule as _CsrmSsrmSharedApiModule,\n  CsvExportCoreModule as _CsvExportCoreModule,\n  EditCoreModule as _EditCoreModule,\n  FilterCoreModule as _FilterCoreModule,\n  FloatingFilterModule as _FloatingFilterModule,\n  ReadOnlyFloatingFilterModule as _ReadOnlyFloatingFilterModule,\n  RowNodeBlockModule as _RowNodeBlockModule,\n  SsrmInfiniteSharedApiModule as _SsrmInfiniteSharedApiModule,\n  _addFocusableContainerListener,\n  _areEqual,\n  _bindCellRendererToHtmlElement,\n  _capitalise,\n  _clearElement,\n  _cloneObject,\n  _combineAttributesAndGridOptions,\n  _compose,\n  _createIcon,\n  _createIconNoSpan,\n  _debounce,\n  _defaultComparator,\n  _defineModule,\n  _doOnce,\n  _errorOnce,\n  _escapeString,\n  _exists,\n  _existsAndNotEmpty,\n  _flatten,\n  _forEachReverse,\n  _formatNumberCommas,\n  _formatNumberTwoDecimalPlacesAndCommas,\n  _fuzzySuggestions,\n  _getAbsoluteHeight,\n  _getAbsoluteWidth,\n  _getAllValuesInObject,\n  _getAriaPosInSet,\n  _getCtrlForEventTarget,\n  _getHeaderClassesFromColDef,\n  _getInnerHeight,\n  _getInnerWidth,\n  _getRowContainerOptions,\n  _getToolPanelClassesFromColDef,\n  _includes,\n  _insertArrayIntoArray,\n  _insertIntoArray,\n  _isElementInEventPath,\n  _isEventFromPrintableCharacter,\n  _isIOSUserAgent,\n  _isNodeOrElement,\n  _isStopPropagationForAgGrid,\n  _isVisible,\n  _iterateObject,\n  _jsonEquals,\n  _last,\n  _loadTemplate,\n  _log,\n  _makeNull,\n  _mergeDeep,\n  _missing,\n  _missingOrEmpty,\n  _parseDateTimeFromString,\n  _processOnChange,\n  _radioCssClass,\n  _removeAriaExpanded,\n  _removeAriaSort,\n  _removeFromArray,\n  _removeFromParent,\n  _removeRepeatsFromArray,\n  _serialiseDate,\n  _setAriaActiveDescendant,\n  _setAriaChecked,\n  _setAriaColCount,\n  _setAriaColIndex,\n  _setAriaColSpan,\n  _setAriaControls,\n  _setAriaDescribedBy,\n  _setAriaDisabled,\n  _setAriaExpanded,\n  _setAriaHidden,\n  _setAriaLabel,\n  _setAriaLabelledBy,\n  _setAriaLevel,\n  _setAriaPosInSet,\n  _setAriaRole,\n  _setAriaRowCount,\n  _setAriaRowIndex,\n  _setAriaSelected,\n  _setAriaSetSize,\n  _setAriaSort,\n  _setDisabled,\n  _setDisplayed,\n  _setFixedWidth,\n  _setVisible,\n  _shallowCompare,\n  _sortRowNodesByOrder,\n  _stopPropagationForAgGrid,\n  _toStringOrNull,\n  _unwrapUserComp,\n  _utf8_encode,\n  _values,\n  _waitUntil,\n  _warnOnce,\n  createGrid,\n  getDefaultFloatingFilterType,\n  isColumn,\n  isColumnGroup,\n  isProvidedColumnGroup,\n  isSelectionUIEvent,\n  provideGlobalGridOptions\n};\n"],
  "mappings": "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EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAEA,cAAc,qBAAqB;AAAA,EACjC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AA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",
  "names": ["counter", "_a", "_PropertyKeys", "_ComponentUtil", "counter", "_TooltipStateManager", "_a", "_ModuleRegistry", "_RowNode", "_ManagedFocusFeature", "_AbstractHeaderCellCtrl", "_a", "_CellCtrl", "_RowCtrl", "_a", "_MouseEventService", "_FocusService", "counter", "_a", "_GridOptionsService", "import_react", "import_react", "import_react", "import_react", "import_react_dom", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react_dom", "import_react", "import_react", "React", "Component2", "ReactDOM", "React2", "useState2", "React3", "useContext2", "useState3", "useRef2", "useCallback2", "useLayoutEffect2", "useEffect2", "useMemo2", "React4", "memo2", "useContext3", "useState4", "useRef3", "useCallback3", "useLayoutEffect3", "useMemo3", "React5", "memo3", "useContext4", "useState5", "useMemo4", "useRef4", "useCallback4", "useLayoutEffect4", "useEffect3", "React6", "memo4", "useMemo5", "useState6", "useRef5", "useCallback5", "React7", "memo5", "useState7", "useContext5", "useRef6", "useCallback6", "React8", "memo6", "useState8", "useContext6", "useRef7", "useCallback7", "useMemo6", "React9", "memo7", "useEffect4", "useRef8", "useState9", "useEffect5", "useState10", "useContext7", "React10", "createPortal2", "memo8", "useContext8", "useCallback8", "useEffect6", "React11", "useContext9", "useState11", "useMemo7", "useRef9", "useCallback9", "useLayoutEffect5", "memo9", "useContext10", "useRef10", "useState12", "useEffect7", "useCallback10", "useLayoutEffect6", "useMemo8", "React12", "memo10", "useContext11", "useMemo9", "useRef11", "useState13", "useCallback11", "React13", "memo11", "useContext12", "useState14", "useRef12", "useCallback12", "useMemo10", "React14", "memo12", "useContext13", "useRef13", "useImperativeHandle2", "useCallback13", "React15", "TabGuardComp", "forwardRef2", "memo13", "useState15", "useRef14", "useCallback14", "useMemo11", "useEffect8", "React16", "memo14", "useRef15", "useState16", "useCallback15", "_a", "useMemo12", "useEffect9", "React17", "forwardRef3", "useContext14", "useImperativeHandle3", "React18", "useContext15"]
}
